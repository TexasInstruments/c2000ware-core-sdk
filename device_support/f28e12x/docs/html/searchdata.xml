<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">page</field>
    <field name="name">CCS_LAUNCH_PAGE</field>
    <field name="url">CCS_LAUNCH_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">Build Load and Run Build Load and Run The steps on this page should be done each time Launchpad is power cycled or when a new CCS session is started The following build configurations are supported for the majority of the examples RAM Build Configuration FLASH Build Configuration Some examples have only FLASH or only RAM build configurations The example program is loaded into and run from RAM memory Launch CCS Import the example CCS project Goto Browse the required example directory within SDK and select the ccs folder which contain the CCS projectspec file Discovered projects are listed Select a project and click Finish Import CCS project Select RAM build configuration Right click on the project select Build Configurations CPU1_LAUNCHXL_RAM RAM Build Configuration The example program is loaded and run from flash memory Launch CCS Import the example CCS project Goto Browse the required example directory within SDK and select the ccs folder which contain the CCS projectspec file Discovered projects are listed Select a project and click Finish Import CCS project Select FLASH build configuration Default build configuration is RAM change it to FLASH Right click on the project select Build Configurations CPU1_LAUNCHXL_FLASH FLASH Build Configuration Following are the options to build and load an example program Build and Load together in a single click Righ click on the project and select Debug Project F5 option Debug CCS project It performs the following sequence Builds the project Launches the Target Configuration based on the ccxml included in projectspec Connects to the target core Loads the program onto the target core Run Once the program is loaded the core is in HALTED state and the following debug options are available Continue Free Run Runs either to end of the program or to a breakpoint if present Step Over Step Into Step Out Restart Starts from main function Stop Disconnects the target Debug The following options are available to debug the loaded program Breakpoints The program execution halts at a breakpoint View memory contents Goto View- Memory Select address and format View Global Variables Add global variables to Watch window to view the contents View Core and Peripheral registers Goto View- Register to view the core and peripheral regsters</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">CCS_PROJECTS_PAGE</field>
    <field name="url">CCS_PROJECTS_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">CCS Build Project CCS Build Project The steps on this page need to be done once on a given host machine Following are the options to build and load an example program Build and Load together in a single click Righ click on the project and select Debug Project F5 option Debug CCS project It performs the following sequence Builds the project Launches the Target Configuration based on the ccxml file included in projectspec Connects to the target core Loads the program onto the target core Build and Load separately Build Right click on the project and select either Build Project(s) or Rebuild Project(s) option Build CCS project Upon successful build example program is generated Launch the CCS Debug Session Connect to the target core Load the program</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERLIB_USAGE</field>
    <field name="url">DRIVERLIB_USAGE.html</field>
    <field name="keywords"></field>
    <field name="text">Driverlib Usage Driverlib Usage To develop with the peripheral driver library more efficiently Code Composer Studio CCS offers several project and workspace features that can help maximize development time and device application execution As previously discussed in the programming model chapter there are advantages and disadvantages to each programming model This chapter will explain optimization tips that should be used in conjuction with the APIs provided by the peripheral driver library to overcome and minimize those disadvantages This section will detail some Code Composer Studio CCS tips that can be used to help effectively use the driver library during development In CCS the Content Assist feature can be used to offer suggestions for completing function and parameter names This feature may be auto-activated while typing or it can be activated by hitting Ctrl+Space To get the desired preferences adjust the settings under C/C++ Editor Content Assist The figure below shows the Content Assist in use CCS Content Assist feature If you can t tell what an appropriate parameter is just from looking at the function prototype and the Content Assist list hover over the function to view its description With a driver header file open it is useful to take advantage of the CCS Outline view to get a complete list of functions enumerations and macros The Outline view can be opened by selecting Window Show view Outline The figure below shows the outline view in use CCS Outline View feature Similarly you can split screen between application code and the API Reference Guide in the Resource Explorer Additionally the function prototype in a driver header file can be viewed by holding Ctrl and clicking on the function name in the application code For more information on any of the tips provided refer to the CCS Online Help section for details CCS menu Help Help Contents and search for Content Assist An ASSERT macro is defined in the driverlib/debug.h file as a method of checking the validity of function arguments and other error conditions When the symbol DEBUG is defined ASSERT expr will call a user-defined error function error when Boolean expression expr is evaluated to false To use the macro an application must provide an error function with the following prototype void error char uint32_t line The filename and line parameters indicate which ASSERT resulted in the error condition It is up to the application to decide what action the error function should take to report the error The default Debug build configuration for the driverlib.lib project and the Driverlib example projects have turned on ASSERT by putting DEBUG in the projects predefined symbols Removing the DEBUG symbol from the projects will cause the ASSERT macro to compile to nothing meaning it will add no code size or cycles to the application when it is turned off When using the software driver programming model it is important to note that there is a price to abstraction and making functions generic Some of the drawbacks include the overhead time of the function call and the calculation time required to access a specific register offset or bit field within the register To help overcome these shortcomings it is important to consider the use of inline functions Using inline functions eliminates the need for function calls since the function is essentially treated like a macro If constants are being passed into the function s parameters much of its code may be evaluated at compile time In order to utilize inline functions you must turn on optimization for it to take effect If optimization is desired without the use of inline functions use the no_inling pi option This option can be set in the CCS project properties under Build C2000 Compiler Advanced Options Language Options There are two types of APIs available in a typical peripheral driver file namely static inline APIs defined in h files and non-static non-inline APIs defined in c files For best performance static inline APIs available in driverlib are expected to be inlined in the application Static inline APIs defined in the driverlib are compiled with the application code and would be part of application binary while non-static non-inline APIs would be part of driverlib.lib provided under C2000Ware C2000Ware provides debug and release libraries for device specific peripheral drivers The debug library is to be used while debugging the application code as it is compiled with DEBUG symbol to verify input parameters through ASSERT macro The debug library is built with option opt Ooff to enable efficient debugging while keeping the code size small The release library is compiled with option opt O2 and hence expand calls to APIs declared inline along with other optimizations resulting in improved code performance The DEBUG symbol is not used while compiling the release library thereby removing ASSERT macro resulting in smaller code size Most of the APIs are declared as static inline in the driverlib and therefore are compiled with application code in case the API is being used by the application Hence the performance of static inline APIs would depend on the application project optimization level With optimization level Ooff the static inline driverlib APIs would be part of application code memory section and a function call would be made for each call This option should only be used while debugging the project Use optimization level equal to or above O0 in application project to expand the static inline driverlib APIs Refer to respective compiler guide for more details on different optimization levels available to achieve required performance Refer to compiler guide for more details on different optimization levels available to achieve required performance In addition to inline functions using the compiler option gen_func_subsections on mo is important By default the library project provided with the peripheral driver library project has this option turned on When this option is selected the compiler places each driver library function into its own subsection This allows only the functions that are referenced in the application to be linked into the final executable This can result in an overall code size reduction This compiler option can be set by accessing the CCS project properties under Build C2000 Compiler Advanced Options Runtime Model Options The optimization options can be found in the CCS project properties which is accessed by right-clicking on the project in the project explorer and selecting properties In the resulting window the optimization settings are found in Build C2000 Compiler Optimization</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_ADC_PAGE</field>
    <field name="url">DRIVERS_ADC_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The ADC driver provides API to configure the ADC module Below are the high level features supported by the ADC driver Each ADC has 2 5 selectable single ended inputs 1 2 bit resolution with 8 MSPS sampling rate max 1 6 configurable SOCs and 1 6 individually addressable result registers for each SOC Multiple trigger sources software all MCPWMs ADCSOC A or B ADCINT1/2 etc Three post processing blocks each with saturating offset calibration error from setpoint calculation high low or zero crossing compare trigger to sample delay capture One PPB Aggregater to aggregate succesive samples using sum calculate average etc Trigger Repeater for oversampling Three flexible PIE and two DMA interrupts It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Selecting ADC Clock Prescaler Specifying channels triggers and sample window size for each ADC SOC Selecting ADC Signal Mode Single ended Enabling and configuring ADC interrupts DMA interrupts Configuring Post Processing Blocks NA ADC has a power up time of 5 0 0 us Therefore this delay must be allowed between powering up the ADC and starting the sampling of the signal Sysconfig already handles this but if ADC is powered up manually by using the API then this power up delay must be added Include the below file to access the APIs adc.h ADC ADC ADC The ADC driver provides API to configure the ADC module Below are the high level features supported by the ADC driver Each ADC has 2 5 selectable single ended inputs 1 2 bit resolution with 8 MSPS sampling rate max 1 6 configurable SOCs and 1 6 individually addressable result registers for each SOC Multiple trigger sources software all MCPWMs ADCSOC A or B ADCINT1/2 etc Three post processing blocks each with saturating offset calibration error from setpoint calculation high low or zero crossing compare trigger to sample delay capture One PPB Aggregater to aggregate succesive samples using sum calculate average etc Trigger Repeater for oversampling Three flexible PIE and two DMA interrupts It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Selecting ADC Clock Prescaler Specifying channels triggers and sample window size for each ADC SOC Selecting ADC Signal Mode Single ended Enabling and configuring ADC interrupts DMA interrupts Configuring Post Processing Blocks NA ADC has a power up time of 5 0 0 us Therefore this delay must be allowed between powering up the ADC and starting the sampling of the signal Sysconfig already handles this but if ADC is powered up manually by using the API then this power up delay must be added Include the below file to access the APIs adc.h ADC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_ASYSCTL_PAGE</field>
    <field name="url">DRIVERS_ASYSCTL_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The ASYSCTL driver provides API to configure the ASYSCTL module Below are the high level features supported by the ASYSCTL driver The analog subsystem has the following features Flexible voltage references The ADC is referenced to VREFHI and VSSA pins VREFHI pin voltage can be driven in externally or can be generated by an internal bandgap voltage reference The internal voltage reference range can be selected to be 0 V to 3.3V or 0 V to 2.5V – The buffered DAC is referenced to VREFHI and VSSA – The comparator DACs are referenced to VDDA and VSSA Flexible pin usage Buffered DAC outputs Comparator subsystem inputs PGA functions and digital inputs AIOs AGPIOs are multiplexed with ADC inputs Comparator DAC can optionally be buffered and brought out to a multiplexed ADC pin mutually exclusive with use of CMPSS compare functions Internal connection to VREFLO on ADC for offset self-calibration It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Enable/Disable temperature sensor Configuring Analog reference Enable/Disable CMPSS DAC output to external pin NA NA Include the below file to access the APIs asysctl.h ASysCtl ASYSCTL ASYSCTL The ASYSCTL driver provides API to configure the ASYSCTL module Below are the high level features supported by the ASYSCTL driver The analog subsystem has the following features Flexible voltage references The ADC is referenced to VREFHI and VSSA pins VREFHI pin voltage can be driven in externally or can be generated by an internal bandgap voltage reference The internal voltage reference range can be selected to be 0 V to 3.3V or 0 V to 2.5V – The buffered DAC is referenced to VREFHI and VSSA – The comparator DACs are referenced to VDDA and VSSA Flexible pin usage Buffered DAC outputs Comparator subsystem inputs PGA functions and digital inputs AIOs AGPIOs are multiplexed with ADC inputs Comparator DAC can optionally be buffered and brought out to a multiplexed ADC pin mutually exclusive with use of CMPSS compare functions Internal connection to VREFLO on ADC for offset self-calibration It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Enable/Disable temperature sensor Configuring Analog reference Enable/Disable CMPSS DAC output to external pin NA NA Include the below file to access the APIs asysctl.h ASysCtl</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_CMPSSLITE_PAGE</field>
    <field name="url">DRIVERS_CMPSSLITE_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The CMPSS_LITE driver provides API to configure the CMPSS_LITE module Below are the high level features supported by the CMPSS_LITE driver Two analog comparators Two independently programmable reference 1 2 bit DACs The DAC reference voltage can be set to VDDA Two digital filters max filter clock prescale 2 Generate trip signals for MCPWM and for external signalling Latch or Invert output and also option to use hysteresis on output Synchronize submodules with MCPWMSYNCPER It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle CMPSS_LITE instances selection Configure value source of DAC in the CMPSS_LITE module Option to use hysteresis on the input Option for negative input of comparator to be driven by an external signal or by the reference DAC NA NA Include the below file to access the APIs cmpss_lite.h cmpss_lite_api CMPSSLITE CMPSSLITE The CMPSS_LITE driver provides API to configure the CMPSS_LITE module Below are the high level features supported by the CMPSS_LITE driver Two analog comparators Two independently programmable reference 1 2 bit DACs The DAC reference voltage can be set to VDDA Two digital filters max filter clock prescale 2 Generate trip signals for MCPWM and for external signalling Latch or Invert output and also option to use hysteresis on output Synchronize submodules with MCPWMSYNCPER It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle CMPSS_LITE instances selection Configure value source of DAC in the CMPSS_LITE module Option to use hysteresis on the input Option for negative input of comparator to be driven by an external signal or by the reference DAC NA NA Include the below file to access the APIs cmpss_lite.h cmpss_lite_api</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_DCC_PAGE</field>
    <field name="url">DRIVERS_DCC_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The DCC driver provides API to configure the DCC module Below are the high level features supported by the DCC driver Allows the application to make sure that a fixed ratio is maintained between frequencies of two clock signals Supports the definition of a programmable tolerance window in terms of the number of reference clock cycles Supports continuous monitoring without requiring application intervention Supports a single-sequence mode for spot measurements Allows the selection of a clock source for each of the counters resulting in several specific use cases It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Selecting Clock sources and their frequency Auto-calculation of seed values from the provided frequency and tolerance values Option to measure the System clock frequency Enabling and configuring DCC interrupts Configuring DCC error events in Error Signaling Module NA Include the below file to access the APIs dcc.h DCC DCC DCC The DCC driver provides API to configure the DCC module Below are the high level features supported by the DCC driver Allows the application to make sure that a fixed ratio is maintained between frequencies of two clock signals Supports the definition of a programmable tolerance window in terms of the number of reference clock cycles Supports continuous monitoring without requiring application intervention Supports a single-sequence mode for spot measurements Allows the selection of a clock source for each of the counters resulting in several specific use cases It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Selecting Clock sources and their frequency Auto-calculation of seed values from the provided frequency and tolerance values Option to measure the System clock frequency Enabling and configuring DCC interrupts Configuring DCC error events in Error Signaling Module NA Include the below file to access the APIs dcc.h DCC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_DCSM_PAGE</field>
    <field name="url">DRIVERS_DCSM_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The DCSM driver provides API to configure the DCSM module In order to configure the Dual Code Security Module the user must program the Linkpointer in DCSM OTP as well as the security configuration registers of the Zone Select Blocks in DCSM OTP It prevents access and visibility to on-chip secure memories and other secure resources by unauthorized persons Since there are two independent zones two developers can program proprietary code on the same device while protecting the confidentiality of their code from both each other and potential hackers Provides functions which secure and unsecure each zone and return the ownership security status EXEONLY status of specific RAM modules or Flash sectors The security module restricts the CPU access to on-chip secure memory and resources without interrupting or stalling CPU execution The security of each zone is provided by their own 1 2 8 bit four 3 2 bit words password CSM password The password for each zone is stored as user OTP It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle The DCSM tool generates dcsm.asm containing the linkpointer and dcsm.cmd containing the memory addresses and sections that references the contents in dcsm.asm file file NA Include the below file to access the APIs dcsm.h DCSM DCSM DCSM The DCSM driver provides API to configure the DCSM module In order to configure the Dual Code Security Module the user must program the Linkpointer in DCSM OTP as well as the security configuration registers of the Zone Select Blocks in DCSM OTP It prevents access and visibility to on-chip secure memories and other secure resources by unauthorized persons Since there are two independent zones two developers can program proprietary code on the same device while protecting the confidentiality of their code from both each other and potential hackers Provides functions which secure and unsecure each zone and return the ownership security status EXEONLY status of specific RAM modules or Flash sectors The security module restricts the CPU access to on-chip secure memory and resources without interrupting or stalling CPU execution The security of each zone is provided by their own 1 2 8 bit four 3 2 bit words password CSM password The password for each zone is stored as user OTP It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle The DCSM tool generates dcsm.asm containing the linkpointer and dcsm.cmd containing the memory addresses and sections that references the contents in dcsm.asm file file NA Include the below file to access the APIs dcsm.h DCSM</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_DMA_PAGE</field>
    <field name="url">DRIVERS_DMA_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The DMA driver provides API to configure the DMA module Below are the high level features supported by the DMA driver 2 DMA channels with software configurable priority levels and independent PIPE interrupts Channel 1 has the ability to be configured at a higher priority than Channel 2 Up to 6 3 hardware trigger sources to initiate DMA transfers Internal trigger generation for data transfers and trigger sources for channels Independent Read and Write buses Word Size 1 6 bit or 3 2 bit transfers SPI limited to 1 6 bit Throughput 3 cycle/word without arbitration Supports linear and circular addressing modes Supports multiple data transformation functions as data is transferred from source to destination Burst Mode Support It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle DMA channel selection and configuration Source and destination address setup options Enabling and configuring DMA interrupt Configuring DMA Error aggregator events in Error Signaling Module NA NA Include the below file to access the APIs dma.h DMA DMA DMA The DMA driver provides API to configure the DMA module Below are the high level features supported by the DMA driver 2 DMA channels with software configurable priority levels and independent PIPE interrupts Channel 1 has the ability to be configured at a higher priority than Channel 2 Up to 6 3 hardware trigger sources to initiate DMA transfers Internal trigger generation for data transfers and trigger sources for channels Independent Read and Write buses Word Size 1 6 bit or 3 2 bit transfers SPI limited to 1 6 bit Throughput 3 cycle/word without arbitration Supports linear and circular addressing modes Supports multiple data transformation functions as data is transferred from source to destination Burst Mode Support It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle DMA channel selection and configuration Source and destination address setup options Enabling and configuring DMA interrupt Configuring DMA Error aggregator events in Error Signaling Module NA NA Include the below file to access the APIs dma.h DMA</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_ECAP_PAGE</field>
    <field name="url">DRIVERS_ECAP_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The ECAP driver provides API to configure the ECAP module Below are the high level features supported by the ECAP driver Period and duty cycle measurements of pulse train signals Speed measurements of rotating machinery 4 event time-stamp registers each 3 2 bits Edge polarity selection for upto four sequenced time-stamp capture events Single shot capture of upto four event time-stamps Continuous mode capture of time stamps in a four-deep circular buffer Absolute time-stamp capture and Delta mode time-stamp capture When not used in capture mode the eCAP module can be configured as a single channel PWM output Interrupt on either of the four events It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Support for ECAP instance selection Specifying the behaviour of Time-Stamp counter during an emulation event Support for ECAP modes APWM or Capture mode Support for event polarity in capture mode Interrupt source configuration Support for APWM polarity period and compare values in APWM mode Seperate DMA trigger NA NA Include the below file to access the APIs ecap.h eCAP ECAP ECAP The ECAP driver provides API to configure the ECAP module Below are the high level features supported by the ECAP driver Period and duty cycle measurements of pulse train signals Speed measurements of rotating machinery 4 event time-stamp registers each 3 2 bits Edge polarity selection for upto four sequenced time-stamp capture events Single shot capture of upto four event time-stamps Continuous mode capture of time stamps in a four-deep circular buffer Absolute time-stamp capture and Delta mode time-stamp capture When not used in capture mode the eCAP module can be configured as a single channel PWM output Interrupt on either of the four events It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Support for ECAP instance selection Specifying the behaviour of Time-Stamp counter during an emulation event Support for ECAP modes APWM or Capture mode Support for event polarity in capture mode Interrupt source configuration Support for APWM polarity period and compare values in APWM mode Seperate DMA trigger NA NA Include the below file to access the APIs ecap.h eCAP</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_EQEP_PAGE</field>
    <field name="url">DRIVERS_EQEP_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The EQEP driver provides API to configure the EQEP module Below are the high level features supported by the EQEP driver We can monitor 3 Signals(EQEPA, EQEPB and Index) Can be used to determine direction of motor rotation angular position and velocity of rotor Support for Input signal polarity position counter source resolution index pulse gating configurations Supports QCAP module for low speed measurements Unit Timer(UTIME) Base module for issuing period interrupts to the CPU for velocity calculations Watchdog Timer to detect potential stalls and issue fault flags QMA module for changing QEPA and QEPB signals to clock and direction signals Also used for error detection It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Support of Quadrature Decoder Unit(QDU) for input polarity position counter source and resolution Support of position counter mode maximum position and value Support of QMA QCAP and UTIME modules for accurate velocity and position calculations Configure Watchdog Timer by specifying its period and value Input cross bar configuration for EQEP module Seperate DMA trigger NA NA Include the below file to access the APIs eqep.h eQEP EQEP EQEP The EQEP driver provides API to configure the EQEP module Below are the high level features supported by the EQEP driver We can monitor 3 Signals(EQEPA, EQEPB and Index) Can be used to determine direction of motor rotation angular position and velocity of rotor Support for Input signal polarity position counter source resolution index pulse gating configurations Supports QCAP module for low speed measurements Unit Timer(UTIME) Base module for issuing period interrupts to the CPU for velocity calculations Watchdog Timer to detect potential stalls and issue fault flags QMA module for changing QEPA and QEPB signals to clock and direction signals Also used for error detection It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Support of Quadrature Decoder Unit(QDU) for input polarity position counter source and resolution Support of position counter mode maximum position and value Support of QMA QCAP and UTIME modules for accurate velocity and position calculations Configure Watchdog Timer by specifying its period and value Input cross bar configuration for EQEP module Seperate DMA trigger NA NA Include the below file to access the APIs eqep.h eQEP</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_FLASH_PAGE</field>
    <field name="url">DRIVERS_FLASH_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The Flash driver provides an API to configure the Flash module Below are the high level features supported by the Flash driver Configure data cache code cache prefetch and data preread for Flash Read Interface FRI 1 4 Configure flash wait states Configure flash parity test Flash initialization routine It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Configure data cache code cache prefetch and data preread for FRI1-FRI4 Configure flash wait states Flash initialization routine NA It is important to look at your device s datasheet for information about what the required minimum flash wait state is for your selected SYSCLK frequency See the Flash section of the TRM for more info Include the below file to access the APIs flash.h Flash FLASH FLASH The Flash driver provides an API to configure the Flash module Below are the high level features supported by the Flash driver Configure data cache code cache prefetch and data preread for Flash Read Interface FRI 1 4 Configure flash wait states Configure flash parity test Flash initialization routine It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Configure data cache code cache prefetch and data preread for FRI1-FRI4 Configure flash wait states Flash initialization routine NA It is important to look at your device s datasheet for information about what the required minimum flash wait state is for your selected SYSCLK frequency See the Flash section of the TRM for more info Include the below file to access the APIs flash.h Flash</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_GPIO_PAGE</field>
    <field name="url">DRIVERS_GPIO_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The GPIO module provides an API to configure read from and write to the GPIO pins Functions fall into the two categories control and data Control functions configure properties pin muxing and qualification Data functions allow you to read the value on a pin or write a value to it Most functions will configure a single pin at a time The pin to be configured will be specified using its GPIO number Refer to the device’s datasheet to learn what numbers are valid for that part number Also note that even if a GPIO number is valid for a part number it may not be valid for all possible features For instance GPIO_setAnalogMode() is only usable for a fraction of the GPIO numbers For information and functions to configure a pin for low-power mode wake-up see the SysCtl module Include the below file to access the APIs gpio.h GPIO GPIO GPIO The GPIO module provides an API to configure read from and write to the GPIO pins Functions fall into the two categories control and data Control functions configure properties pin muxing and qualification Data functions allow you to read the value on a pin or write a value to it Most functions will configure a single pin at a time The pin to be configured will be specified using its GPIO number Refer to the device’s datasheet to learn what numbers are valid for that part number Also note that even if a GPIO number is valid for a part number it may not be valid for all possible features For instance GPIO_setAnalogMode() is only usable for a fraction of the GPIO numbers For information and functions to configure a pin for low-power mode wake-up see the SysCtl module Include the below file to access the APIs gpio.h GPIO</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_I2C_PAGE</field>
    <field name="url">DRIVERS_I2C_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The I2C driver provides API to configure the I2C module Below are the high level features supported by the I2C driver Each I2C has 2 selectable mode i.e Controller and Target with bit rate upto 4 0 0 Kbps Support for Clock duty cyle of 3 3 and 5 5 over Transmitter and Receiver Mode with bit count upto 8 bit per byte FIFO Mode Loopback mode Repeat Mode Support for 7 bit and 1 0 bit addressing mode and 1 6 FIFO level interrupt Support for Manual and Automatic Extended Clock Stretching via hardware and software interrupts It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Selecting I2C Device mode Controller Mode or Target Mode Selecting I2C Clock duty cycle 3 3 or 5 5 duty cycle Specifying initial mode bit count data count emulation mode target and own addresses fo each I2C SOC Enabling and configuring I2C FIFO and non-FIFO interrupts and registering interrupt handlers Configuring I2C GPIO Pinmux and Interrupt Levelfor each I2C SOC High-Speed Mode HS-Mode CBUS-Compatibility mode I2C has both SDA and SCL pin qualification set as Open-drain output with pull-up enabled and no synchronization A pull-up register is required for both SDA and SCL channel for proper functioning of I2C module Push-Pull and Inverted pin type is invalid for I2C module Include the below file to access the APIs i2c.h I2C I2C I2C The I2C driver provides API to configure the I2C module Below are the high level features supported by the I2C driver Each I2C has 2 selectable mode i.e Controller and Target with bit rate upto 4 0 0 Kbps Support for Clock duty cyle of 3 3 and 5 5 over Transmitter and Receiver Mode with bit count upto 8 bit per byte FIFO Mode Loopback mode Repeat Mode Support for 7 bit and 1 0 bit addressing mode and 1 6 FIFO level interrupt Support for Manual and Automatic Extended Clock Stretching via hardware and software interrupts It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Selecting I2C Device mode Controller Mode or Target Mode Selecting I2C Clock duty cycle 3 3 or 5 5 duty cycle Specifying initial mode bit count data count emulation mode target and own addresses fo each I2C SOC Enabling and configuring I2C FIFO and non-FIFO interrupts and registering interrupt handlers Configuring I2C GPIO Pinmux and Interrupt Levelfor each I2C SOC High-Speed Mode HS-Mode CBUS-Compatibility mode I2C has both SDA and SCL pin qualification set as Open-drain output with pull-up enabled and no synchronization A pull-up register is required for both SDA and SCL channel for proper functioning of I2C module Push-Pull and Inverted pin type is invalid for I2C module Include the below file to access the APIs i2c.h I2C</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_INTERRUPT_PAGE</field>
    <field name="url">DRIVERS_INTERRUPT_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The Interrupt driver provides API to configure the PIPE module Below are the high level features supported by the Interrupt driver Initialization of PIPE module and vector table Default interrupt handlers PIPE Global configuration Interrupt channel configuration It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle PIPE Global configuration Interrupt channel configuration Generates the init code and the ISR protypes Generates a file named interrupt_list.txt with the list of all interrupts in the order of priority and grouped as per the nesting groups Diagnostic features present in the PIPE module is not supported in the driver Make sure the ISRs are defined with the interrupt attribute Recommended to use Sysconfig for configuring interrupt It generates the correct attribute based on whether the interrupt is INT/RTINT/NMI attribute interrupt In case of normal INTs attribute interrupt In case of RTINTs attribute interrupt In case of NMI Make sure the RTINT threshold is aligned with nesting group mask This is enforced in Sysconfig UI Include the below file to access the APIs interrupt.h Interrupt Interrupt Interrupt The Interrupt driver provides API to configure the PIPE module Below are the high level features supported by the Interrupt driver Initialization of PIPE module and vector table Default interrupt handlers PIPE Global configuration Interrupt channel configuration It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle PIPE Global configuration Interrupt channel configuration Generates the init code and the ISR protypes Generates a file named interrupt_list.txt with the list of all interrupts in the order of priority and grouped as per the nesting groups Diagnostic features present in the PIPE module is not supported in the driver Make sure the ISRs are defined with the interrupt attribute Recommended to use Sysconfig for configuring interrupt It generates the correct attribute based on whether the interrupt is INT/RTINT/NMI attribute interrupt In case of normal INTs attribute interrupt In case of RTINTs attribute interrupt In case of NMI Make sure the RTINT threshold is aligned with nesting group mask This is enforced in Sysconfig UI Include the below file to access the APIs interrupt.h Interrupt</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_MCPWM_PAGE</field>
    <field name="url">DRIVERS_MCPWM_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The MCPWM driver provides API to configure the MCPWM module Below are the high level features supported by the MCPWM driver 2 MCPWM instances MCPWM1 has 3 pairs of outputs and MCPWM3 has 1 pair of outputs Can be also used as a DAC where duty cycle is equivalent to a DAC analog value It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Timebase Configurations common for all 3 pairs of outputs Counter Compare Action Qualifier for each pair of outputs Deadband between the MCPWMs common to the 3 pairs Trip Zone configurations common to the 3 pairs Dedicated MCPWM cross bar which enables selection of various trigger sources into any of the dedicated MCPWM trip inputs NA The Shadow Registers and Active registers have different memories unlike EPWM If Active registers are to be used directly make sure the shadow loads are disabled from both local and global strobes Else use the shadow registers for the updates to be take at the Timebase Counter equals Zero events by default Include the below file to access the APIs mcpwm.h MCPWM MCPWM MCPWM The MCPWM driver provides API to configure the MCPWM module Below are the high level features supported by the MCPWM driver 2 MCPWM instances MCPWM1 has 3 pairs of outputs and MCPWM3 has 1 pair of outputs Can be also used as a DAC where duty cycle is equivalent to a DAC analog value It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Timebase Configurations common for all 3 pairs of outputs Counter Compare Action Qualifier for each pair of outputs Deadband between the MCPWMs common to the 3 pairs Trip Zone configurations common to the 3 pairs Dedicated MCPWM cross bar which enables selection of various trigger sources into any of the dedicated MCPWM trip inputs NA The Shadow Registers and Active registers have different memories unlike EPWM If Active registers are to be used directly make sure the shadow loads are disabled from both local and global strobes Else use the shadow registers for the updates to be take at the Timebase Counter equals Zero events by default Include the below file to access the APIs mcpwm.h MCPWM</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_MEMCFG_PAGE</field>
    <field name="url">DRIVERS_MEMCFG_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The MemCfg module provides an API to configure the device’s Memory Control Module The functions that are provided fall into three main categories RAM section configuration access violation status and interrupts and memory error status an interrupts The RAM section configuration functions can initialize RAM configure access protection settings and configure section ownership The access violation and memory error categories contain functions that can return violation and error status and address information as well as configure interrupts that can be generated as a result of these issues Include the below file to access the APIs memcfg.h MemCfg MEMCFG MEMCFG The MemCfg module provides an API to configure the device’s Memory Control Module The functions that are provided fall into three main categories RAM section configuration access violation status and interrupts and memory error status an interrupts The RAM section configuration functions can initialize RAM configure access protection settings and configure section ownership The access violation and memory error categories contain functions that can return violation and error status and address information as well as configure interrupts that can be generated as a result of these issues Include the below file to access the APIs memcfg.h MemCfg</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE</field>
    <field name="url">DRIVERS_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">SOC Peripheral Drivers SOC Peripheral Drivers This module contains APIs for different device drivers for peripherals on the SOC that are supported on F28E12x It consists of below sub-modules ADC ASYSCTL CMPSSLITE DCC DCSM DMA ECAP EQEP FLASH GPIO I2C Interrupt MCPWM MEMCFG PGA SCI SPI Sysctl CPU Timer UART XBAR</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_PGA_PAGE</field>
    <field name="url">DRIVERS_PGA_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The PGA driver provides API to configure the PGA module Below are the high level features supported by the PGA driver Rail to rail input and output voltage within VDDA and VSSA range Programmable gain modes including unity gain and other values from 2 ˟ to 6 4 ˟ Post-gain filtering using on-chip resistors RFILT or Rib and external capacitor Differential input support Hardware assisted chopping for offset reduction Support for Kelvin ground connections using PGA_INM pins It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Support different gain modes buffer mode Standalone mode Non-inverting mode Subtractor mode using PMUXSEL NMUXSEL and MMUXSEL configuration Support additional muxing configuration on the inputs Support programmable gain values for subtractor and non-inverting modes Support PGA feedback to negative input configuration Support post-gain filtering using on-chip resistors and capacitor Support to enable/disable internal gain output on an external pin Support chopping feature for offset reduction NA Changing the gain mode during normal operation is allowed but a minimum configuration settling time can be observed when doing so See the device data sheet for the gain switch settling time Include the below file to access the APIs pga.h PGA PGA PGA The PGA driver provides API to configure the PGA module Below are the high level features supported by the PGA driver Rail to rail input and output voltage within VDDA and VSSA range Programmable gain modes including unity gain and other values from 2 ˟ to 6 4 ˟ Post-gain filtering using on-chip resistors RFILT or Rib and external capacitor Differential input support Hardware assisted chopping for offset reduction Support for Kelvin ground connections using PGA_INM pins It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Support different gain modes buffer mode Standalone mode Non-inverting mode Subtractor mode using PMUXSEL NMUXSEL and MMUXSEL configuration Support additional muxing configuration on the inputs Support programmable gain values for subtractor and non-inverting modes Support PGA feedback to negative input configuration Support post-gain filtering using on-chip resistors and capacitor Support to enable/disable internal gain output on an external pin Support chopping feature for offset reduction NA Changing the gain mode during normal operation is allowed but a minimum configuration settling time can be observed when doing so See the device data sheet for the gain switch settling time Include the below file to access the APIs pga.h PGA</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_SCI_PAGE</field>
    <field name="url">DRIVERS_SCI_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The SCI driver provides API to configure the SCI module Below are the high level features supported by the SCI driver 6 4 K different programmable baud rates upto LSPCLK/16 Standard NRZ format UART communication with half full duplex operation Parity overrun framing and error detection 1 6 level transmit and receive FIFOs Support for Address-Bit Multiprocessor mode and Idle-Line Multiprocessor mode Support for Automatic Baud Rate Detection It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Baud rate calculator with error estimation Configurable data width loopback settings Fully programmable serial interface characteristics start stop and parity bits Separately configurable TX RX FIFO settings Integrated support for interrupt module NA Include the below file to access the APIs sci.h SCI SCI SCI The SCI driver provides API to configure the SCI module Below are the high level features supported by the SCI driver 6 4 K different programmable baud rates upto LSPCLK/16 Standard NRZ format UART communication with half full duplex operation Parity overrun framing and error detection 1 6 level transmit and receive FIFOs Support for Address-Bit Multiprocessor mode and Idle-Line Multiprocessor mode Support for Automatic Baud Rate Detection It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Baud rate calculator with error estimation Configurable data width loopback settings Fully programmable serial interface characteristics start stop and parity bits Separately configurable TX RX FIFO settings Integrated support for interrupt module NA Include the below file to access the APIs sci.h SCI</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_SPI_PAGE</field>
    <field name="url">DRIVERS_SPI_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The SPI driver provides API to configure the SPI module Below are the high level features supported by the SPI driver 2 Operational modes controller peripheral with 1 2 5 different programmable baud rates upto SYSCLK/4 1 1 6 data bits per word 4 standard SPI clocking schemes 1 6 level Transmit and Receive FIFOs Supports simultaneous receive and transmit operation delayed transmit control SPIPTE inversion for digital audio interface receive mode on devices with two SPI modules Support for DMA High Speed SPI 3 wire SPI It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Baud rate configuration loopback support Configurable data width SPI mode emulation behaviour Separately configurable TX RX FIFO settings High speed mode support Integrated support for interrupt RTDMA modules NA Include the below file to access the APIs spi.h SPI SPI SPI The SPI driver provides API to configure the SPI module Below are the high level features supported by the SPI driver 2 Operational modes controller peripheral with 1 2 5 different programmable baud rates upto SYSCLK/4 1 1 6 data bits per word 4 standard SPI clocking schemes 1 6 level Transmit and Receive FIFOs Supports simultaneous receive and transmit operation delayed transmit control SPIPTE inversion for digital audio interface receive mode on devices with two SPI modules Support for DMA High Speed SPI 3 wire SPI It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Baud rate configuration loopback support Configurable data width SPI mode emulation behaviour Separately configurable TX RX FIFO settings High speed mode support Integrated support for interrupt RTDMA modules NA Include the below file to access the APIs spi.h SPI</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_SYSCTL_PAGE</field>
    <field name="url">DRIVERS_SYSCTL_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">System Control SysCtl determines the overall operation of the device The API provides functions to configure the clocking of the device the set of peripherals that are enabled the windowed watchdog and low-power modes It also provides functions to handle and obtain information about resets and missing clock detection failures Include the below file to access the APIs sysctl.h SysCtl Sysctl Sysctl System Control SysCtl determines the overall operation of the device The API provides functions to configure the clocking of the device the set of peripherals that are enabled the windowed watchdog and low-power modes It also provides functions to handle and obtain information about resets and missing clock detection failures Include the below file to access the APIs sysctl.h SysCtl</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_TIMER_PAGE</field>
    <field name="url">DRIVERS_TIMER_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The CPU timer API provides a set of functions for configuring and using the CPU Timer module Functions are provided to setup and configure the timer module operating conditions along with functions to get the status of the module and to clear overflow flag Include the below file to access the APIs cputimer.h CPUTimer CPU Timer CPU Timer The CPU timer API provides a set of functions for configuring and using the CPU Timer module Functions are provided to setup and configure the timer module operating conditions along with functions to get the status of the module and to clear overflow flag Include the below file to access the APIs cputimer.h CPUTimer</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_UART_PAGE</field>
    <field name="url">DRIVERS_UART_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The UART driver provides API to configure the UART module Below are the high level features supported by the UART driver Programmable baud-rate generation Standard asynchronous communication bits for start stop and parity 1 6 level 8 wide Transmit and Receive FIFOs with fine-grained FIFO configuration trigger configurable at any level 0 1 6 Support for line-break generation and detection IrDA serial-IR SIR encoder and decoder Support for DMA 9 bit mode It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Baud rate calculator with error estimation Configurable data width loopback settings Fully programmable serial interface characteristics start stop and parity bits Separately configurable TX RX FIFO settings Integrated support for interrupt RTDMA modules NA Avoid keeping the memory browser open while the execution is in progress as this can lead to erroneous reads from the UART data register Include the below file to access the APIs uart.h UART UART UART The UART driver provides API to configure the UART module Below are the high level features supported by the UART driver Programmable baud-rate generation Standard asynchronous communication bits for start stop and parity 1 6 level 8 wide Transmit and Receive FIFOs with fine-grained FIFO configuration trigger configurable at any level 0 1 6 Support for line-break generation and detection IrDA serial-IR SIR encoder and decoder Support for DMA 9 bit mode It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Baud rate calculator with error estimation Configurable data width loopback settings Fully programmable serial interface characteristics start stop and parity bits Separately configurable TX RX FIFO settings Integrated support for interrupt RTDMA modules NA Avoid keeping the memory browser open while the execution is in progress as this can lead to erroneous reads from the UART data register Include the below file to access the APIs uart.h UART</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">DRIVERS_PAGE::DRIVERS_XBAR_PAGE</field>
    <field name="url">DRIVERS_XBAR_PAGE.html</field>
    <field name="keywords"></field>
    <field name="text">The XBAR driver provides API to configure the various X-BARs such as Input X-BAR Output X-BAR PWM X-BAR Below are the high level features supported by the XBAR driver Input X-BAR routes signals from any GPIO to many different IP blocks such as the ADC mcPWM and external interrupts PWM X-BAR has 8 outputs that are routed to PWM modules for actions such as tripzones and syncing GPIO Output X-BAR takes signals from inside the device and brings them out to a GPIO The Output X-BAR PWM X-BAR allows the selection of a single input or a logical-OR of many inputs It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Selection of any GPIO as the input source of selected Input X-BAR Selection of source signals for each of the Output X-BAR PWM X-BAR outputs Configuration to invert the XBAR output for Output X-BAR PWM X-BAR Configurations to latch the Output X-BAR output select the latched signal or stretch the output Option to lock the configurations Configuration of Output X-BAR and ePWM X-BAR events in Error Signaling Module NA Include the below file to access the APIs xbar.h XBAR XBAR XBAR The XBAR driver provides API to configure the various X-BARs such as Input X-BAR Output X-BAR PWM X-BAR Below are the high level features supported by the XBAR driver Input X-BAR routes signals from any GPIO to many different IP blocks such as the ADC mcPWM and external interrupts PWM X-BAR has 8 outputs that are routed to PWM modules for actions such as tripzones and syncing GPIO Output X-BAR takes signals from inside the device and brings them out to a GPIO The Output X-BAR PWM X-BAR allows the selection of a single input or a logical-OR of many inputs It is strongly recommend to use SysConfig where it is available instead of using direct SW API calls This will help simplify the SW application and also catch common mistakes early in the development cycle Selection of any GPIO as the input source of selected Input X-BAR Selection of source signals for each of the Output X-BAR PWM X-BAR outputs Configuration to invert the XBAR output for Output X-BAR PWM X-BAR Configurations to latch the Output X-BAR output select the latched signal or stretch the output Option to lock the configurations Configuration of Output X-BAR and ePWM X-BAR events in Error Signaling Module NA Include the below file to access the APIs xbar.h XBAR</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES</field>
    <field name="url">EXAMPLES.html</field>
    <field name="keywords"></field>
    <field name="text">Examples and Demos Examples and Demos This page lists all the examples and demos supported in this SDK Driver Examples FreeRTOS Examples</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS</field>
    <field name="url">EXAMPLES_DRIVERS.html</field>
    <field name="keywords"></field>
    <field name="text">This page lists all the examples related to usage of SOC and board peripheral drivers ADC ADC SOC Software ADC SOC MCPWM ADC Temperature Sensor ADC DMA example ADC PPB Offset ADC PPB Limits ADC SOC Oversampling ADC Trigger Repeater Oversampling CMPSS CMPSSLITE Asynchronous Trip DCC DCC Single shot Clock verification DCC Single shot Clock measurement DCC Clock Failure Detection DCC Continuous Monitoring of Clock Sysconfig DCC Continuous clock monitoring DMA DMA GSRAM Transfer SysConfig Example DMA GSRAM Transfer Example ECAP ECAP APWM Mode ECAP Capture PWM Empty Projects Empty Driverlib Project Empty Driverlib Project for C++ EQEP EQEP Frequency Measurement EQEP Motor Speed and Direction Measurement EQEP Frequency Calculation EQEP Motor Speed and direction Calculation GPIO GPIO Setup GPIO Toggle GPIO Interrupt GPIO External Interrupt XINT/XBAR Example I2C I2C Controller Mode I2C Target Mode I2C Loopback Interrupt External Interrupt example Multiple interrupt handling example CPU Timer Interrupt Software Prioritization example MCPWM Real-Time Interrupt example LED LED Blinky LPM Device Idle Mode and Wakeup using GPIO Device Idle Mode and Wakeup using Watchdog Device Standby Mode and Wakeup using GPIO Device Standby Mode and Wakeup using Watchdog Device HALT Mode and Wakeup using GPIO Device Halt Mode and Wakeup using Watchdog MCPWM MCPWM Basic PWM Generation Examples MCPWM Synchronization Example MCPWM Deadband Example MCPWM Tripzone Example MCPWM Global Load Use Case Example MCPWM Using DMA for Advanced PWM Generation MEMCFG Uncorrectable Memory Error Handling PGA PGA DAC-ADC External Loopback SCI SCI Internal Loopback SCI Internal Loopback with Interrupts SCI Echoback STDOUT Redirect with SCI SPI SPI Internal Loopback SPI Internal Loopback with Interrupts SPI Loopback with DMA SPI EEPROM Interface SPI EEPROM Interface with DMA SYSCTL Missing clock detection XCLKOUT Configuration TIMER Timer Counter Example Timer Sysconfig Counter Example UART UART Internal Loopback UART Internal Loopback with FIFO Interrupts UART Internal Loopback with DMA UART Echoback Watchdog Watchdog Service Example Driver Examples Driver Examples This page lists all the examples related to usage of SOC and board peripheral drivers ADC ADC SOC Software ADC SOC MCPWM ADC Temperature Sensor ADC DMA example ADC PPB Offset ADC PPB Limits ADC SOC Oversampling ADC Trigger Repeater Oversampling CMPSS CMPSSLITE Asynchronous Trip DCC DCC Single shot Clock verification DCC Single shot Clock measurement DCC Clock Failure Detection DCC Continuous Monitoring of Clock Sysconfig DCC Continuous clock monitoring DMA DMA GSRAM Transfer SysConfig Example DMA GSRAM Transfer Example ECAP ECAP APWM Mode ECAP Capture PWM Empty Projects Empty Driverlib Project Empty Driverlib Project for C++ EQEP EQEP Frequency Measurement EQEP Motor Speed and Direction Measurement EQEP Frequency Calculation EQEP Motor Speed and direction Calculation GPIO GPIO Setup GPIO Toggle GPIO Interrupt GPIO External Interrupt XINT/XBAR Example I2C I2C Controller Mode I2C Target Mode I2C Loopback Interrupt External Interrupt example Multiple interrupt handling example CPU Timer Interrupt Software Prioritization example MCPWM Real-Time Interrupt example LED LED Blinky LPM Device Idle Mode and Wakeup using GPIO Device Idle Mode and Wakeup using Watchdog Device Standby Mode and Wakeup using GPIO Device Standby Mode and Wakeup using Watchdog Device HALT Mode and Wakeup using GPIO Device Halt Mode and Wakeup using Watchdog MCPWM MCPWM Basic PWM Generation Examples MCPWM Synchronization Example MCPWM Deadband Example MCPWM Tripzone Example MCPWM Global Load Use Case Example MCPWM Using DMA for Advanced PWM Generation MEMCFG Uncorrectable Memory Error Handling PGA PGA DAC-ADC External Loopback SCI SCI Internal Loopback SCI Internal Loopback with Interrupts SCI Echoback STDOUT Redirect with SCI SPI SPI Internal Loopback SPI Internal Loopback with Interrupts SPI Loopback with DMA SPI EEPROM Interface SPI EEPROM Interface with DMA SYSCTL Missing clock detection XCLKOUT Configuration TIMER Timer Counter Example Timer Sysconfig Counter Example UART UART Internal Loopback UART Internal Loopback with FIFO Interrupts UART Internal Loopback with DMA UART Echoback Watchdog Watchdog Service Example</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_ADC_EX13_SOC_OVERSAMPLING</field>
    <field name="url">EXAMPLES_DRIVERS_ADC_EX13_SOC_OVERSAMPLING.html</field>
    <field name="keywords"></field>
    <field name="text">This example sets up MCPWM1 to periodically trigger a set of conversions on ADCA including multiple SOCs that all convert A8 to achieve oversampling on A8 ADCA Interrupt ISRs are used to read results of ADCA Watch Variables adcAResult0 Digital representation of the voltage on pin A0 adcAResult1 Digital representation of the voltage on pin A5 adcAResult2 Digital representation of the voltage on pin A8 A0 A5 A8 should be connected to signals to be converted When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC This example sets up MCPWM1 to periodically trigger a set of conversions on ADCA including multiple SOCs that all convert A8 to achieve oversampling on A8 ADCA Interrupt ISRs are used to read results of ADCA Watch Variables adcAResult0 Digital representation of the voltage on pin A0 adcAResult1 Digital representation of the voltage on pin A5 adcAResult2 Digital representation of the voltage on pin A8 A0 A5 A8 should be connected to signals to be converted When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC ADC SOC Oversampling ADC SOC Oversampling This example sets up MCPWM1 to periodically trigger a set of conversions on ADCA including multiple SOCs that all convert A8 to achieve oversampling on A8 ADCA Interrupt ISRs are used to read results of ADCA Watch Variables adcAResult0 Digital representation of the voltage on pin A0 adcAResult1 Digital representation of the voltage on pin A5 adcAResult2 Digital representation of the voltage on pin A8 A0 A5 A8 should be connected to signals to be converted When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_ADC_EX15_TRIGGER_REPEATER_OVERSAMPLING</field>
    <field name="url">EXAMPLES_DRIVERS_ADC_EX15_TRIGGER_REPEATER_OVERSAMPLING.html</field>
    <field name="keywords"></field>
    <field name="text">This example configures ADC for oversampling using trigger repeater block The MCPWM1 is configured to periodically trigger the ADC SOC and the trigger repeater module is configured to generate 3 repeated pulses Post-processing block will take the repeated pulses accumulates them and stores the results in ppb sum register Watch Variables myADC0Result Digital representation of the voltage on pin A0 myPPB0Result Digital representation of the voltage of the 3 repeated pulses on pin A0 A0 should be connected to signals to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC This example configures ADC for oversampling using trigger repeater block The MCPWM1 is configured to periodically trigger the ADC SOC and the trigger repeater module is configured to generate 3 repeated pulses Post-processing block will take the repeated pulses accumulates them and stores the results in ppb sum register Watch Variables myADC0Result Digital representation of the voltage on pin A0 myPPB0Result Digital representation of the voltage of the 3 repeated pulses on pin A0 A0 should be connected to signals to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC ADC Trigger Repeater Oversampling ADC Trigger Repeater Oversampling This example configures ADC for oversampling using trigger repeater block The MCPWM1 is configured to periodically trigger the ADC SOC and the trigger repeater module is configured to generate 3 repeated pulses Post-processing block will take the repeated pulses accumulates them and stores the results in ppb sum register Watch Variables myADC0Result Digital representation of the voltage on pin A0 myPPB0Result Digital representation of the voltage of the 3 repeated pulses on pin A0 A0 should be connected to signals to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_ADC_EX1_SOC_SOFTWARE</field>
    <field name="url">EXAMPLES_DRIVERS_ADC_EX1_SOC_SOFTWARE.html</field>
    <field name="keywords"></field>
    <field name="text">This example converts some voltages on ADCA based on a software trigger Watch Variables myADC0Result0 Digital representation of the voltage on pin A0 myADC0Result1 Digital representation of the voltage on pin A4 A0 and A4 should be connected to signals to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC using makefiles to build** note the required combination and build using make command see ref MAKEFILE_BUILD_PAGE This example converts some voltages on ADCA based on a software trigger Watch Variables myADC0Result0 Digital representation of the voltage on pin A0 myADC0Result1 Digital representation of the voltage on pin A4 A0 and A4 should be connected to signals to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC using makefiles to build** note the required combination and build using make command see ref MAKEFILE_BUILD_PAGE ADC SOC Software ADC SOC Software This example converts some voltages on ADCA based on a software trigger Watch Variables myADC0Result0 Digital representation of the voltage on pin A0 myADC0Result1 Digital representation of the voltage on pin A4 A0 and A4 should be connected to signals to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC using makefiles to build** note the required combination and build using make command see ref MAKEFILE_BUILD_PAGE</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_ADC_EX2_SOC_MCPWM</field>
    <field name="url">EXAMPLES_DRIVERS_ADC_EX2_SOC_MCPWM.html</field>
    <field name="keywords"></field>
    <field name="text">This example converts some voltages on ADCA based on a MCPWM trigger Watch Variables myADC0Results A sequence of analog-to-digital conversion samples from pin A0 The time between samples is determined based on the period of the MCPWM timer A0 should be connected to a signal to convert Aspect Driverlib Implementation Bitfield Implementation Source File adc_ex2_soc_mcpwm.c driverlib adc_ex1_soc_mcpwm.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware Voltage Conversion API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC This example converts some voltages on ADCA based on a MCPWM trigger Watch Variables myADC0Results A sequence of analog-to-digital conversion samples from pin A0 The time between samples is determined based on the period of the MCPWM timer A0 should be connected to a signal to convert Aspect Driverlib Implementation Bitfield Implementation Source File adc_ex2_soc_mcpwm.c driverlib adc_ex1_soc_mcpwm.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware Voltage Conversion API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC ADC SOC MCPWM ADC SOC MCPWM This example converts some voltages on ADCA based on a MCPWM trigger Watch Variables myADC0Results A sequence of analog-to-digital conversion samples from pin A0 The time between samples is determined based on the period of the MCPWM timer A0 should be connected to a signal to convert Aspect Driverlib Implementation Bitfield Implementation Source File adc_ex2_soc_mcpwm.c driverlib adc_ex1_soc_mcpwm.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware Voltage Conversion API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_ADC_EX3_TEMPERATURE_SENSOR</field>
    <field name="url">EXAMPLES_DRIVERS_ADC_EX3_TEMPERATURE_SENSOR.html</field>
    <field name="keywords"></field>
    <field name="text">This example sets up the ePWM MCPWM in case of F28E12x to periodically trigger the ADC The ADC converts the internal connection to the temperature sensor which is then interpreted as a temperature by calling the ADC_getTemperatureC() function Watch Variables sensorSample The raw reading from the temperature sensor sensorTemp The interpretation of the sensor sample as a temperature in degrees Celsius None Aspect Driverlib Implementation Bitfield Implementation Source File adc_ex3_temp_sensor.c driverlib adc_ex2_mcpwm_tempsensor.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware TempSensor Calculation API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC This example sets up the ePWM MCPWM in case of F28E12x to periodically trigger the ADC The ADC converts the internal connection to the temperature sensor which is then interpreted as a temperature by calling the ADC_getTemperatureC() function Watch Variables sensorSample The raw reading from the temperature sensor sensorTemp The interpretation of the sensor sample as a temperature in degrees Celsius None Aspect Driverlib Implementation Bitfield Implementation Source File adc_ex3_temp_sensor.c driverlib adc_ex2_mcpwm_tempsensor.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware TempSensor Calculation API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC ADC Temperature Sensor ADC Temperature Sensor This example sets up the ePWM MCPWM in case of F28E12x to periodically trigger the ADC The ADC converts the internal connection to the temperature sensor which is then interpreted as a temperature by calling the ADC_getTemperatureC() function Watch Variables sensorSample The raw reading from the temperature sensor sensorTemp The interpretation of the sensor sample as a temperature in degrees Celsius None Aspect Driverlib Implementation Bitfield Implementation Source File adc_ex3_temp_sensor.c driverlib adc_ex2_mcpwm_tempsensor.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware TempSensor Calculation API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_ADC_EX6_CONTINUOUS_DMA</field>
    <field name="url">EXAMPLES_DRIVERS_ADC_EX6_CONTINUOUS_DMA.html</field>
    <field name="keywords"></field>
    <field name="text">This example sets up ADC channel to convert simultaneoulsy The conversion results will be transferred by the DMA into buffer Watch Variables myADC0DataBuffer Digital representation of the voltage on pin A0 A0 pins should be connected to signals to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC This example sets up ADC channel to convert simultaneoulsy The conversion results will be transferred by the DMA into buffer Watch Variables myADC0DataBuffer Digital representation of the voltage on pin A0 A0 pins should be connected to signals to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC ADC DMA example ADC DMA example This example sets up ADC channel to convert simultaneoulsy The conversion results will be transferred by the DMA into buffer Watch Variables myADC0DataBuffer Digital representation of the voltage on pin A0 A0 pins should be connected to signals to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_ADC_EX7_PPB_OFFSET</field>
    <field name="url">EXAMPLES_DRIVERS_ADC_EX7_PPB_OFFSET.html</field>
    <field name="keywords"></field>
    <field name="text">This example software triggers the ADC Some SOCs have automatic offset adjustment applied by the post-processing block After the program runs the memory will contain ADC post-processing block(PPB) results Watch Variables myADC0Result a digital representation of the voltage on pin A5 myADC0PPBResult a digital representation of the voltage on pin A5 minus 3 0 LSBs of automatically added offset A5 should be connected to signals to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC This example software triggers the ADC Some SOCs have automatic offset adjustment applied by the post-processing block After the program runs the memory will contain ADC post-processing block(PPB) results Watch Variables myADC0Result a digital representation of the voltage on pin A5 myADC0PPBResult a digital representation of the voltage on pin A5 minus 3 0 LSBs of automatically added offset A5 should be connected to signals to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC ADC PPB Offset ADC PPB Offset This example software triggers the ADC Some SOCs have automatic offset adjustment applied by the post-processing block After the program runs the memory will contain ADC post-processing block(PPB) results Watch Variables myADC0Result a digital representation of the voltage on pin A5 myADC0PPBResult a digital representation of the voltage on pin A5 minus 3 0 LSBs of automatically added offset A5 should be connected to signals to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_ADC_EX8_PPB_LIMITS</field>
    <field name="url">EXAMPLES_DRIVERS_ADC_EX8_PPB_LIMITS.html</field>
    <field name="keywords"></field>
    <field name="text">This example sets up the ePWM MCPWM in case of F28E12x to periodically trigger the ADC If the results are outside of the defined range the post-processing block will generate an interrupt The default limits are 1 0 0 0 LSBs and 3 0 0 0 LSBs With VREFHI set to 3.3V the PPB will generate an interrupt if the input voltage goes above about 2.4V or below about 0.8V Watch Variables None A0 should be connected to a signal to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC This example sets up the ePWM MCPWM in case of F28E12x to periodically trigger the ADC If the results are outside of the defined range the post-processing block will generate an interrupt The default limits are 1 0 0 0 LSBs and 3 0 0 0 LSBs With VREFHI set to 3.3V the PPB will generate an interrupt if the input voltage goes above about 2.4V or below about 0.8V Watch Variables None A0 should be connected to a signal to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC ADC PPB Limits ADC PPB Limits This example sets up the ePWM MCPWM in case of F28E12x to periodically trigger the ADC If the results are outside of the defined range the post-processing block will generate an interrupt The default limits are 1 0 0 0 LSBs and 3 0 0 0 LSBs With VREFHI set to 3.3V the PPB will generate an interrupt if the input voltage goes above about 2.4V or below about 0.8V Watch Variables None A0 should be connected to a signal to convert When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the ADC conversion results ADC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_CMPSSLITE_EX1_ASYNCH</field>
    <field name="url">EXAMPLES_DRIVERS_CMPSSLITE_EX1_ASYNCH.html</field>
    <field name="keywords"></field>
    <field name="text">This example enables the CMPSSLITE2 COMPH comparator and feeds the asynchronous CTRIPOUTH signal to the GPIO4/OUTPUTXBAR3 pin and CTRIPH to GPIO0/MCPWM1A CMPSS is configured to generate trip signals to trip the MCPWM signals CMPIN2P is used to give positive input and internal DAC is configured to provide the negative input Internal DAC is configured to provide a signal at VDD/2 An MCPWM signal is generated at GPIO0 and is configured to be tripped by CTRIPOUTH When a low input(VSS) is provided to CMPIN2P Trip signal(GPIO4) output is low PWM1B(GPIO0) gives a PWM signal When a high input higher than VDD/2 is provided to CMPIN2P Trip signal(GPIO4) output turns high PWM1B(GPIO0) gets tripped and outputs as high Watch Variables Outputs can be observed on GPIO4 and GPIO0 using an oscilloscope Give input on CMPIN1P When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the required waveforms CMPSSLITE This example enables the CMPSSLITE2 COMPH comparator and feeds the asynchronous CTRIPOUTH signal to the GPIO4/OUTPUTXBAR3 pin and CTRIPH to GPIO0/MCPWM1A CMPSS is configured to generate trip signals to trip the MCPWM signals CMPIN2P is used to give positive input and internal DAC is configured to provide the negative input Internal DAC is configured to provide a signal at VDD/2 An MCPWM signal is generated at GPIO0 and is configured to be tripped by CTRIPOUTH When a low input(VSS) is provided to CMPIN2P Trip signal(GPIO4) output is low PWM1B(GPIO0) gives a PWM signal When a high input higher than VDD/2 is provided to CMPIN2P Trip signal(GPIO4) output turns high PWM1B(GPIO0) gets tripped and outputs as high Watch Variables Outputs can be observed on GPIO4 and GPIO0 using an oscilloscope Give input on CMPIN1P When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the required waveforms CMPSSLITE CMPSSLITE Asynchronous Trip CMPSSLITE Asynchronous Trip This example enables the CMPSSLITE2 COMPH comparator and feeds the asynchronous CTRIPOUTH signal to the GPIO4/OUTPUTXBAR3 pin and CTRIPH to GPIO0/MCPWM1A CMPSS is configured to generate trip signals to trip the MCPWM signals CMPIN2P is used to give positive input and internal DAC is configured to provide the negative input Internal DAC is configured to provide a signal at VDD/2 An MCPWM signal is generated at GPIO0 and is configured to be tripped by CTRIPOUTH When a low input(VSS) is provided to CMPIN2P Trip signal(GPIO4) output is low PWM1B(GPIO0) gives a PWM signal When a high input higher than VDD/2 is provided to CMPIN2P Trip signal(GPIO4) output turns high PWM1B(GPIO0) gets tripped and outputs as high Watch Variables Outputs can be observed on GPIO4 and GPIO0 using an oscilloscope Give input on CMPIN1P When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the required waveforms CMPSSLITE</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_DCC_EX1_SINGLE_SHOT_VERIFICATION</field>
    <field name="url">EXAMPLES_DRIVERS_DCC_EX1_SINGLE_SHOT_VERIFICATION.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates the use of the Dual-Clock Comparator DCC module to verify the frequency of the PLLRAW clock using the XTAL clock as a reference The DCC module is configured to compare two clock sources Clock Source Description Frequency Fclk0 Reference clock XTAL clock 2 0 MHz Fclk1 Clock to be verified PLLRAW clock 1 6 0 MHz The program uses the DCC_verifyClockFrequency() function to perform the clock verification with a specified tolerance of 1 The result of the verification is stored in the result variable which indicates whether the PLLRAW clock frequency is within the expected range Update the parameters in the DCC_verifyClockFrequency() function if using different PLL or XTAL frequencies Refer to the device Technical Reference Manual TRM for details on counter seed values and DCC module configuration None Variable Name Description result Status of the PLLRAW clock verification PASS or FAIL Parameter Value FClk1 PLL frequency 1 6 0 MHz FClk0 XTAL frequency 2 0 MHz Tolerance 1 Allowable Frequency Tolerance 0 System Clock Frequency 1 6 0 MHz When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC This example demonstrates the use of the Dual-Clock Comparator DCC module to verify the frequency of the PLLRAW clock using the XTAL clock as a reference The DCC module is configured to compare two clock sources Clock Source Description Frequency Fclk0 Reference clock XTAL clock 2 0 MHz Fclk1 Clock to be verified PLLRAW clock 1 6 0 MHz The program uses the DCC_verifyClockFrequency() function to perform the clock verification with a specified tolerance of 1 The result of the verification is stored in the result variable which indicates whether the PLLRAW clock frequency is within the expected range Update the parameters in the DCC_verifyClockFrequency() function if using different PLL or XTAL frequencies Refer to the device Technical Reference Manual TRM for details on counter seed values and DCC module configuration None Variable Name Description result Status of the PLLRAW clock verification PASS or FAIL Parameter Value FClk1 PLL frequency 1 6 0 MHz FClk0 XTAL frequency 2 0 MHz Tolerance 1 Allowable Frequency Tolerance 0 System Clock Frequency 1 6 0 MHz When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC DCC Single shot Clock verification DCC Single shot Clock verification This example demonstrates the use of the Dual-Clock Comparator DCC module to verify the frequency of the PLLRAW clock using the XTAL clock as a reference The DCC module is configured to compare two clock sources Clock Source Description Frequency Fclk0 Reference clock XTAL clock 2 0 MHz Fclk1 Clock to be verified PLLRAW clock 1 6 0 MHz The program uses the DCC_verifyClockFrequency() function to perform the clock verification with a specified tolerance of 1 The result of the verification is stored in the result variable which indicates whether the PLLRAW clock frequency is within the expected range Update the parameters in the DCC_verifyClockFrequency() function if using different PLL or XTAL frequencies Refer to the device Technical Reference Manual TRM for details on counter seed values and DCC module configuration None Variable Name Description result Status of the PLLRAW clock verification PASS or FAIL Parameter Value FClk1 PLL frequency 1 6 0 MHz FClk0 XTAL frequency 2 0 MHz Tolerance 1 Allowable Frequency Tolerance 0 System Clock Frequency 1 6 0 MHz When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_DCC_EX2_SINGLE_SHOT_MEASUREMENT</field>
    <field name="url">EXAMPLES_DRIVERS_DCC_EX2_SINGLE_SHOT_MEASUREMENT.html</field>
    <field name="keywords"></field>
    <field name="text">This program demonstrates the use of the Dual-Clock Comparator DCC module to perform a single-shot measurement of the SYSOSCDIV4 clock frequency using the XTAL clock as a reference The DCC module is configured to measure the frequency of the SYSOSCDIV4 clock Fclk1 using the XTAL clock Fclk0 as a reference The reference clock frequency is set to 2 0 MHz and the measured clock frequency is expected to be approximately 8 Hz The program sets an initial seed value for the DCC counters and verifies the measured frequency against an expected range Parameter Value Reference Clock Fclk0 XTAL 2 0 MHz Measured Clock Fclk1 SYSOSCDIV4 Tolerance 1 Allowable Frequency Tolerance 0 can be updated based on XTAL error System Clock Frequency 1 6 0 MHz The result of the measurement is stored in the result variable which indicates whether the measurement was successful PASS or not FAIL The measured frequency is stored in the meas_freq1 variable None Variable Description result Status of the SYSOSCDIV4 clock measurement PASS or FAIL meas_freq1 Measured clock frequency of SYSOSCDIV4 When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC This program demonstrates the use of the Dual-Clock Comparator DCC module to perform a single-shot measurement of the SYSOSCDIV4 clock frequency using the XTAL clock as a reference The DCC module is configured to measure the frequency of the SYSOSCDIV4 clock Fclk1 using the XTAL clock Fclk0 as a reference The reference clock frequency is set to 2 0 MHz and the measured clock frequency is expected to be approximately 8 Hz The program sets an initial seed value for the DCC counters and verifies the measured frequency against an expected range Parameter Value Reference Clock Fclk0 XTAL 2 0 MHz Measured Clock Fclk1 SYSOSCDIV4 Tolerance 1 Allowable Frequency Tolerance 0 can be updated based on XTAL error System Clock Frequency 1 6 0 MHz The result of the measurement is stored in the result variable which indicates whether the measurement was successful PASS or not FAIL The measured frequency is stored in the meas_freq1 variable None Variable Description result Status of the SYSOSCDIV4 clock measurement PASS or FAIL meas_freq1 Measured clock frequency of SYSOSCDIV4 When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC DCC Single shot Clock measurement DCC Single shot Clock measurement This program demonstrates the use of the Dual-Clock Comparator DCC module to perform a single-shot measurement of the SYSOSCDIV4 clock frequency using the XTAL clock as a reference The DCC module is configured to measure the frequency of the SYSOSCDIV4 clock Fclk1 using the XTAL clock Fclk0 as a reference The reference clock frequency is set to 2 0 MHz and the measured clock frequency is expected to be approximately 8 Hz The program sets an initial seed value for the DCC counters and verifies the measured frequency against an expected range Parameter Value Reference Clock Fclk0 XTAL 2 0 MHz Measured Clock Fclk1 SYSOSCDIV4 Tolerance 1 Allowable Frequency Tolerance 0 can be updated based on XTAL error System Clock Frequency 1 6 0 MHz The result of the measurement is stored in the result variable which indicates whether the measurement was successful PASS or not FAIL The measured frequency is stored in the meas_freq1 variable None Variable Description result Status of the SYSOSCDIV4 clock measurement PASS or FAIL meas_freq1 Measured clock frequency of SYSOSCDIV4 When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_DCC_EX3_CONTINUOUS_MONITORING_OF_CLOCK</field>
    <field name="url">EXAMPLES_DRIVERS_DCC_EX3_CONTINUOUS_MONITORING_OF_CLOCK.html</field>
    <field name="keywords"></field>
    <field name="text">This program demonstrates continuous monitoring of the PLL Clock in the system using SYSOSCDIV4 as the reference clock The Dual-Clock Comparator DCC Module 0 is utilized for clock monitoring The program triggers an interrupt on any error causing the decrement/reload of counters to stop Clock Source Description Frequency Fclk0 SYSOSCDIV4 clock 8 MHz Fclk1 PLL clock to be monitored 1 6 0 MHz Error Type Tolerance Value DCC Error Tolerance 1 Frequency Error Tolerance 1.5 None ISR Name Trigger Condition Description DCC_ISR() DCC error signal detected Handles DCC error dumps counter values clears flags Variables Description result Indicates the status of the PLL clock monitoring PASS/FAIL pass_base Base address of the DCC module isr_enter Flag to indicate if the ISR was entered cnt0 Counter0 value measured during an error cnt1 Counter1 value measured during an error valid Valid0 value measured during an error To simulate an error count1 seed value is set as 1 1 0 0 0 0 The values are to be updated if a different PLL frequency is used None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC This program demonstrates continuous monitoring of the PLL Clock in the system using SYSOSCDIV4 as the reference clock The Dual-Clock Comparator DCC Module 0 is utilized for clock monitoring The program triggers an interrupt on any error causing the decrement/reload of counters to stop Clock Source Description Frequency Fclk0 SYSOSCDIV4 clock 8 MHz Fclk1 PLL clock to be monitored 1 6 0 MHz Error Type Tolerance Value DCC Error Tolerance 1 Frequency Error Tolerance 1.5 None ISR Name Trigger Condition Description DCC_ISR() DCC error signal detected Handles DCC error dumps counter values clears flags Variables Description result Indicates the status of the PLL clock monitoring PASS/FAIL pass_base Base address of the DCC module isr_enter Flag to indicate if the ISR was entered cnt0 Counter0 value measured during an error cnt1 Counter1 value measured during an error valid Valid0 value measured during an error To simulate an error count1 seed value is set as 1 1 0 0 0 0 The values are to be updated if a different PLL frequency is used None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC DCC Continuous clock monitoring DCC Continuous clock monitoring This program demonstrates continuous monitoring of the PLL Clock in the system using SYSOSCDIV4 as the reference clock The Dual-Clock Comparator DCC Module 0 is utilized for clock monitoring The program triggers an interrupt on any error causing the decrement/reload of counters to stop Clock Source Description Frequency Fclk0 SYSOSCDIV4 clock 8 MHz Fclk1 PLL clock to be monitored 1 6 0 MHz Error Type Tolerance Value DCC Error Tolerance 1 Frequency Error Tolerance 1.5 None ISR Name Trigger Condition Description DCC_ISR() DCC error signal detected Handles DCC error dumps counter values clears flags Variables Description result Indicates the status of the PLL clock monitoring PASS/FAIL pass_base Base address of the DCC module isr_enter Flag to indicate if the ISR was entered cnt0 Counter0 value measured during an error cnt1 Counter1 value measured during an error valid Valid0 value measured during an error To simulate an error count1 seed value is set as 1 1 0 0 0 0 The values are to be updated if a different PLL frequency is used None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_DCC_EX3_CONTINUOUS_MONITORING_OF_CLOCK_SYSCFG</field>
    <field name="url">EXAMPLES_DRIVERS_DCC_EX3_CONTINUOUS_MONITORING_OF_CLOCK_SYSCFG.html</field>
    <field name="keywords"></field>
    <field name="text">This program demonstrates continuous monitoring of the PLL Clock in the system using SYSOSCDIV4 as the reference clock The Dual-Clock Comparator DCC Module 0 is utilized for clock monitoring The program triggers an interrupt on any error causing the decrement/reload of counters to stop Clock Source Description Frequency Fclk0 SYSOSCDIV4 clock 8 MHz Fclk1 PLL clock to be monitored 1 6 0 MHz Error Type Tolerance Value DCC Error Tolerance 1 Frequency Error Tolerance 3 due to internal oscillator specifications These tolerances are configured in the SysConfig file For demonstration purposes an unrealistic tolerance is assumed to generate an error during continuous monitoring None Variable Description result Status of the PLLRAW clock monitoring PASS/FAIL cnt0 Counter0 value measured when an error is generated cnt1 Counter1 value measured when an error is generated valid Valid0 value measured when an error is generated ISR Name Trigger Condition Description INT_myDCC0_ISR() DCC error signal detected Handles DCC error dumps counter values clears flags Variables Description result Indicates the status of the PLL clock monitoring PASS/FAIL pass_base Base address of the DCC module isr_enter Flag to indicate if the ISR was entered cnt0 Counter0 value measured during an error cnt1 Counter1 value measured during an error valid Valid0 value measured during an error Above calculation is done as part of sysconfig in this example None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC This program demonstrates continuous monitoring of the PLL Clock in the system using SYSOSCDIV4 as the reference clock The Dual-Clock Comparator DCC Module 0 is utilized for clock monitoring The program triggers an interrupt on any error causing the decrement/reload of counters to stop Clock Source Description Frequency Fclk0 SYSOSCDIV4 clock 8 MHz Fclk1 PLL clock to be monitored 1 6 0 MHz Error Type Tolerance Value DCC Error Tolerance 1 Frequency Error Tolerance 3 due to internal oscillator specifications These tolerances are configured in the SysConfig file For demonstration purposes an unrealistic tolerance is assumed to generate an error during continuous monitoring None Variable Description result Status of the PLLRAW clock monitoring PASS/FAIL cnt0 Counter0 value measured when an error is generated cnt1 Counter1 value measured when an error is generated valid Valid0 value measured when an error is generated ISR Name Trigger Condition Description INT_myDCC0_ISR() DCC error signal detected Handles DCC error dumps counter values clears flags Variables Description result Indicates the status of the PLL clock monitoring PASS/FAIL pass_base Base address of the DCC module isr_enter Flag to indicate if the ISR was entered cnt0 Counter0 value measured during an error cnt1 Counter1 value measured during an error valid Valid0 value measured during an error Above calculation is done as part of sysconfig in this example None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC DCC Continuous Monitoring of Clock Sysconfig DCC Continuous Monitoring of Clock Sysconfig This program demonstrates continuous monitoring of the PLL Clock in the system using SYSOSCDIV4 as the reference clock The Dual-Clock Comparator DCC Module 0 is utilized for clock monitoring The program triggers an interrupt on any error causing the decrement/reload of counters to stop Clock Source Description Frequency Fclk0 SYSOSCDIV4 clock 8 MHz Fclk1 PLL clock to be monitored 1 6 0 MHz Error Type Tolerance Value DCC Error Tolerance 1 Frequency Error Tolerance 3 due to internal oscillator specifications These tolerances are configured in the SysConfig file For demonstration purposes an unrealistic tolerance is assumed to generate an error during continuous monitoring None Variable Description result Status of the PLLRAW clock monitoring PASS/FAIL cnt0 Counter0 value measured when an error is generated cnt1 Counter1 value measured when an error is generated valid Valid0 value measured when an error is generated ISR Name Trigger Condition Description INT_myDCC0_ISR() DCC error signal detected Handles DCC error dumps counter values clears flags Variables Description result Indicates the status of the PLL clock monitoring PASS/FAIL pass_base Base address of the DCC module isr_enter Flag to indicate if the ISR was entered cnt0 Counter0 value measured during an error cnt1 Counter1 value measured during an error valid Valid0 value measured during an error Above calculation is done as part of sysconfig in this example None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_DCC_EX4_CLOCK_FAIL_DETECT</field>
    <field name="url">EXAMPLES_DRIVERS_DCC_EX4_CLOCK_FAIL_DETECT.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates the detection of clock failure using the Dual-Clock Comparator DCC module on a continuous monitoring basis The PLL clock is monitored using the XTAL oscillator as the reference clock source A clock failure is simulated by turning off the XTAL oscillator which triggers a DCC error interrupt The interrupt service routine ISR handles the failure by switching the oscillator source to WROSCDIV8 and turning off the PLL Clock Source Description Clocksource0 Reference clock XTAL 2 0 MHz Clocksource1 Monitored clock PLL 1 6 0 MHz ISR Name Description __interrupt void DCC_ISR() Handles the DCC error interrupt triggered by clock failure Ensure the XTAL is a resonator running in Crystal mode If an SE Crystal is used physically disconnect the clock on the board to simulate failure When running in flash configuration reset and restart the example after loading to clear any stale flags or states None Variable Description result Status of the clock failure detection PASS or FAIL isr_enter Indicates if the ISR was triggered pass Counter for successful ISR executions When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC This example demonstrates the detection of clock failure using the Dual-Clock Comparator DCC module on a continuous monitoring basis The PLL clock is monitored using the XTAL oscillator as the reference clock source A clock failure is simulated by turning off the XTAL oscillator which triggers a DCC error interrupt The interrupt service routine ISR handles the failure by switching the oscillator source to WROSCDIV8 and turning off the PLL Clock Source Description Clocksource0 Reference clock XTAL 2 0 MHz Clocksource1 Monitored clock PLL 1 6 0 MHz ISR Name Description __interrupt void DCC_ISR() Handles the DCC error interrupt triggered by clock failure Ensure the XTAL is a resonator running in Crystal mode If an SE Crystal is used physically disconnect the clock on the board to simulate failure When running in flash configuration reset and restart the example after loading to clear any stale flags or states None Variable Description result Status of the clock failure detection PASS or FAIL isr_enter Indicates if the ISR was triggered pass Counter for successful ISR executions When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC DCC Clock Failure Detection DCC Clock Failure Detection This example demonstrates the detection of clock failure using the Dual-Clock Comparator DCC module on a continuous monitoring basis The PLL clock is monitored using the XTAL oscillator as the reference clock source A clock failure is simulated by turning off the XTAL oscillator which triggers a DCC error interrupt The interrupt service routine ISR handles the failure by switching the oscillator source to WROSCDIV8 and turning off the PLL Clock Source Description Clocksource0 Reference clock XTAL 2 0 MHz Clocksource1 Monitored clock PLL 1 6 0 MHz ISR Name Description __interrupt void DCC_ISR() Handles the DCC error interrupt triggered by clock failure Ensure the XTAL is a resonator running in Crystal mode If an SE Crystal is used physically disconnect the clock on the board to simulate failure When running in flash configuration reset and restart the example after loading to clear any stale flags or states None Variable Description result Status of the clock failure detection PASS or FAIL isr_enter Indicates if the ISR was triggered pass Counter for successful ISR executions When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the Clock monitoring status and the counter values when the error is generated When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states DCC</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_DMA_EX1_GSRAM_TRANSFER</field>
    <field name="url">EXAMPLES_DRIVERS_DMA_EX1_GSRAM_TRANSFER.html</field>
    <field name="keywords"></field>
    <field name="text">This example uses DMA channel to transfer data from a buffer to another buffer in RAM The example does the below Configures DMA channel to transfer data from the source address to destination address specified The example triggers the DMA channel repeatedly until the transfer of 1 6 bursts where each burst is 8 1 6 bit words has been completed When the whole transfer is complete it triggers the DMA interrupt All the DMA configuratins are done in SysConfig Watch Variables sData Data to send rData Received data done Transfer successful None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable Using the watch variables view the Clock verification status DMA This example uses DMA channel to transfer data from a buffer to another buffer in RAM The example does the below Configures DMA channel to transfer data from the source address to destination address specified The example triggers the DMA channel repeatedly until the transfer of 1 6 bursts where each burst is 8 1 6 bit words has been completed When the whole transfer is complete it triggers the DMA interrupt All the DMA configuratins are done in SysConfig Watch Variables sData Data to send rData Received data done Transfer successful None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable Using the watch variables view the Clock verification status DMA DMA GSRAM Transfer SysConfig Example DMA GSRAM Transfer SysConfig Example This example uses DMA channel to transfer data from a buffer to another buffer in RAM The example does the below Configures DMA channel to transfer data from the source address to destination address specified The example triggers the DMA channel repeatedly until the transfer of 1 6 bursts where each burst is 8 1 6 bit words has been completed When the whole transfer is complete it triggers the DMA interrupt All the DMA configuratins are done in SysConfig Watch Variables sData Data to send rData Received data done Transfer successful None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable Using the watch variables view the Clock verification status DMA</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_DMA_EX2_GSRAM_TRANSFER</field>
    <field name="url">EXAMPLES_DRIVERS_DMA_EX2_GSRAM_TRANSFER.html</field>
    <field name="keywords"></field>
    <field name="text">This example uses DMA channel to transfer data from a buffer to another buffer in RAM The example does the below Configures DMA channel to transfer data from the source address to destination address specified The example triggers the DMA channel repeatedly until the transfer of 1 6 bursts where each burst is 8 1 6 bit words has been completed When the whole transfer is complete it triggers the DMA interrupt Watch Variables sData Data to send rData Received data done Transfer successful None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable Using the watch variables view the Clock verification status DMA This example uses DMA channel to transfer data from a buffer to another buffer in RAM The example does the below Configures DMA channel to transfer data from the source address to destination address specified The example triggers the DMA channel repeatedly until the transfer of 1 6 bursts where each burst is 8 1 6 bit words has been completed When the whole transfer is complete it triggers the DMA interrupt Watch Variables sData Data to send rData Received data done Transfer successful None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable Using the watch variables view the Clock verification status DMA DMA GSRAM Transfer Example DMA GSRAM Transfer Example This example uses DMA channel to transfer data from a buffer to another buffer in RAM The example does the below Configures DMA channel to transfer data from the source address to destination address specified The example triggers the DMA channel repeatedly until the transfer of 1 6 bursts where each burst is 8 1 6 bit words has been completed When the whole transfer is complete it triggers the DMA interrupt Watch Variables sData Data to send rData Received data done Transfer successful None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable Using the watch variables view the Clock verification status DMA</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_ECAP_EX1_APWM</field>
    <field name="url">EXAMPLES_DRIVERS_ECAP_EX1_APWM.html</field>
    <field name="keywords"></field>
    <field name="text">This program sets up the eCAP module in APWM mode The PWM waveform will come out on GPIO5 The frequency of PWM is configured to vary between 1 0 Hz and 2 0 Hz using the shadow registers to load the next period/compare values Watch Variables Observe the waveform on GPIO5 None Aspect Driverlib Implementation Bitfield Implementation Source File ecap_ex1_apwm.c driverlib ecap_ex1_apwm.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware PWM Genearion API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Launch a CCS debug session and run the executable see Build Load and Run Observe the required waveform on the GPIO mentioned in watch variables ECAP This program sets up the eCAP module in APWM mode The PWM waveform will come out on GPIO5 The frequency of PWM is configured to vary between 1 0 Hz and 2 0 Hz using the shadow registers to load the next period/compare values Watch Variables Observe the waveform on GPIO5 None Aspect Driverlib Implementation Bitfield Implementation Source File ecap_ex1_apwm.c driverlib ecap_ex1_apwm.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware PWM Genearion API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Launch a CCS debug session and run the executable see Build Load and Run Observe the required waveform on the GPIO mentioned in watch variables ECAP ECAP APWM Mode ECAP APWM Mode This program sets up the eCAP module in APWM mode The PWM waveform will come out on GPIO5 The frequency of PWM is configured to vary between 1 0 Hz and 2 0 Hz using the shadow registers to load the next period/compare values Watch Variables Observe the waveform on GPIO5 None Aspect Driverlib Implementation Bitfield Implementation Source File ecap_ex1_apwm.c driverlib ecap_ex1_apwm.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware PWM Genearion API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Launch a CCS debug session and run the executable see Build Load and Run Observe the required waveform on the GPIO mentioned in watch variables ECAP</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_ECAP_EX2_CAPTURE_PWM</field>
    <field name="url">EXAMPLES_DRIVERS_ECAP_EX2_CAPTURE_PWM.html</field>
    <field name="keywords"></field>
    <field name="text">This examples uses ECAP to capture the EPWM MCPWM in case of F28E12x signal ECAP can be used to calculate time period frequency of the required signal Here ECAP is configured to capture time between rising and falling edge of the EPWM MCPWM in case of F28E12x The example does the below This example configures ePWM3A for MCPWM1A in case of F28E12x Up count mode Period starts at 5 0 0 and goes up to 8 0 0 0 Toggle output on PRD Watch Variables ecap1PassCount Successful ECAP captures ecap1IntCount Number of Interrupt counts eCAP1 is on GPIO2 MCPWM1A is on GPIO0 Connect GPIO0 to GPIO2 When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the number the number of captures and interrupt counts ECAP This examples uses ECAP to capture the EPWM MCPWM in case of F28E12x signal ECAP can be used to calculate time period frequency of the required signal Here ECAP is configured to capture time between rising and falling edge of the EPWM MCPWM in case of F28E12x The example does the below This example configures ePWM3A for MCPWM1A in case of F28E12x Up count mode Period starts at 5 0 0 and goes up to 8 0 0 0 Toggle output on PRD Watch Variables ecap1PassCount Successful ECAP captures ecap1IntCount Number of Interrupt counts eCAP1 is on GPIO2 MCPWM1A is on GPIO0 Connect GPIO0 to GPIO2 When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the number the number of captures and interrupt counts ECAP ECAP Capture PWM ECAP Capture PWM This examples uses ECAP to capture the EPWM MCPWM in case of F28E12x signal ECAP can be used to calculate time period frequency of the required signal Here ECAP is configured to capture time between rising and falling edge of the EPWM MCPWM in case of F28E12x The example does the below This example configures ePWM3A for MCPWM1A in case of F28E12x Up count mode Period starts at 5 0 0 and goes up to 8 0 0 0 Toggle output on PRD Watch Variables ecap1PassCount Successful ECAP captures ecap1IntCount Number of Interrupt counts eCAP1 is on GPIO2 MCPWM1A is on GPIO0 Connect GPIO0 to GPIO2 When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the number the number of captures and interrupt counts ECAP</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_EMPTY_DRIVERLIB_PROJECT</field>
    <field name="url">EXAMPLES_DRIVERS_EMPTY_DRIVERLIB_PROJECT.html</field>
    <field name="keywords"></field>
    <field name="text">This example is an empty project for Driverlib development It does the necessary initializations and runs on an empty infinite loop This can be used as a template for creating new projects The example does the below Initializes device clock peripheral clocks and interrupts SysConfig Board Initialization with default Clocktree settings PIPE Global Interrupt for INTs and RTINTs is enabled and INT is enabled in CPU Watch Variables None None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the outputs if any This example is an empty project for Driverlib development It does the necessary initializations and runs on an empty infinite loop This can be used as a template for creating new projects The example does the below Initializes device clock peripheral clocks and interrupts SysConfig Board Initialization with default Clocktree settings PIPE Global Interrupt for INTs and RTINTs is enabled and INT is enabled in CPU Watch Variables None None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the outputs if any Empty Driverlib Project Empty Driverlib Project This example is an empty project for Driverlib development It does the necessary initializations and runs on an empty infinite loop This can be used as a template for creating new projects The example does the below Initializes device clock peripheral clocks and interrupts SysConfig Board Initialization with default Clocktree settings PIPE Global Interrupt for INTs and RTINTs is enabled and INT is enabled in CPU Watch Variables None None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the outputs if any</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_EMPTY_DRIVERLIB_PROJECT_CPP</field>
    <field name="url">EXAMPLES_DRIVERS_EMPTY_DRIVERLIB_PROJECT_CPP.html</field>
    <field name="keywords"></field>
    <field name="text">This example is an empty project for Driverlib development with C++ source files It does the necessary initializations and runs on an empty infinite loop This can be used as a template for creating new C++ projects The example does the below Initializes device clock peripheral clocks and interrupts SysConfig Board Initialization with default Clocktree settings PIPE Global Interrupt for INTs and RTINTs is enabled and INT is enabled in CPU Watch Variables None None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the outputs if any This example is an empty project for Driverlib development with C++ source files It does the necessary initializations and runs on an empty infinite loop This can be used as a template for creating new C++ projects The example does the below Initializes device clock peripheral clocks and interrupts SysConfig Board Initialization with default Clocktree settings PIPE Global Interrupt for INTs and RTINTs is enabled and INT is enabled in CPU Watch Variables None None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the outputs if any Empty Driverlib Project for C++ Empty Driverlib Project for C++ This example is an empty project for Driverlib development with C++ source files It does the necessary initializations and runs on an empty infinite loop This can be used as a template for creating new C++ projects The example does the below Initializes device clock peripheral clocks and interrupts SysConfig Board Initialization with default Clocktree settings PIPE Global Interrupt for INTs and RTINTs is enabled and INT is enabled in CPU Watch Variables None None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the outputs if any</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_EQEP_EX1_FREQ_CAL</field>
    <field name="url">EXAMPLES_DRIVERS_EQEP_EX1_FREQ_CAL.html</field>
    <field name="keywords"></field>
    <field name="text">This example will calculate the frequency of an input signal using the eQEP module EPWM1A MCPWM1A in case of F28E12x is configured to generate this input signal with a frequency of 5 kHz It will interrupt once every period and call the frequency calculation function This example uses the IQMath library to simplify high-precision calculations In addition to the main example file the following files must be included in this project eqep_ex1_calculation.c contains frequency calculation function eqep_ex1_calculation.h includes initialization values for frequency structure The configuration for this example is as follows Maximum frequency is configured to 1 0 KHz baseFreq Minimum frequency is assumed at 5 0 Hz for capture pre-scalar selection SPEED_FR High Frequency Measurement is obtained by counting the external input pulses for 1 0 ms unit timer set to 1 0 0 Hz SPEED_FR Count Delta 1 0 ms SPEED_PR Low Frequency Measurement is obtained by measuring time period of input edges Time measurement is averaged over 6 4 edges for better results and the capture unit performs the time measurement using pre-scaled SYSCLK Note that the pre-scaler for capture unit clock is selected such that the capture timer does not overflow at the required minimum frequency This example runs indefinitely until the user stops it For more information about the frequency calculation see the comments at the beginning of eqep_ex1_calculation.c and the XLS file provided with the project eqep_ex1_calculation.xls Watch Variables freq.freqHzFR Frequency measurement using position counter/unit time out freq.freqHzPR Frequency measurement using capture unit Connect GPIO6/eQEP1A to GPIO0/MCPWM1A When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the position and speed calculated for the motor EQEP This example will calculate the frequency of an input signal using the eQEP module EPWM1A MCPWM1A in case of F28E12x is configured to generate this input signal with a frequency of 5 kHz It will interrupt once every period and call the frequency calculation function This example uses the IQMath library to simplify high-precision calculations In addition to the main example file the following files must be included in this project eqep_ex1_calculation.c contains frequency calculation function eqep_ex1_calculation.h includes initialization values for frequency structure The configuration for this example is as follows Maximum frequency is configured to 1 0 KHz baseFreq Minimum frequency is assumed at 5 0 Hz for capture pre-scalar selection SPEED_FR High Frequency Measurement is obtained by counting the external input pulses for 1 0 ms unit timer set to 1 0 0 Hz SPEED_FR Count Delta 1 0 ms SPEED_PR Low Frequency Measurement is obtained by measuring time period of input edges Time measurement is averaged over 6 4 edges for better results and the capture unit performs the time measurement using pre-scaled SYSCLK Note that the pre-scaler for capture unit clock is selected such that the capture timer does not overflow at the required minimum frequency This example runs indefinitely until the user stops it For more information about the frequency calculation see the comments at the beginning of eqep_ex1_calculation.c and the XLS file provided with the project eqep_ex1_calculation.xls Watch Variables freq.freqHzFR Frequency measurement using position counter/unit time out freq.freqHzPR Frequency measurement using capture unit Connect GPIO6/eQEP1A to GPIO0/MCPWM1A When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the position and speed calculated for the motor EQEP EQEP Frequency Measurement EQEP Frequency Measurement This example will calculate the frequency of an input signal using the eQEP module EPWM1A MCPWM1A in case of F28E12x is configured to generate this input signal with a frequency of 5 kHz It will interrupt once every period and call the frequency calculation function This example uses the IQMath library to simplify high-precision calculations In addition to the main example file the following files must be included in this project eqep_ex1_calculation.c contains frequency calculation function eqep_ex1_calculation.h includes initialization values for frequency structure The configuration for this example is as follows Maximum frequency is configured to 1 0 KHz baseFreq Minimum frequency is assumed at 5 0 Hz for capture pre-scalar selection SPEED_FR High Frequency Measurement is obtained by counting the external input pulses for 1 0 ms unit timer set to 1 0 0 Hz SPEED_FR Count Delta 1 0 ms SPEED_PR Low Frequency Measurement is obtained by measuring time period of input edges Time measurement is averaged over 6 4 edges for better results and the capture unit performs the time measurement using pre-scaled SYSCLK Note that the pre-scaler for capture unit clock is selected such that the capture timer does not overflow at the required minimum frequency This example runs indefinitely until the user stops it For more information about the frequency calculation see the comments at the beginning of eqep_ex1_calculation.c and the XLS file provided with the project eqep_ex1_calculation.xls Watch Variables freq.freqHzFR Frequency measurement using position counter/unit time out freq.freqHzPR Frequency measurement using capture unit Connect GPIO6/eQEP1A to GPIO0/MCPWM1A When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the position and speed calculated for the motor EQEP</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_EQEP_EX2_POS_SPEED</field>
    <field name="url">EXAMPLES_DRIVERS_EQEP_EX2_POS_SPEED.html</field>
    <field name="keywords"></field>
    <field name="text">This example provides position and speed measurement using the capture unit and speed measurement using unit time out of the eQEP module EPWM1A MCPWM1A in case of F28E12x and a GPIO are configured to generate simulated eQEP signals The MCPWM module will interrupt once every period and call the position/speed calculation function This example uses the IQMath library to simplify high-precision calculations In addition to the main example file the following files must be included in this project eqep_ex2_calculation.c contains position/speed calculation function eqep_ex2_calculation.h includes initialization values for position/speed structure The example does the below Maximum speed is configured to 6 0 0 0 rpm baseRPM Minimum speed is assumed at 1 0 rpm for capture pre-scalar selection Pole pair is configured to 2 polePairs Encoder resolution is configured to 4 0 0 0 counts/revolution mechScaler Which means 4 0 0 0 4 1 0 0 0 line/revolution quadrature encoder simulated by MCPWM1 MCPWM1 simulating QEP encoder signals is configured for a 5 kHz frequency or 3 0 0 rpm 4 5 0 0 0 cnts/sec 6 0 sec/min 4 0 0 0 cnts/rev SPEEDRPM_FR High Speed Measurement is obtained by counting the QEP input pulses for 1 0 ms unit timer set to 1 0 0 Hz SPEEDRPM_FR Position Delta 1 0 ms 6 0 rpm SPEEDRPM_PR Low Speed Measurement is obtained by measuring time period of QEP edges Time measurement is averaged over 6 4 edges for better results and the capture unit performs the time measurement using pre-scaled SYSCLK Note that the pre-scaler for capture unit clock is selected such that the capture timer does not overflow at the required minimum frequency This example runs indefinitely until the user stops it For more information about the position/speed calculation see the comments at the beginning of eqep_ex2_calculation.c and the XLS file provided with the project eqep_ex2_calculation.xls Watch Variables posSpeed.speedRPMFR Speed meas in rpm using QEP position counter posSpeed.speedRPMPR Speed meas in rpm using capture unit posSpeed.thetaMech Motor mechanical angle Q15 posSpeed.thetaElec Motor electrical angle Q15 Connect GPIO6/eQEP1A to GPIO0/MCPWM1A simulates eQEP Phase A signal Connect GPIO7/eQEP1B to GPIO1/MCPWM1B simulates eQEP Phase B signal Connect GPIO43/eQEP1I to GPIO2 simulates eQEP Index Signal When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the position and speed calculated for the motor EQEP This example provides position and speed measurement using the capture unit and speed measurement using unit time out of the eQEP module EPWM1A MCPWM1A in case of F28E12x and a GPIO are configured to generate simulated eQEP signals The MCPWM module will interrupt once every period and call the position/speed calculation function This example uses the IQMath library to simplify high-precision calculations In addition to the main example file the following files must be included in this project eqep_ex2_calculation.c contains position/speed calculation function eqep_ex2_calculation.h includes initialization values for position/speed structure The example does the below Maximum speed is configured to 6 0 0 0 rpm baseRPM Minimum speed is assumed at 1 0 rpm for capture pre-scalar selection Pole pair is configured to 2 polePairs Encoder resolution is configured to 4 0 0 0 counts/revolution mechScaler Which means 4 0 0 0 4 1 0 0 0 line/revolution quadrature encoder simulated by MCPWM1 MCPWM1 simulating QEP encoder signals is configured for a 5 kHz frequency or 3 0 0 rpm 4 5 0 0 0 cnts/sec 6 0 sec/min 4 0 0 0 cnts/rev SPEEDRPM_FR High Speed Measurement is obtained by counting the QEP input pulses for 1 0 ms unit timer set to 1 0 0 Hz SPEEDRPM_FR Position Delta 1 0 ms 6 0 rpm SPEEDRPM_PR Low Speed Measurement is obtained by measuring time period of QEP edges Time measurement is averaged over 6 4 edges for better results and the capture unit performs the time measurement using pre-scaled SYSCLK Note that the pre-scaler for capture unit clock is selected such that the capture timer does not overflow at the required minimum frequency This example runs indefinitely until the user stops it For more information about the position/speed calculation see the comments at the beginning of eqep_ex2_calculation.c and the XLS file provided with the project eqep_ex2_calculation.xls Watch Variables posSpeed.speedRPMFR Speed meas in rpm using QEP position counter posSpeed.speedRPMPR Speed meas in rpm using capture unit posSpeed.thetaMech Motor mechanical angle Q15 posSpeed.thetaElec Motor electrical angle Q15 Connect GPIO6/eQEP1A to GPIO0/MCPWM1A simulates eQEP Phase A signal Connect GPIO7/eQEP1B to GPIO1/MCPWM1B simulates eQEP Phase B signal Connect GPIO43/eQEP1I to GPIO2 simulates eQEP Index Signal When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the position and speed calculated for the motor EQEP EQEP Motor Speed and Direction Measurement EQEP Motor Speed and Direction Measurement This example provides position and speed measurement using the capture unit and speed measurement using unit time out of the eQEP module EPWM1A MCPWM1A in case of F28E12x and a GPIO are configured to generate simulated eQEP signals The MCPWM module will interrupt once every period and call the position/speed calculation function This example uses the IQMath library to simplify high-precision calculations In addition to the main example file the following files must be included in this project eqep_ex2_calculation.c contains position/speed calculation function eqep_ex2_calculation.h includes initialization values for position/speed structure The example does the below Maximum speed is configured to 6 0 0 0 rpm baseRPM Minimum speed is assumed at 1 0 rpm for capture pre-scalar selection Pole pair is configured to 2 polePairs Encoder resolution is configured to 4 0 0 0 counts/revolution mechScaler Which means 4 0 0 0 4 1 0 0 0 line/revolution quadrature encoder simulated by MCPWM1 MCPWM1 simulating QEP encoder signals is configured for a 5 kHz frequency or 3 0 0 rpm 4 5 0 0 0 cnts/sec 6 0 sec/min 4 0 0 0 cnts/rev SPEEDRPM_FR High Speed Measurement is obtained by counting the QEP input pulses for 1 0 ms unit timer set to 1 0 0 Hz SPEEDRPM_FR Position Delta 1 0 ms 6 0 rpm SPEEDRPM_PR Low Speed Measurement is obtained by measuring time period of QEP edges Time measurement is averaged over 6 4 edges for better results and the capture unit performs the time measurement using pre-scaled SYSCLK Note that the pre-scaler for capture unit clock is selected such that the capture timer does not overflow at the required minimum frequency This example runs indefinitely until the user stops it For more information about the position/speed calculation see the comments at the beginning of eqep_ex2_calculation.c and the XLS file provided with the project eqep_ex2_calculation.xls Watch Variables posSpeed.speedRPMFR Speed meas in rpm using QEP position counter posSpeed.speedRPMPR Speed meas in rpm using capture unit posSpeed.thetaMech Motor mechanical angle Q15 posSpeed.thetaElec Motor electrical angle Q15 Connect GPIO6/eQEP1A to GPIO0/MCPWM1A simulates eQEP Phase A signal Connect GPIO7/eQEP1B to GPIO1/MCPWM1B simulates eQEP Phase B signal Connect GPIO43/eQEP1I to GPIO2 simulates eQEP Index Signal When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the position and speed calculated for the motor EQEP</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_EQEP_EX4_FREQ_CAL_INTERRUPT</field>
    <field name="url">EXAMPLES_DRIVERS_EQEP_EX4_FREQ_CAL_INTERRUPT.html</field>
    <field name="keywords"></field>
    <field name="text">This example will calculate the frequency of an input signal using the eQEP module EPWM1A MCPWM1A in case of F28E12x is configured to generate this input signal with a frequency of 5 kHz EQEP unit timeout is set which will generate an interrupt every UNIT_PERIOD microseconds and frequency calculation occurs continuously The example does the below PWM frequency is specified as 5 0 0 0 Hz UNIT_PERIOD is specified as 1 0 0 0 0 us Min frequency is 1 2 i.e 5 0 Hz Highest frequency can be 2 2 Resolution of frequency measurement is 5 0 Hz Watch Variables freq Frequency measurement using position counter/unit time out pass If measured frequency matches with PWM frequency then pass 1 else 0 Connect GPIO6/eQEP1A to GPIO0/MCPWM1A When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the frequency calculated for MCPWM and verify it with the original frequency EQEP This example will calculate the frequency of an input signal using the eQEP module EPWM1A MCPWM1A in case of F28E12x is configured to generate this input signal with a frequency of 5 kHz EQEP unit timeout is set which will generate an interrupt every UNIT_PERIOD microseconds and frequency calculation occurs continuously The example does the below PWM frequency is specified as 5 0 0 0 Hz UNIT_PERIOD is specified as 1 0 0 0 0 us Min frequency is 1 2 i.e 5 0 Hz Highest frequency can be 2 2 Resolution of frequency measurement is 5 0 Hz Watch Variables freq Frequency measurement using position counter/unit time out pass If measured frequency matches with PWM frequency then pass 1 else 0 Connect GPIO6/eQEP1A to GPIO0/MCPWM1A When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the frequency calculated for MCPWM and verify it with the original frequency EQEP EQEP Frequency Calculation EQEP Frequency Calculation This example will calculate the frequency of an input signal using the eQEP module EPWM1A MCPWM1A in case of F28E12x is configured to generate this input signal with a frequency of 5 kHz EQEP unit timeout is set which will generate an interrupt every UNIT_PERIOD microseconds and frequency calculation occurs continuously The example does the below PWM frequency is specified as 5 0 0 0 Hz UNIT_PERIOD is specified as 1 0 0 0 0 us Min frequency is 1 2 i.e 5 0 Hz Highest frequency can be 2 2 Resolution of frequency measurement is 5 0 Hz Watch Variables freq Frequency measurement using position counter/unit time out pass If measured frequency matches with PWM frequency then pass 1 else 0 Connect GPIO6/eQEP1A to GPIO0/MCPWM1A When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the frequency calculated for MCPWM and verify it with the original frequency EQEP</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_EQEP_EX5_SPEED_DIR_MOTOR</field>
    <field name="url">EXAMPLES_DRIVERS_EQEP_EX5_SPEED_DIR_MOTOR.html</field>
    <field name="keywords"></field>
    <field name="text">This example can be used to sense the speed and direction of motor using eQEP in quadrature encoder mode ePWM1A MCPWM1A in case of F28E12x is configured to simulate motor encoder signals with frequency of 5 kHz on both A and B pins with 9 0 degree phase shift so as to run this example without motor EQEP unit timeout is set which will generate an interrupt every UNIT_PERIOD microseconds and speed calculation occurs continuously based on the direction of motor The example does the below PWM frequency is specified as 5 0 0 0 Hz UNIT_PERIOD is specified as 1 0 0 0 0 us Simulated quadrature signal frequency is 2 0 0 0 0 Hz 4 5 0 0 0 Encoder holes assumed as 1 0 0 0 Thus Simulated motor speed is 3 0 0 rpm 5 0 0 0 6 0 1 0 0 0 Watch Variables freq Simulated motor frequency measurement is obtained by counting the external input pulses for UNIT_PERIOD unit timer set to 1 0 ms speed Measure motor speed in rpm dir Indicates clockwise 1 or anticlockwise 1 pass If measured qudrature frequency matches with i.e input quadrature frequency 4 PWM frequency then pass 1 else fail 1 only when is commented out if motor encoder signals are simulated by MCPWM Connect GPIO6/eQEP1A to GPIO0/MCPWM1A Connect GPIO7/eQEP1B to GPIO1/MCPWM1B If actual motor is being used Comment in in includes Connect GPIO6/eQEP1A to encoder A output Connect GPIO7/eQEP1B to encoder B output When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the frequency speed and direction calculated for the motor EQEP This example can be used to sense the speed and direction of motor using eQEP in quadrature encoder mode ePWM1A MCPWM1A in case of F28E12x is configured to simulate motor encoder signals with frequency of 5 kHz on both A and B pins with 9 0 degree phase shift so as to run this example without motor EQEP unit timeout is set which will generate an interrupt every UNIT_PERIOD microseconds and speed calculation occurs continuously based on the direction of motor The example does the below PWM frequency is specified as 5 0 0 0 Hz UNIT_PERIOD is specified as 1 0 0 0 0 us Simulated quadrature signal frequency is 2 0 0 0 0 Hz 4 5 0 0 0 Encoder holes assumed as 1 0 0 0 Thus Simulated motor speed is 3 0 0 rpm 5 0 0 0 6 0 1 0 0 0 Watch Variables freq Simulated motor frequency measurement is obtained by counting the external input pulses for UNIT_PERIOD unit timer set to 1 0 ms speed Measure motor speed in rpm dir Indicates clockwise 1 or anticlockwise 1 pass If measured qudrature frequency matches with i.e input quadrature frequency 4 PWM frequency then pass 1 else fail 1 only when is commented out if motor encoder signals are simulated by MCPWM Connect GPIO6/eQEP1A to GPIO0/MCPWM1A Connect GPIO7/eQEP1B to GPIO1/MCPWM1B If actual motor is being used Comment in in includes Connect GPIO6/eQEP1A to encoder A output Connect GPIO7/eQEP1B to encoder B output When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the frequency speed and direction calculated for the motor EQEP EQEP Motor Speed and direction Calculation EQEP Motor Speed and direction Calculation This example can be used to sense the speed and direction of motor using eQEP in quadrature encoder mode ePWM1A MCPWM1A in case of F28E12x is configured to simulate motor encoder signals with frequency of 5 kHz on both A and B pins with 9 0 degree phase shift so as to run this example without motor EQEP unit timeout is set which will generate an interrupt every UNIT_PERIOD microseconds and speed calculation occurs continuously based on the direction of motor The example does the below PWM frequency is specified as 5 0 0 0 Hz UNIT_PERIOD is specified as 1 0 0 0 0 us Simulated quadrature signal frequency is 2 0 0 0 0 Hz 4 5 0 0 0 Encoder holes assumed as 1 0 0 0 Thus Simulated motor speed is 3 0 0 rpm 5 0 0 0 6 0 1 0 0 0 Watch Variables freq Simulated motor frequency measurement is obtained by counting the external input pulses for UNIT_PERIOD unit timer set to 1 0 ms speed Measure motor speed in rpm dir Indicates clockwise 1 or anticlockwise 1 pass If measured qudrature frequency matches with i.e input quadrature frequency 4 PWM frequency then pass 1 else fail 1 only when is commented out if motor encoder signals are simulated by MCPWM Connect GPIO6/eQEP1A to GPIO0/MCPWM1A Connect GPIO7/eQEP1B to GPIO1/MCPWM1B If actual motor is being used Comment in in includes Connect GPIO6/eQEP1A to encoder A output Connect GPIO7/eQEP1B to encoder B output When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the frequency speed and direction calculated for the motor EQEP</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_GPIO_EX1_SETUP</field>
    <field name="url">EXAMPLES_DRIVERS_GPIO_EX1_SETUP.html</field>
    <field name="keywords"></field>
    <field name="text">This example configures the device GPIO into multiple configurations.This code is verbose to illustrate how the GPIO could be setup In a real application lines of code can be combined for improved code size and efficiency This example only sets-up the GPIO Nothing is actually done with the pins after setup None None This example configures the device GPIO into multiple configurations.This code is verbose to illustrate how the GPIO could be setup In a real application lines of code can be combined for improved code size and efficiency This example only sets-up the GPIO Nothing is actually done with the pins after setup None None GPIO Setup GPIO Setup This example configures the device GPIO into multiple configurations.This code is verbose to illustrate how the GPIO could be setup In a real application lines of code can be combined for improved code size and efficiency This example only sets-up the GPIO Nothing is actually done with the pins after setup None None</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_GPIO_EX2_TOGGLE</field>
    <field name="url">EXAMPLES_DRIVERS_GPIO_EX2_TOGGLE.html</field>
    <field name="keywords"></field>
    <field name="text">This example configures the device GPIO through the sysconfig file The GPIO pin is toggled in the infinite loop Monitor the GPIO output pin on an oscilloscope None This example configures the device GPIO through the sysconfig file The GPIO pin is toggled in the infinite loop Monitor the GPIO output pin on an oscilloscope None GPIO Toggle GPIO Toggle This example configures the device GPIO through the sysconfig file The GPIO pin is toggled in the infinite loop Monitor the GPIO output pin on an oscilloscope None</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_GPIO_EX3_INTERRUPT</field>
    <field name="url">EXAMPLES_DRIVERS_GPIO_EX3_INTERRUPT.html</field>
    <field name="keywords"></field>
    <field name="text">This example configures the device GPIOs through the sysconfig file One GPIO output pin and one GPIO input pin is configured The example then configures the GPIO input pin to be the source of an external interrupt which toggles the GPIO output pin Coonect GPIO0 from a high to a low transition Monitor the GPIO output pin on an oscilloscope None This example configures the device GPIOs through the sysconfig file One GPIO output pin and one GPIO input pin is configured The example then configures the GPIO input pin to be the source of an external interrupt which toggles the GPIO output pin Coonect GPIO0 from a high to a low transition Monitor the GPIO output pin on an oscilloscope None GPIO Interrupt GPIO Interrupt This example configures the device GPIOs through the sysconfig file One GPIO output pin and one GPIO input pin is configured The example then configures the GPIO input pin to be the source of an external interrupt which toggles the GPIO output pin Coonect GPIO0 from a high to a low transition Monitor the GPIO output pin on an oscilloscope None</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_GPIO_EX4_AIO_EXTERNAL_INTERRUPT</field>
    <field name="url">EXAMPLES_DRIVERS_GPIO_EX4_AIO_EXTERNAL_INTERRUPT.html</field>
    <field name="keywords"></field>
    <field name="text">In this example AIO pins are configured as digital inputs Two other GPIO signals connected externally to AIO pins are toggled in software to trigger external interrupt through AIO227 and AIO230 AIO227 assigned to XINT1 and AIO230 assigned to XINT2 The user is required to externally connect these signals for the program to work properly Each interrupt is fired in sequence XINT1 first and then XINT2 GPIO5 will go high outside of the interrupts and low within the interrupts This signal can be monitored on a scope Connect GPIO0 to AIO227 AIO227 will be assigned to XINT1 Connect GPIO1 to AIO230 AIO230 will be assigned to XINT2 Monitor the GPIO output pin on an oscilloscope None In this example AIO pins are configured as digital inputs Two other GPIO signals connected externally to AIO pins are toggled in software to trigger external interrupt through AIO227 and AIO230 AIO227 assigned to XINT1 and AIO230 assigned to XINT2 The user is required to externally connect these signals for the program to work properly Each interrupt is fired in sequence XINT1 first and then XINT2 GPIO5 will go high outside of the interrupts and low within the interrupts This signal can be monitored on a scope Connect GPIO0 to AIO227 AIO227 will be assigned to XINT1 Connect GPIO1 to AIO230 AIO230 will be assigned to XINT2 Monitor the GPIO output pin on an oscilloscope None GPIO External Interrupt GPIO External Interrupt In this example AIO pins are configured as digital inputs Two other GPIO signals connected externally to AIO pins are toggled in software to trigger external interrupt through AIO227 and AIO230 AIO227 assigned to XINT1 and AIO230 assigned to XINT2 The user is required to externally connect these signals for the program to work properly Each interrupt is fired in sequence XINT1 first and then XINT2 GPIO5 will go high outside of the interrupts and low within the interrupts This signal can be monitored on a scope Connect GPIO0 to AIO227 AIO227 will be assigned to XINT1 Connect GPIO1 to AIO230 AIO230 will be assigned to XINT2 Monitor the GPIO output pin on an oscilloscope None</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_GPIO_EX5_INTERRUPT_SYSCONFIG</field>
    <field name="url">EXAMPLES_DRIVERS_GPIO_EX5_INTERRUPT_SYSCONFIG.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates the XINT feature in SysConfig by using it in conjunction with the input and output XBARs An input is received through a GPIO and connected to the input XBAR while simultaneously triggering an external interrupt The interrupt increments a counter which can be observed in the watch window In addition to triggering an interrupt the input signal is routed from the input XBAR to the output XBAR so that the output can be observed via oscilloscope or logic analyzer on a separate pin None counter Number of interrupts generated This example demonstrates the XINT feature in SysConfig by using it in conjunction with the input and output XBARs An input is received through a GPIO and connected to the input XBAR while simultaneously triggering an external interrupt The interrupt increments a counter which can be observed in the watch window In addition to triggering an interrupt the input signal is routed from the input XBAR to the output XBAR so that the output can be observed via oscilloscope or logic analyzer on a separate pin None counter Number of interrupts generated XINT/XBAR Example XINT/XBAR Example This example demonstrates the XINT feature in SysConfig by using it in conjunction with the input and output XBARs An input is received through a GPIO and connected to the input XBAR while simultaneously triggering an external interrupt The interrupt increments a counter which can be observed in the watch window In addition to triggering an interrupt the input signal is routed from the input XBAR to the output XBAR so that the output can be observed via oscilloscope or logic analyzer on a separate pin None counter Number of interrupts generated</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_INTERRUPT_EX1_EXTERNAL</field>
    <field name="url">EXAMPLES_DRIVERS_INTERRUPT_EX1_EXTERNAL.html</field>
    <field name="keywords"></field>
    <field name="text">This program sets up GPIO0 as XINT1 and GPIO1 as XINT2 Two other GPIO signals are used to trigger the interrupt GPIO4 triggers XINT1 and GPIO5 triggers XINT2 The user is required to externally connect these signals for the program to work properly XINT1 input is synced to SYSCLKOUT XINT2 has a long qualification 6 samples at 5 1 0 each GPIO16 will go high outside of the interrupts and low within the interrupts This signal can be monitored on a scope Each interrupt is fired in sequence XINT1 first and then XINT2 Connect GPIO4 to GPIO0 GPIO0 will be assigned to XINT1 Connect GPIO5 to GPIO1 GPIO1 will be assigned to XINT2 Monitor GPIO16 with an oscilloscope GPIO16 will be high outside of the ISRs and low within each ISR xint1Count for the number of times through XINT1 interrupt xint2Count for the number of times through XINT2 interrupt loopCount for the number of times through the idle loop This program sets up GPIO0 as XINT1 and GPIO1 as XINT2 Two other GPIO signals are used to trigger the interrupt GPIO4 triggers XINT1 and GPIO5 triggers XINT2 The user is required to externally connect these signals for the program to work properly XINT1 input is synced to SYSCLKOUT XINT2 has a long qualification 6 samples at 5 1 0 each GPIO16 will go high outside of the interrupts and low within the interrupts This signal can be monitored on a scope Each interrupt is fired in sequence XINT1 first and then XINT2 Connect GPIO4 to GPIO0 GPIO0 will be assigned to XINT1 Connect GPIO5 to GPIO1 GPIO1 will be assigned to XINT2 Monitor GPIO16 with an oscilloscope GPIO16 will be high outside of the ISRs and low within each ISR xint1Count for the number of times through XINT1 interrupt xint2Count for the number of times through XINT2 interrupt loopCount for the number of times through the idle loop External Interrupt example External Interrupt example This program sets up GPIO0 as XINT1 and GPIO1 as XINT2 Two other GPIO signals are used to trigger the interrupt GPIO4 triggers XINT1 and GPIO5 triggers XINT2 The user is required to externally connect these signals for the program to work properly XINT1 input is synced to SYSCLKOUT XINT2 has a long qualification 6 samples at 5 1 0 each GPIO16 will go high outside of the interrupts and low within the interrupts This signal can be monitored on a scope Each interrupt is fired in sequence XINT1 first and then XINT2 Connect GPIO4 to GPIO0 GPIO0 will be assigned to XINT1 Connect GPIO5 to GPIO1 GPIO1 will be assigned to XINT2 Monitor GPIO16 with an oscilloscope GPIO16 will be high outside of the ISRs and low within each ISR xint1Count for the number of times through XINT1 interrupt xint2Count for the number of times through XINT2 interrupt loopCount for the number of times through the idle loop</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_INTERRUPT_EX2_WITH_I2C_SCI_SPI_LOOPBACK</field>
    <field name="url">EXAMPLES_DRIVERS_INTERRUPT_EX2_WITH_I2C_SCI_SPI_LOOPBACK.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates multiple interrupt handling of I2C SCI SPI Digital Loopback This program is used to demonstrate how to handle multiple interrupts when using multiple communication peripherals like I2C SCI SPI Digital Loopback all in a single example The data transfers would be done with FIFO Interrupts It uses the internal loopback test mode of these modules Both the TX and RX FIFOs and their interrupts are used Other than boot mode pin configuration no other hardware configuration is required A stream of data is sent and then compared to the received stream The sent data looks like this for I2C and SCI 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 2 0 0 0 2 0 0 0 3 0 0 FE 0 0 FF 0 0 FF 0 0 0 0 etc The sent data looks like this for SPI 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 2 0 0 0 2 0 0 0 3 FFFE FFFF FFFF 0 0 0 0 etc This pattern is repeated forever None sDatai2cA Data to send through I2C rDatai2cA Received I2C data rDataPoint Used to keep track of the last position in the receive I2C stream for error checking sDataspiA Data to send through SPI rDataspiA Received SPI data rDataPointspiA Used to keep track of the last position in the receive SPI stream for error checking sDatasciA SCI Data being sent rDatasciA SCI Data received rDataPointA Keep track of where we are in the SCI data stream This is used to check the incoming data This example demonstrates multiple interrupt handling of I2C SCI SPI Digital Loopback This program is used to demonstrate how to handle multiple interrupts when using multiple communication peripherals like I2C SCI SPI Digital Loopback all in a single example The data transfers would be done with FIFO Interrupts It uses the internal loopback test mode of these modules Both the TX and RX FIFOs and their interrupts are used Other than boot mode pin configuration no other hardware configuration is required A stream of data is sent and then compared to the received stream The sent data looks like this for I2C and SCI 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 2 0 0 0 2 0 0 0 3 0 0 FE 0 0 FF 0 0 FF 0 0 0 0 etc The sent data looks like this for SPI 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 2 0 0 0 2 0 0 0 3 FFFE FFFF FFFF 0 0 0 0 etc This pattern is repeated forever None sDatai2cA Data to send through I2C rDatai2cA Received I2C data rDataPoint Used to keep track of the last position in the receive I2C stream for error checking sDataspiA Data to send through SPI rDataspiA Received SPI data rDataPointspiA Used to keep track of the last position in the receive SPI stream for error checking sDatasciA SCI Data being sent rDatasciA SCI Data received rDataPointA Keep track of where we are in the SCI data stream This is used to check the incoming data Multiple interrupt handling example Multiple interrupt handling example This example demonstrates multiple interrupt handling of I2C SCI SPI Digital Loopback This program is used to demonstrate how to handle multiple interrupts when using multiple communication peripherals like I2C SCI SPI Digital Loopback all in a single example The data transfers would be done with FIFO Interrupts It uses the internal loopback test mode of these modules Both the TX and RX FIFOs and their interrupts are used Other than boot mode pin configuration no other hardware configuration is required A stream of data is sent and then compared to the received stream The sent data looks like this for I2C and SCI 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 2 0 0 0 2 0 0 0 3 0 0 FE 0 0 FF 0 0 FF 0 0 0 0 etc The sent data looks like this for SPI 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 2 0 0 0 2 0 0 0 3 FFFE FFFF FFFF 0 0 0 0 etc This pattern is repeated forever None sDatai2cA Data to send through I2C rDatai2cA Received I2C data rDataPoint Used to keep track of the last position in the receive I2C stream for error checking sDataspiA Data to send through SPI rDataspiA Received SPI data rDataPointspiA Used to keep track of the last position in the receive SPI stream for error checking sDatasciA SCI Data being sent rDatasciA SCI Data received rDataPointA Keep track of where we are in the SCI data stream This is used to check the incoming data</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_INTERRUPT_EX3_SW_PRIORITIZATION</field>
    <field name="url">EXAMPLES_DRIVERS_INTERRUPT_EX3_SW_PRIORITIZATION.html</field>
    <field name="keywords"></field>
    <field name="text">This examples demonstrates the software prioritization of interrupts through CPU Timer Interrupts Software prioritization of interrupts is achieved by enabling interrupt nesting In this device hardware priorities for CPU Timer 0 1 and 2 are set as timer 0 being highest priority and timer 2 being lowest priority This example configures CPU Timer0 1 and 2 priority in software with timer 2 priority being highest and timer 0 being lowest in software and prints a trace for the order of execution For most applications the hardware prioritizing of the interrupts is sufficient For applications that need custom prioritizing this example illustrates how this can be done through software.User specific priorities can be configured in sw_prioritized_isr_level.h header file To enable interrupt nesting following sequence needs to followed in ISRs Step 1 Set the global priority Modify the IER register to allow CPU interrupts with a higher user priority to be serviced Note at this time IER has already been saved on the stack Step 2 Set the group priority optional Modify the appropriate PIEIERx register to allow group interrupts with a higher user set priority to be serviced Do NOT clear PIEIER register bits from another group other than that being serviced by this ISR Doing so can cause erroneous interrupts to occur Step 3 Enable interrupts There are three steps to do this a Clear the PIEACK bits b Wait at least one cycle c Clear the INTM bit Step 4 Run the main part of the ISR Step 5 Set INTM to disable interrupts Step 6 Restore PIEIERx optional depending on step 2 Step 7 Return from ISR Refer to below link on more details on Interrupt nesting in C28x devices c28x_interrupt_nesting None traceISR shows the order in which ISRs are executed This examples demonstrates the software prioritization of interrupts through CPU Timer Interrupts Software prioritization of interrupts is achieved by enabling interrupt nesting In this device hardware priorities for CPU Timer 0 1 and 2 are set as timer 0 being highest priority and timer 2 being lowest priority This example configures CPU Timer0 1 and 2 priority in software with timer 2 priority being highest and timer 0 being lowest in software and prints a trace for the order of execution For most applications the hardware prioritizing of the interrupts is sufficient For applications that need custom prioritizing this example illustrates how this can be done through software.User specific priorities can be configured in sw_prioritized_isr_level.h header file To enable interrupt nesting following sequence needs to followed in ISRs Step 1 Set the global priority Modify the IER register to allow CPU interrupts with a higher user priority to be serviced Note at this time IER has already been saved on the stack Step 2 Set the group priority optional Modify the appropriate PIEIERx register to allow group interrupts with a higher user set priority to be serviced Do NOT clear PIEIER register bits from another group other than that being serviced by this ISR Doing so can cause erroneous interrupts to occur Step 3 Enable interrupts There are three steps to do this a Clear the PIEACK bits b Wait at least one cycle c Clear the INTM bit Step 4 Run the main part of the ISR Step 5 Set INTM to disable interrupts Step 6 Restore PIEIERx optional depending on step 2 Step 7 Return from ISR Refer to below link on more details on Interrupt nesting in C28x devices c28x_interrupt_nesting None traceISR shows the order in which ISRs are executed CPU Timer Interrupt Software Prioritization example CPU Timer Interrupt Software Prioritization example This examples demonstrates the software prioritization of interrupts through CPU Timer Interrupts Software prioritization of interrupts is achieved by enabling interrupt nesting In this device hardware priorities for CPU Timer 0 1 and 2 are set as timer 0 being highest priority and timer 2 being lowest priority This example configures CPU Timer0 1 and 2 priority in software with timer 2 priority being highest and timer 0 being lowest in software and prints a trace for the order of execution For most applications the hardware prioritizing of the interrupts is sufficient For applications that need custom prioritizing this example illustrates how this can be done through software.User specific priorities can be configured in sw_prioritized_isr_level.h header file To enable interrupt nesting following sequence needs to followed in ISRs Step 1 Set the global priority Modify the IER register to allow CPU interrupts with a higher user priority to be serviced Note at this time IER has already been saved on the stack Step 2 Set the group priority optional Modify the appropriate PIEIERx register to allow group interrupts with a higher user set priority to be serviced Do NOT clear PIEIER register bits from another group other than that being serviced by this ISR Doing so can cause erroneous interrupts to occur Step 3 Enable interrupts There are three steps to do this a Clear the PIEACK bits b Wait at least one cycle c Clear the INTM bit Step 4 Run the main part of the ISR Step 5 Set INTM to disable interrupts Step 6 Restore PIEIERx optional depending on step 2 Step 7 Return from ISR Refer to below link on more details on Interrupt nesting in C28x devices c28x_interrupt_nesting None traceISR shows the order in which ISRs are executed</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_INTERRUPT_EX4_MCPWM_REALTIME_INTERRUPT</field>
    <field name="url">EXAMPLES_DRIVERS_INTERRUPT_EX4_MCPWM_REALTIME_INTERRUPT.html</field>
    <field name="keywords"></field>
    <field name="text">This example configures the mcPWM1 Timer and increments a counter each time the ISR is executed mcPWM interrupt can be configured as time critical to demonstrate real-time mode functionality and real-time interrupt capability The example uses 2 LEDs LED1 is toggled in the main loop and LED2 is toggled in the MCPWM Timer Interrupt FREE_SOFT bits and DBGIER.INT3 bit must be set to enable mcPWM1 interrupt to be time critical and operational in real time mode after halt command How to run the example Add the watch variables as mentioned below and enable Continuous Refresh Enable real-time mode Run- Advanced- Enable Silicon Real-time Mode Initially the DBGIER register is set to 0 and the MCPWM emulation mode is set to MCPWM_EMULATION_STOP_AFTER_NEXT_TB FREE_SOFT 0 When the application is running you will find both LEDs toggling and the watch variables MCPwm1TimerIntCount MCPwm1Regs.TBCTR getting updated When the application is halted both LEDs stop toggling and the watch variables remain constant MCPWM counter is stopped on debugger halt To enable MCPWM counter run during debugger halt set emulation mode as MCPWM_EMULATION_FREE_RUN FREE_SOFT 2 You will find MCPwm1Regs.TBCTR is running but MCPwm1TimerIntCount remains constant This means the MCPWM counter is running but the ISRs are not getting serviced To enable real-time interrupts set DBGIER.INT3 1 MCPWM1 interrupt is part of PIE Group 3 You will find that the MCPwm1TimerIntCount is incrementing and the LED starts toggling The MCPWM ISR is getting serviced even during a debugger halt None MCPwm1TimerIntCount MCPWM1 ISR counter MCPwm1Regs.TBCTR.TBCTR MCPWM1 Time Base counter MCPwm1Regs.TBCTL.FREE_SOFT Set this to 2 to enable free run DBGIER.INT3 Set to 1 to enable real time interrupt This example configures the mcPWM1 Timer and increments a counter each time the ISR is executed mcPWM interrupt can be configured as time critical to demonstrate real-time mode functionality and real-time interrupt capability The example uses 2 LEDs LED1 is toggled in the main loop and LED2 is toggled in the MCPWM Timer Interrupt FREE_SOFT bits and DBGIER.INT3 bit must be set to enable mcPWM1 interrupt to be time critical and operational in real time mode after halt command How to run the example Add the watch variables as mentioned below and enable Continuous Refresh Enable real-time mode Run- Advanced- Enable Silicon Real-time Mode Initially the DBGIER register is set to 0 and the MCPWM emulation mode is set to MCPWM_EMULATION_STOP_AFTER_NEXT_TB FREE_SOFT 0 When the application is running you will find both LEDs toggling and the watch variables MCPwm1TimerIntCount MCPwm1Regs.TBCTR getting updated When the application is halted both LEDs stop toggling and the watch variables remain constant MCPWM counter is stopped on debugger halt To enable MCPWM counter run during debugger halt set emulation mode as MCPWM_EMULATION_FREE_RUN FREE_SOFT 2 You will find MCPwm1Regs.TBCTR is running but MCPwm1TimerIntCount remains constant This means the MCPWM counter is running but the ISRs are not getting serviced To enable real-time interrupts set DBGIER.INT3 1 MCPWM1 interrupt is part of PIE Group 3 You will find that the MCPwm1TimerIntCount is incrementing and the LED starts toggling The MCPWM ISR is getting serviced even during a debugger halt None MCPwm1TimerIntCount MCPWM1 ISR counter MCPwm1Regs.TBCTR.TBCTR MCPWM1 Time Base counter MCPwm1Regs.TBCTL.FREE_SOFT Set this to 2 to enable free run DBGIER.INT3 Set to 1 to enable real time interrupt MCPWM Real-Time Interrupt example MCPWM Real-Time Interrupt example This example configures the mcPWM1 Timer and increments a counter each time the ISR is executed mcPWM interrupt can be configured as time critical to demonstrate real-time mode functionality and real-time interrupt capability The example uses 2 LEDs LED1 is toggled in the main loop and LED2 is toggled in the MCPWM Timer Interrupt FREE_SOFT bits and DBGIER.INT3 bit must be set to enable mcPWM1 interrupt to be time critical and operational in real time mode after halt command How to run the example Add the watch variables as mentioned below and enable Continuous Refresh Enable real-time mode Run- Advanced- Enable Silicon Real-time Mode Initially the DBGIER register is set to 0 and the MCPWM emulation mode is set to MCPWM_EMULATION_STOP_AFTER_NEXT_TB FREE_SOFT 0 When the application is running you will find both LEDs toggling and the watch variables MCPwm1TimerIntCount MCPwm1Regs.TBCTR getting updated When the application is halted both LEDs stop toggling and the watch variables remain constant MCPWM counter is stopped on debugger halt To enable MCPWM counter run during debugger halt set emulation mode as MCPWM_EMULATION_FREE_RUN FREE_SOFT 2 You will find MCPwm1Regs.TBCTR is running but MCPwm1TimerIntCount remains constant This means the MCPWM counter is running but the ISRs are not getting serviced To enable real-time interrupts set DBGIER.INT3 1 MCPWM1 interrupt is part of PIE Group 3 You will find that the MCPwm1TimerIntCount is incrementing and the LED starts toggling The MCPWM ISR is getting serviced even during a debugger halt None MCPwm1TimerIntCount MCPWM1 ISR counter MCPwm1Regs.TBCTR.TBCTR MCPWM1 Time Base counter MCPwm1Regs.TBCTL.FREE_SOFT Set this to 2 to enable free run DBGIER.INT3 Set to 1 to enable real time interrupt</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_LED_EX1_BLINKY</field>
    <field name="url">EXAMPLES_DRIVERS_LED_EX1_BLINKY.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates how to blink an LED The example does the below Configures the device LED through SysConfig The GPIO pin connected to the LED is toggled in an infinite loop Watch Variables None None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run View the device LED blinking The output of the corresponding GPIO connected to the LED can be seen toggling This example demonstrates how to blink an LED The example does the below Configures the device LED through SysConfig The GPIO pin connected to the LED is toggled in an infinite loop Watch Variables None None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run View the device LED blinking The output of the corresponding GPIO connected to the LED can be seen toggling LED Blinky LED Blinky This example demonstrates how to blink an LED The example does the below Configures the device LED through SysConfig The GPIO pin connected to the LED is toggled in an infinite loop Watch Variables None None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run View the device LED blinking The output of the corresponding GPIO connected to the LED can be seen toggling</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_LPM_EX1</field>
    <field name="url">EXAMPLES_DRIVERS_LPM_EX1.html</field>
    <field name="keywords"></field>
    <field name="text">This example puts the device into IDLE mode and then wakes up the device from IDLE using XINT1 which triggers on a falling edge of GPIO0 The GPIO0 pin must be pulled from high to low by an external agent for wakeup GPIO0 is configured as an XINT1 pin to trigger an XINT1 interrupt upon detection of a falling edge Initially pull GPIO0 high externally To wake device from IDLE mode by triggering an XINT1 interrupt pull GPIO0 low falling edge The wakeup process begins as soon as GPIO0 is held low for the time indicated in the device datasheet GPIO1 is pulled high before entering the IDLE mode and is pulled low when in the external interrupt ISR GPIO0 needs to be pulled low to wake up the device On device wakeup the GPIO1 will be low and LED1 will start blinking This example puts the device into IDLE mode and then wakes up the device from IDLE using XINT1 which triggers on a falling edge of GPIO0 The GPIO0 pin must be pulled from high to low by an external agent for wakeup GPIO0 is configured as an XINT1 pin to trigger an XINT1 interrupt upon detection of a falling edge Initially pull GPIO0 high externally To wake device from IDLE mode by triggering an XINT1 interrupt pull GPIO0 low falling edge The wakeup process begins as soon as GPIO0 is held low for the time indicated in the device datasheet GPIO1 is pulled high before entering the IDLE mode and is pulled low when in the external interrupt ISR GPIO0 needs to be pulled low to wake up the device On device wakeup the GPIO1 will be low and LED1 will start blinking Device Idle Mode and Wakeup using GPIO Device Idle Mode and Wakeup using GPIO This example puts the device into IDLE mode and then wakes up the device from IDLE using XINT1 which triggers on a falling edge of GPIO0 The GPIO0 pin must be pulled from high to low by an external agent for wakeup GPIO0 is configured as an XINT1 pin to trigger an XINT1 interrupt upon detection of a falling edge Initially pull GPIO0 high externally To wake device from IDLE mode by triggering an XINT1 interrupt pull GPIO0 low falling edge The wakeup process begins as soon as GPIO0 is held low for the time indicated in the device datasheet GPIO1 is pulled high before entering the IDLE mode and is pulled low when in the external interrupt ISR GPIO0 needs to be pulled low to wake up the device On device wakeup the GPIO1 will be low and LED1 will start blinking</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_LPM_EX2</field>
    <field name="url">EXAMPLES_DRIVERS_LPM_EX2.html</field>
    <field name="keywords"></field>
    <field name="text">This example puts the device into IDLE mode and then wakes up the device from IDLE using watchdog timer The device wakes up from the IDLE mode when the watchdog timer overflows triggering an interrupt A pre scalar is set for the watchdog timer to change the counter overflow time GPIO1 is pulled high before entering the IDLE mode and is pulled low when in the wakeup ISR On device wakeup the GPIO1 will be low and LED1 will start blinking This example puts the device into IDLE mode and then wakes up the device from IDLE using watchdog timer The device wakes up from the IDLE mode when the watchdog timer overflows triggering an interrupt A pre scalar is set for the watchdog timer to change the counter overflow time GPIO1 is pulled high before entering the IDLE mode and is pulled low when in the wakeup ISR On device wakeup the GPIO1 will be low and LED1 will start blinking Device Idle Mode and Wakeup using Watchdog Device Idle Mode and Wakeup using Watchdog This example puts the device into IDLE mode and then wakes up the device from IDLE using watchdog timer The device wakes up from the IDLE mode when the watchdog timer overflows triggering an interrupt A pre scalar is set for the watchdog timer to change the counter overflow time GPIO1 is pulled high before entering the IDLE mode and is pulled low when in the wakeup ISR On device wakeup the GPIO1 will be low and LED1 will start blinking</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_LPM_EX3</field>
    <field name="url">EXAMPLES_DRIVERS_LPM_EX3.html</field>
    <field name="keywords"></field>
    <field name="text">This example puts the device into STANDBY mode If the lowest possible current consumption in STANDBY mode is desired the JTAG connector must be removed from the device board while the device is in STANDBY mode This example puts the device into STANDBY mode and then wakes up the device from STANDBY using an LPM wakeup pin The pin GPIO0 is configured as the LPM wakeup pin to trigger a WAKEINT interrupt upon detection of a low pulse Initially pull GPIO0 high externally To wake device from STANDBY mode pull GPIO0 low for at least 2 QUALSTDBY OSCLKS then pull it high again The example then wakes up the device from STANDBY using GPIO0 GPIO0 wakes the device from STANDBY mode when a low pulse signal goes high- low- high is detected on the pin This pin must be pulsed by an external agent for wakeup GPIO1 is pulled high before entering the STANDBY mode and is pulled low when in the wakeup ISR External Connections GPIO0 needs to be pulled low to wake up the device On device wakeup the GPIO1 will be low and LED1 will start blinking This example puts the device into STANDBY mode If the lowest possible current consumption in STANDBY mode is desired the JTAG connector must be removed from the device board while the device is in STANDBY mode This example puts the device into STANDBY mode and then wakes up the device from STANDBY using an LPM wakeup pin The pin GPIO0 is configured as the LPM wakeup pin to trigger a WAKEINT interrupt upon detection of a low pulse Initially pull GPIO0 high externally To wake device from STANDBY mode pull GPIO0 low for at least 2 QUALSTDBY OSCLKS then pull it high again The example then wakes up the device from STANDBY using GPIO0 GPIO0 wakes the device from STANDBY mode when a low pulse signal goes high- low- high is detected on the pin This pin must be pulsed by an external agent for wakeup GPIO1 is pulled high before entering the STANDBY mode and is pulled low when in the wakeup ISR External Connections GPIO0 needs to be pulled low to wake up the device On device wakeup the GPIO1 will be low and LED1 will start blinking Device Standby Mode and Wakeup using GPIO Device Standby Mode and Wakeup using GPIO This example puts the device into STANDBY mode If the lowest possible current consumption in STANDBY mode is desired the JTAG connector must be removed from the device board while the device is in STANDBY mode This example puts the device into STANDBY mode and then wakes up the device from STANDBY using an LPM wakeup pin The pin GPIO0 is configured as the LPM wakeup pin to trigger a WAKEINT interrupt upon detection of a low pulse Initially pull GPIO0 high externally To wake device from STANDBY mode pull GPIO0 low for at least 2 QUALSTDBY OSCLKS then pull it high again The example then wakes up the device from STANDBY using GPIO0 GPIO0 wakes the device from STANDBY mode when a low pulse signal goes high- low- high is detected on the pin This pin must be pulsed by an external agent for wakeup GPIO1 is pulled high before entering the STANDBY mode and is pulled low when in the wakeup ISR External Connections GPIO0 needs to be pulled low to wake up the device On device wakeup the GPIO1 will be low and LED1 will start blinking</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_LPM_EX4</field>
    <field name="url">EXAMPLES_DRIVERS_LPM_EX4.html</field>
    <field name="keywords"></field>
    <field name="text">This example puts the device into STANDBY mode If the lowest possible current consumption in STANDBY mode is desired the JTAG connector must be removed from the device board while the device is in STANDBY mode This example puts the device into STANDBY mode then wakes up the device from STANDBY using watchdog timer The device wakes up from the STANDBY mode when the watchdog timer flows triggering an interrupt In the ISR the GPIO1 is pulled low the GPIO1 is toggled to indicate the device is out of STANDBY mode A pre scalar is set for the watchdog timer to change the counter flow time GPIO1 is pulled high before entering the STANDBY mode and is pulled low when in the wakeup ISR On device wakeup the GPIO1 will be low and LED1 will start blinking This example puts the device into STANDBY mode If the lowest possible current consumption in STANDBY mode is desired the JTAG connector must be removed from the device board while the device is in STANDBY mode This example puts the device into STANDBY mode then wakes up the device from STANDBY using watchdog timer The device wakes up from the STANDBY mode when the watchdog timer flows triggering an interrupt In the ISR the GPIO1 is pulled low the GPIO1 is toggled to indicate the device is out of STANDBY mode A pre scalar is set for the watchdog timer to change the counter flow time GPIO1 is pulled high before entering the STANDBY mode and is pulled low when in the wakeup ISR On device wakeup the GPIO1 will be low and LED1 will start blinking Device Standby Mode and Wakeup using Watchdog Device Standby Mode and Wakeup using Watchdog This example puts the device into STANDBY mode If the lowest possible current consumption in STANDBY mode is desired the JTAG connector must be removed from the device board while the device is in STANDBY mode This example puts the device into STANDBY mode then wakes up the device from STANDBY using watchdog timer The device wakes up from the STANDBY mode when the watchdog timer flows triggering an interrupt In the ISR the GPIO1 is pulled low the GPIO1 is toggled to indicate the device is out of STANDBY mode A pre scalar is set for the watchdog timer to change the counter flow time GPIO1 is pulled high before entering the STANDBY mode and is pulled low when in the wakeup ISR On device wakeup the GPIO1 will be low and LED1 will start blinking</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_LPM_EX5</field>
    <field name="url">EXAMPLES_DRIVERS_LPM_EX5.html</field>
    <field name="keywords"></field>
    <field name="text">This example puts the device into HALT mode If the lowest possible current consumption in HALT mode is desired the JTAG connector must be removed from the device board while the device is in HALT mode For applications that require minimal power consumption during HALT mode application software should power off the XTAL prior to entering HALT by setting the XTALCR.OSCOFF bit or by using the driverlib function SysCtl_turnOffOsc(SYSCTL_OSCSRC_XTAL) If the OSCCLK source is configured to be XTAL the application should first switch the OSSCLK source to WROSCDIV8 or SYSOSCDIV4 prior to setting XTALCR.OSCOFF This example puts the device into HALT mode and then wakes up the device from HALT using an LPM wakeup pin The pin GPIO0 is configured as the LPM wakeup pin to trigger a WAKEINT interrupt upon detection of a low pulse.The GPIO0 pin must be pulled from high to low by an external agent for wakeup GPIO1 is pulled high before entering the STANDBY mode and is pulled low when in the wakeup ISR External Connections GPIO0 needs to be pulled low to wake up the device On device wakeup the GPIO1 will be low and LED1 will start blinking This example puts the device into HALT mode If the lowest possible current consumption in HALT mode is desired the JTAG connector must be removed from the device board while the device is in HALT mode For applications that require minimal power consumption during HALT mode application software should power off the XTAL prior to entering HALT by setting the XTALCR.OSCOFF bit or by using the driverlib function SysCtl_turnOffOsc(SYSCTL_OSCSRC_XTAL) If the OSCCLK source is configured to be XTAL the application should first switch the OSSCLK source to WROSCDIV8 or SYSOSCDIV4 prior to setting XTALCR.OSCOFF This example puts the device into HALT mode and then wakes up the device from HALT using an LPM wakeup pin The pin GPIO0 is configured as the LPM wakeup pin to trigger a WAKEINT interrupt upon detection of a low pulse.The GPIO0 pin must be pulled from high to low by an external agent for wakeup GPIO1 is pulled high before entering the STANDBY mode and is pulled low when in the wakeup ISR External Connections GPIO0 needs to be pulled low to wake up the device On device wakeup the GPIO1 will be low and LED1 will start blinking Device HALT Mode and Wakeup using GPIO Device HALT Mode and Wakeup using GPIO This example puts the device into HALT mode If the lowest possible current consumption in HALT mode is desired the JTAG connector must be removed from the device board while the device is in HALT mode For applications that require minimal power consumption during HALT mode application software should power off the XTAL prior to entering HALT by setting the XTALCR.OSCOFF bit or by using the driverlib function SysCtl_turnOffOsc(SYSCTL_OSCSRC_XTAL) If the OSCCLK source is configured to be XTAL the application should first switch the OSSCLK source to WROSCDIV8 or SYSOSCDIV4 prior to setting XTALCR.OSCOFF This example puts the device into HALT mode and then wakes up the device from HALT using an LPM wakeup pin The pin GPIO0 is configured as the LPM wakeup pin to trigger a WAKEINT interrupt upon detection of a low pulse.The GPIO0 pin must be pulled from high to low by an external agent for wakeup GPIO1 is pulled high before entering the STANDBY mode and is pulled low when in the wakeup ISR External Connections GPIO0 needs to be pulled low to wake up the device On device wakeup the GPIO1 will be low and LED1 will start blinking</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_LPM_EX6</field>
    <field name="url">EXAMPLES_DRIVERS_LPM_EX6.html</field>
    <field name="keywords"></field>
    <field name="text">This example puts the device into HALT mode If the lowest possible current consumption in HALT mode is desired the JTAG connector must be removed from the device board while the device is in HALT mode For applications that require minimal power consumption during HALT mode application software should power off the XTAL prior to entering HALT by setting the XTALCR.OSCOFF bit or by using the driverlib function SysCtl_turnOffOsc(SYSCTL_OSCSRC_XTAL) If the OSCCLK source is configured to be XTAL the application should first switch the OSSCLK source to WROSCDIV8 or SYSOSCDIV4 prior to setting XTALCR.OSCOFF This example puts the device into HALT mode and then wakes up the device from HALT using an LPM wakeup pin The pin GPIO0 is configured as the LPM wakeup pin to trigger a WAKEINT interrupt upon detection of a low pulse.The GPIO0 pin must be pulled from high to low by an external agent for wakeup In this example the watchdog timer is clocked and is configured to produce watchdog reset as a timeout mechanism GPIO1 is pulled high before entering the STANDBY mode and is pulled low when in the wakeup ISR On device wakeup the GPIO1 will be low and LED1 will start blinking This example puts the device into HALT mode If the lowest possible current consumption in HALT mode is desired the JTAG connector must be removed from the device board while the device is in HALT mode For applications that require minimal power consumption during HALT mode application software should power off the XTAL prior to entering HALT by setting the XTALCR.OSCOFF bit or by using the driverlib function SysCtl_turnOffOsc(SYSCTL_OSCSRC_XTAL) If the OSCCLK source is configured to be XTAL the application should first switch the OSSCLK source to WROSCDIV8 or SYSOSCDIV4 prior to setting XTALCR.OSCOFF This example puts the device into HALT mode and then wakes up the device from HALT using an LPM wakeup pin The pin GPIO0 is configured as the LPM wakeup pin to trigger a WAKEINT interrupt upon detection of a low pulse.The GPIO0 pin must be pulled from high to low by an external agent for wakeup In this example the watchdog timer is clocked and is configured to produce watchdog reset as a timeout mechanism GPIO1 is pulled high before entering the STANDBY mode and is pulled low when in the wakeup ISR On device wakeup the GPIO1 will be low and LED1 will start blinking Device Halt Mode and Wakeup using Watchdog Device Halt Mode and Wakeup using Watchdog This example puts the device into HALT mode If the lowest possible current consumption in HALT mode is desired the JTAG connector must be removed from the device board while the device is in HALT mode For applications that require minimal power consumption during HALT mode application software should power off the XTAL prior to entering HALT by setting the XTALCR.OSCOFF bit or by using the driverlib function SysCtl_turnOffOsc(SYSCTL_OSCSRC_XTAL) If the OSCCLK source is configured to be XTAL the application should first switch the OSSCLK source to WROSCDIV8 or SYSOSCDIV4 prior to setting XTALCR.OSCOFF This example puts the device into HALT mode and then wakes up the device from HALT using an LPM wakeup pin The pin GPIO0 is configured as the LPM wakeup pin to trigger a WAKEINT interrupt upon detection of a low pulse.The GPIO0 pin must be pulled from high to low by an external agent for wakeup In this example the watchdog timer is clocked and is configured to produce watchdog reset as a timeout mechanism GPIO1 is pulled high before entering the STANDBY mode and is pulled low when in the wakeup ISR On device wakeup the GPIO1 will be low and LED1 will start blinking</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_MCPWM_EX1_BASIC_PWM</field>
    <field name="url">EXAMPLES_DRIVERS_MCPWM_EX1_BASIC_PWM.html</field>
    <field name="keywords"></field>
    <field name="text">These examples demonstrate three different approaches to implement MCPWM functionality SysConfig-based mcpwm_ex1_basic_pwm.c in driverlib Manual Driverlib mcpwm_ex4_basic_pwm_no_syscfg.c Direct Register/Bitfield mcpwm_ex1_basic_pwm.c in examples_bitfield All implementations configure myMCPWM0(MCPWM1) and myMCPWM1(MCPWM3) as follows Common Features Across All Implementations PWM Generation 1 0 KHz frequency generation Configurable duty cycle updates Multiple output patterns Interrupt Handling Event-triggered updates Synchronized compare value modifications Flexible Output Configurations Up counting and Up-Down counting modes Multiple compare value triggers Complementary output options Time Base Settings Up Count Mode 1 0 KHz Frequency PWM Action Qualifier Outputs Output A1 Set High at zero Low at CMPA Output B1 Set High at zero Low at CMPB Output A2 Set High at CMPA Low at Period Output B2 Set High at CMPB Low at Period Output A3 Set High at CMPA Low at CMPB Output B3 Set Low at CMPA High at CMPB Interrupt Configuration ET1 triggers every 5 events and is selected as source of Interrupt Updates CMPx values at runtime Time Base Settings Up-Down Count Mode 1 0 KHz Frequency PWM Action Qualifier Outputs Output A1 High at CMPA up Low at CMPA down Output B1 High at CMPB up Low at CMPB down Interrupt Configuration ET1 triggers every 5 events and is selected as source of Interrupt Updates CMPx values at runtime Monitor these PWM outputs on Launchpad J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 3 8 GPIO2 myMCPWM0 Output A2 J4 3 7 GPIO3 myMCPWM0 Output B2 J4 3 6 GPIO4 myMCPWM0 Output A3 J4 3 5 GPIO5 myMCPWM0 Output B3 J4 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 Aspect SysConfig Implementation Manual Driverlib Implementation Bitfield Implementation Source File mcpwm_ex1_basic_pwm.c driverlib mcpwm_ex4_basic_pwm_no_syscfg.c mcpwm_ex1_basic_pwm.c examples_bitfield Configuration Method GUI-based SysConfig Direct driverlib API calls Direct register access Hardware Abstraction High driverlib SysConfig Medium driverlib None direct hardware Key Features • Generated initialization code • GUI configuration • Hardware abstraction • Explicit API configuration • Direct control • API abstraction • Register-level access • Maximum control • No abstraction layer Characteristic SysConfig Manual Driverlib Bitfield Learning Curve Low Medium High Code Control Limited Moderate Complete Maintainability High Medium Lower Debug Effort Lower Medium Higher Code Portability High High Limited When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables observe the waveforms MCPWM MCPWM Synchronization Example MCPWM Deadband Example These examples demonstrate three different approaches to implement MCPWM functionality SysConfig-based mcpwm_ex1_basic_pwm.c in driverlib Manual Driverlib mcpwm_ex4_basic_pwm_no_syscfg.c Direct Register/Bitfield mcpwm_ex1_basic_pwm.c in examples_bitfield All implementations configure myMCPWM0(MCPWM1) and myMCPWM1(MCPWM3) as follows Common Features Across All Implementations PWM Generation 1 0 KHz frequency generation Configurable duty cycle updates Multiple output patterns Interrupt Handling Event-triggered updates Synchronized compare value modifications Flexible Output Configurations Up counting and Up-Down counting modes Multiple compare value triggers Complementary output options Time Base Settings Up Count Mode 1 0 KHz Frequency PWM Action Qualifier Outputs Output A1 Set High at zero Low at CMPA Output B1 Set High at zero Low at CMPB Output A2 Set High at CMPA Low at Period Output B2 Set High at CMPB Low at Period Output A3 Set High at CMPA Low at CMPB Output B3 Set Low at CMPA High at CMPB Interrupt Configuration ET1 triggers every 5 events and is selected as source of Interrupt Updates CMPx values at runtime Time Base Settings Up-Down Count Mode 1 0 KHz Frequency PWM Action Qualifier Outputs Output A1 High at CMPA up Low at CMPA down Output B1 High at CMPB up Low at CMPB down Interrupt Configuration ET1 triggers every 5 events and is selected as source of Interrupt Updates CMPx values at runtime Monitor these PWM outputs on Launchpad J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 3 8 GPIO2 myMCPWM0 Output A2 J4 3 7 GPIO3 myMCPWM0 Output B2 J4 3 6 GPIO4 myMCPWM0 Output A3 J4 3 5 GPIO5 myMCPWM0 Output B3 J4 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 Aspect SysConfig Implementation Manual Driverlib Implementation Bitfield Implementation Source File mcpwm_ex1_basic_pwm.c driverlib mcpwm_ex4_basic_pwm_no_syscfg.c mcpwm_ex1_basic_pwm.c examples_bitfield Configuration Method GUI-based SysConfig Direct driverlib API calls Direct register access Hardware Abstraction High driverlib SysConfig Medium driverlib None direct hardware Key Features • Generated initialization code • GUI configuration • Hardware abstraction • Explicit API configuration • Direct control • API abstraction • Register-level access • Maximum control • No abstraction layer Characteristic SysConfig Manual Driverlib Bitfield Learning Curve Low Medium High Code Control Limited Moderate Complete Maintainability High Medium Lower Debug Effort Lower Medium Higher Code Portability High High Limited When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables observe the waveforms MCPWM MCPWM Synchronization Example MCPWM Deadband Example MCPWM Basic PWM Generation Examples MCPWM Basic PWM Generation Examples These examples demonstrate three different approaches to implement MCPWM functionality SysConfig-based mcpwm_ex1_basic_pwm.c in driverlib Manual Driverlib mcpwm_ex4_basic_pwm_no_syscfg.c Direct Register/Bitfield mcpwm_ex1_basic_pwm.c in examples_bitfield All implementations configure myMCPWM0(MCPWM1) and myMCPWM1(MCPWM3) as follows Common Features Across All Implementations PWM Generation 1 0 KHz frequency generation Configurable duty cycle updates Multiple output patterns Interrupt Handling Event-triggered updates Synchronized compare value modifications Flexible Output Configurations Up counting and Up-Down counting modes Multiple compare value triggers Complementary output options Time Base Settings Up Count Mode 1 0 KHz Frequency PWM Action Qualifier Outputs Output A1 Set High at zero Low at CMPA Output B1 Set High at zero Low at CMPB Output A2 Set High at CMPA Low at Period Output B2 Set High at CMPB Low at Period Output A3 Set High at CMPA Low at CMPB Output B3 Set Low at CMPA High at CMPB Interrupt Configuration ET1 triggers every 5 events and is selected as source of Interrupt Updates CMPx values at runtime Time Base Settings Up-Down Count Mode 1 0 KHz Frequency PWM Action Qualifier Outputs Output A1 High at CMPA up Low at CMPA down Output B1 High at CMPB up Low at CMPB down Interrupt Configuration ET1 triggers every 5 events and is selected as source of Interrupt Updates CMPx values at runtime Monitor these PWM outputs on Launchpad J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 3 8 GPIO2 myMCPWM0 Output A2 J4 3 7 GPIO3 myMCPWM0 Output B2 J4 3 6 GPIO4 myMCPWM0 Output A3 J4 3 5 GPIO5 myMCPWM0 Output B3 J4 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 Aspect SysConfig Implementation Manual Driverlib Implementation Bitfield Implementation Source File mcpwm_ex1_basic_pwm.c driverlib mcpwm_ex4_basic_pwm_no_syscfg.c mcpwm_ex1_basic_pwm.c examples_bitfield Configuration Method GUI-based SysConfig Direct driverlib API calls Direct register access Hardware Abstraction High driverlib SysConfig Medium driverlib None direct hardware Key Features • Generated initialization code • GUI configuration • Hardware abstraction • Explicit API configuration • Direct control • API abstraction • Register-level access • Maximum control • No abstraction layer Characteristic SysConfig Manual Driverlib Bitfield Learning Curve Low Medium High Code Control Limited Moderate Complete Maintainability High Medium Lower Debug Effort Lower Medium Higher Code Portability High High Limited When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables observe the waveforms MCPWM MCPWM Synchronization Example MCPWM Deadband Example</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_MCPWM_EX2_SYNCHRONIZATION</field>
    <field name="url">EXAMPLES_DRIVERS_MCPWM_EX2_SYNCHRONIZATION.html</field>
    <field name="keywords"></field>
    <field name="text">MCPWM synchronization is a crucial feature that allows multiple PWM modules to operate in a coordinated manner External Sync Input XBAR routing for external sync signals Configurable sync input selection SYNCISEL Edge-triggered synchronization events Internal Sync Module-to-module synchronization Counter synchronization between PWM modules Cascaded synchronization chains possible TBCTL Register Controls PHSEN Phase Load Enable MCPWM_enablePhaseShiftLoad() MCPWM_disablePhaseShiftLoad() SYNCOSEL Sync Output Select MCPWM_setSyncOutPulseMode() SYNCISEL Sync Input Select MCPWM_setSyncInPulseSource() PHSDIR Phase Direction MCPWM_setCountModeAfterSync() Sync Out Events see enum MCPWM_SyncOutPulseMode Sync In Sources see enum MCPWM_SyncInPulseSource TBPHS Register 1 6 bit phase offset value Loaded on sync event when PHSEN enabled Post-Sync Options Software configurable direction Force UP counting Force DOWN counting Phase offset modifications during operation Direction control after synchronization Sync Latency One PWM clock cycle for sync recognition Counter update on next clock edge Phase Accuracy Resolution based on PWM clock Deterministic phase relationships Three-phase inverter control Interleaved power converters Multi-channel motor drives These examples demonstrate two different approaches to implement MCPWM synchronization functionality Driverlib Implementation mcpwm_ex2_synchronization.c in driverlib Direct Register/Bitfield Implementation mcpwm_ex2_synchronization.c in examples_bitfield Key synchronization features demonstrated in this example include Sync Mechanism External sync input through InputXBAR Module-to-module sync MCPWM1 to MCPWM3 Configurable sync events Period match Phase Control Dynamic phase shift adjustments Phase shift loading on sync events Configurable counter direction after sync Timing Coordination Synchronized counter updates Phase-shifted operation of recieving module Both implementations configure myMCPWM0(MCPWM1) and myMCPWM1(MCPWM3) with synchronization features Time Base Settings Up Count Mode 1 0 KHz Frequency 1 5 9 9 9 TBCLKs for 1 6 0 MHz TBCLK Sync input enabled from InputXbar 5 Phase shift load enabled Sync Out configured for Counter equals Period event Action Qualifier Outputs Output A1 Set High on zero Low on CMPA match Output B1 Set High on zero Low on CMPB match Interrupt Configuration ET2 triggers every 5 events Updates phase shift values at runtime Time Base Settings Up-Down Count Mode 1 0 KHz Frequency 8 0 0 0 TBCLKs for 1 6 0 MHz TBCLK Sync input from myMCPWM0 Phase shift load enabled Configurable counter direction after sync Action Qualifier Outputs Output A1 Set High on zero Low on CMPA match Output B1 Set High on zero Low on CMPB match Monitor these PWM outputs on Launchpad J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 Aspect Driverlib Implementation Bitfield Implementation Source File mcpwm_ex2_synchronization.c driverlib mcpwm_ex2_synchronization.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware Phase Control API-based phase updates Direct register phase updates Variable Purpose Default gUsePhaseValueUpdate Enable runtime phase updates false gPhaseShiftValue Phase shift value to apply 0 gPhaseDirUp Counter direction after sync true When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables observe the waveforms MCPWM MCPWM Basic PWM Generation Examples MCPWM Deadband Example MCPWM synchronization is a crucial feature that allows multiple PWM modules to operate in a coordinated manner External Sync Input XBAR routing for external sync signals Configurable sync input selection SYNCISEL Edge-triggered synchronization events Internal Sync Module-to-module synchronization Counter synchronization between PWM modules Cascaded synchronization chains possible TBCTL Register Controls PHSEN Phase Load Enable MCPWM_enablePhaseShiftLoad() MCPWM_disablePhaseShiftLoad() SYNCOSEL Sync Output Select MCPWM_setSyncOutPulseMode() SYNCISEL Sync Input Select MCPWM_setSyncInPulseSource() PHSDIR Phase Direction MCPWM_setCountModeAfterSync() Sync Out Events see enum MCPWM_SyncOutPulseMode Sync In Sources see enum MCPWM_SyncInPulseSource TBPHS Register 1 6 bit phase offset value Loaded on sync event when PHSEN enabled Post-Sync Options Software configurable direction Force UP counting Force DOWN counting Phase offset modifications during operation Direction control after synchronization Sync Latency One PWM clock cycle for sync recognition Counter update on next clock edge Phase Accuracy Resolution based on PWM clock Deterministic phase relationships Three-phase inverter control Interleaved power converters Multi-channel motor drives These examples demonstrate two different approaches to implement MCPWM synchronization functionality Driverlib Implementation mcpwm_ex2_synchronization.c in driverlib Direct Register/Bitfield Implementation mcpwm_ex2_synchronization.c in examples_bitfield Key synchronization features demonstrated in this example include Sync Mechanism External sync input through InputXBAR Module-to-module sync MCPWM1 to MCPWM3 Configurable sync events Period match Phase Control Dynamic phase shift adjustments Phase shift loading on sync events Configurable counter direction after sync Timing Coordination Synchronized counter updates Phase-shifted operation of recieving module Both implementations configure myMCPWM0(MCPWM1) and myMCPWM1(MCPWM3) with synchronization features Time Base Settings Up Count Mode 1 0 KHz Frequency 1 5 9 9 9 TBCLKs for 1 6 0 MHz TBCLK Sync input enabled from InputXbar 5 Phase shift load enabled Sync Out configured for Counter equals Period event Action Qualifier Outputs Output A1 Set High on zero Low on CMPA match Output B1 Set High on zero Low on CMPB match Interrupt Configuration ET2 triggers every 5 events Updates phase shift values at runtime Time Base Settings Up-Down Count Mode 1 0 KHz Frequency 8 0 0 0 TBCLKs for 1 6 0 MHz TBCLK Sync input from myMCPWM0 Phase shift load enabled Configurable counter direction after sync Action Qualifier Outputs Output A1 Set High on zero Low on CMPA match Output B1 Set High on zero Low on CMPB match Monitor these PWM outputs on Launchpad J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 Aspect Driverlib Implementation Bitfield Implementation Source File mcpwm_ex2_synchronization.c driverlib mcpwm_ex2_synchronization.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware Phase Control API-based phase updates Direct register phase updates Variable Purpose Default gUsePhaseValueUpdate Enable runtime phase updates false gPhaseShiftValue Phase shift value to apply 0 gPhaseDirUp Counter direction after sync true When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables observe the waveforms MCPWM MCPWM Basic PWM Generation Examples MCPWM Deadband Example MCPWM Synchronization Example MCPWM Synchronization Example MCPWM synchronization is a crucial feature that allows multiple PWM modules to operate in a coordinated manner External Sync Input XBAR routing for external sync signals Configurable sync input selection SYNCISEL Edge-triggered synchronization events Internal Sync Module-to-module synchronization Counter synchronization between PWM modules Cascaded synchronization chains possible TBCTL Register Controls PHSEN Phase Load Enable MCPWM_enablePhaseShiftLoad() MCPWM_disablePhaseShiftLoad() SYNCOSEL Sync Output Select MCPWM_setSyncOutPulseMode() SYNCISEL Sync Input Select MCPWM_setSyncInPulseSource() PHSDIR Phase Direction MCPWM_setCountModeAfterSync() Sync Out Events see enum MCPWM_SyncOutPulseMode Sync In Sources see enum MCPWM_SyncInPulseSource TBPHS Register 1 6 bit phase offset value Loaded on sync event when PHSEN enabled Post-Sync Options Software configurable direction Force UP counting Force DOWN counting Phase offset modifications during operation Direction control after synchronization Sync Latency One PWM clock cycle for sync recognition Counter update on next clock edge Phase Accuracy Resolution based on PWM clock Deterministic phase relationships Three-phase inverter control Interleaved power converters Multi-channel motor drives These examples demonstrate two different approaches to implement MCPWM synchronization functionality Driverlib Implementation mcpwm_ex2_synchronization.c in driverlib Direct Register/Bitfield Implementation mcpwm_ex2_synchronization.c in examples_bitfield Key synchronization features demonstrated in this example include Sync Mechanism External sync input through InputXBAR Module-to-module sync MCPWM1 to MCPWM3 Configurable sync events Period match Phase Control Dynamic phase shift adjustments Phase shift loading on sync events Configurable counter direction after sync Timing Coordination Synchronized counter updates Phase-shifted operation of recieving module Both implementations configure myMCPWM0(MCPWM1) and myMCPWM1(MCPWM3) with synchronization features Time Base Settings Up Count Mode 1 0 KHz Frequency 1 5 9 9 9 TBCLKs for 1 6 0 MHz TBCLK Sync input enabled from InputXbar 5 Phase shift load enabled Sync Out configured for Counter equals Period event Action Qualifier Outputs Output A1 Set High on zero Low on CMPA match Output B1 Set High on zero Low on CMPB match Interrupt Configuration ET2 triggers every 5 events Updates phase shift values at runtime Time Base Settings Up-Down Count Mode 1 0 KHz Frequency 8 0 0 0 TBCLKs for 1 6 0 MHz TBCLK Sync input from myMCPWM0 Phase shift load enabled Configurable counter direction after sync Action Qualifier Outputs Output A1 Set High on zero Low on CMPA match Output B1 Set High on zero Low on CMPB match Monitor these PWM outputs on Launchpad J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 Aspect Driverlib Implementation Bitfield Implementation Source File mcpwm_ex2_synchronization.c driverlib mcpwm_ex2_synchronization.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware Phase Control API-based phase updates Direct register phase updates Variable Purpose Default gUsePhaseValueUpdate Enable runtime phase updates false gPhaseShiftValue Phase shift value to apply 0 gPhaseDirUp Counter direction after sync true When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables observe the waveforms MCPWM MCPWM Basic PWM Generation Examples MCPWM Deadband Example</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_MCPWM_EX3_DEADBAND</field>
    <field name="url">EXAMPLES_DRIVERS_MCPWM_EX3_DEADBAND.html</field>
    <field name="keywords"></field>
    <field name="text">Deadband is a crucial safety feature in PWM applications that prevents shoot-through current by ensuring that complementary switches are never ON simultaneously The feature inserts a deliberate delay between switching transitions Configuration Options Active High/ Low Complementary and swapping of A/B outputs Independent Rising/Falling edge delays Cascaded delay additions Flexible input source selection The deadband module is controlled through four main register groups Dead-Band Control Register DBCTL Rising/Falling Edge Delay Registers DBRED/DBFED Shadow Delay Registers DBREDS/DBFEDS Controls the deadband operation mode and signal routing Bits Name Description Configuration API 1 5 1 4 OUTSWAP Output Swap Mode Controls output path routing for A/B signals Allows swapping of outputs between paths MCPWM_setDeadBandOutputSwapMode() 1 3 1 2 DEDB_MODE Dead-Band Input Mode Controls input signal selection for FED Enables cascaded RED to FED operation MCPWM_setFallingEdgeDeadBandDelayInput() 1 1 1 0 LOADFEDMODE FED Load from Shadow Mode Controls when FED loads from shadow MCPWM_setFallingEdgeDelayCountShadowLoadMode() 9 8 LOADREDMODE RED Load from Shadow Mode Controls when RED loads from shadow MCPWM_setRisingEdgeDelayCountShadowLoadMode() 7 6 POLSEL Polarity Select Sets output polarity Active-high or active-low configurations MCPWM_setDeadBandDelayPolarity() 5 4 IN_MODE Dead-Band Input Mode Selects source signals for deadband generation MCPWM_setRisingEdgeDeadBandDelayInput() 1 0 OUT_MODE Dead-Band Output Enable Enables/disables deadband for outputs Controls which edges have deadband MCPWM_setDeadBandDelayMode() Controls the duration of deadband delays Bits Name Description Configuration API 1 5 0 RED Rising Edge Delay Count Number of TBCLK cycles for rising edge delay MCPWM_setRisingEdgeDelayCountActive() Bits Name Description Configuration API 1 5 0 FED Falling Edge Delay Count Number of TBCLK cycles for falling edge delay MCPWM_setFallingEdgeDelayCountActive() Provides double-buffered updates to delay values Bits Name Description Configuration API 1 5 0 REDS Rising Edge Delay Shadow Value Shadow register for RED MCPWM_setRisingEdgeDelayCountShadow() Bits Name Description Configuration API 1 5 0 FEDS Falling Edge Delay Shadow Value Shadow register for FED MCPWM_setFallingEdgeDelayCountShadow() These examples demonstrate two different approaches to implement MCPWM deadband functionality Driverlib Implementation mcpwm_ex3_deadband.c in driverlib Direct Register/Bitfield Implementation mcpwm_ex3_deadband.c in examples_bitfield Both implementations configure myMCPWM0(MCPWM1) and myMCPWM1(MCPWM3) with the following features Time Base Settings Up-Down Count Mode 2 0 KHz Frequency 4 0 0 0 TBCLKs for 1 6 0 MHz TBCLK Action Qualifier Outputs Output A1/A2/A3 Set High on CMPA up Low on CMPA down Deadband Configuration Active High Configuration 1 0 0 TBCLK deadband for both edges Full deadband enabled All PWM outputs use PWMxA as source Time Base Settings Up-Down Count Mode 2 0 KHz Frequency 4 0 0 0 TBCLKs for 1 6 0 MHz TBCLK Action Qualifier Outputs Output A1 Set High on CMPA up Low on CMPA down Deadband Configuration Deadband disabled Monitor these PWM outputs on Launchpad J4 4 0 GPIO0 myMCPWM0 Output A1 Active High Configuration J4 3 9 GPIO1 myMCPWM0 Output B1 Active High Configuration J4 3 8 GPIO2 myMCPWM0 Output A2 Active High Configuration J4 3 7 GPIO3 myMCPWM0 Output B2 Active High Configuration J4 3 6 GPIO4 myMCPWM0 Output A3 Active High Configuration J4 3 5 GPIO5 myMCPWM0 Output B3 Active High Configuration J4 7 GPIO12 myMCPWM1 Output A1 Reference Output Aspect Driverlib Implementation Bitfield Implementation Source File mcpwm_ex3_deadband.c driverlib mcpwm_ex3_deadband.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware Deadband Control API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Observe the complementary waveforms with deadband on the specified GPIO pins MCPWM MCPWM Basic PWM Generation Examples MCPWM Synchronization Example Deadband is a crucial safety feature in PWM applications that prevents shoot-through current by ensuring that complementary switches are never ON simultaneously The feature inserts a deliberate delay between switching transitions Configuration Options Active High/ Low Complementary and swapping of A/B outputs Independent Rising/Falling edge delays Cascaded delay additions Flexible input source selection The deadband module is controlled through four main register groups Dead-Band Control Register DBCTL Rising/Falling Edge Delay Registers DBRED/DBFED Shadow Delay Registers DBREDS/DBFEDS Controls the deadband operation mode and signal routing Bits Name Description Configuration API 1 5 1 4 OUTSWAP Output Swap Mode Controls output path routing for A/B signals Allows swapping of outputs between paths MCPWM_setDeadBandOutputSwapMode() 1 3 1 2 DEDB_MODE Dead-Band Input Mode Controls input signal selection for FED Enables cascaded RED to FED operation MCPWM_setFallingEdgeDeadBandDelayInput() 1 1 1 0 LOADFEDMODE FED Load from Shadow Mode Controls when FED loads from shadow MCPWM_setFallingEdgeDelayCountShadowLoadMode() 9 8 LOADREDMODE RED Load from Shadow Mode Controls when RED loads from shadow MCPWM_setRisingEdgeDelayCountShadowLoadMode() 7 6 POLSEL Polarity Select Sets output polarity Active-high or active-low configurations MCPWM_setDeadBandDelayPolarity() 5 4 IN_MODE Dead-Band Input Mode Selects source signals for deadband generation MCPWM_setRisingEdgeDeadBandDelayInput() 1 0 OUT_MODE Dead-Band Output Enable Enables/disables deadband for outputs Controls which edges have deadband MCPWM_setDeadBandDelayMode() Controls the duration of deadband delays Bits Name Description Configuration API 1 5 0 RED Rising Edge Delay Count Number of TBCLK cycles for rising edge delay MCPWM_setRisingEdgeDelayCountActive() Bits Name Description Configuration API 1 5 0 FED Falling Edge Delay Count Number of TBCLK cycles for falling edge delay MCPWM_setFallingEdgeDelayCountActive() Provides double-buffered updates to delay values Bits Name Description Configuration API 1 5 0 REDS Rising Edge Delay Shadow Value Shadow register for RED MCPWM_setRisingEdgeDelayCountShadow() Bits Name Description Configuration API 1 5 0 FEDS Falling Edge Delay Shadow Value Shadow register for FED MCPWM_setFallingEdgeDelayCountShadow() These examples demonstrate two different approaches to implement MCPWM deadband functionality Driverlib Implementation mcpwm_ex3_deadband.c in driverlib Direct Register/Bitfield Implementation mcpwm_ex3_deadband.c in examples_bitfield Both implementations configure myMCPWM0(MCPWM1) and myMCPWM1(MCPWM3) with the following features Time Base Settings Up-Down Count Mode 2 0 KHz Frequency 4 0 0 0 TBCLKs for 1 6 0 MHz TBCLK Action Qualifier Outputs Output A1/A2/A3 Set High on CMPA up Low on CMPA down Deadband Configuration Active High Configuration 1 0 0 TBCLK deadband for both edges Full deadband enabled All PWM outputs use PWMxA as source Time Base Settings Up-Down Count Mode 2 0 KHz Frequency 4 0 0 0 TBCLKs for 1 6 0 MHz TBCLK Action Qualifier Outputs Output A1 Set High on CMPA up Low on CMPA down Deadband Configuration Deadband disabled Monitor these PWM outputs on Launchpad J4 4 0 GPIO0 myMCPWM0 Output A1 Active High Configuration J4 3 9 GPIO1 myMCPWM0 Output B1 Active High Configuration J4 3 8 GPIO2 myMCPWM0 Output A2 Active High Configuration J4 3 7 GPIO3 myMCPWM0 Output B2 Active High Configuration J4 3 6 GPIO4 myMCPWM0 Output A3 Active High Configuration J4 3 5 GPIO5 myMCPWM0 Output B3 Active High Configuration J4 7 GPIO12 myMCPWM1 Output A1 Reference Output Aspect Driverlib Implementation Bitfield Implementation Source File mcpwm_ex3_deadband.c driverlib mcpwm_ex3_deadband.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware Deadband Control API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Observe the complementary waveforms with deadband on the specified GPIO pins MCPWM MCPWM Basic PWM Generation Examples MCPWM Synchronization Example MCPWM Deadband Example MCPWM Deadband Example Deadband is a crucial safety feature in PWM applications that prevents shoot-through current by ensuring that complementary switches are never ON simultaneously The feature inserts a deliberate delay between switching transitions Configuration Options Active High/ Low Complementary and swapping of A/B outputs Independent Rising/Falling edge delays Cascaded delay additions Flexible input source selection The deadband module is controlled through four main register groups Dead-Band Control Register DBCTL Rising/Falling Edge Delay Registers DBRED/DBFED Shadow Delay Registers DBREDS/DBFEDS Controls the deadband operation mode and signal routing Bits Name Description Configuration API 1 5 1 4 OUTSWAP Output Swap Mode Controls output path routing for A/B signals Allows swapping of outputs between paths MCPWM_setDeadBandOutputSwapMode() 1 3 1 2 DEDB_MODE Dead-Band Input Mode Controls input signal selection for FED Enables cascaded RED to FED operation MCPWM_setFallingEdgeDeadBandDelayInput() 1 1 1 0 LOADFEDMODE FED Load from Shadow Mode Controls when FED loads from shadow MCPWM_setFallingEdgeDelayCountShadowLoadMode() 9 8 LOADREDMODE RED Load from Shadow Mode Controls when RED loads from shadow MCPWM_setRisingEdgeDelayCountShadowLoadMode() 7 6 POLSEL Polarity Select Sets output polarity Active-high or active-low configurations MCPWM_setDeadBandDelayPolarity() 5 4 IN_MODE Dead-Band Input Mode Selects source signals for deadband generation MCPWM_setRisingEdgeDeadBandDelayInput() 1 0 OUT_MODE Dead-Band Output Enable Enables/disables deadband for outputs Controls which edges have deadband MCPWM_setDeadBandDelayMode() Controls the duration of deadband delays Bits Name Description Configuration API 1 5 0 RED Rising Edge Delay Count Number of TBCLK cycles for rising edge delay MCPWM_setRisingEdgeDelayCountActive() Bits Name Description Configuration API 1 5 0 FED Falling Edge Delay Count Number of TBCLK cycles for falling edge delay MCPWM_setFallingEdgeDelayCountActive() Provides double-buffered updates to delay values Bits Name Description Configuration API 1 5 0 REDS Rising Edge Delay Shadow Value Shadow register for RED MCPWM_setRisingEdgeDelayCountShadow() Bits Name Description Configuration API 1 5 0 FEDS Falling Edge Delay Shadow Value Shadow register for FED MCPWM_setFallingEdgeDelayCountShadow() These examples demonstrate two different approaches to implement MCPWM deadband functionality Driverlib Implementation mcpwm_ex3_deadband.c in driverlib Direct Register/Bitfield Implementation mcpwm_ex3_deadband.c in examples_bitfield Both implementations configure myMCPWM0(MCPWM1) and myMCPWM1(MCPWM3) with the following features Time Base Settings Up-Down Count Mode 2 0 KHz Frequency 4 0 0 0 TBCLKs for 1 6 0 MHz TBCLK Action Qualifier Outputs Output A1/A2/A3 Set High on CMPA up Low on CMPA down Deadband Configuration Active High Configuration 1 0 0 TBCLK deadband for both edges Full deadband enabled All PWM outputs use PWMxA as source Time Base Settings Up-Down Count Mode 2 0 KHz Frequency 4 0 0 0 TBCLKs for 1 6 0 MHz TBCLK Action Qualifier Outputs Output A1 Set High on CMPA up Low on CMPA down Deadband Configuration Deadband disabled Monitor these PWM outputs on Launchpad J4 4 0 GPIO0 myMCPWM0 Output A1 Active High Configuration J4 3 9 GPIO1 myMCPWM0 Output B1 Active High Configuration J4 3 8 GPIO2 myMCPWM0 Output A2 Active High Configuration J4 3 7 GPIO3 myMCPWM0 Output B2 Active High Configuration J4 3 6 GPIO4 myMCPWM0 Output A3 Active High Configuration J4 3 5 GPIO5 myMCPWM0 Output B3 Active High Configuration J4 7 GPIO12 myMCPWM1 Output A1 Reference Output Aspect Driverlib Implementation Bitfield Implementation Source File mcpwm_ex3_deadband.c driverlib mcpwm_ex3_deadband.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware Deadband Control API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Observe the complementary waveforms with deadband on the specified GPIO pins MCPWM MCPWM Basic PWM Generation Examples MCPWM Synchronization Example</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_MCPWM_EX5_TRIPZONE</field>
    <field name="url">EXAMPLES_DRIVERS_MCPWM_EX5_TRIPZONE.html</field>
    <field name="keywords"></field>
    <field name="text">Tripzone is a safety feature that allows PWM outputs to be quickly forced to defined states in response to fault conditions It provides hardware-level protection for power electronic circuits Multiple Trip Sources Cycle-by-cycle CBC One-shot OSHT Configurable Actions Force outputs high/low Independent control of A/B outputs Interrupt Generation Trip event detection Status monitoring This example demonstrates tripzone functionality using myMCPWM0 and myMCPWM1 modules with different trip configurations Time Base Settings Up Count Mode 1 0 kHz Frequency 1 5 9 9 9 period 1 6 0 MHz TBCLK Action Qualifier Output A1/B1 Set High on Counter Zero Low on CMPA/CMPB up Output A2/B2 Set Low on Counter Period High on CMPA/CMPB up Output A3 Set High on CMPA Low on CMPB up Output B3 Set Low on CMPA High on CMPB up Trip Zone Configuration CBC1 as trip source CBC Clear on event TZA configured to force Low TZB configured to force High Interrupt Enabled for CBC trip Time Base Settings Up-Down Count Mode 1 0 kHz Frequency 8 0 0 0 period 1 6 0 MHz TBCLK Action Qualifier Output A1 Set High on CMPA up Low on CMPA down Output B1 Set High on CMPB up Low on CMPB down Trip Zone Configuration OSHT1 as one-shot trip source TZA configured to force Low TZB configured to force High Interrupt Enabled for OST trip CBC1 MCPWM0 GPIO6 INPUTXBAR_IN13 OSHT1(MCPWM1) Monitor these pins on the LaunchPad J4 3 2 GPIO6 Trip Input J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 3 8 GPIO2 myMCPWM0 Output A2 J4 3 7 GPIO3 myMCPWM0 Output B2 J4 3 6 GPIO4 myMCPWM0 Output A3 J4 3 5 GPIO5 myMCPWM0 Output B3 J1 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 For external trip usage configure GPIO6 as input CBC trip clears automatically on counter zero One-shot trip requires explicit clearing ISR counts trips up to MAX_TRIP_ISR_COUNT before clearing one-shot condition Import and build the CCS project Connect an oscilloscope to observe the specified GPIO pins Launch a CCS debug session Run the executable Observe trip behavior when GPIO6 is toggled MCPWM0 outputs recover on next cycle CBC MCPWM1 outputs remain tripped until cleared OSHT Sample Output MCPWM MCPWM Basic PWM Generation Examples MCPWM Deadband Example MCPWM Global Load Use Case Example Tripzone is a safety feature that allows PWM outputs to be quickly forced to defined states in response to fault conditions It provides hardware-level protection for power electronic circuits Multiple Trip Sources Cycle-by-cycle CBC One-shot OSHT Configurable Actions Force outputs high/low Independent control of A/B outputs Interrupt Generation Trip event detection Status monitoring This example demonstrates tripzone functionality using myMCPWM0 and myMCPWM1 modules with different trip configurations Time Base Settings Up Count Mode 1 0 kHz Frequency 1 5 9 9 9 period 1 6 0 MHz TBCLK Action Qualifier Output A1/B1 Set High on Counter Zero Low on CMPA/CMPB up Output A2/B2 Set Low on Counter Period High on CMPA/CMPB up Output A3 Set High on CMPA Low on CMPB up Output B3 Set Low on CMPA High on CMPB up Trip Zone Configuration CBC1 as trip source CBC Clear on event TZA configured to force Low TZB configured to force High Interrupt Enabled for CBC trip Time Base Settings Up-Down Count Mode 1 0 kHz Frequency 8 0 0 0 period 1 6 0 MHz TBCLK Action Qualifier Output A1 Set High on CMPA up Low on CMPA down Output B1 Set High on CMPB up Low on CMPB down Trip Zone Configuration OSHT1 as one-shot trip source TZA configured to force Low TZB configured to force High Interrupt Enabled for OST trip CBC1 MCPWM0 GPIO6 INPUTXBAR_IN13 OSHT1(MCPWM1) Monitor these pins on the LaunchPad J4 3 2 GPIO6 Trip Input J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 3 8 GPIO2 myMCPWM0 Output A2 J4 3 7 GPIO3 myMCPWM0 Output B2 J4 3 6 GPIO4 myMCPWM0 Output A3 J4 3 5 GPIO5 myMCPWM0 Output B3 J1 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 For external trip usage configure GPIO6 as input CBC trip clears automatically on counter zero One-shot trip requires explicit clearing ISR counts trips up to MAX_TRIP_ISR_COUNT before clearing one-shot condition Import and build the CCS project Connect an oscilloscope to observe the specified GPIO pins Launch a CCS debug session Run the executable Observe trip behavior when GPIO6 is toggled MCPWM0 outputs recover on next cycle CBC MCPWM1 outputs remain tripped until cleared OSHT Sample Output MCPWM MCPWM Basic PWM Generation Examples MCPWM Deadband Example MCPWM Global Load Use Case Example MCPWM Tripzone Example MCPWM Tripzone Example Tripzone is a safety feature that allows PWM outputs to be quickly forced to defined states in response to fault conditions It provides hardware-level protection for power electronic circuits Multiple Trip Sources Cycle-by-cycle CBC One-shot OSHT Configurable Actions Force outputs high/low Independent control of A/B outputs Interrupt Generation Trip event detection Status monitoring This example demonstrates tripzone functionality using myMCPWM0 and myMCPWM1 modules with different trip configurations Time Base Settings Up Count Mode 1 0 kHz Frequency 1 5 9 9 9 period 1 6 0 MHz TBCLK Action Qualifier Output A1/B1 Set High on Counter Zero Low on CMPA/CMPB up Output A2/B2 Set Low on Counter Period High on CMPA/CMPB up Output A3 Set High on CMPA Low on CMPB up Output B3 Set Low on CMPA High on CMPB up Trip Zone Configuration CBC1 as trip source CBC Clear on event TZA configured to force Low TZB configured to force High Interrupt Enabled for CBC trip Time Base Settings Up-Down Count Mode 1 0 kHz Frequency 8 0 0 0 period 1 6 0 MHz TBCLK Action Qualifier Output A1 Set High on CMPA up Low on CMPA down Output B1 Set High on CMPB up Low on CMPB down Trip Zone Configuration OSHT1 as one-shot trip source TZA configured to force Low TZB configured to force High Interrupt Enabled for OST trip CBC1 MCPWM0 GPIO6 INPUTXBAR_IN13 OSHT1(MCPWM1) Monitor these pins on the LaunchPad J4 3 2 GPIO6 Trip Input J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 3 8 GPIO2 myMCPWM0 Output A2 J4 3 7 GPIO3 myMCPWM0 Output B2 J4 3 6 GPIO4 myMCPWM0 Output A3 J4 3 5 GPIO5 myMCPWM0 Output B3 J1 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 For external trip usage configure GPIO6 as input CBC trip clears automatically on counter zero One-shot trip requires explicit clearing ISR counts trips up to MAX_TRIP_ISR_COUNT before clearing one-shot condition Import and build the CCS project Connect an oscilloscope to observe the specified GPIO pins Launch a CCS debug session Run the executable Observe trip behavior when GPIO6 is toggled MCPWM0 outputs recover on next cycle CBC MCPWM1 outputs remain tripped until cleared OSHT Sample Output MCPWM MCPWM Basic PWM Generation Examples MCPWM Deadband Example MCPWM Global Load Use Case Example</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_MCPWM_EX6_GLOBAL_LOAD</field>
    <field name="url">EXAMPLES_DRIVERS_MCPWM_EX6_GLOBAL_LOAD.html</field>
    <field name="keywords"></field>
    <field name="text">Global load is an advanced MCPWM feature that enables synchronized updates of multiple PWM parameters across different channels This ensures smooth transitions and maintains phase relationships when modifying PWM settings during operation The feature operates by controlling transfers from shadow to active registers GLDCTL GLD synchronizing updates based on configured events GLDCTL GLDMODE When enabled it overrides individual shadow register load settings for coordinated updates One-Shot Load Operations Global Load Enable/Disable Control MCPWM_enableGlobalLoad() MCPWM_disableGlobalLoad() Global Load Trigger Configuration MCPWM_setGlobalLoadTrigger() One-Shot Mode Control MCPWM_enableGlobalLoadOneShotMode() MCPWM_disableGlobalLoadOneShotMode() MCPWM_setGlobalLoadOneShotLatch() MCPWM_clearGlobalLoadOneShotLatch() One-Shot Status and Force Control MCPWM_getGlobalLoadOneShotLatchStatus() MCPWM_forceGlobalLoadOneShotEvent() When global load is enabled these shadow load mode settings are overridden by the global load trigger events Synchronized Updates Compare values Action qualifier settings Deadband parameters Multiple Update Modes One-shot updates Forced Updates This example demonstrates synchronized parameter updates across myMCPWM0 and myMCPWM1 modules using the global load feature Time Base Settings Up Count Mode 4 0 kHz Frequency 3 9 9 9 period 1 6 0 MHz TBCLK Free Run emulation mode Initial Compare Values PWM1A/B 1 8 0 0 4 5 duty cycle PWM2A/B 3 1 3 3 7 8 duty cycle PWM3A/B 4 6 7 1 2 duty cycle Action Qualifier All pairs set HIGH on Counter matches CMPA/CMPB counting up All pairs set LOW on Counter Period Initial Deadband 3 2 counts 2 0 0 ns 1 6 0 MHz Both Rising and Falling edge delay enabled Time Base Settings Up Count Mode synchronized to myMCPWM0 4 0 kHz Frequency 3 9 9 9 period Initial Compare Values PWM1A/B 1 0 0 0 2 5 duty cycle Action Qualifier PWM1A/B set HIGH on Counter matches CMPA/CMPB counting up PWM1A/B set LOW on Counter Period When perform_one_shot_load flag is set the following synchronized updates occur Compare Values myMCPWM0 PWM1A 2 0 0 0 5 0 duty PWM2A 3 3 3 3 8 3 duty PWM3A 6 6 7 1 7 duty myMCPWM1 PWM1A 2 0 0 0 5 0 duty Deadband Parameters Both modules updated to 4 8 counts 3 0 0 ns 1 6 0 MHz Applied to both rising and falling edges New values written to shadow registers Global load trigger synchronizes all updates Changes take effect simultaneously on next global load event Monitor these PWM outputs on the LaunchPad J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 3 8 GPIO2 myMCPWM0 Output A2 J4 3 7 GPIO3 myMCPWM0 Output B2 J4 3 6 GPIO4 myMCPWM0 Output A3 J4 3 5 GPIO5 myMCPWM0 Output B3 J1 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 Use an oscilloscope to observe synchronized updates Watch deadband transitions on complementary pairs All updates occur on the next global load event Period remains constant during updates Import and build the CCS project Connect an oscilloscope to observe the specified GPIO pins Launch a CCS debug session Run the executable Observe the synchronized parameter updates across all channels Sample Output MCPWM MCPWM Basic PWM Generation Examples MCPWM Synchronization Example MCPWM Deadband Example MCPWM Tripzone Example Global load is an advanced MCPWM feature that enables synchronized updates of multiple PWM parameters across different channels This ensures smooth transitions and maintains phase relationships when modifying PWM settings during operation The feature operates by controlling transfers from shadow to active registers GLDCTL GLD synchronizing updates based on configured events GLDCTL GLDMODE When enabled it overrides individual shadow register load settings for coordinated updates One-Shot Load Operations Global Load Enable/Disable Control MCPWM_enableGlobalLoad() MCPWM_disableGlobalLoad() Global Load Trigger Configuration MCPWM_setGlobalLoadTrigger() One-Shot Mode Control MCPWM_enableGlobalLoadOneShotMode() MCPWM_disableGlobalLoadOneShotMode() MCPWM_setGlobalLoadOneShotLatch() MCPWM_clearGlobalLoadOneShotLatch() One-Shot Status and Force Control MCPWM_getGlobalLoadOneShotLatchStatus() MCPWM_forceGlobalLoadOneShotEvent() When global load is enabled these shadow load mode settings are overridden by the global load trigger events Synchronized Updates Compare values Action qualifier settings Deadband parameters Multiple Update Modes One-shot updates Forced Updates This example demonstrates synchronized parameter updates across myMCPWM0 and myMCPWM1 modules using the global load feature Time Base Settings Up Count Mode 4 0 kHz Frequency 3 9 9 9 period 1 6 0 MHz TBCLK Free Run emulation mode Initial Compare Values PWM1A/B 1 8 0 0 4 5 duty cycle PWM2A/B 3 1 3 3 7 8 duty cycle PWM3A/B 4 6 7 1 2 duty cycle Action Qualifier All pairs set HIGH on Counter matches CMPA/CMPB counting up All pairs set LOW on Counter Period Initial Deadband 3 2 counts 2 0 0 ns 1 6 0 MHz Both Rising and Falling edge delay enabled Time Base Settings Up Count Mode synchronized to myMCPWM0 4 0 kHz Frequency 3 9 9 9 period Initial Compare Values PWM1A/B 1 0 0 0 2 5 duty cycle Action Qualifier PWM1A/B set HIGH on Counter matches CMPA/CMPB counting up PWM1A/B set LOW on Counter Period When perform_one_shot_load flag is set the following synchronized updates occur Compare Values myMCPWM0 PWM1A 2 0 0 0 5 0 duty PWM2A 3 3 3 3 8 3 duty PWM3A 6 6 7 1 7 duty myMCPWM1 PWM1A 2 0 0 0 5 0 duty Deadband Parameters Both modules updated to 4 8 counts 3 0 0 ns 1 6 0 MHz Applied to both rising and falling edges New values written to shadow registers Global load trigger synchronizes all updates Changes take effect simultaneously on next global load event Monitor these PWM outputs on the LaunchPad J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 3 8 GPIO2 myMCPWM0 Output A2 J4 3 7 GPIO3 myMCPWM0 Output B2 J4 3 6 GPIO4 myMCPWM0 Output A3 J4 3 5 GPIO5 myMCPWM0 Output B3 J1 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 Use an oscilloscope to observe synchronized updates Watch deadband transitions on complementary pairs All updates occur on the next global load event Period remains constant during updates Import and build the CCS project Connect an oscilloscope to observe the specified GPIO pins Launch a CCS debug session Run the executable Observe the synchronized parameter updates across all channels Sample Output MCPWM MCPWM Basic PWM Generation Examples MCPWM Synchronization Example MCPWM Deadband Example MCPWM Tripzone Example MCPWM Global Load Use Case Example MCPWM Global Load Use Case Example Global load is an advanced MCPWM feature that enables synchronized updates of multiple PWM parameters across different channels This ensures smooth transitions and maintains phase relationships when modifying PWM settings during operation The feature operates by controlling transfers from shadow to active registers GLDCTL GLD synchronizing updates based on configured events GLDCTL GLDMODE When enabled it overrides individual shadow register load settings for coordinated updates One-Shot Load Operations Global Load Enable/Disable Control MCPWM_enableGlobalLoad() MCPWM_disableGlobalLoad() Global Load Trigger Configuration MCPWM_setGlobalLoadTrigger() One-Shot Mode Control MCPWM_enableGlobalLoadOneShotMode() MCPWM_disableGlobalLoadOneShotMode() MCPWM_setGlobalLoadOneShotLatch() MCPWM_clearGlobalLoadOneShotLatch() One-Shot Status and Force Control MCPWM_getGlobalLoadOneShotLatchStatus() MCPWM_forceGlobalLoadOneShotEvent() When global load is enabled these shadow load mode settings are overridden by the global load trigger events Synchronized Updates Compare values Action qualifier settings Deadband parameters Multiple Update Modes One-shot updates Forced Updates This example demonstrates synchronized parameter updates across myMCPWM0 and myMCPWM1 modules using the global load feature Time Base Settings Up Count Mode 4 0 kHz Frequency 3 9 9 9 period 1 6 0 MHz TBCLK Free Run emulation mode Initial Compare Values PWM1A/B 1 8 0 0 4 5 duty cycle PWM2A/B 3 1 3 3 7 8 duty cycle PWM3A/B 4 6 7 1 2 duty cycle Action Qualifier All pairs set HIGH on Counter matches CMPA/CMPB counting up All pairs set LOW on Counter Period Initial Deadband 3 2 counts 2 0 0 ns 1 6 0 MHz Both Rising and Falling edge delay enabled Time Base Settings Up Count Mode synchronized to myMCPWM0 4 0 kHz Frequency 3 9 9 9 period Initial Compare Values PWM1A/B 1 0 0 0 2 5 duty cycle Action Qualifier PWM1A/B set HIGH on Counter matches CMPA/CMPB counting up PWM1A/B set LOW on Counter Period When perform_one_shot_load flag is set the following synchronized updates occur Compare Values myMCPWM0 PWM1A 2 0 0 0 5 0 duty PWM2A 3 3 3 3 8 3 duty PWM3A 6 6 7 1 7 duty myMCPWM1 PWM1A 2 0 0 0 5 0 duty Deadband Parameters Both modules updated to 4 8 counts 3 0 0 ns 1 6 0 MHz Applied to both rising and falling edges New values written to shadow registers Global load trigger synchronizes all updates Changes take effect simultaneously on next global load event Monitor these PWM outputs on the LaunchPad J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 3 8 GPIO2 myMCPWM0 Output A2 J4 3 7 GPIO3 myMCPWM0 Output B2 J4 3 6 GPIO4 myMCPWM0 Output A3 J4 3 5 GPIO5 myMCPWM0 Output B3 J1 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 Use an oscilloscope to observe synchronized updates Watch deadband transitions on complementary pairs All updates occur on the next global load event Period remains constant during updates Import and build the CCS project Connect an oscilloscope to observe the specified GPIO pins Launch a CCS debug session Run the executable Observe the synchronized parameter updates across all channels Sample Output MCPWM MCPWM Basic PWM Generation Examples MCPWM Synchronization Example MCPWM Deadband Example MCPWM Tripzone Example</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_MCPWM_EX7_DMA</field>
    <field name="url">EXAMPLES_DRIVERS_MCPWM_EX7_DMA.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates how to configure MCPWM modules and DMA controllers to implement dynamic updates of PWM parameters without CPU intervention By utilizing DMA to automatically update PWM compare values the system can generate complex PWM patterns without requiring CPU cycles for each update MCPWM0 and MCPWM1 are configured for PWM output generation MCPWM0 provides SOC trigger for DMA CH1 operations MCPWM1 provides SOC trigger for DMA CH2 operations DMA CH1 is configured to update MCPWM0 compare registers PWM1-3 CMPAs in burst mode transferring 3 words per trigger DMA CH2 is configured to update MCPWM1 compare registers PWM1 CMPA in burst mode transferring 1 word per trigger Both DMA channels operate continuously cycling through 4 different configurations stored in memory The example demonstrates advanced PWM pattern generation without CPU overhead by allowing DMA to dynamically update multiple PWM parameters on each PWM period Generates complex PWM patterns for motor control without CPU intervention Demonstrates how to synchronize multiple MCPWM outputs through DMA operations The example configures two DMA channels DMA Channel 1 Source Memory array compareConfigs_6ch Destination MCPWM0 compare registers PWM1-3 CMPAs Burst Size 3 words updating 3 compare values at once Trigger MCPWM1 SOCA event Mode Continuous with 4 transfers different configurations DMA Channel 2 Source Memory array compareConfigs_2ch Destination MCPWM1 compare registers PWM1 CMPA Burst Size 1 word Trigger MCPWM3 SOCA event Mode Continuous with 4 transfers different configurations Two configuration arrays are defined and placed in GSRAM for optimal DMA access compareConfigs_6ch Contains 1 2 values 4 sets of 3 for MCPWM0 compare registers compareConfigs_2ch Contains 4 values for MCPWM1 compare register The DMA continuously updates the PWM compare values which results in dynamically changing duty cycles across the PWM outputs This creates a pattern of waveforms that would typically require significant CPU intervention to maintain Monitor the MCPWM pins for the waveforms J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 3 8 GPIO2 myMCPWM0 Output A2 J4 3 7 GPIO3 myMCPWM0 Output B2 J4 3 6 GPIO4 myMCPWM0 Output A3 J4 3 5 GPIO5 myMCPWM0 Output B3 J4 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables observe the waveforms compareConfigs_6ch Array containing MCPWM0 compare values for PWM1-3 CMPAs compareConfigs_2ch Array containing MCPWM1 compare values for PWM1 CMPA MCPWM DMA MCPWM Basic PWM Generation Examples This example demonstrates how to configure MCPWM modules and DMA controllers to implement dynamic updates of PWM parameters without CPU intervention By utilizing DMA to automatically update PWM compare values the system can generate complex PWM patterns without requiring CPU cycles for each update MCPWM0 and MCPWM1 are configured for PWM output generation MCPWM0 provides SOC trigger for DMA CH1 operations MCPWM1 provides SOC trigger for DMA CH2 operations DMA CH1 is configured to update MCPWM0 compare registers PWM1-3 CMPAs in burst mode transferring 3 words per trigger DMA CH2 is configured to update MCPWM1 compare registers PWM1 CMPA in burst mode transferring 1 word per trigger Both DMA channels operate continuously cycling through 4 different configurations stored in memory The example demonstrates advanced PWM pattern generation without CPU overhead by allowing DMA to dynamically update multiple PWM parameters on each PWM period Generates complex PWM patterns for motor control without CPU intervention Demonstrates how to synchronize multiple MCPWM outputs through DMA operations The example configures two DMA channels DMA Channel 1 Source Memory array compareConfigs_6ch Destination MCPWM0 compare registers PWM1-3 CMPAs Burst Size 3 words updating 3 compare values at once Trigger MCPWM1 SOCA event Mode Continuous with 4 transfers different configurations DMA Channel 2 Source Memory array compareConfigs_2ch Destination MCPWM1 compare registers PWM1 CMPA Burst Size 1 word Trigger MCPWM3 SOCA event Mode Continuous with 4 transfers different configurations Two configuration arrays are defined and placed in GSRAM for optimal DMA access compareConfigs_6ch Contains 1 2 values 4 sets of 3 for MCPWM0 compare registers compareConfigs_2ch Contains 4 values for MCPWM1 compare register The DMA continuously updates the PWM compare values which results in dynamically changing duty cycles across the PWM outputs This creates a pattern of waveforms that would typically require significant CPU intervention to maintain Monitor the MCPWM pins for the waveforms J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 3 8 GPIO2 myMCPWM0 Output A2 J4 3 7 GPIO3 myMCPWM0 Output B2 J4 3 6 GPIO4 myMCPWM0 Output A3 J4 3 5 GPIO5 myMCPWM0 Output B3 J4 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables observe the waveforms compareConfigs_6ch Array containing MCPWM0 compare values for PWM1-3 CMPAs compareConfigs_2ch Array containing MCPWM1 compare values for PWM1 CMPA MCPWM DMA MCPWM Basic PWM Generation Examples MCPWM Using DMA for Advanced PWM Generation MCPWM Using DMA for Advanced PWM Generation This example demonstrates how to configure MCPWM modules and DMA controllers to implement dynamic updates of PWM parameters without CPU intervention By utilizing DMA to automatically update PWM compare values the system can generate complex PWM patterns without requiring CPU cycles for each update MCPWM0 and MCPWM1 are configured for PWM output generation MCPWM0 provides SOC trigger for DMA CH1 operations MCPWM1 provides SOC trigger for DMA CH2 operations DMA CH1 is configured to update MCPWM0 compare registers PWM1-3 CMPAs in burst mode transferring 3 words per trigger DMA CH2 is configured to update MCPWM1 compare registers PWM1 CMPA in burst mode transferring 1 word per trigger Both DMA channels operate continuously cycling through 4 different configurations stored in memory The example demonstrates advanced PWM pattern generation without CPU overhead by allowing DMA to dynamically update multiple PWM parameters on each PWM period Generates complex PWM patterns for motor control without CPU intervention Demonstrates how to synchronize multiple MCPWM outputs through DMA operations The example configures two DMA channels DMA Channel 1 Source Memory array compareConfigs_6ch Destination MCPWM0 compare registers PWM1-3 CMPAs Burst Size 3 words updating 3 compare values at once Trigger MCPWM1 SOCA event Mode Continuous with 4 transfers different configurations DMA Channel 2 Source Memory array compareConfigs_2ch Destination MCPWM1 compare registers PWM1 CMPA Burst Size 1 word Trigger MCPWM3 SOCA event Mode Continuous with 4 transfers different configurations Two configuration arrays are defined and placed in GSRAM for optimal DMA access compareConfigs_6ch Contains 1 2 values 4 sets of 3 for MCPWM0 compare registers compareConfigs_2ch Contains 4 values for MCPWM1 compare register The DMA continuously updates the PWM compare values which results in dynamically changing duty cycles across the PWM outputs This creates a pattern of waveforms that would typically require significant CPU intervention to maintain Monitor the MCPWM pins for the waveforms J4 4 0 GPIO0 myMCPWM0 Output A1 J4 3 9 GPIO1 myMCPWM0 Output B1 J4 3 8 GPIO2 myMCPWM0 Output A2 J4 3 7 GPIO3 myMCPWM0 Output B2 J4 3 6 GPIO4 myMCPWM0 Output A3 J4 3 5 GPIO5 myMCPWM0 Output B3 J4 7 GPIO12 myMCPWM1 Output A1 J2 1 9 GPIO29 myMCPWM1 Output B1 When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables observe the waveforms compareConfigs_6ch Array containing MCPWM0 compare values for PWM1-3 CMPAs compareConfigs_2ch Array containing MCPWM1 compare values for PWM1 CMPA MCPWM DMA MCPWM Basic PWM Generation Examples</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_MEMCFG_EX1_ERROR_HANDLING</field>
    <field name="url">EXAMPLES_DRIVERS_MEMCFG_EX1_ERROR_HANDLING.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates error handling in case of various erroneous memory read/write operations Error handling in case of CPU read/write violations uncorrectable memory errors has been demonstrated Uncorrectable memory errors violations can generate NMI interrupt testStatusGlobal Equivalent to TEST_PASS if test finished correctly else the value is set to TEST_FAIL errCountGlobal Error counter None This example demonstrates error handling in case of various erroneous memory read/write operations Error handling in case of CPU read/write violations uncorrectable memory errors has been demonstrated Uncorrectable memory errors violations can generate NMI interrupt testStatusGlobal Equivalent to TEST_PASS if test finished correctly else the value is set to TEST_FAIL errCountGlobal Error counter None Uncorrectable Memory Error Handling Uncorrectable Memory Error Handling This example demonstrates error handling in case of various erroneous memory read/write operations Error handling in case of CPU read/write violations uncorrectable memory errors has been demonstrated Uncorrectable memory errors violations can generate NMI interrupt testStatusGlobal Equivalent to TEST_PASS if test finished correctly else the value is set to TEST_FAIL errCountGlobal Error counter None</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_PGA_EX1_DAC_ADC_EXT_LOOPBACK</field>
    <field name="url">EXAMPLES_DRIVERS_PGA_EX1_DAC_ADC_EXT_LOOPBACK.html</field>
    <field name="keywords"></field>
    <field name="text">This example generates 8 0 0 mV using the CMPSSDAC output CMPSSLITE is used route the low DAC output to an external pin to be used as an external DAC The output of the CMPSSLITE DACL is externally connected to PGA for 2 x gain amplification It uses two ADC channels to sample the CMPSSDAC output and the amplified voltage output from PGA The ADC is connected internally to these signals Watch Variables dacResult The DAC output voltage pgaResult The amplified DAC voltage pgaGain The ratio of the amplified DAC voltage to the original DAC output This should always read a value of 0 Connect CMPSSLITE_DACL_OUT Analog Pin A0 to PGA1_INP1 Analog Pin A11 Connect PGA1_INM1 Analog Pin A4 to GND Aspect Driverlib Implementation Bitfield Implementation Source File pga_ex1_dac_adc_ext_loopback.c driverlib pga_ex1_dac_adc_ext_loopback.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware Gain Control API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the position and speed calculated for the motor EQEP This example generates 8 0 0 mV using the CMPSSDAC output CMPSSLITE is used route the low DAC output to an external pin to be used as an external DAC The output of the CMPSSLITE DACL is externally connected to PGA for 2 x gain amplification It uses two ADC channels to sample the CMPSSDAC output and the amplified voltage output from PGA The ADC is connected internally to these signals Watch Variables dacResult The DAC output voltage pgaResult The amplified DAC voltage pgaGain The ratio of the amplified DAC voltage to the original DAC output This should always read a value of 0 Connect CMPSSLITE_DACL_OUT Analog Pin A0 to PGA1_INP1 Analog Pin A11 Connect PGA1_INM1 Analog Pin A4 to GND Aspect Driverlib Implementation Bitfield Implementation Source File pga_ex1_dac_adc_ext_loopback.c driverlib pga_ex1_dac_adc_ext_loopback.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware Gain Control API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the position and speed calculated for the motor EQEP PGA DAC-ADC External Loopback PGA DAC-ADC External Loopback This example generates 8 0 0 mV using the CMPSSDAC output CMPSSLITE is used route the low DAC output to an external pin to be used as an external DAC The output of the CMPSSLITE DACL is externally connected to PGA for 2 x gain amplification It uses two ADC channels to sample the CMPSSDAC output and the amplified voltage output from PGA The ADC is connected internally to these signals Watch Variables dacResult The DAC output voltage pgaResult The amplified DAC voltage pgaGain The ratio of the amplified DAC voltage to the original DAC output This should always read a value of 0 Connect CMPSSLITE_DACL_OUT Analog Pin A0 to PGA1_INP1 Analog Pin A11 Connect PGA1_INM1 Analog Pin A4 to GND Aspect Driverlib Implementation Bitfield Implementation Source File pga_ex1_dac_adc_ext_loopback.c driverlib pga_ex1_dac_adc_ext_loopback.c examples_bitfield Configuration Method Driverlib API calls Direct register access Hardware Abstraction Medium driverlib None direct hardware Gain Control API-based configuration Direct register configuration When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables view the position and speed calculated for the motor EQEP</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_SCI_ECHOBACK</field>
    <field name="url">EXAMPLES_DRIVERS_SCI_ECHOBACK.html</field>
    <field name="keywords"></field>
    <field name="text">These examples demonstrate two different approaches to implement SCI Echoback functionality Manual Driverlib sci_ex3_echoback.c in driverlib Direct Register/Bitfield sci_ex1_echoback.c in device_support This test receives and echo-backs data through the SCI-A port A terminal such as putty can be used to view the data from the SCI and to send information to the SCI Characters received by the SCI port are sent back to the host This example project has support for migration across our C2000 device families If you are wanting to build this project from launchpad or controlCARD please specify in the syscfg file the board you re using At any time you can select another device to migrate this example loopCounter the number of characters sent Connect the USB cable from Launchpad to PC When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Open a COM port with the following settings using a terminal Find correct COM port Bits per second 9 6 0 0 Data Bits 8 Parity None Stop Bits 1 Hardware Control None The program will print out a greeting and then ask you to enter a character which it will echo back to the terminal SCI These examples demonstrate two different approaches to implement SCI Echoback functionality Manual Driverlib sci_ex3_echoback.c in driverlib Direct Register/Bitfield sci_ex1_echoback.c in device_support This test receives and echo-backs data through the SCI-A port A terminal such as putty can be used to view the data from the SCI and to send information to the SCI Characters received by the SCI port are sent back to the host This example project has support for migration across our C2000 device families If you are wanting to build this project from launchpad or controlCARD please specify in the syscfg file the board you re using At any time you can select another device to migrate this example loopCounter the number of characters sent Connect the USB cable from Launchpad to PC When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Open a COM port with the following settings using a terminal Find correct COM port Bits per second 9 6 0 0 Data Bits 8 Parity None Stop Bits 1 Hardware Control None The program will print out a greeting and then ask you to enter a character which it will echo back to the terminal SCI SCI Echoback SCI Echoback These examples demonstrate two different approaches to implement SCI Echoback functionality Manual Driverlib sci_ex3_echoback.c in driverlib Direct Register/Bitfield sci_ex1_echoback.c in device_support This test receives and echo-backs data through the SCI-A port A terminal such as putty can be used to view the data from the SCI and to send information to the SCI Characters received by the SCI port are sent back to the host This example project has support for migration across our C2000 device families If you are wanting to build this project from launchpad or controlCARD please specify in the syscfg file the board you re using At any time you can select another device to migrate this example loopCounter the number of characters sent Connect the USB cable from Launchpad to PC When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Open a COM port with the following settings using a terminal Find correct COM port Bits per second 9 6 0 0 Data Bits 8 Parity None Stop Bits 1 Hardware Control None The program will print out a greeting and then ask you to enter a character which it will echo back to the terminal SCI</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_SCI_INTERNAL_LOOPBACK</field>
    <field name="url">EXAMPLES_DRIVERS_SCI_INTERNAL_LOOPBACK.html</field>
    <field name="keywords"></field>
    <field name="text">This example uses the internal loopback test mode of the SPI module This is a very basic loopback that does not use the FIFOs or interrupts A stream of data is sent and then compared to the received stream The pinmux and SPI modules are configured through the sysconfig file The sent data looks like this This pattern is repeated forever sData Data to send rData Received data None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission SCI This example uses the internal loopback test mode of the SPI module This is a very basic loopback that does not use the FIFOs or interrupts A stream of data is sent and then compared to the received stream The pinmux and SPI modules are configured through the sysconfig file The sent data looks like this This pattern is repeated forever sData Data to send rData Received data None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission SCI SCI Internal Loopback SCI Internal Loopback This example uses the internal loopback test mode of the SPI module This is a very basic loopback that does not use the FIFOs or interrupts A stream of data is sent and then compared to the received stream The pinmux and SPI modules are configured through the sysconfig file The sent data looks like this This pattern is repeated forever sData Data to send rData Received data None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission SCI</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_SCI_INTERNAL_LOOPBACK_INTERRUPTS</field>
    <field name="url">EXAMPLES_DRIVERS_SCI_INTERNAL_LOOPBACK_INTERRUPTS.html</field>
    <field name="keywords"></field>
    <field name="text">This test uses the internal loop back test mode of the SCI peripheral Other then boot mode pin configuration no other hardware configuration is required Both Transmit and Receive interrupts and FIFOs are used A stream of data is sent and then compared to the received stream The SCI-A sent data looks like this The pattern is repeated forever sDataA Data being sent rDataA Data received rDataPointA Keep track of where we are in the data stream This is used to check the incoming data None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission SCI This test uses the internal loop back test mode of the SCI peripheral Other then boot mode pin configuration no other hardware configuration is required Both Transmit and Receive interrupts and FIFOs are used A stream of data is sent and then compared to the received stream The SCI-A sent data looks like this The pattern is repeated forever sDataA Data being sent rDataA Data received rDataPointA Keep track of where we are in the data stream This is used to check the incoming data None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission SCI SCI Internal Loopback with Interrupts SCI Internal Loopback with Interrupts This test uses the internal loop back test mode of the SCI peripheral Other then boot mode pin configuration no other hardware configuration is required Both Transmit and Receive interrupts and FIFOs are used A stream of data is sent and then compared to the received stream The SCI-A sent data looks like this The pattern is repeated forever sDataA Data being sent rDataA Data received rDataPointA Keep track of where we are in the data stream This is used to check the incoming data None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission SCI</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_SCI_STDOUT_REDIRECT</field>
    <field name="url">EXAMPLES_DRIVERS_SCI_STDOUT_REDIRECT.html</field>
    <field name="keywords"></field>
    <field name="text">This test transmits data through the SCI-A port to a terminal A terminal such as putty can be used to view the data from the SCI Characters received by the SCI port are sent back to the host None Connect the SCI-A port to a PC via a transceiver and cable DEVICE_GPIO_PIN_SCIRXDA is SCI_A-RXD Connect to Pin3 PC-TX of serial DB9 cable DEVICE_GPIO_PIN_SCITXDA is SCI_A-TXD Connect to Pin2 PC-RX of serial DB9 cable When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Open a COM port with the following settings using a terminal Find correct COM port Bits per second 9 6 0 0 Data Bits 8 Parity None Stop Bits 1 Hardware Control None The program will print out three sentences one to the SCIA one to CCS and a final one to SCIA SCI This test transmits data through the SCI-A port to a terminal A terminal such as putty can be used to view the data from the SCI Characters received by the SCI port are sent back to the host None Connect the SCI-A port to a PC via a transceiver and cable DEVICE_GPIO_PIN_SCIRXDA is SCI_A-RXD Connect to Pin3 PC-TX of serial DB9 cable DEVICE_GPIO_PIN_SCITXDA is SCI_A-TXD Connect to Pin2 PC-RX of serial DB9 cable When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Open a COM port with the following settings using a terminal Find correct COM port Bits per second 9 6 0 0 Data Bits 8 Parity None Stop Bits 1 Hardware Control None The program will print out three sentences one to the SCIA one to CCS and a final one to SCIA SCI STDOUT Redirect with SCI STDOUT Redirect with SCI This test transmits data through the SCI-A port to a terminal A terminal such as putty can be used to view the data from the SCI Characters received by the SCI port are sent back to the host None Connect the SCI-A port to a PC via a transceiver and cable DEVICE_GPIO_PIN_SCIRXDA is SCI_A-RXD Connect to Pin3 PC-TX of serial DB9 cable DEVICE_GPIO_PIN_SCITXDA is SCI_A-TXD Connect to Pin2 PC-RX of serial DB9 cable When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Open a COM port with the following settings using a terminal Find correct COM port Bits per second 9 6 0 0 Data Bits 8 Parity None Stop Bits 1 Hardware Control None The program will print out three sentences one to the SCIA one to CCS and a final one to SCIA SCI</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_SPI_EEPROM</field>
    <field name="url">EXAMPLES_DRIVERS_SPI_EEPROM.html</field>
    <field name="keywords"></field>
    <field name="text">This example writes 8 bytes to an SPI EEPROM and reads them back The device communicates with the EEPROM via SPI and specific opcodes This example is written to work with the SPI Serial EEPROM AT25128/256 SPI character length is configured to 8 bits in SysConfig and not changed throughout the execution of the program Runtime updation of character length when CS pin is not controlled by the SPI module can lead to unpredictable behaviour writeBuffer Data that is written to external EEPROM readBuffer Data that is read back from EEPROM error Error count Connect GPIO2 PICO to external EEPROM SI pin Connect GPIO5 POCI to external EEPROM SO pin Connect GPIO3 CLK to external EEPROM SCK pin Connect GPIO12 CS to external EEPROM CS pin Connect the external EEPROM VCC and GND pins When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Check error count to ensure read/write has occurred successfully Place breakpoints and inspect TX and RX buffers to monitor actual sent and received data SPI This example writes 8 bytes to an SPI EEPROM and reads them back The device communicates with the EEPROM via SPI and specific opcodes This example is written to work with the SPI Serial EEPROM AT25128/256 SPI character length is configured to 8 bits in SysConfig and not changed throughout the execution of the program Runtime updation of character length when CS pin is not controlled by the SPI module can lead to unpredictable behaviour writeBuffer Data that is written to external EEPROM readBuffer Data that is read back from EEPROM error Error count Connect GPIO2 PICO to external EEPROM SI pin Connect GPIO5 POCI to external EEPROM SO pin Connect GPIO3 CLK to external EEPROM SCK pin Connect GPIO12 CS to external EEPROM CS pin Connect the external EEPROM VCC and GND pins When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Check error count to ensure read/write has occurred successfully Place breakpoints and inspect TX and RX buffers to monitor actual sent and received data SPI SPI EEPROM Interface SPI EEPROM Interface This example writes 8 bytes to an SPI EEPROM and reads them back The device communicates with the EEPROM via SPI and specific opcodes This example is written to work with the SPI Serial EEPROM AT25128/256 SPI character length is configured to 8 bits in SysConfig and not changed throughout the execution of the program Runtime updation of character length when CS pin is not controlled by the SPI module can lead to unpredictable behaviour writeBuffer Data that is written to external EEPROM readBuffer Data that is read back from EEPROM error Error count Connect GPIO2 PICO to external EEPROM SI pin Connect GPIO5 POCI to external EEPROM SO pin Connect GPIO3 CLK to external EEPROM SCK pin Connect GPIO12 CS to external EEPROM CS pin Connect the external EEPROM VCC and GND pins When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Check error count to ensure read/write has occurred successfully Place breakpoints and inspect TX and RX buffers to monitor actual sent and received data SPI</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_SPI_EEPROM_DMA</field>
    <field name="url">EXAMPLES_DRIVERS_SPI_EEPROM_DMA.html</field>
    <field name="keywords"></field>
    <field name="text">This example writes 8 bytes to an SPI EEPROM and reads them back The device communicates with the EEPROM via SPI and specific opcodes This example is written to work with the SPI Serial EEPROM AT25128/256 The high-level APIS for setup and transaction operations with SPI_DMA are defined in the spi_DMA file SPI character length is configured to 8 bits in SysConfig and not changed throughout the execution of the program Runtime updation of character length when CS pin is not controlled by the SPI module can lead to unpredictable behaviour writeBuffer Data that is written to external EEPROM SPI_DMA_Handle.RXdata Data that is read back from EEPROM when number of received bytes is less than 4 SPI_DMA_Handle.pSPIRXDMA pbuffer Start address of received data from EEPROM error Error count Connect GPIO2 PICO to external EEPROM SI pin Connect GPIO5 POCI to external EEPROM SO pin Connect GPIO3 CLK to external EEPROM SCK pin Connect GPIO12 CS to external EEPROM CS pin Connect the external EEPROM VCC and GND pins When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Check error count to ensure read/write has occurred successfully Place breakpoints and inspect RXdata to monitor actual received data during different transactions SPI This example writes 8 bytes to an SPI EEPROM and reads them back The device communicates with the EEPROM via SPI and specific opcodes This example is written to work with the SPI Serial EEPROM AT25128/256 The high-level APIS for setup and transaction operations with SPI_DMA are defined in the spi_DMA file SPI character length is configured to 8 bits in SysConfig and not changed throughout the execution of the program Runtime updation of character length when CS pin is not controlled by the SPI module can lead to unpredictable behaviour writeBuffer Data that is written to external EEPROM SPI_DMA_Handle.RXdata Data that is read back from EEPROM when number of received bytes is less than 4 SPI_DMA_Handle.pSPIRXDMA pbuffer Start address of received data from EEPROM error Error count Connect GPIO2 PICO to external EEPROM SI pin Connect GPIO5 POCI to external EEPROM SO pin Connect GPIO3 CLK to external EEPROM SCK pin Connect GPIO12 CS to external EEPROM CS pin Connect the external EEPROM VCC and GND pins When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Check error count to ensure read/write has occurred successfully Place breakpoints and inspect RXdata to monitor actual received data during different transactions SPI SPI EEPROM Interface with DMA SPI EEPROM Interface with DMA This example writes 8 bytes to an SPI EEPROM and reads them back The device communicates with the EEPROM via SPI and specific opcodes This example is written to work with the SPI Serial EEPROM AT25128/256 The high-level APIS for setup and transaction operations with SPI_DMA are defined in the spi_DMA file SPI character length is configured to 8 bits in SysConfig and not changed throughout the execution of the program Runtime updation of character length when CS pin is not controlled by the SPI module can lead to unpredictable behaviour writeBuffer Data that is written to external EEPROM SPI_DMA_Handle.RXdata Data that is read back from EEPROM when number of received bytes is less than 4 SPI_DMA_Handle.pSPIRXDMA pbuffer Start address of received data from EEPROM error Error count Connect GPIO2 PICO to external EEPROM SI pin Connect GPIO5 POCI to external EEPROM SO pin Connect GPIO3 CLK to external EEPROM SCK pin Connect GPIO12 CS to external EEPROM CS pin Connect the external EEPROM VCC and GND pins When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Check error count to ensure read/write has occurred successfully Place breakpoints and inspect RXdata to monitor actual received data during different transactions SPI</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_SPI_INTERNAL_LOOPBACK</field>
    <field name="url">EXAMPLES_DRIVERS_SPI_INTERNAL_LOOPBACK.html</field>
    <field name="keywords"></field>
    <field name="text">These examples demonstrate two different approaches to implement SPI Loopback functionality Manual Driverlib spi_ex1_loopback.c in driverlib Direct Register/Bitfield spi_ex1_loopback.c in device_support This example uses the internal loopback test mode of the SPI module This is a very basic loopback that does not use the FIFOs or interrupts A stream of data is sent and then compared to the received stream The pinmux and SPI modules are configured through the sysconfig file The sent data looks like this This pattern is repeated forever sData Data to send rData Received data None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission SPI These examples demonstrate two different approaches to implement SPI Loopback functionality Manual Driverlib spi_ex1_loopback.c in driverlib Direct Register/Bitfield spi_ex1_loopback.c in device_support This example uses the internal loopback test mode of the SPI module This is a very basic loopback that does not use the FIFOs or interrupts A stream of data is sent and then compared to the received stream The pinmux and SPI modules are configured through the sysconfig file The sent data looks like this This pattern is repeated forever sData Data to send rData Received data None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission SPI SPI Internal Loopback SPI Internal Loopback These examples demonstrate two different approaches to implement SPI Loopback functionality Manual Driverlib spi_ex1_loopback.c in driverlib Direct Register/Bitfield spi_ex1_loopback.c in device_support This example uses the internal loopback test mode of the SPI module This is a very basic loopback that does not use the FIFOs or interrupts A stream of data is sent and then compared to the received stream The pinmux and SPI modules are configured through the sysconfig file The sent data looks like this This pattern is repeated forever sData Data to send rData Received data None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission SPI</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_SPI_INTERNAL_LOOPBACK_INTERRUPTS</field>
    <field name="url">EXAMPLES_DRIVERS_SPI_INTERNAL_LOOPBACK_INTERRUPTS.html</field>
    <field name="keywords"></field>
    <field name="text">This program uses the internal loopback test mode of the SPI module Both the SPI FIFOs are used and SPI RX interrupt is used A stream of data is sent and then compared to the received stream The sent data looks like this This pattern is repeated forever sData Data to send rData Received data rDataPoint Used to keep track of the last position in the receive stream for error checking None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission SPI This program uses the internal loopback test mode of the SPI module Both the SPI FIFOs are used and SPI RX interrupt is used A stream of data is sent and then compared to the received stream The sent data looks like this This pattern is repeated forever sData Data to send rData Received data rDataPoint Used to keep track of the last position in the receive stream for error checking None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission SPI SPI Internal Loopback with Interrupts SPI Internal Loopback with Interrupts This program uses the internal loopback test mode of the SPI module Both the SPI FIFOs are used and SPI RX interrupt is used A stream of data is sent and then compared to the received stream The sent data looks like this This pattern is repeated forever sData Data to send rData Received data rDataPoint Used to keep track of the last position in the receive stream for error checking None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission SPI</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_SPI_LOOPBACK_DMA</field>
    <field name="url">EXAMPLES_DRIVERS_SPI_LOOPBACK_DMA.html</field>
    <field name="keywords"></field>
    <field name="text">These examples demonstrate two different approaches to implement SPI Loopback functionality Manual Driverlib spi_ex5_loopback_dma.c in driverlib Direct Register/Bitfield spi_ex2_dma_loopback.c in device_support This program uses the internal loopback test mode of the SPI module Both DMA interrupts and the SPI FIFOs are used When the SPI transmit FIFO has enough space as indicated by its FIFO level interrupt signal the DMA will transfer data from global variable sData into the FIFO This will be transmitted to the receive FIFO via the internal loopback When enough data has been placed in the receive FIFO as indicated by its FIFO level interrupt signal the DMA will transfer the data from the FIFO into global variable rData When all data has been placed into rData a check of the validity of the data will be performed in one of the DMA channels ISRs sData Data to send rData Received data None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Once DMA operations are complete and program hits ESTOP inspect received data SPI These examples demonstrate two different approaches to implement SPI Loopback functionality Manual Driverlib spi_ex5_loopback_dma.c in driverlib Direct Register/Bitfield spi_ex2_dma_loopback.c in device_support This program uses the internal loopback test mode of the SPI module Both DMA interrupts and the SPI FIFOs are used When the SPI transmit FIFO has enough space as indicated by its FIFO level interrupt signal the DMA will transfer data from global variable sData into the FIFO This will be transmitted to the receive FIFO via the internal loopback When enough data has been placed in the receive FIFO as indicated by its FIFO level interrupt signal the DMA will transfer the data from the FIFO into global variable rData When all data has been placed into rData a check of the validity of the data will be performed in one of the DMA channels ISRs sData Data to send rData Received data None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Once DMA operations are complete and program hits ESTOP inspect received data SPI SPI Loopback with DMA SPI Loopback with DMA These examples demonstrate two different approaches to implement SPI Loopback functionality Manual Driverlib spi_ex5_loopback_dma.c in driverlib Direct Register/Bitfield spi_ex2_dma_loopback.c in device_support This program uses the internal loopback test mode of the SPI module Both DMA interrupts and the SPI FIFOs are used When the SPI transmit FIFO has enough space as indicated by its FIFO level interrupt signal the DMA will transfer data from global variable sData into the FIFO This will be transmitted to the receive FIFO via the internal loopback When enough data has been placed in the receive FIFO as indicated by its FIFO level interrupt signal the DMA will transfer the data from the FIFO into global variable rData When all data has been placed into rData a check of the validity of the data will be performed in one of the DMA channels ISRs sData Data to send rData Received data None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Once DMA operations are complete and program hits ESTOP inspect received data SPI</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_SYSCTL_EX1</field>
    <field name="url">EXAMPLES_DRIVERS_SYSCTL_EX1.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates the missing clock detection functionality and the way to handle it Once the MCD is simulated by disconnecting the OSCCLK to the MCD module an NMI would be generated This NMI determines that an MCD was generated due to a clock failure which is handled in the ISR Before an MCD the clock frequency would be as per device initialization 2 0 0 Mhz Post MCD the frequency would move to 1 0 Mhz or INTOSC1 The example also shows how we can lock the PLL after missing clock detection by first explicitly switching the clock source to INTOSC1 resetting the missing clock detect circuit and then re-locking the PLL Post a re-lock the clock frequency would be 2 0 0 Mhz but using the INTOSC1 as clock source None fail Indicates that a missing clock was either not detected or was not handled correctly mcd_clkfail_isr Indicates that the missing clock failure caused an NMI to be triggered and called an the ISR to handle it mcd_detect Indicates that a missing clock was detected result Status of a successful handling of missing clock detection This example demonstrates the missing clock detection functionality and the way to handle it Once the MCD is simulated by disconnecting the OSCCLK to the MCD module an NMI would be generated This NMI determines that an MCD was generated due to a clock failure which is handled in the ISR Before an MCD the clock frequency would be as per device initialization 2 0 0 Mhz Post MCD the frequency would move to 1 0 Mhz or INTOSC1 The example also shows how we can lock the PLL after missing clock detection by first explicitly switching the clock source to INTOSC1 resetting the missing clock detect circuit and then re-locking the PLL Post a re-lock the clock frequency would be 2 0 0 Mhz but using the INTOSC1 as clock source None fail Indicates that a missing clock was either not detected or was not handled correctly mcd_clkfail_isr Indicates that the missing clock failure caused an NMI to be triggered and called an the ISR to handle it mcd_detect Indicates that a missing clock was detected result Status of a successful handling of missing clock detection Missing clock detection Missing clock detection This example demonstrates the missing clock detection functionality and the way to handle it Once the MCD is simulated by disconnecting the OSCCLK to the MCD module an NMI would be generated This NMI determines that an MCD was generated due to a clock failure which is handled in the ISR Before an MCD the clock frequency would be as per device initialization 2 0 0 Mhz Post MCD the frequency would move to 1 0 Mhz or INTOSC1 The example also shows how we can lock the PLL after missing clock detection by first explicitly switching the clock source to INTOSC1 resetting the missing clock detect circuit and then re-locking the PLL Post a re-lock the clock frequency would be 2 0 0 Mhz but using the INTOSC1 as clock source None fail Indicates that a missing clock was either not detected or was not handled correctly mcd_clkfail_isr Indicates that the missing clock failure caused an NMI to be triggered and called an the ISR to handle it mcd_detect Indicates that a missing clock was detected result Status of a successful handling of missing clock detection</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_SYSCTL_EX2</field>
    <field name="url">EXAMPLES_DRIVERS_SYSCTL_EX2.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates how to configure the XCLKOUT pin for driving internal clocks through an external pin for debugging and testing purposes In this example we are using INTOSC1 as the XCLKOUT clock source configuring the divider as 8 Expected frequency of XCLKOUT INTOSC1 freq 1 0 1.25MHz View the XCLKOUT on GPIO73 using an oscilloscope The pin used in this example is not available on the HSEC board This example demonstrates how to configure the XCLKOUT pin for driving internal clocks through an external pin for debugging and testing purposes In this example we are using INTOSC1 as the XCLKOUT clock source configuring the divider as 8 Expected frequency of XCLKOUT INTOSC1 freq 1 0 1.25MHz View the XCLKOUT on GPIO73 using an oscilloscope The pin used in this example is not available on the HSEC board XCLKOUT Configuration XCLKOUT Configuration This example demonstrates how to configure the XCLKOUT pin for driving internal clocks through an external pin for debugging and testing purposes In this example we are using INTOSC1 as the XCLKOUT clock source configuring the divider as 8 Expected frequency of XCLKOUT INTOSC1 freq 1 0 1.25MHz View the XCLKOUT on GPIO73 using an oscilloscope The pin used in this example is not available on the HSEC board</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_UART_ECHOBACK</field>
    <field name="url">EXAMPLES_DRIVERS_UART_ECHOBACK.html</field>
    <field name="keywords"></field>
    <field name="text">This test receives and echo-backs data through the UART A port A terminal such as Putty can be used to view the data from the UART and to send information to the UART Characters received by the UART port are sent back to the host Avoid keeping the memory browser open while the execution is in progress None Connect the UARTA port to a PC via a transceiver and cable GPIO32 UARTA RX Connect to Pin3 PC-TX of serial DB9 cable GPIO43 UARTA TX Connect to Pin2 PC-RX of serial DB9 cable When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Open a COM port with the following settings using a terminal Find correct COM port Bits per second 1 1 5 2 0 0 Data Bits 8 Parity None Stop Bits 1 Hardware Control None The program will print out a greeting and then ask you to enter a character which it will echo back to the terminal UART This test receives and echo-backs data through the UART A port A terminal such as Putty can be used to view the data from the UART and to send information to the UART Characters received by the UART port are sent back to the host Avoid keeping the memory browser open while the execution is in progress None Connect the UARTA port to a PC via a transceiver and cable GPIO32 UARTA RX Connect to Pin3 PC-TX of serial DB9 cable GPIO43 UARTA TX Connect to Pin2 PC-RX of serial DB9 cable When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Open a COM port with the following settings using a terminal Find correct COM port Bits per second 1 1 5 2 0 0 Data Bits 8 Parity None Stop Bits 1 Hardware Control None The program will print out a greeting and then ask you to enter a character which it will echo back to the terminal UART UART Echoback UART Echoback This test receives and echo-backs data through the UART A port A terminal such as Putty can be used to view the data from the UART and to send information to the UART Characters received by the UART port are sent back to the host Avoid keeping the memory browser open while the execution is in progress None Connect the UARTA port to a PC via a transceiver and cable GPIO32 UARTA RX Connect to Pin3 PC-TX of serial DB9 cable GPIO43 UARTA TX Connect to Pin2 PC-RX of serial DB9 cable When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Open a COM port with the following settings using a terminal Find correct COM port Bits per second 1 1 5 2 0 0 Data Bits 8 Parity None Stop Bits 1 Hardware Control None The program will print out a greeting and then ask you to enter a character which it will echo back to the terminal UART</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_UART_LOOPBACK</field>
    <field name="url">EXAMPLES_DRIVERS_UART_LOOPBACK.html</field>
    <field name="keywords"></field>
    <field name="text">This example uses the internal loopback test mode of the UART module This is a very basic loopback that does not use the FIFOs or interrupts Data is sent byte by byte then compared to received data in an infinite loop The pinmux and UART modules are configured through the sysconfig file The sent data looks like this This pattern is repeated forever Avoid keeping the memory browser open while the execution is in progress sData Data being sent rData Data received loopCount Number of characters sent errorCount Number of errors detected Connect the UARTA Rx port to Tx port for external loopback GPIO32 is UARTARX to be connected to GPIO43 is UARTATX When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission UART This example uses the internal loopback test mode of the UART module This is a very basic loopback that does not use the FIFOs or interrupts Data is sent byte by byte then compared to received data in an infinite loop The pinmux and UART modules are configured through the sysconfig file The sent data looks like this This pattern is repeated forever Avoid keeping the memory browser open while the execution is in progress sData Data being sent rData Data received loopCount Number of characters sent errorCount Number of errors detected Connect the UARTA Rx port to Tx port for external loopback GPIO32 is UARTARX to be connected to GPIO43 is UARTATX When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission UART UART Internal Loopback UART Internal Loopback This example uses the internal loopback test mode of the UART module This is a very basic loopback that does not use the FIFOs or interrupts Data is sent byte by byte then compared to received data in an infinite loop The pinmux and UART modules are configured through the sysconfig file The sent data looks like this This pattern is repeated forever Avoid keeping the memory browser open while the execution is in progress sData Data being sent rData Data received loopCount Number of characters sent errorCount Number of errors detected Connect the UARTA Rx port to Tx port for external loopback GPIO32 is UARTARX to be connected to GPIO43 is UARTATX When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission UART</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_UART_LOOPBACK_DMA</field>
    <field name="url">EXAMPLES_DRIVERS_UART_LOOPBACK_DMA.html</field>
    <field name="keywords"></field>
    <field name="text">This program uses the internal loopback test mode of the UART module Two DMA interrupts and both of the UART FIFOs are used Both DMA channels are configured to transfer BUFFER_SIZE words with each burst being UART_BUFFER_SIZE words The configurations for the UART module and both DMA modules are done in the Sysconfig file Only the lower 8 bits of each word will be transmitted and received by the UART since the UART data register only has an 8 bit data field When the UART transmit FIFO has enough space UART_BUFFER_SIZE bytes empty the TX DMA will transfer data from the txData buffer in GSRAM memory into the transmit FIFO by writing to the UART data register The data in the transmit FIFO will then be transmitted to the receive FIFO via the internal loopback When enough data has been placed in the receive FIFO UART_BUFFER_SIZE data bytes full the RX DMA will transfer the data from the receive FIFO into the rxData buffer in GSRAM memory by reading the UART data register This example implements the UART FIFO Buffers in NON Fine-Grained mode When BUFFER_SIZE words have been placed into rxData a check of the validity of the data will be performed and the errCount variable will indicate the amount of data mismatches between txData and rxData Avoid keeping the memory browser open while the execution is in progress txData Data transmitted rxData Data received errCount Error count For external loopback uncheck in Sysconfig myUART0 instance and connect UARTA_TX and UARTA_RX UARTA_TX is on GPIO43 UARTA_RX is on GPIO32 When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Set BUFFER_SIZE to desired words of data to transfer This value must be even numbered Set UART_BUFFER_SIZE to 2 4 8 1 2 or 1 4 This value must divide evenly into the chosen BUFFER_SIZE Change and settings in Sysconfig for both myDMA0 and myDMA1 to reflect these values Burst Size UART_BUFFER_SIZE Transfer Size BUFFER_SIZE UART_BUFFER_SIZE To use 3 2 bit words instead of 1 6 bit words change txData and rxData data types to uint32_t setting in Sysconfig for both myDMA0 and myDMA1 to DMA0 and in Sysconfig to 2 DMA1 and in Sysconfig to 2 Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Once DMA operations are complete and program hits ESTOP inspect received data UART This program uses the internal loopback test mode of the UART module Two DMA interrupts and both of the UART FIFOs are used Both DMA channels are configured to transfer BUFFER_SIZE words with each burst being UART_BUFFER_SIZE words The configurations for the UART module and both DMA modules are done in the Sysconfig file Only the lower 8 bits of each word will be transmitted and received by the UART since the UART data register only has an 8 bit data field When the UART transmit FIFO has enough space UART_BUFFER_SIZE bytes empty the TX DMA will transfer data from the txData buffer in GSRAM memory into the transmit FIFO by writing to the UART data register The data in the transmit FIFO will then be transmitted to the receive FIFO via the internal loopback When enough data has been placed in the receive FIFO UART_BUFFER_SIZE data bytes full the RX DMA will transfer the data from the receive FIFO into the rxData buffer in GSRAM memory by reading the UART data register This example implements the UART FIFO Buffers in NON Fine-Grained mode When BUFFER_SIZE words have been placed into rxData a check of the validity of the data will be performed and the errCount variable will indicate the amount of data mismatches between txData and rxData Avoid keeping the memory browser open while the execution is in progress txData Data transmitted rxData Data received errCount Error count For external loopback uncheck in Sysconfig myUART0 instance and connect UARTA_TX and UARTA_RX UARTA_TX is on GPIO43 UARTA_RX is on GPIO32 When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Set BUFFER_SIZE to desired words of data to transfer This value must be even numbered Set UART_BUFFER_SIZE to 2 4 8 1 2 or 1 4 This value must divide evenly into the chosen BUFFER_SIZE Change and settings in Sysconfig for both myDMA0 and myDMA1 to reflect these values Burst Size UART_BUFFER_SIZE Transfer Size BUFFER_SIZE UART_BUFFER_SIZE To use 3 2 bit words instead of 1 6 bit words change txData and rxData data types to uint32_t setting in Sysconfig for both myDMA0 and myDMA1 to DMA0 and in Sysconfig to 2 DMA1 and in Sysconfig to 2 Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Once DMA operations are complete and program hits ESTOP inspect received data UART UART Internal Loopback with DMA UART Internal Loopback with DMA This program uses the internal loopback test mode of the UART module Two DMA interrupts and both of the UART FIFOs are used Both DMA channels are configured to transfer BUFFER_SIZE words with each burst being UART_BUFFER_SIZE words The configurations for the UART module and both DMA modules are done in the Sysconfig file Only the lower 8 bits of each word will be transmitted and received by the UART since the UART data register only has an 8 bit data field When the UART transmit FIFO has enough space UART_BUFFER_SIZE bytes empty the TX DMA will transfer data from the txData buffer in GSRAM memory into the transmit FIFO by writing to the UART data register The data in the transmit FIFO will then be transmitted to the receive FIFO via the internal loopback When enough data has been placed in the receive FIFO UART_BUFFER_SIZE data bytes full the RX DMA will transfer the data from the receive FIFO into the rxData buffer in GSRAM memory by reading the UART data register This example implements the UART FIFO Buffers in NON Fine-Grained mode When BUFFER_SIZE words have been placed into rxData a check of the validity of the data will be performed and the errCount variable will indicate the amount of data mismatches between txData and rxData Avoid keeping the memory browser open while the execution is in progress txData Data transmitted rxData Data received errCount Error count For external loopback uncheck in Sysconfig myUART0 instance and connect UARTA_TX and UARTA_RX UARTA_TX is on GPIO43 UARTA_RX is on GPIO32 When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Set BUFFER_SIZE to desired words of data to transfer This value must be even numbered Set UART_BUFFER_SIZE to 2 4 8 1 2 or 1 4 This value must divide evenly into the chosen BUFFER_SIZE Change and settings in Sysconfig for both myDMA0 and myDMA1 to reflect these values Burst Size UART_BUFFER_SIZE Transfer Size BUFFER_SIZE UART_BUFFER_SIZE To use 3 2 bit words instead of 1 6 bit words change txData and rxData data types to uint32_t setting in Sysconfig for both myDMA0 and myDMA1 to DMA0 and in Sysconfig to 2 DMA1 and in Sysconfig to 2 Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Once DMA operations are complete and program hits ESTOP inspect received data UART</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_UART_LOOPBACK_FIFO_INTERRUPTS</field>
    <field name="url">EXAMPLES_DRIVERS_UART_LOOPBACK_FIFO_INTERRUPTS.html</field>
    <field name="keywords"></field>
    <field name="text">This example uses the internal loopback test mode of the UART module UART RX interrupt is used with FIFO level 2 The receive ISR verifies the received data It then prepares and sends data for the next transmission The sent data looks like this This pattern is repeated forever Avoid keeping the memory browser open while the execution is in progress sData Data being sent rData Data received loopCount Number of times ISR is executed errorCount Number of errors detected Connect the UARTA Rx port to Tx port for external loopback GPIO32 is UARTARX to be connected to GPIO43 is UARTATX When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission UART This example uses the internal loopback test mode of the UART module UART RX interrupt is used with FIFO level 2 The receive ISR verifies the received data It then prepares and sends data for the next transmission The sent data looks like this This pattern is repeated forever Avoid keeping the memory browser open while the execution is in progress sData Data being sent rData Data received loopCount Number of times ISR is executed errorCount Number of errors detected Connect the UARTA Rx port to Tx port for external loopback GPIO32 is UARTARX to be connected to GPIO43 is UARTATX When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission UART UART Internal Loopback with FIFO Interrupts UART Internal Loopback with FIFO Interrupts This example uses the internal loopback test mode of the UART module UART RX interrupt is used with FIFO level 2 The receive ISR verifies the received data It then prepares and sends data for the next transmission The sent data looks like this This pattern is repeated forever Avoid keeping the memory browser open while the execution is in progress sData Data being sent rData Data received loopCount Number of times ISR is executed errorCount Number of errors detected Connect the UARTA Rx port to Tx port for external loopback GPIO32 is UARTARX to be connected to GPIO43 is UARTATX When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Using the watch variables monitor data transmission UART</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_DRIVERS_WD_EX1</field>
    <field name="url">EXAMPLES_DRIVERS_WD_EX1.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates how to service the watchdog or generate a wakeup interrupt using the watchdog on the F28E12x device By default the example generates a wakeup interrupt To service the watchdog and avoid generating the interrupt uncomment the SysCtl_serviceWatchdog() line in the main loop Demonstrates the use of the watchdog timer in interrupt mode Configurable to either service the watchdog or allow it to timeout and trigger an interrupt Tracks the number of wakeup interrupts and main loop iterations None Watch Variable Description wakeCount Tracks the number of times the watchdog ISR is entered loopCount Tracks the number of loops performed while not in the ISR Header File Description driverlib.h Provides access to device driver library functions device.h Contains device-specific definitions uint32_t wakeCount Counter for the number of wakeup interrupts uint32_t loopCount Counter for the number of main loop iterations ISR Description __interrupt void wakeupISR(void) Interrupt Service Routine ISR for the watchdog wakeup interrupt Ensure that the device is properly configured and connected before running the example Check the interrupt Channels corresponding to your base This example demonstrates how to service the watchdog or generate a wakeup interrupt using the watchdog on the F28E12x device By default the example generates a wakeup interrupt To service the watchdog and avoid generating the interrupt uncomment the SysCtl_serviceWatchdog() line in the main loop Demonstrates the use of the watchdog timer in interrupt mode Configurable to either service the watchdog or allow it to timeout and trigger an interrupt Tracks the number of wakeup interrupts and main loop iterations None Watch Variable Description wakeCount Tracks the number of times the watchdog ISR is entered loopCount Tracks the number of loops performed while not in the ISR Header File Description driverlib.h Provides access to device driver library functions device.h Contains device-specific definitions uint32_t wakeCount Counter for the number of wakeup interrupts uint32_t loopCount Counter for the number of main loop iterations ISR Description __interrupt void wakeupISR(void) Interrupt Service Routine ISR for the watchdog wakeup interrupt Ensure that the device is properly configured and connected before running the example Check the interrupt Channels corresponding to your base Watchdog Service Example Watchdog Service Example This example demonstrates how to service the watchdog or generate a wakeup interrupt using the watchdog on the F28E12x device By default the example generates a wakeup interrupt To service the watchdog and avoid generating the interrupt uncomment the SysCtl_serviceWatchdog() line in the main loop Demonstrates the use of the watchdog timer in interrupt mode Configurable to either service the watchdog or allow it to timeout and trigger an interrupt Tracks the number of wakeup interrupts and main loop iterations None Watch Variable Description wakeCount Tracks the number of times the watchdog ISR is entered loopCount Tracks the number of loops performed while not in the ISR Header File Description driverlib.h Provides access to device driver library functions device.h Contains device-specific definitions uint32_t wakeCount Counter for the number of wakeup interrupts uint32_t loopCount Counter for the number of main loop iterations ISR Description __interrupt void wakeupISR(void) Interrupt Service Routine ISR for the watchdog wakeup interrupt Ensure that the device is properly configured and connected before running the example Check the interrupt Channels corresponding to your base</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_FREERTOS</field>
    <field name="url">EXAMPLES_FREERTOS.html</field>
    <field name="keywords"></field>
    <field name="text">This page lists all the FreeRTOS examples in the SDK FreeRTOS LED Blinky with SysConfig FreeRTOS Examples FreeRTOS Examples This page lists all the FreeRTOS examples in the SDK FreeRTOS LED Blinky with SysConfig</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_FREERTOS::EXAMPLES_FREERTOS_LED_BLINKY_SYSCFG</field>
    <field name="url">EXAMPLES_FREERTOS_LED_BLINKY_SYSCFG.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates the FreeRTOS specific configuration through Sysconfig The example configures LEDs CPUTimers and FreeRTOS and creates two tasks which blink the on-board LEDs periodically None The two on-board LEDs should be blinking periodically None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Observe the on-board LEDs and place breakpoints to verify task entry and execution This example demonstrates the FreeRTOS specific configuration through Sysconfig The example configures LEDs CPUTimers and FreeRTOS and creates two tasks which blink the on-board LEDs periodically None The two on-board LEDs should be blinking periodically None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Observe the on-board LEDs and place breakpoints to verify task entry and execution FreeRTOS LED Blinky with SysConfig FreeRTOS LED Blinky with SysConfig This example demonstrates the FreeRTOS specific configuration through Sysconfig The example configures LEDs CPUTimers and FreeRTOS and creates two tasks which blink the on-board LEDs periodically None The two on-board LEDs should be blinking periodically None When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Observe the on-board LEDs and place breakpoints to verify task entry and execution</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_I2C_EX1_CONTROLLER</field>
    <field name="url">EXAMPLES_I2C_EX1_CONTROLLER.html</field>
    <field name="keywords"></field>
    <field name="text">This program demonstrates how to use the I2CA module in controller configuration on a Texas Instruments C2000 microcontroller The example uses polling and does not utilize interrupts or FIFO Requirement Description Two Control Cards One configured as Controller and the other as Target Controller Binary Runs the binary generated from i2c_ex1_controller.projectspec Target Binary Runs the binary generated from i2c_ex1_target.projectspec Signal I2CA on Board 1 I2CA on Board 2 SCL GPIO_PIN_SCLA GPIO_PIN_SCLA SDA GPIO_PIN_SDAA GPIO_PIN_SDAA GND GND GND Example No Description 1 Controller Transmitter and Target Receiver Controller writes two bytes to the target 2 Controller Receiver and Target Transmitter Controller reads two bytes from the target 3 Controller Transmitter followed by Controller Receiver Controller writes two bytes to the target and then reads two bytes 4 Controller Receiver followed by Controller Transmitter Controller reads two bytes from the target and then writes two bytes The I2C clock is configured for 4 0 0 kHz with a 5 0 duty cycle I2CA_TXdata Transmit buffer for I2C I2CA_RXdata Receive buffer for I2C Function Signature Description void I2CController_Init(uint16_t I2CTarget_OwnAddress, uint16_t I2CTarget_Address) Initializes the I2CA module as a controller void I2CWrite(uint16_t targetAddr, uint16_t byteCount, bool sendStopCondition) Sends data over I2C as a controller transmitter uint16_t I2CRead(uint16_t targetAddr, uint16_t byteCount, bool sendStopCondition) Reads data over I2C as a controller receiver Variable Description uint16_t I2C_TXdata MAX_BUFFER_SIZE Buffer for transmitting data uint16_t I2C_RXdata MAX_BUFFER_SIZE Buffer for receiving data The program uses polling to check the status of I2C operations The ESTOP0 instruction is used to halt the program for debugging purposes When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states I2C This program demonstrates how to use the I2CA module in controller configuration on a Texas Instruments C2000 microcontroller The example uses polling and does not utilize interrupts or FIFO Requirement Description Two Control Cards One configured as Controller and the other as Target Controller Binary Runs the binary generated from i2c_ex1_controller.projectspec Target Binary Runs the binary generated from i2c_ex1_target.projectspec Signal I2CA on Board 1 I2CA on Board 2 SCL GPIO_PIN_SCLA GPIO_PIN_SCLA SDA GPIO_PIN_SDAA GPIO_PIN_SDAA GND GND GND Example No Description 1 Controller Transmitter and Target Receiver Controller writes two bytes to the target 2 Controller Receiver and Target Transmitter Controller reads two bytes from the target 3 Controller Transmitter followed by Controller Receiver Controller writes two bytes to the target and then reads two bytes 4 Controller Receiver followed by Controller Transmitter Controller reads two bytes from the target and then writes two bytes The I2C clock is configured for 4 0 0 kHz with a 5 0 duty cycle I2CA_TXdata Transmit buffer for I2C I2CA_RXdata Receive buffer for I2C Function Signature Description void I2CController_Init(uint16_t I2CTarget_OwnAddress, uint16_t I2CTarget_Address) Initializes the I2CA module as a controller void I2CWrite(uint16_t targetAddr, uint16_t byteCount, bool sendStopCondition) Sends data over I2C as a controller transmitter uint16_t I2CRead(uint16_t targetAddr, uint16_t byteCount, bool sendStopCondition) Reads data over I2C as a controller receiver Variable Description uint16_t I2C_TXdata MAX_BUFFER_SIZE Buffer for transmitting data uint16_t I2C_RXdata MAX_BUFFER_SIZE Buffer for receiving data The program uses polling to check the status of I2C operations The ESTOP0 instruction is used to halt the program for debugging purposes When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states I2C I2C Controller Mode I2C Controller Mode This program demonstrates how to use the I2CA module in controller configuration on a Texas Instruments C2000 microcontroller The example uses polling and does not utilize interrupts or FIFO Requirement Description Two Control Cards One configured as Controller and the other as Target Controller Binary Runs the binary generated from i2c_ex1_controller.projectspec Target Binary Runs the binary generated from i2c_ex1_target.projectspec Signal I2CA on Board 1 I2CA on Board 2 SCL GPIO_PIN_SCLA GPIO_PIN_SCLA SDA GPIO_PIN_SDAA GPIO_PIN_SDAA GND GND GND Example No Description 1 Controller Transmitter and Target Receiver Controller writes two bytes to the target 2 Controller Receiver and Target Transmitter Controller reads two bytes from the target 3 Controller Transmitter followed by Controller Receiver Controller writes two bytes to the target and then reads two bytes 4 Controller Receiver followed by Controller Transmitter Controller reads two bytes from the target and then writes two bytes The I2C clock is configured for 4 0 0 kHz with a 5 0 duty cycle I2CA_TXdata Transmit buffer for I2C I2CA_RXdata Receive buffer for I2C Function Signature Description void I2CController_Init(uint16_t I2CTarget_OwnAddress, uint16_t I2CTarget_Address) Initializes the I2CA module as a controller void I2CWrite(uint16_t targetAddr, uint16_t byteCount, bool sendStopCondition) Sends data over I2C as a controller transmitter uint16_t I2CRead(uint16_t targetAddr, uint16_t byteCount, bool sendStopCondition) Reads data over I2C as a controller receiver Variable Description uint16_t I2C_TXdata MAX_BUFFER_SIZE Buffer for transmitting data uint16_t I2C_RXdata MAX_BUFFER_SIZE Buffer for receiving data The program uses polling to check the status of I2C operations The ESTOP0 instruction is used to halt the program for debugging purposes When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states I2C</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_I2C_EX1_LOOPBACK</field>
    <field name="url">EXAMPLES_I2C_EX1_LOOPBACK.html</field>
    <field name="keywords"></field>
    <field name="text">This program demonstrates the use of the I2C module s internal loopback test mode with FIFO interrupts It sends a stream of data and verifies the received data against the expected pattern The example uses the TX and RX I2C FIFOs and their associated interrupts The sent data follows a repeating pattern 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 2 0 0 0 2 0 0 0 3 0 0 FE 0 0 FF 0 0 FF 0 0 0 0 The program initializes the device GPIO PIE and I2C modules Data is transmitted and received using FIFO interrupts The received data is validated against the expected pattern If a mismatch occurs the program halts execution for debugging This example supports migration across C2000 device families Ensure the correct board is specified in the syscfg file No external connections are required for this example Variable Description sData Data to send rData Received data rDataPoint Tracks the last position in the receive stream for error checking None ISR Name Description i2cFIFOISR Handles FIFO interrupts for transmitting and receiving data validates received data and clears interrupt flags INT_myI2C0_ISR Clears interrupt acknowledgment for SysConfig functionality When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project F29H85x When using makefiles to build note the required combination and build using make command see MAKEFILE_BUILD_PAGE Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states I2C This program demonstrates the use of the I2C module s internal loopback test mode with FIFO interrupts It sends a stream of data and verifies the received data against the expected pattern The example uses the TX and RX I2C FIFOs and their associated interrupts The sent data follows a repeating pattern 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 2 0 0 0 2 0 0 0 3 0 0 FE 0 0 FF 0 0 FF 0 0 0 0 The program initializes the device GPIO PIE and I2C modules Data is transmitted and received using FIFO interrupts The received data is validated against the expected pattern If a mismatch occurs the program halts execution for debugging This example supports migration across C2000 device families Ensure the correct board is specified in the syscfg file No external connections are required for this example Variable Description sData Data to send rData Received data rDataPoint Tracks the last position in the receive stream for error checking None ISR Name Description i2cFIFOISR Handles FIFO interrupts for transmitting and receiving data validates received data and clears interrupt flags INT_myI2C0_ISR Clears interrupt acknowledgment for SysConfig functionality When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project F29H85x When using makefiles to build note the required combination and build using make command see MAKEFILE_BUILD_PAGE Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states I2C I2C Loopback I2C Loopback This program demonstrates the use of the I2C module s internal loopback test mode with FIFO interrupts It sends a stream of data and verifies the received data against the expected pattern The example uses the TX and RX I2C FIFOs and their associated interrupts The sent data follows a repeating pattern 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 2 0 0 0 2 0 0 0 3 0 0 FE 0 0 FF 0 0 FF 0 0 0 0 The program initializes the device GPIO PIE and I2C modules Data is transmitted and received using FIFO interrupts The received data is validated against the expected pattern If a mismatch occurs the program halts execution for debugging This example supports migration across C2000 device families Ensure the correct board is specified in the syscfg file No external connections are required for this example Variable Description sData Data to send rData Received data rDataPoint Tracks the last position in the receive stream for error checking None ISR Name Description i2cFIFOISR Handles FIFO interrupts for transmitting and receiving data validates received data and clears interrupt flags INT_myI2C0_ISR Clears interrupt acknowledgment for SysConfig functionality When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project F29H85x When using makefiles to build note the required combination and build using make command see MAKEFILE_BUILD_PAGE Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states I2C</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_I2C_EX1_TARGET</field>
    <field name="url">EXAMPLES_I2C_EX1_TARGET.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates how to configure and use the I2CA module in target mode on a Texas Instruments C2000 microcontroller The example uses I2C interrupts and does not utilize FIFO It requires two control cards one configured as a controller and the other as a target The controller runs the binary generated from i2c_ex1_controller.projectspec The target runs the binary generated from i2c_ex1_target.projectspec External connections between the control cards should be made as follows Signal I2CA on Board 1 I2CA on Board 2 SCL GPIO_PIN_SCLA GPIO_PIN_SCLA SDA GPIO_PIN_SDAA GPIO_PIN_SDAA GND GND GND Variable Description I2CA_TXdata Transmit data buffer I2CA_RXdata Receive data buffer Variable Description PassCount Counter for successful data matches FailCount Counter for failed data matches Define Name Description I2C_TARGET_ADDR Target I2C address 0 x6A MAX_BUFFER_SIZE Maximum buffer size 1 6 I2C_NUMBYTES Number of bytes to transmit 2 GPIO_PIN_SDAA GPIO pin for I2C SDAA 0 GPIO_PIN_SCLA GPIO pin for I2C SCLA 1 The I2C clock settings are configured for a prescaler value of 0 x11 and non-zero clock low/high periods Function Signature Description void I2CTarget_Init(uint16_t I2CTarget_OwnAddress) Initializes the I2C module in target mode ISR Function Signature Description __interrupt void I2CISR(void) Interrupt Service Routine for handling I2C interrupts Interrupt Name Description AAT Interrupt Configures the target as transmitter or receiver STOP Interrupt Compares received data with transmitted data and updates pass/fail counts RRDY Interrupt Handles received data and stores it in the RX buffer XRDY Interrupt Handles data transmission from the TX buffer Ensure proper external connections between the control cards The RX buffer is reinitialized to a non-zero value 0 xBAAD after successful data comparison When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states I2C This example demonstrates how to configure and use the I2CA module in target mode on a Texas Instruments C2000 microcontroller The example uses I2C interrupts and does not utilize FIFO It requires two control cards one configured as a controller and the other as a target The controller runs the binary generated from i2c_ex1_controller.projectspec The target runs the binary generated from i2c_ex1_target.projectspec External connections between the control cards should be made as follows Signal I2CA on Board 1 I2CA on Board 2 SCL GPIO_PIN_SCLA GPIO_PIN_SCLA SDA GPIO_PIN_SDAA GPIO_PIN_SDAA GND GND GND Variable Description I2CA_TXdata Transmit data buffer I2CA_RXdata Receive data buffer Variable Description PassCount Counter for successful data matches FailCount Counter for failed data matches Define Name Description I2C_TARGET_ADDR Target I2C address 0 x6A MAX_BUFFER_SIZE Maximum buffer size 1 6 I2C_NUMBYTES Number of bytes to transmit 2 GPIO_PIN_SDAA GPIO pin for I2C SDAA 0 GPIO_PIN_SCLA GPIO pin for I2C SCLA 1 The I2C clock settings are configured for a prescaler value of 0 x11 and non-zero clock low/high periods Function Signature Description void I2CTarget_Init(uint16_t I2CTarget_OwnAddress) Initializes the I2C module in target mode ISR Function Signature Description __interrupt void I2CISR(void) Interrupt Service Routine for handling I2C interrupts Interrupt Name Description AAT Interrupt Configures the target as transmitter or receiver STOP Interrupt Compares received data with transmitted data and updates pass/fail counts RRDY Interrupt Handles received data and stores it in the RX buffer XRDY Interrupt Handles data transmission from the TX buffer Ensure proper external connections between the control cards The RX buffer is reinitialized to a non-zero value 0 xBAAD after successful data comparison When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states I2C I2C Target Mode I2C Target Mode This example demonstrates how to configure and use the I2CA module in target mode on a Texas Instruments C2000 microcontroller The example uses I2C interrupts and does not utilize FIFO It requires two control cards one configured as a controller and the other as a target The controller runs the binary generated from i2c_ex1_controller.projectspec The target runs the binary generated from i2c_ex1_target.projectspec External connections between the control cards should be made as follows Signal I2CA on Board 1 I2CA on Board 2 SCL GPIO_PIN_SCLA GPIO_PIN_SCLA SDA GPIO_PIN_SDAA GPIO_PIN_SDAA GND GND GND Variable Description I2CA_TXdata Transmit data buffer I2CA_RXdata Receive data buffer Variable Description PassCount Counter for successful data matches FailCount Counter for failed data matches Define Name Description I2C_TARGET_ADDR Target I2C address 0 x6A MAX_BUFFER_SIZE Maximum buffer size 1 6 I2C_NUMBYTES Number of bytes to transmit 2 GPIO_PIN_SDAA GPIO pin for I2C SDAA 0 GPIO_PIN_SCLA GPIO pin for I2C SCLA 1 The I2C clock settings are configured for a prescaler value of 0 x11 and non-zero clock low/high periods Function Signature Description void I2CTarget_Init(uint16_t I2CTarget_OwnAddress) Initializes the I2C module in target mode ISR Function Signature Description __interrupt void I2CISR(void) Interrupt Service Routine for handling I2C interrupts Interrupt Name Description AAT Interrupt Configures the target as transmitter or receiver STOP Interrupt Compares received data with transmitted data and updates pass/fail counts RRDY Interrupt Handles received data and stores it in the RX buffer XRDY Interrupt Handles data transmission from the TX buffer Ensure proper external connections between the control cards The RX buffer is reinitialized to a non-zero value 0 xBAAD after successful data comparison When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states I2C</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_TIMER_EX1</field>
    <field name="url">EXAMPLES_TIMER_EX1.html</field>
    <field name="keywords"></field>
    <field name="text">This example demonstrates the configuration and usage of CPU Timer0 Timer1 and Timer2 on a C2000 device Each timer is configured to generate an interrupt at specific intervals and a counter is incremented in the corresponding ISR Interrupt Service Routine Timer Interrupt Interval Description CPU Timer0 1 second Configured to interrupt every 1 second CPU Timer1 2 seconds Configured to interrupt every 2 seconds CPU Timer2 4 seconds Configured to interrupt every 4 seconds The example initializes the device configures the timers and enables interrupts The main loop remains idle while the timers generate interrupts periodically To migrate this project to another device using SysConfig click the switch button under the device view select the corresponding device and save the project to auto-migrate the settings None Variable Description cpuTimer0IntCount Counter incremented by Timer0 ISR cpuTimer1IntCount Counter incremented by Timer1 ISR cpuTimer2IntCount Counter incremented by Timer2 ISR Function Description main Entry point of the program Initializes the device configures timers and enables interrupts initCPUTimers Initializes all three CPU timers to a known state configCPUTimer Configures a specific CPU timer with a given frequency and period ISR Function Timer Description cpuTimer0ISR CPU Timer0 Increments cpuTimer0IntCount cpuTimer1ISR CPU Timer1 Increments cpuTimer1IntCount cpuTimer2ISR CPU Timer2 Increments cpuTimer2IntCount When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Run the program and observe the interrupt counters cpuTimer0IntCount cpuTimer1IntCount cpuTimer2IntCount incrementing in the debugger When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states CPU Timer This example demonstrates the configuration and usage of CPU Timer0 Timer1 and Timer2 on a C2000 device Each timer is configured to generate an interrupt at specific intervals and a counter is incremented in the corresponding ISR Interrupt Service Routine Timer Interrupt Interval Description CPU Timer0 1 second Configured to interrupt every 1 second CPU Timer1 2 seconds Configured to interrupt every 2 seconds CPU Timer2 4 seconds Configured to interrupt every 4 seconds The example initializes the device configures the timers and enables interrupts The main loop remains idle while the timers generate interrupts periodically To migrate this project to another device using SysConfig click the switch button under the device view select the corresponding device and save the project to auto-migrate the settings None Variable Description cpuTimer0IntCount Counter incremented by Timer0 ISR cpuTimer1IntCount Counter incremented by Timer1 ISR cpuTimer2IntCount Counter incremented by Timer2 ISR Function Description main Entry point of the program Initializes the device configures timers and enables interrupts initCPUTimers Initializes all three CPU timers to a known state configCPUTimer Configures a specific CPU timer with a given frequency and period ISR Function Timer Description cpuTimer0ISR CPU Timer0 Increments cpuTimer0IntCount cpuTimer1ISR CPU Timer1 Increments cpuTimer1IntCount cpuTimer2ISR CPU Timer2 Increments cpuTimer2IntCount When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Run the program and observe the interrupt counters cpuTimer0IntCount cpuTimer1IntCount cpuTimer2IntCount incrementing in the debugger When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states CPU Timer Timer Counter Example Timer Counter Example This example demonstrates the configuration and usage of CPU Timer0 Timer1 and Timer2 on a C2000 device Each timer is configured to generate an interrupt at specific intervals and a counter is incremented in the corresponding ISR Interrupt Service Routine Timer Interrupt Interval Description CPU Timer0 1 second Configured to interrupt every 1 second CPU Timer1 2 seconds Configured to interrupt every 2 seconds CPU Timer2 4 seconds Configured to interrupt every 4 seconds The example initializes the device configures the timers and enables interrupts The main loop remains idle while the timers generate interrupts periodically To migrate this project to another device using SysConfig click the switch button under the device view select the corresponding device and save the project to auto-migrate the settings None Variable Description cpuTimer0IntCount Counter incremented by Timer0 ISR cpuTimer1IntCount Counter incremented by Timer1 ISR cpuTimer2IntCount Counter incremented by Timer2 ISR Function Description main Entry point of the program Initializes the device configures timers and enables interrupts initCPUTimers Initializes all three CPU timers to a known state configCPUTimer Configures a specific CPU timer with a given frequency and period ISR Function Timer Description cpuTimer0ISR CPU Timer0 Increments cpuTimer0IntCount cpuTimer1ISR CPU Timer1 Increments cpuTimer1IntCount cpuTimer2ISR CPU Timer2 Increments cpuTimer2IntCount When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Run the program and observe the interrupt counters cpuTimer0IntCount cpuTimer1IntCount cpuTimer2IntCount incrementing in the debugger When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states CPU Timer</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLES::EXAMPLES_DRIVERS::EXAMPLES_TIMER_EX1_SYSCFG</field>
    <field name="url">EXAMPLES_TIMER_EX1_SYSCFG.html</field>
    <field name="keywords"></field>
    <field name="text">This file demonstrates the configuration and usage of CPU Timer0 Timer1 and Timer2 on a C2000 device using SysConfig The example increments a counter each time a timer asserts an interrupt The example initializes the device configures the CPU timers and sets up interrupt service routines ISRs to handle timer interrupts The counters cpuTimer0IntCount cpuTimer1IntCount and cpuTimer2IntCount are incremented in their respective ISRs Configures and handles CPU Timer0 Timer1 and Timer2 Demonstrates interrupt handling for CPU timers Provides support for migration across C2000 device families If building this project for a specific board e.g launchpad or controlCARD specify the board in the syscfg file The example supports device migration by selecting another device in the SysConfig tool None Variable Name Description cpuTimer0IntCount Counter for Timer0 interrupts cpuTimer1IntCount Counter for Timer1 interrupts cpuTimer2IntCount Counter for Timer2 interrupts File Name Description driverlib.h Driver library for device peripherals device.h Device-specific definitions board.h Board initialization functions c2000ware_libraries.h C2000Ware library initialization Variable Name Description cpuTimer0IntCount Counter for Timer0 interrupts cpuTimer1IntCount Counter for Timer1 interrupts cpuTimer2IntCount Counter for Timer2 interrupts ISR Name Description cpuTimer0ISR Handles Timer0 interrupts and increments cpuTimer0IntCount cpuTimer1ISR Handles Timer1 interrupts and increments cpuTimer1IntCount cpuTimer2ISR Handles Timer2 interrupts and increments cpuTimer2IntCount When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Run the program and observe the interrupt counters cpuTimer0IntCount cpuTimer1IntCount cpuTimer2IntCount incrementing in the debugger When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states CPU Timer This file demonstrates the configuration and usage of CPU Timer0 Timer1 and Timer2 on a C2000 device using SysConfig The example increments a counter each time a timer asserts an interrupt The example initializes the device configures the CPU timers and sets up interrupt service routines ISRs to handle timer interrupts The counters cpuTimer0IntCount cpuTimer1IntCount and cpuTimer2IntCount are incremented in their respective ISRs Configures and handles CPU Timer0 Timer1 and Timer2 Demonstrates interrupt handling for CPU timers Provides support for migration across C2000 device families If building this project for a specific board e.g launchpad or controlCARD specify the board in the syscfg file The example supports device migration by selecting another device in the SysConfig tool None Variable Name Description cpuTimer0IntCount Counter for Timer0 interrupts cpuTimer1IntCount Counter for Timer1 interrupts cpuTimer2IntCount Counter for Timer2 interrupts File Name Description driverlib.h Driver library for device peripherals device.h Device-specific definitions board.h Board initialization functions c2000ware_libraries.h C2000Ware library initialization Variable Name Description cpuTimer0IntCount Counter for Timer0 interrupts cpuTimer1IntCount Counter for Timer1 interrupts cpuTimer2IntCount Counter for Timer2 interrupts ISR Name Description cpuTimer0ISR Handles Timer0 interrupts and increments cpuTimer0IntCount cpuTimer1ISR Handles Timer1 interrupts and increments cpuTimer1IntCount cpuTimer2ISR Handles Timer2 interrupts and increments cpuTimer2IntCount When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Run the program and observe the interrupt counters cpuTimer0IntCount cpuTimer1IntCount cpuTimer2IntCount incrementing in the debugger When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states CPU Timer Timer Sysconfig Counter Example Timer Sysconfig Counter Example This file demonstrates the configuration and usage of CPU Timer0 Timer1 and Timer2 on a C2000 device using SysConfig The example increments a counter each time a timer asserts an interrupt The example initializes the device configures the CPU timers and sets up interrupt service routines ISRs to handle timer interrupts The counters cpuTimer0IntCount cpuTimer1IntCount and cpuTimer2IntCount are incremented in their respective ISRs Configures and handles CPU Timer0 Timer1 and Timer2 Demonstrates interrupt handling for CPU timers Provides support for migration across C2000 device families If building this project for a specific board e.g launchpad or controlCARD specify the board in the syscfg file The example supports device migration by selecting another device in the SysConfig tool None Variable Name Description cpuTimer0IntCount Counter for Timer0 interrupts cpuTimer1IntCount Counter for Timer1 interrupts cpuTimer2IntCount Counter for Timer2 interrupts File Name Description driverlib.h Driver library for device peripherals device.h Device-specific definitions board.h Board initialization functions c2000ware_libraries.h C2000Ware library initialization Variable Name Description cpuTimer0IntCount Counter for Timer0 interrupts cpuTimer1IntCount Counter for Timer1 interrupts cpuTimer2IntCount Counter for Timer2 interrupts ISR Name Description cpuTimer0ISR Handles Timer0 interrupts and increments cpuTimer0IntCount cpuTimer1ISR Handles Timer1 interrupts and increments cpuTimer1IntCount cpuTimer2ISR Handles Timer2 interrupts and increments cpuTimer2IntCount When using CCS projects to build import the CCS project for the required combination and build it using the CCS project menu see CCS Build Project Establish connections as mentioned in External Connections section Launch a CCS debug session and run the executable see Build Load and Run Run the program and observe the interrupt counters cpuTimer0IntCount cpuTimer1IntCount cpuTimer2IntCount incrementing in the debugger When running in flash configuration it is recommended to reset and restart after loading the example to remove any stale flags or states CPU Timer</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">EXAMPLE_INTRO</field>
    <field name="url">EXAMPLE_INTRO.html</field>
    <field name="keywords"></field>
    <field name="text">Example Introduction Example Introduction The F28E12xx Firmware development library is a group of example applications and helper libraries that demonstrate the basics of getting started with a F28E12x device The following section provides a step by step guide project creation for each core as well as debug It is highly recommended that users new to the F28E12x family of devices start by reading this section first The F28E12x devices have a set of example applications that users can load and run on their device The driver library example applications can be found in the driverlib f28e12x examples directory The bit-field example applications can be found in the device_support f28e12x examples directory As users move past evaluation and get started developing their own application TI recommends they maintain a similar project directory structure to that used in the example projects Example projects have a heirarchy as follows Main project directory Project folder Project sources c h CCS folder ccs CCS projectspec file This section aims to give you the user a step by step guide for how to create and debug projects from scratch This guide will focus on the user of a F28E12x LaunchPad but these same ideas should apply to other boards with minimal translation Project Creation A typical F28E12x application consists of setting up a CCS project which involves configuring the build settings file linking and adding in any source code From the main CCS window select File Import Project(s) Browse to the empty project Browse Empty Driverlib project Before we can successfully build a project we need to setup some build specific settings Right click on your project and select Properties Look at the Processor Options and ensure they match the below image project processor options In the C2000 Compiler entry look for and select the Include Options Click on the add directory icon to add a directory to the search path Click the File System button to browse to the driverlib f28e12x driverlib folder of your C2000Ware installation typically C ti c2000 C2000Ware_&lt;version&gt; driverlib f28e12x driverlib Click ok to add this path and repeat this same process to add the device_support f28e12x directory project include paths At this point your project workspace should look like the following project linker files You can edit the file and copy the following code into it Save thi file and then attempt to build the project by right clicking on it and selecting Build Project Assuming the project builds setup a target configuration file for your device View Target Configurations and try debugging this project on a f28e12x device When the code runs you should see the LED blink</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">PROGRAMMING_MODELS</field>
    <field name="url">PROGRAMMING_MODELS.html</field>
    <field name="keywords"></field>
    <field name="text">Programming Models Programming Models The peripheral driver library provides support for two programming models the direct register access model and the software driver model Each model can be used independently or combined based on the needs of the application or the programming environment desired by the developer Each programming model has advantages and disadvantages Use of the direct register access model generally results in smaller and more efficient code than using the software driver model However the direct register access model requires detailed knowledge of the operation of each register and bit field as well as their interactions and any sequencing required for proper operation of the peripheral the developer is somewhat more insulated from these details by the software driver model generally requiring less time to develop applications The software driver model also results in more readable code In the direct register access model the peripherals are programmed by the application by writing values directly into the peripheral s registers A set of macros is provided that simplifies this process These macros are stored in several header files contained in the inc directory By including the header files inc/hw_types.h and inc/hw_memmap.h macros are available for accessing all registers Individual bitfield accesses can easily be added by simply including the inc/hw_peripheral.h header file for the desired peripheral The defines used by the direct register access model follow a naming convention that makes it easier to know how to use a particular macro The rules are as follows Values that end in _BASE and are found in inc/hw_memmap.h are module instance base addresses For example SPIA_BASE and SPIB_BASE are the base addresses of instances A and B of the SPI module respectively Values that contain an O are register address offsets used to access the value of a register For example SPI_O_CCR is used to access the CCR register in a SPI module These can be added to the base address values to get the register address Values that end in _M represent the mask for a multi-bit field in a register For example SPI_CCR_SPICHAR_M is a mask for the SPICHAR field in the CCR register Note that fields that are the whole width of the register are not given masks Values that end in _S represent the number of bits to shift a value in order to align it with a multi-bit field These values match the macro with the same base name but ending with _M All others are single-bit field masks For example SPI_CCR_SPILBK corresponds to the SPILBK bit in the CCR register The inc\hw_types.h file contains macros to access a register They are as follows where x is the address to be accessed HWREG(x) is used for 3 2 bit accesses such as reading a value from a 3 2 bit counter register HWREGH(x) is used for 1 6 bit accesses This can be used to access a 1 6 bit register or the upper or lower words of a 3 2 bit register This is usually the most efficient HWREGB(x) is used for 8 bit accesses using the __byte() intrinsic see the TMS320C28x Optimizing C/C++ Compiler User s Guide It typically should only be used when an 8 bit access is required by the hardware Otherwise use HWREGH() and mask and shift out the unwanted bits HWREG_BP(x) is another macro used for 3 2 bit accesses but it uses the __byte_peripheral_32() compiler intrinsic This is intended for use with peripherals that use a special addressing scheme to support byte accesses such as CAN or USB Given these definitions the CCR register can be programmed as follows Enable loopback mode on SPI A HWREGH SPIA_BASE SPI_O_CCR SPI_CCR_SPILBK Change the number of bits that make up a character to 8 First clear the field Then shift the new value into place and write it into the register HWREGH SPIA_BASE SPI_O_CCR HWREGH SPIA_BASE SPI_O_CCR 8 SPI_CCR_SPICHAR_S Extracting the value of the SPICHAR field in the CCR register is as follows In the software driver model the API provided by the peripheral driver library is used by applications to control the peripherals Because these drivers provide complete control of the peripherals in their normal mode of operation it is possible to write an entire application without direct access to the hardware This method provides for rapid development of the application without requiring detailed knowledge of the registers The following function call programs the SPICHAR field of CCR register mentioned in the direct register access model as well as a few other fields and registers The drivers in the peripheral driver library are described in the remaining chapters in this document They combine to form the software driver model The direct register access model and software driver model can be used together in a single application allowing the most appropriate model to be applied as needed to any particular situation within the application For example the software driver model can be used to configure the peripherals because this is not performance critical and the direct register access model can be used for operation of the peripheral which may be more performance critical Or the software driver model can be used for peripherals that are not performance critical such as SCI used for data logging and the direct register access model for performance critical peripherals Additionally the direct register access model can be used when there is no suitable driver library API for the desired task Although an API may be available that performs a specific function on an individual bit or register it could be more beneficial to use the direct register access programming model when performing tasks on entire registers or multiple bits at a given time However if there is an API available for the intended task it should be used as it will provide for more rapid development of the application without going into depth on programming the peripherals This user guide is generated using doxygen v1.8.20 See</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h.html</field>
    <field name="keywords">adc.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00132</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00133</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00135</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00142</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00145</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00146</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00147</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00170</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00182</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_1_0 U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00183</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_2_0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_2_5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00185</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_3_0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00186</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_3_5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_4_0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_4_5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_5_0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00190</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_5_5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_6_0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_6_5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00193</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_7_0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00194</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_7_5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">ADC_CLK_DIV_8_0 ADC_CLK_DIV_8_5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">ADC_ClkPrescale</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00207</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00209</field>
    <field name="keywords"></field>
    <field name="text">ADC_TRIGGER_SW_ONLY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00210</field>
    <field name="keywords"></field>
    <field name="text">ADC_TRIGGER_CPU1_TINT0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00211</field>
    <field name="keywords"></field>
    <field name="text">ADC_TRIGGER_CPU1_TINT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00212</field>
    <field name="keywords"></field>
    <field name="text">ADC_TRIGGER_CPU1_TINT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00213</field>
    <field name="keywords"></field>
    <field name="text">ADC_TRIGGER_GPIO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00214</field>
    <field name="keywords"></field>
    <field name="text">ADC_TRIGGER_MCPWM1_SOCA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00215</field>
    <field name="keywords"></field>
    <field name="text">ADC_TRIGGER_MCPWM1_SOCB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00216</field>
    <field name="keywords"></field>
    <field name="text">ADC_TRIGGER_MCPWM1_SOCC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00217</field>
    <field name="keywords"></field>
    <field name="text">ADC_TRIGGER_MCPWM1_SOCD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00218</field>
    <field name="keywords"></field>
    <field name="text">ADC_TRIGGER_MCPWM3_SOCA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00219</field>
    <field name="keywords"></field>
    <field name="text">ADC_TRIGGER_MCPWM3_SOCB ADC_TRIGGER_REPEATER1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00221</field>
    <field name="keywords"></field>
    <field name="text">ADC_Trigger</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00231</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00233</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN0 U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00234</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00235</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00236</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00237</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00238</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00239</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00240</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00241</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00242</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00243</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00244</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00245</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00246</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00247</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00248</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN15</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00249</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00250</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN17</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00251</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN18</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00252</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN19</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00253</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN20</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00254</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN21</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00255</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN22</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00256</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN23</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00257</field>
    <field name="keywords"></field>
    <field name="text">ADC_CH_ADCIN24 ADC_CH_ADCIN25</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00259</field>
    <field name="keywords"></field>
    <field name="text">ADC_Channel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00270</field>
    <field name="keywords"></field>
    <field name="text">ADC_PULSE_END_OF_ACQ_WIN ADC_PULSE_END_OF_CONV</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00273</field>
    <field name="keywords"></field>
    <field name="text">ADC_PulseMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00281</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00283</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_NUMBER1 U ADC_INT_NUMBER2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00285</field>
    <field name="keywords"></field>
    <field name="text">ADC_IntNumber</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00293</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00295</field>
    <field name="keywords"></field>
    <field name="text">ADC_PPB_NUMBER1 U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00296</field>
    <field name="keywords"></field>
    <field name="text">ADC_PPB_NUMBER2 ADC_PPB_NUMBER3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00298</field>
    <field name="keywords"></field>
    <field name="text">ADC_PPBNumber</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00309</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00311</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER0 U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00312</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00313</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00314</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00315</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00316</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00317</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00318</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00319</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00320</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00321</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00322</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00323</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00324</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00325</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOC_NUMBER14 ADC_SOC_NUMBER15</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00327</field>
    <field name="keywords"></field>
    <field name="text">ADC_SOCNumber</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00335</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_SOC_TRIGGER_NONE U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00338</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_SOC_TRIGGER_ADCINT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00339</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_SOC_TRIGGER_ADCINT2 ADC_INT_SOC_TRIGGER_EOC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00342</field>
    <field name="keywords"></field>
    <field name="text">ADC_IntSOCTrigger</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00350</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00352</field>
    <field name="keywords"></field>
    <field name="text">ADC_PRI_ALL_ROUND_ROBIN U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00353</field>
    <field name="keywords"></field>
    <field name="text">ADC_PRI_SOC0_HIPRI</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00354</field>
    <field name="keywords"></field>
    <field name="text">ADC_PRI_THRU_SOC1_HIPRI ADC_PRI_THRU_SOC2_HIPRI</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00356</field>
    <field name="keywords"></field>
    <field name="text">ADC_PriorityMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00364</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00366</field>
    <field name="keywords"></field>
    <field name="text">ADC_CAP_RESET_VREFLO U ADC_CAP_RESET_VREFHIBY2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00368</field>
    <field name="keywords"></field>
    <field name="text">ADC_SampleCAPResetValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00376</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00378</field>
    <field name="keywords"></field>
    <field name="text">ADC_REFERENCE_INTERNAL U ADC_REFERENCE_EXTERNAL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00380</field>
    <field name="keywords"></field>
    <field name="text">ADC_ReferenceMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00389</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00391</field>
    <field name="keywords"></field>
    <field name="text">ADC_REFERENCE_3_3V U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00392</field>
    <field name="keywords"></field>
    <field name="text">ADC_REFERENCE_2_5V ADC_REFERENCE_VREFHI U ADC_ReferenceVoltage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00404</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00406</field>
    <field name="keywords"></field>
    <field name="text">ADC_SYNCIN_DISABLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00407</field>
    <field name="keywords"></field>
    <field name="text">ADC_SYNCIN_INPUTXBAROUTPUT5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00408</field>
    <field name="keywords"></field>
    <field name="text">ADC_SYNCIN_INPUTXBAROUTPUT6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00409</field>
    <field name="keywords"></field>
    <field name="text">ADC_SYNCIN_ECAP1YNCOUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00410</field>
    <field name="keywords"></field>
    <field name="text">ADC_SYNCIN_MCPWM1SYNCPER ADC_SYNCIN_MCPWM3SYNCPER</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00412</field>
    <field name="keywords"></field>
    <field name="text">ADC_SyncInput</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00421</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00423</field>
    <field name="keywords"></field>
    <field name="text">ADC_PPB_OS_INT_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00424</field>
    <field name="keywords"></field>
    <field name="text">ADC_PPB_OS_INT_2 ADC_PPBIntSrcSelect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00434</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00436</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC0 U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00437</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00438</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00439</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00440</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00441</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00442</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00443</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00444</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00445</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00446</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00447</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00448</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00449</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00450</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00451</field>
    <field name="keywords"></field>
    <field name="text">ADC_INT_TRIGGER_EOC15 ADC_INT_TRIGGER_OSINT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00453</field>
    <field name="keywords"></field>
    <field name="text">ADC_IntTrigger</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00461</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00463</field>
    <field name="keywords"></field>
    <field name="text">ADC_PPB_COMPSOURCE_RESULT ADC_PPB_COMPSOURCE_SUM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00465</field>
    <field name="keywords"></field>
    <field name="text">ADC_PPBCompSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00474</field>
    <field name="keywords"></field>
    <field name="text">ADC_REPINST1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00477</field>
    <field name="keywords"></field>
    <field name="text">ADC_RepInstance</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00486</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00488</field>
    <field name="keywords"></field>
    <field name="text">ADC_Trigger repTrigger</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00489</field>
    <field name="keywords"></field>
    <field name="text">ADC_SyncInput repSyncin</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00490</field>
    <field name="keywords"></field>
    <field name="text">uint16_t repCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00491</field>
    <field name="keywords"></field>
    <field name="text">uint16_t repSpread ADC_RepeaterConfig ADC_isBaseValid uint32_t base base ADCA_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00541</field>
    <field name="keywords"></field>
    <field name="text">ADC_setPrescaler uint32_t base ADC_ClkPrescale clkPrescale ASSERT ADC_isBaseValid base EALLOW HWREG base ADC_O_CTL2 HWREG base ADC_O_CTL2 ADC_CTL2_PRESCALE_M uint32_t clkPrescale EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00600</field>
    <field name="keywords"></field>
    <field name="text">ADC_setupSOC uint32_t base ADC_SOCNumber socNumber ADC_Trigger trigger ADC_Channel channel uint32_t sampleWindow uint32_t ctlRegAddr mask uint32_t ACQPS ASSERT ADC_isBaseValid base mask ADC_SOC0CTL_CHSEL_M ADC_SOC0CTL_TRIGSEL_M ADC_SOC0CTL_ACQPS_M sampleWindow ACQPS sampleWindow sampleWindow ACQPS sampleWindow sampleWindow ACQPS sampleWindow ACQPS sampleWindow ctlRegAddr base ADC_SOCxCTL_OFFSET_BASE uint32_t socNumber EALLOW HWREG ctlRegAddr HWREG ctlRegAddr mask uint32_t channel ADC_SOC0CTL_CHSEL_S uint32_t trigger ADC_SOC0CTL_TRIGSEL_S ACQPS EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00663</field>
    <field name="keywords"></field>
    <field name="text">ADC_enableSampleCAPReset uint32_t base ADC_SOCNumber socNumber uint32_t ctlRegAddr ASSERT ADC_isBaseValid base ctlRegAddr base ADC_SOCxCTL_OFFSET_BASE uint32_t socNumber EALLOW HWREG ctlRegAddr uint32_t ADC_SOC0CTL_SAMPCAPRESETDISABLE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00703</field>
    <field name="keywords"></field>
    <field name="text">ADC_disableSampleCAPReset uint32_t base ADC_SOCNumber socNumber uint32_t ctlRegAddr ASSERT ADC_isBaseValid base ctlRegAddr base ADC_SOCxCTL_OFFSET_BASE uint32_t socNumber EALLOW HWREG ctlRegAddr uint32_t ADC_SOC0CTL_SAMPCAPRESETDISABLE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00747</field>
    <field name="keywords"></field>
    <field name="text">ADC_selectSampleCAPResetValue uint32_t base ADC_SOCNumber socNumber ADC_SampleCAPResetValue capResetVal uint32_t ctlRegAddr ASSERT ADC_isBaseValid base ctlRegAddr base ADC_SOCxCTL_OFFSET_BASE uint32_t socNumber EALLOW HWREG ctlRegAddr HWREG ctlRegAddr ADC_SOC0CTL_SAMPCAPRESETSEL uint32_t capResetVal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00787</field>
    <field name="keywords"></field>
    <field name="text">ADC_forceRepeaterTrigger uint32_t base uint16_t repInstance uint32_t regOffset ASSERT ADC_isBaseValid base regOffset base repInstance EALLOW HWREG regOffset ADC_O_REP1FRC ADC_REP1FRC_SWFRC EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00818</field>
    <field name="keywords"></field>
    <field name="text">ADC_getRepeaterStatus uint32_t base uint16_t repInstance ASSERT ADC_isBaseValid base HWREG base ADC_O_REP1CTL ADC_REPSTATUS_MASK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00859</field>
    <field name="keywords"></field>
    <field name="text">ADC_setInterruptSOCTrigger uint32_t base ADC_SOCNumber socNumber ADC_IntSOCTrigger trigger uint16_t shiftVal ASSERT ADC_isBaseValid base shiftVal uint16_t socNumber EALLOW HWREG base ADC_O_INTSOCSEL1 HWREG base ADC_O_INTSOCSEL1 uint32_t ADC_INTSOCSEL1_SOC0_M shiftVal uint32_t trigger shiftVal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00904</field>
    <field name="keywords"></field>
    <field name="text">ADC_setInterruptPulseMode uint32_t base ADC_PulseMode pulseMode ASSERT ADC_isBaseValid base EALLOW HWREG base ADC_O_CTL1 HWREG base ADC_O_CTL1 ADC_CTL1_INTPULSEPOS uint16_t pulseMode EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00940</field>
    <field name="keywords"></field>
    <field name="text">ADC_setInterruptCycleOffset uint32_t base uint16_t cycleOffset ASSERT ADC_isBaseValid base EALLOW HWREG base ADC_O_INTCYCLE cycleOffset EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l00977</field>
    <field name="keywords"></field>
    <field name="text">ADC_getIntResultStatus uint32_t base ADC_IntNumber adcIntNum ASSERT ADC_isBaseValid base HWREG base ADC_O_INTFLG uint32_t adcIntNum UL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01007</field>
    <field name="keywords"></field>
    <field name="text">ADC_enableConverter uint32_t base ASSERT ADC_isBaseValid base EALLOW HWREG base ADC_O_CTL1 ADC_CTL1_ADCPWDNZ EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01034</field>
    <field name="keywords"></field>
    <field name="text">ADC_disableConverter uint32_t base ASSERT ADC_isBaseValid base EALLOW HWREG base ADC_O_CTL1 ADC_CTL1_ADCPWDNZ EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01065</field>
    <field name="keywords"></field>
    <field name="text">ADC_forceSOC uint32_t base ADC_SOCNumber socNumber ASSERT ADC_isBaseValid base HWREG base ADC_O_SOCFRC1 uint32_t socNumber</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01100</field>
    <field name="keywords"></field>
    <field name="text">ADC_forceMultipleSOC uint32_t base uint32_t socMask ASSERT ADC_isBaseValid base HWREG base ADC_O_SOCFRC1 socMask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01133</field>
    <field name="keywords"></field>
    <field name="text">ADC_getDMARAWIntStatus uint32_t base ADC_IntNumber adcIntNum ASSERT ADC_isBaseValid base HWREG base ADC_O_RAWINTFLG uint32_t adcIntNum UL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01167</field>
    <field name="keywords"></field>
    <field name="text">ADC_getRAWInterruptStatus uint32_t base ADC_IntNumber adcIntNum ASSERT ADC_isBaseValid base HWREG base ADC_O_RAWINTFLG uint32_t adcIntNum UL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01200</field>
    <field name="keywords"></field>
    <field name="text">ADC_getDMAInterruptStatus uint32_t base ADC_IntNumber adcIntNum ASSERT ADC_isBaseValid base HWREG base ADC_O_INTFLG uint32_t adcIntNum UL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01232</field>
    <field name="keywords"></field>
    <field name="text">ADC_clearDMAInterruptStatus uint32_t base ADC_IntNumber adcIntNum ASSERT ADC_isBaseValid base HWREG base ADC_O_INTFLGCLR uint32_t ADC_INTFLGCLR_ADCDMAINT1 uint32_t adcIntNum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01267</field>
    <field name="keywords"></field>
    <field name="text">ADC_getDMAInterruptOverflowStatus uint32_t base ADC_IntNumber adcIntNum ASSERT ADC_isBaseValid base HWREG base ADC_O_INTOVF uint32_t adcIntNum UL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01300</field>
    <field name="keywords"></field>
    <field name="text">ADC_clearDMAInterruptOverflowStatus uint32_t base ADC_IntNumber adcIntNum ASSERT ADC_isBaseValid base HWREG base ADC_O_INTOVFCLR uint32_t ADC_INTOVFCLR_ADCDMAINT1OVF uint32_t adcIntNum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01333</field>
    <field name="keywords"></field>
    <field name="text">ADC_getInterruptStatus uint32_t base ADC_IntNumber adcIntNum ASSERT ADC_isBaseValid base HWREG base ADC_O_INTFLG uint32_t adcIntNum UL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01364</field>
    <field name="keywords"></field>
    <field name="text">ADC_clearInterruptStatus uint32_t base ADC_IntNumber adcIntNum ASSERT ADC_isBaseValid base HWREG base ADC_O_INTFLGCLR uint32_t adcIntNum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01398</field>
    <field name="keywords"></field>
    <field name="text">ADC_getInterruptOverflowStatus uint32_t base ADC_IntNumber adcIntNum ASSERT ADC_isBaseValid base HWREG base ADC_O_INTOVF uint32_t adcIntNum U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01431</field>
    <field name="keywords"></field>
    <field name="text">ADC_clearInterruptOverflowStatus uint32_t base ADC_IntNumber adcIntNum ASSERT ADC_isBaseValid base HWREG base ADC_O_INTOVFCLR uint32_t adcIntNum uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01464</field>
    <field name="keywords"></field>
    <field name="text">ADC_readResult uint32_t resultBase ADC_SOCNumber socNumber ASSERT resultBase ADCARESULT_BASE HWREGH resultBase uint32_t ADC_RESULTx_OFFSET_BASE uint32_t socNumber</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01493</field>
    <field name="keywords"></field>
    <field name="text">ADC_isBusy uint32_t base ASSERT ADC_isBaseValid base HWREG base ADC_O_CTL1 ADC_CTL1_ADCBSY U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01535</field>
    <field name="keywords"></field>
    <field name="text">ADC_setSOCPriority uint32_t base ADC_PriorityMode priMode ASSERT ADC_isBaseValid base EALLOW HWREG base ADC_O_SOCPRICTL HWREG base ADC_O_SOCPRICTL ADC_SOCPRICTL_SOCPRIORITY_M uint32_t priMode EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01578</field>
    <field name="keywords"></field>
    <field name="text">ADC_setupPPB uint32_t base ADC_PPBNumber ppbNumber ADC_SOCNumber socNumber uint32_t ppbOffset ASSERT ADC_isBaseValid base ppbOffset ADC_PPBxCONFIG_STEP uint32_t ppbNumber ADC_O_PPB1CONFIG EALLOW HWREG base ppbOffset HWREG base ppbOffset ADC_PPB1CONFIG_CONFIG_M uint32_t socNumber ADC_PPB1CONFIG_CONFIG_M EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01619</field>
    <field name="keywords"></field>
    <field name="text">ADC_enablePPBEvent uint32_t base ADC_PPBNumber ppbNumber uint16_t evtFlags ASSERT ADC_isBaseValid base ASSERT evtFlags U EALLOW HWREG base ADC_O_EVTSEL evtFlags uint32_t ppbNumber EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01652</field>
    <field name="keywords"></field>
    <field name="text">ADC_disablePPBEvent uint32_t base ADC_PPBNumber ppbNumber uint16_t evtFlags ASSERT ADC_isBaseValid base ASSERT evtFlags U EALLOW HWREG base ADC_O_EVTSEL evtFlags uint32_t ppbNumber EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01686</field>
    <field name="keywords"></field>
    <field name="text">ADC_enablePPBEventInterrupt uint32_t base ADC_PPBNumber ppbNumber uint16_t intFlags ASSERT ADC_isBaseValid base ASSERT intFlags U EALLOW HWREG base ADC_O_EVTINTSEL intFlags uint32_t ppbNumber EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01721</field>
    <field name="keywords"></field>
    <field name="text">ADC_disablePPBEventInterrupt uint32_t base ADC_PPBNumber ppbNumber uint16_t intFlags ASSERT ADC_isBaseValid base ASSERT intFlags U EALLOW HWREG base ADC_O_EVTINTSEL intFlags uint32_t ppbNumber EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01753</field>
    <field name="keywords"></field>
    <field name="text">ADC_getPPBEventStatus uint32_t base ADC_PPBNumber ppbNumber ASSERT ADC_isBaseValid base HWREG base ADC_O_EVTSTAT uint32_t ppbNumber</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01784</field>
    <field name="keywords"></field>
    <field name="text">ADC_clearPPBEventStatus uint32_t base ADC_PPBNumber ppbNumber uint16_t evtFlags ASSERT ADC_isBaseValid base ASSERT evtFlags U HWREG base ADC_O_EVTCLR evtFlags uint32_t ppbNumber</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01815</field>
    <field name="keywords"></field>
    <field name="text">ADC_enablePPBEventCBCClear uint32_t base ADC_PPBNumber ppbNumber uint32_t ppbOffset ASSERT ADC_isBaseValid base ppbOffset ADC_PPBxCONFIG_STEP uint32_t ppbNumber ADC_O_PPB1CONFIG EALLOW HWREG base ppbOffset ADC_PPB1CONFIG_CBCEN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01852</field>
    <field name="keywords"></field>
    <field name="text">ADC_disablePPBEventCBCClear uint32_t base ADC_PPBNumber ppbNumber uint32_t ppbOffset ASSERT ADC_isBaseValid base ppbOffset ADC_PPBxCONFIG_STEP uint32_t ppbNumber ADC_O_PPB1CONFIG EALLOW HWREG base ppbOffset ADC_PPB1CONFIG_CBCEN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01892</field>
    <field name="keywords"></field>
    <field name="text">ADC_setPPBCountLimit uint32_t base ADC_PPBNumber ppbNumber uint16_t limit ASSERT ADC_isBaseValid base ASSERT limit ADC_PPB1LIMIT_LIMIT_M EALLOW HWREG base ADC_O_PPB1LIMIT HWREG base ADC_O_PPB1LIMIT ADC_PPB1LIMIT_LIMIT_M limit ADC_PPB1LIMIT_LIMIT_S EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01929</field>
    <field name="keywords"></field>
    <field name="text">ADC_getPPBCountLimit uint32_t base ADC_PPBNumber ppbNumber uint32_t limit ASSERT ADC_isBaseValid base limit HWREG base ADC_O_PPB1LIMIT ADC_PPB1LIMIT_LIMIT_M ADC_PPB1LIMIT_LIMIT_S limit uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01963</field>
    <field name="keywords"></field>
    <field name="text">ADC_readPPBPCount uint32_t base ADC_PPBNumber ppbNumber ASSERT ADC_isBaseValid base HWREG base uint32_t ADC_PPBxPCOUNT_OFFSET_BASE uint32_t ppbNumber int32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l01994</field>
    <field name="keywords"></field>
    <field name="text">ADC_readPPBPSum uint32_t base ADC_PPBNumber ppbNumber ASSERT ADC_isBaseValid base int32_t HWREG base uint32_t ADC_PPBxPSUM_OFFSET_BASE uint32_t ppbNumber</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02027</field>
    <field name="keywords"></field>
    <field name="text">ADC_setPPBShiftValue uint32_t base ADC_PPBNumber ppbNumber uint16_t shiftVal ASSERT ADC_isBaseValid base ASSERT shiftVal HWREG base ADC_O_PPB1CONFIG2 HWREG base ADC_O_PPB1CONFIG2 ADC_PPB1CONFIG2_SHIFT_M shiftVal ADC_PPB1CONFIG2_SHIFT_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02066</field>
    <field name="keywords"></field>
    <field name="text">ADC_selectPPBSyncInput uint32_t base ADC_PPBNumber ppbNumber uint16_t syncInput ASSERT ADC_isBaseValid base ASSERT syncInput HWREG base ADC_O_PPB1CONFIG2 HWREG base ADC_O_PPB1CONFIG2 ADC_PPB1CONFIG2_SYNCINSEL_M syncInput ADC_PPB1CONFIG2_SYNCINSEL_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02096</field>
    <field name="keywords"></field>
    <field name="text">ADC_forcePPBSync uint32_t base ADC_PPBNumber ppbNumber ASSERT ADC_isBaseValid base HWREG base ADC_O_PPB1CONFIG2 ADC_PPB1CONFIG2_SWSYNC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02125</field>
    <field name="keywords"></field>
    <field name="text">ADC_selectPPBOSINTSource uint32_t base ADC_PPBNumber ppbNumber uint16_t osIntSrc ASSERT ADC_isBaseValid base ASSERT osIntSrc HWREG base ADC_O_PPB1CONFIG2 HWREG base ADC_O_PPB1CONFIG2 ADC_PPB1CONFIG2_OSINTSEL osIntSrc</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02159</field>
    <field name="keywords"></field>
    <field name="text">ADC_selectPPBCompareSource uint32_t base ADC_PPBNumber ppbNumber uint16_t compSrc ASSERT ADC_isBaseValid base ASSERT compSrc HWREG base ADC_O_PPB1CONFIG2 HWREG base ADC_O_PPB1CONFIG2 ADC_PPB1CONFIG2_COMPSEL compSrc int32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02194</field>
    <field name="keywords"></field>
    <field name="text">ADC_readPPBSum uint32_t resultBase ADC_PPBNumber ppbNumber ASSERT resultBase ADCARESULT_BASE int32_t HWREG resultBase uint32_t ADC_PPBxSUM_OFFSET_BASE uint32_t ppbNumber uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02229</field>
    <field name="keywords"></field>
    <field name="text">ADC_readPPBCount uint32_t resultBase ADC_PPBNumber ppbNumber ASSERT resultBase ADCARESULT_BASE uint32_t HWREG resultBase uint32_t ADC_PPBxCOUNT_OFFSET_BASE uint32_t ppbNumber int32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02264</field>
    <field name="keywords"></field>
    <field name="text">ADC_readPPBResult uint32_t resultBase ADC_PPBNumber ppbNumber ASSERT resultBase ADCARESULT_BASE int32_t HWREG resultBase uint32_t ADC_PPBxRESULT_OFFSET_BASE uint32_t ppbNumber</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02307</field>
    <field name="keywords"></field>
    <field name="text">ADC_setPPBCalibrationOffset uint32_t base ADC_PPBNumber ppbNumber int16_t offset uint32_t ppbOffset ASSERT ADC_isBaseValid base ppbOffset ADC_PPBxOFFCAL_STEP uint32_t ppbNumber ADC_O_PPB1OFFCAL EALLOW HWREG base ppbOffset HWREG base ppbOffset ADC_PPB1OFFCAL_OFFCAL_M uint32_t offset ADC_PPB1OFFCAL_OFFCAL_M EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02356</field>
    <field name="keywords"></field>
    <field name="text">ADC_setPPBReferenceOffset uint32_t base ADC_PPBNumber ppbNumber uint16_t offset uint32_t ppbOffset ASSERT ADC_isBaseValid base ppbOffset ADC_PPBxOFFREF_STEP uint32_t ppbNumber ADC_O_PPB1OFFREF HWREG base ppbOffset offset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02395</field>
    <field name="keywords"></field>
    <field name="text">ADC_enablePPBTwosComplement uint32_t base ADC_PPBNumber ppbNumber uint32_t ppbOffset ASSERT ADC_isBaseValid base ppbOffset ADC_PPBxCONFIG_STEP uint32_t ppbNumber ADC_O_PPB1CONFIG EALLOW HWREG base ppbOffset ADC_PPB1CONFIG_TWOSCOMPEN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02435</field>
    <field name="keywords"></field>
    <field name="text">ADC_disablePPBTwosComplement uint32_t base ADC_PPBNumber ppbNumber uint32_t ppbOffset ASSERT ADC_isBaseValid base ppbOffset ADC_PPBxCONFIG_STEP uint32_t ppbNumber ADC_O_PPB1CONFIG EALLOW HWREG base ppbOffset ADC_PPB1CONFIG_TWOSCOMPEN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02476</field>
    <field name="keywords"></field>
    <field name="text">ADC_enableInterrupt uint32_t base ADC_IntNumber adcIntNum uint32_t intRegAddr uint32_t shiftVal ASSERT ADC_isBaseValid base intRegAddr base ADC_INTSEL_OFFSET_BASE shiftVal uint32_t adcIntNum EALLOW HWREG intRegAddr ADC_INTSEL_INT1E shiftVal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02522</field>
    <field name="keywords"></field>
    <field name="text">ADC_disableInterrupt uint32_t base ADC_IntNumber adcIntNum uint32_t intRegAddr uint32_t shiftVal ASSERT ADC_isBaseValid base intRegAddr base ADC_INTSEL_OFFSET_BASE shiftVal uint32_t adcIntNum EALLOW HWREG intRegAddr ADC_INTSEL_INT1E shiftVal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02571</field>
    <field name="keywords"></field>
    <field name="text">ADC_setInterruptSource uint32_t base ADC_IntNumber adcIntNum uint16_t intTrigger uint32_t intRegAddr uint32_t shiftVal ASSERT ADC_isBaseValid base ASSERT intTrigger intRegAddr base ADC_INTSEL_OFFSET_BASE shiftVal uint32_t adcIntNum EALLOW HWREG intRegAddr HWREG intRegAddr ADC_INTSEL_INT1SEL_M shiftVal uint32_t intTrigger shiftVal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02622</field>
    <field name="keywords"></field>
    <field name="text">ADC_enableContinuousMode uint32_t base ADC_IntNumber adcIntNum uint32_t intRegAddr uint32_t shiftVal ASSERT ADC_isBaseValid base intRegAddr base ADC_INTSEL_OFFSET_BASE shiftVal uint32_t adcIntNum EALLOW HWREG intRegAddr ADC_INTSEL_INT1CONT shiftVal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02670</field>
    <field name="keywords"></field>
    <field name="text">ADC_disableContinuousMode uint32_t base ADC_IntNumber adcIntNum uint32_t intRegAddr uint32_t shiftVal ASSERT ADC_isBaseValid base intRegAddr base ADC_INTSEL_OFFSET_BASE shiftVal uint32_t adcIntNum EALLOW HWREG intRegAddr ADC_INTSEL_INT1CONT shiftVal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02714</field>
    <field name="keywords"></field>
    <field name="text">ADC_enableDMAInterrupt uint32_t base ADC_IntNumber adcIntNum uint32_t shiftVal ASSERT ADC_isBaseValid base shiftVal uint32_t adcIntNum EALLOW HWREG base ADC_O_DMAINTSEL ADC_DMAINTSEL_DMAINT1E shiftVal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02753</field>
    <field name="keywords"></field>
    <field name="text">ADC_disableDMAInterrupt uint32_t base ADC_IntNumber adcIntNum uint32_t shiftVal ASSERT ADC_isBaseValid base shiftVal uint32_t adcIntNum EALLOW HWREG base ADC_O_DMAINTSEL ADC_DMAINTSEL_DMAINT1E shiftVal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02795</field>
    <field name="keywords"></field>
    <field name="text">ADC_setDMAInterruptSource uint32_t base ADC_IntNumber adcIntNum uint32_t intTrigger uint32_t shiftVal ASSERT ADC_isBaseValid base ASSERT intTrigger shiftVal uint32_t adcIntNum EALLOW HWREG base ADC_O_DMAINTSEL HWREG base ADC_O_DMAINTSEL ADC_DMAINTSEL_DMAINT1SEL_M shiftVal uint32_t intTrigger shiftVal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02839</field>
    <field name="keywords"></field>
    <field name="text">ADC_enableDMAContinuousMode uint32_t base ADC_IntNumber adcIntNum uint32_t shiftVal ASSERT ADC_isBaseValid base shiftVal uint32_t adcIntNum EALLOW HWREG base ADC_O_DMAINTSEL ADC_DMAINTSEL_DMAINT1CONT shiftVal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02880</field>
    <field name="keywords"></field>
    <field name="text">ADC_disableDMAContinuousMode uint32_t base ADC_IntNumber adcIntNum uint32_t shiftVal ASSERT ADC_isBaseValid base shiftVal uint32_t adcIntNum EALLOW HWREG base ADC_O_DMAINTSEL ADC_DMAINTSEL_DMAINT1CONT shiftVal EDIS int16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02921</field>
    <field name="keywords"></field>
    <field name="text">ADC_getTemperatureC uint16_t tempResult ADC_ReferenceMode refMode float32_t vref float32_t temp temp float32_t tempResult vref refMode ADC_REFERENCE_INTERNAL int16_t int32_t temp ADC_INT_REF_TSOFFSET ADC_INT_REF_TSSLOPE int16_t int32_t temp ADC_EXT_REF_TSOFFSET ADC_EXT_REF_TSSLOPE int16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l02961</field>
    <field name="keywords"></field>
    <field name="text">ADC_getTemperatureK uint16_t tempResult ADC_ReferenceMode refMode float32_t vref float32_t temp temp float32_t tempResult vref refMode ADC_REFERENCE_INTERNAL int16_t int32_t temp ADC_INT_REF_TSOFFSET ADC_INT_REF_TSSLOPE int16_t int32_t temp ADC_EXT_REF_TSOFFSET ADC_EXT_REF_TSSLOPE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l03000</field>
    <field name="keywords"></field>
    <field name="text">ADC_triggerRepeaterModuleBusy uint32_t base uint32_t repInstance uint32_t regOffset ASSERT ADC_isBaseValid base regOffset base repInstance HWREG regOffset ADC_O_REP1CTL ADC_REP1CTL_MODULEBUSY_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l03035</field>
    <field name="keywords"></field>
    <field name="text">ADC_triggerRepeaterSelect uint32_t base uint16_t repInstance ADC_Trigger trigger uint32_t regOffset ASSERT ADC_isBaseValid base regOffset base repInstance EALLOW HWREG regOffset ADC_O_REP1CTL HWREG regOffset ADC_O_REP1CTL uint32_t ADC_REP1CTL_TRIGGER_M uint32_t trigger ADC_REP1CTL_TRIGGER_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l03075</field>
    <field name="keywords"></field>
    <field name="text">ADC_triggerRepeaterSyncIn uint32_t base uint16_t repInstance ADC_SyncInput syncInput uint32_t regOffset ASSERT ADC_isBaseValid base regOffset base repInstance EALLOW HWREG regOffset ADC_O_REP1CTL HWREG regOffset ADC_O_REP1CTL uint32_t ADC_REP1CTL_SYNCINSEL_M uint32_t syncInput ADC_REP1CTL_SYNCINSEL_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l03113</field>
    <field name="keywords"></field>
    <field name="text">ADC_forceRepeaterTriggerSync uint32_t base uint16_t repInstance uint32_t regOffset ASSERT ADC_isBaseValid base regOffset base repInstance EALLOW HWREG regOffset ADC_O_REP1CTL ADC_REP1CTL_SWSYNC EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l03153</field>
    <field name="keywords"></field>
    <field name="text">ADC_triggerRepeaterCount uint32_t base uint16_t repInstance uint16_t repCount uint32_t regOffset ASSERT ADC_isBaseValid base ASSERT repCount regOffset base repInstance EALLOW HWREG regOffset ADC_O_REP1N HWREG regOffset ADC_O_REP1N ADC_REP1N_NSEL_M repCount EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l03197</field>
    <field name="keywords"></field>
    <field name="text">ADC_triggerRepeaterSpread uint32_t base uint16_t repInstance uint16_t repSpread uint32_t regOffset ASSERT ADC_isBaseValid base regOffset base repInstance EALLOW HWREG regOffset ADC_O_REP1SPREAD HWREG regOffset ADC_O_REP1SPREAD ADC_REP1SPREAD_SPREAD_M repSpread EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l03238</field>
    <field name="keywords"></field>
    <field name="text">ADC_configureRepeater uint32_t base uint16_t repInstance ADC_RepeaterConfig config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l03260</field>
    <field name="keywords"></field>
    <field name="text">ADC_setVREF uint32_t base ADC_ReferenceMode refMode ADC_ReferenceVoltage refVoltage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l03276</field>
    <field name="keywords"></field>
    <field name="text">ADC_setOffsetTrim uint32_t base</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l03290</field>
    <field name="keywords"></field>
    <field name="text">ADC_setINLTrim uint32_t base</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adc.h</field>
    <field name="url">adc_8h_source.html#l03313</field>
    <field name="keywords"></field>
    <field name="text">ADC_setPPBTripLimits uint32_t base ADC_PPBNumber ppbNumber int32_t tripHiLimit int32_t tripLoLimit</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">adc.md</field>
    <field name="url">adc_8md.html</field>
    <field name="keywords">adc.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">adc_ex13_soc_oversampling.md</field>
    <field name="url">adc__ex13__soc__oversampling_8md.html</field>
    <field name="keywords">adc_ex13_soc_oversampling.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">adc_ex15_trigger_repeater_oversampling.md</field>
    <field name="url">adc__ex15__trigger__repeater__oversampling_8md.html</field>
    <field name="keywords">adc_ex15_trigger_repeater_oversampling.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">adc_ex1_soc_software.md</field>
    <field name="url">adc__ex1__soc__software_8md.html</field>
    <field name="keywords">adc_ex1_soc_software.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">adc_ex2_soc_mcpwm.md</field>
    <field name="url">adc__ex2__soc__mcpwm_8md.html</field>
    <field name="keywords">adc_ex2_soc_mcpwm.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">adc_ex3_temperature_sensor.md</field>
    <field name="url">adc__ex3__temperature__sensor_8md.html</field>
    <field name="keywords">adc_ex3_temperature_sensor.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">adc_ex6_continuous_dma.md</field>
    <field name="url">adc__ex6__continuous__dma_8md.html</field>
    <field name="keywords">adc_ex6_continuous_dma.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">adc_ex7_ppb_offset.md</field>
    <field name="url">adc__ex7__ppb__offset_8md.html</field>
    <field name="keywords">adc_ex7_ppb_offset.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">adc_ex8_ppb_limits.md</field>
    <field name="url">adc__ex8__ppb__limits_8md.html</field>
    <field name="keywords">adc_ex8_ppb_limits.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h.html</field>
    <field name="keywords">asysctl.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00124</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_CMPHPMUX_SELECT_1 U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00125</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_CMPHPMUX_SELECT_2 ASYSCTL_CMPHPMUX_SELECT_3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00127</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_CMPHPMuxSelect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_CMPLPMUX_SELECT_1 U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_CMPLPMUX_SELECT_2 ASYSCTL_CMPLPMUX_SELECT_3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_CMPLPMuxSelect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00146</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00148</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_NO_CONN U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00149</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_VDDCORE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_VDDA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_VSSA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_VREFLOAC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00153</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_CDAC1H</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_CDAC1L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00155</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_CDAC2H</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00156</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_CDAC2L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00157</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_CDAC3H</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_CDAC3L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00159</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_CDAC4H</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_CDAC4L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_CMPSS1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_ADC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00163</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_COMP_DAC_BUF</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text">ASYSCTL_TEST_NODE_PGA1 ASYSCTL_TEST_NODE_ADCCIO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_TestSelect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_enableTemperatureSensor EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_TSNSCTL ASYSCTL_TSNSCTL_ENABLE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00206</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_disableTemperatureSensor EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_TSNSCTL ASYSCTL_TSNSCTL_ENABLE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00235</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_setAnalogReferenceInternal uint32_t reference ASSERT reference ASYSCTL_VREFHI reference EALLOW HWREG ANALOGSUBSYS_BASE ASYSCTL_O_REFCONFIGA reference EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00268</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_setAnalogReferenceExternal uint32_t reference ASSERT reference ASYSCTL_VREFHI reference EALLOW HWREG ANALOGSUBSYS_BASE ASYSCTL_O_REFCONFIGA reference EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00296</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_setAnalogReference2P5 uint16_t reference ASSERT reference ASYSCTL_VREFHI reference EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_ANAREFCTL reference EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00325</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_setAnalogReference1P65 uint16_t reference ASSERT reference ASYSCTL_VREFHI reference EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_ANAREFCTL reference EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00353</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_selectInternalTestNode ASysCtl_TestSelect testSelect EALLOW HWREG ANALOGSUBSYS_BASE ASYSCTL_O_INTERNALTESTCTL HWREG ANALOGSUBSYS_BASE ASYSCTL_O_INTERNALTESTCTL ASYSCTL_INTERNALTESTCTL_TESTSEL_M uint32_t testSelect EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00382</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_selectCMPHNMux uint16_t select ASSERT select EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_CMPHNMXSEL select EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00412</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_selectCMPHNMuxValue uint16_t select uint16_t value ASSERT select ASSERT value EALLOW value U HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_CMPHNMXSEL select value HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_CMPHNMXSEL select EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00453</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_selectCMPLNMux uint16_t select ASSERT select EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_CMPLNMXSEL select EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00483</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_selectCMPLNMuxValue uint16_t select uint16_t value ASSERT select ASSERT value EALLOW value U HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_CMPLNMXSEL select value HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_CMPLNMXSEL select EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00526</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_selectCMPHPMux ASysCtl_CMPHPMuxSelect select uint32_t value EALLOW HWREG ANALOGSUBSYS_BASE ASYSCTL_O_CMPHPMXSEL HWREG ANALOGSUBSYS_BASE ASYSCTL_O_CMPHPMXSEL uint32_t ASYSCTL_CMPHPMXSEL_CMP1HPMXSEL_M uint32_t select value uint32_t select EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00559</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_selectCMPLPMux ASysCtl_CMPLPMuxSelect select uint32_t value EALLOW HWREG ANALOGSUBSYS_BASE ASYSCTL_O_CMPLPMXSEL HWREG ANALOGSUBSYS_BASE ASYSCTL_O_CMPLPMXSEL uint32_t ASYSCTL_CMPLPMXSEL_CMP1LPMXSEL_M uint32_t select value uint32_t select EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00594</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_enableCMPSSExternalDAC uint32_t select ASSERT select ASYSCTL_CMPSS3_DACL select EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_CMPSSCTL HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_CMPSSCTL select ASYSCTL_CMPSSCTL_CMPSSCTLEN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00624</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_disableCMPSSExternalDAC uint32_t select ASSERT select ASYSCTL_CMPSS3_DACL select EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_CMPSSCTL HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_CMPSSCTL select ASYSCTL_CMPSSCTL_CMPSSCTLEN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00647</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_lockTemperatureSensor EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_LOCK ASYSCTL_LOCK_TSNSCTL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00666</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_lockANAREF EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_LOCK ASYSCTL_LOCK_ANAREFCTL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00685</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_lockVMON EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_LOCK ASYSCTL_LOCK_VMONCTL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00704</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_lockCMPHPMux EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_LOCK ASYSCTL_LOCK_CMPHPMXSEL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00723</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_lockCMPLPMux EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_LOCK ASYSCTL_LOCK_CMPLPMXSEL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00742</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_lockCMPHNMux EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_LOCK ASYSCTL_LOCK_CMPHNMXSEL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00761</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_lockCMPLNMux EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_LOCK ASYSCTL_LOCK_CMPLNMXSEL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00780</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_lockVREG EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_LOCK ASYSCTL_LOCK_VREGCTL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00799</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_lockCMPSSCTL EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_LOCK ASYSCTL_LOCK_CMPSSCTL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00818</field>
    <field name="keywords"></field>
    <field name="text">uint16_t ASysCtl_getExtROscStatus HWREG ANALOGSUBSYS_BASE ASYSCTL_O_EXTROSCCSR1 ASYSCTL_EXTROSCCSR1_OSCSTATUS_M ASYSCTL_EXTROSCCSR1_OSCSTATUS_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00834</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_enableADCDACLoopback uint32_t config HWREG ANALOGSUBSYS_BASE ASYSCTL_O_ADCDACLOOPBACK HWREG ANALOGSUBSYS_BASE ASYSCTL_O_ADCDACLOOPBACK config ASYSCTL_ADCDACLOOPBACK_KEY_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00851</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_disableADCDACLoopback uint32_t config HWREG ANALOGSUBSYS_BASE ASYSCTL_O_ADCDACLOOPBACK HWREG ANALOGSUBSYS_BASE ASYSCTL_O_ADCDACLOOPBACK config ASYSCTL_ADCDACLOOPBACK_KEY_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00867</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_enableGPIOInputBuffer uint32_t pin ASSERT pin U pin pin pin pin pin uint16_t mask pin ASYSCTL_GPIOINENACTRL_GPIO43 pin ASYSCTL_GPIOINENACTRL_GPIO44 pin ASYSCTL_GPIOINENACTRL_GPIO45 U EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_GPIOINENACTRL mask EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">asysctl.h</field>
    <field name="url">asysctl_8h_source.html#l00892</field>
    <field name="keywords"></field>
    <field name="text">ASysCtl_disableGPIOInputBuffer uint32_t pin ASSERT pin U pin pin pin pin pin uint16_t mask pin ASYSCTL_GPIOINENACTRL_GPIO43 pin ASYSCTL_GPIOINENACTRL_GPIO44 pin ASYSCTL_GPIOINENACTRL_GPIO45 U EALLOW HWREGH ANALOGSUBSYS_BASE ASYSCTL_O_GPIOINENACTRL mask EDIS</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">asysctl.md</field>
    <field name="url">asysctl_8md.html</field>
    <field name="keywords">asysctl.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">ccs_launch.md</field>
    <field name="url">ccs__launch_8md.html</field>
    <field name="keywords">ccs_launch.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">ccs_project.md</field>
    <field name="url">ccs__project_8md.html</field>
    <field name="keywords">ccs_project.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">cmpss_lite.md</field>
    <field name="url">cmpss__lite_8md.html</field>
    <field name="keywords">cmpss_lite.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">cmpss_lite_ex1_asynch.md</field>
    <field name="url">cmpss__lite__ex1__asynch_8md.html</field>
    <field name="keywords">cmpss_lite_ex1_asynch.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h.html</field>
    <field name="keywords">cputimer.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">CPUTIMER_EMULATIONMODE_STOPAFTERNEXTDECREMENT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">CPUTIMER_EMULATIONMODE_STOPATZERO CPUTIMER_EMULATIONMODE_RUNFREE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_EmulationMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">CPUTIMER_CLOCK_SOURCE_SYS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text">CPUTIMER_CLOCK_SOURCE_WROSCDIV8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text">CPUTIMER_CLOCK_SOURCE_SYSOSCDIV4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text">CPUTIMER_CLOCK_SOURCE_XTAL CPUTimer_ClockSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">CPUTIMER_CLOCK_PRESCALER_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">CPUTIMER_CLOCK_PRESCALER_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">CPUTIMER_CLOCK_PRESCALER_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">CPUTIMER_CLOCK_PRESCALER_8 CPUTIMER_CLOCK_PRESCALER_16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_Prescaler CPUTimer_isBaseValid uint32_t base base CPUTIMER0_BASE base CPUTIMER1_BASE base CPUTIMER2_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00157</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_clearOverflowFlag uint32_t base ASSERT CPUTimer_isBaseValid base HWREGH base CPUTIMER_O_TCR CPUTIMER_TCR_TIF</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00178</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_disableInterrupt uint32_t base ASSERT CPUTimer_isBaseValid base HWREGH base CPUTIMER_O_TCR CPUTIMER_TCR_TIE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00199</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_enableInterrupt uint32_t base uint16_t tcrValue ASSERT CPUTimer_isBaseValid base tcrValue HWREGH base CPUTIMER_O_TCR CPUTIMER_TCR_TIF HWREGH base CPUTIMER_O_TCR tcrValue CPUTIMER_TCR_TIE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00223</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_reloadTimerCounter uint32_t base uint16_t tcrValue ASSERT CPUTimer_isBaseValid base tcrValue HWREGH base CPUTIMER_O_TCR CPUTIMER_TCR_TIF HWREGH base CPUTIMER_O_TCR tcrValue CPUTIMER_TCR_TRB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00246</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_stopTimer uint32_t base uint16_t tcrValue ASSERT CPUTimer_isBaseValid base tcrValue HWREGH base CPUTIMER_O_TCR CPUTIMER_TCR_TIF HWREGH base CPUTIMER_O_TCR tcrValue CPUTIMER_TCR_TSS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00271</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_resumeTimer uint32_t base ASSERT CPUTimer_isBaseValid base HWREGH base CPUTIMER_O_TCR CPUTIMER_TCR_TSS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00294</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_startTimer uint32_t base uint16_t tcrValue ASSERT CPUTimer_isBaseValid base tcrValue HWREGH base CPUTIMER_O_TCR CPUTIMER_TCR_TIF HWREGH base CPUTIMER_O_TCR tcrValue CPUTIMER_TCR_TRB HWREGH base CPUTIMER_O_TCR CPUTIMER_TCR_TSS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00323</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_setPeriod uint32_t base uint32_t periodCount ASSERT CPUTimer_isBaseValid base HWREG base CPUTIMER_O_PRD periodCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00344</field>
    <field name="keywords"></field>
    <field name="text">uint32_t CPUTimer_getTimerCount uint32_t base ASSERT CPUTimer_isBaseValid base HWREG base CPUTIMER_O_TIM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00367</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_setPreScaler uint32_t base uint16_t prescaler ASSERT CPUTimer_isBaseValid base HWREGH base CPUTIMER_O_TPRH prescaler HWREGH base CPUTIMER_O_TPR prescaler CPUTIMER_TPR_TDDR_M</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00389</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_getTimerOverflowStatus uint32_t base ASSERT CPUTimer_isBaseValid base HWREGH base CPUTIMER_O_TCR CPUTIMER_TCR_TIF CPUTIMER_TCR_TIF</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00428</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_selectClockSource uint32_t base CPUTimer_ClockSource source CPUTimer_Prescaler prescaler ASSERT base CPUTIMER2_BASE base CPUTIMER2_BASE EALLOW HWREGH CPUSYS_BASE SYSCTL_O_TMR2CLKCTL HWREGH CPUSYS_BASE SYSCTL_O_TMR2CLKCTL SYSCTL_TMR2CLKCTL_TMR2CLKSRCSEL_M uint16_t source SYSCTL_REGWRITE_DELAY HWREGH CPUSYS_BASE SYSCTL_O_TMR2CLKCTL HWREGH CPUSYS_BASE SYSCTL_O_TMR2CLKCTL SYSCTL_TMR2CLKCTL_TMR2CLKPRESCALE_M uint16_t prescaler SYSCTL_TMR2CLKCTL_TMR2CLKPRESCALE_S EDIS SYSCTL_REGWRITE_DELAY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cputimer.h</field>
    <field name="url">cputimer_8h_source.html#l00482</field>
    <field name="keywords"></field>
    <field name="text">CPUTimer_setEmulationMode uint32_t base CPUTimer_EmulationMode mode</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h.html</field>
    <field name="keywords">dcc.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">DCC_MODE_COUNTER_ZERO DCC_MODE_COUNTER_ONE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00125</field>
    <field name="keywords"></field>
    <field name="text">DCC_SingleShotMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT1SRC_PLL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT1SRC_WROSCDIV8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT1SRC_SYSOSCDIV4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT1SRC_SYSCLK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT1SRC_XBAR_IN15</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT1SRC_AUXCLKIN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00142</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT1SRC_EPWM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT1SRC_LSPCLK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT1SRC_ADCCLK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00145</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT1SRC_WDCLK DCC_COUNT1SRC_NW_FCLK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00148</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT1SRC_XBAR1_IN11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00149</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT1SRC_XBAR1_IN12 DCC_Count1ClockSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT0SRC_XTAL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT0SRC_WROSCDIV8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT0SRC_SYSOSCDIV4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00163</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT0SRC_TCK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT0SRC_SYSCLK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00165</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT0SRC_AUXCLK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">DCC_COUNT0SRC_XBAR DCC_Count0ClockSource DCC_isBaseValid uint32_t base base DCC0_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00209</field>
    <field name="keywords"></field>
    <field name="text">DCC_enableModule uint32_t base ASSERT DCC_isBaseValid base EALLOW HWREGH base DCC_O_GCTRL HWREGH base DCC_O_GCTRL DCC_GCTRL_DCCENA_M DCC_ENABLE_VALUE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00239</field>
    <field name="keywords"></field>
    <field name="text">DCC_disableModule uint32_t base ASSERT DCC_isBaseValid base EALLOW HWREGH base DCC_O_GCTRL HWREGH base DCC_O_GCTRL DCC_GCTRL_DCCENA_M DCC_DISABLE_VALUE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00269</field>
    <field name="keywords"></field>
    <field name="text">DCC_enableErrorSignal uint32_t base ASSERT DCC_isBaseValid base EALLOW HWREGH base DCC_O_GCTRL HWREGH base DCC_O_GCTRL DCC_GCTRL_ERRENA_M DCC_ENABLE_VALUE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00300</field>
    <field name="keywords"></field>
    <field name="text">DCC_enableDoneSignal uint32_t base ASSERT DCC_isBaseValid base EALLOW HWREGH base DCC_O_GCTRL HWREGH base DCC_O_GCTRL DCC_GCTRL_DONEENA_M DCC_ENABLE_VALUE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00331</field>
    <field name="keywords"></field>
    <field name="text">DCC_disableErrorSignal uint32_t base ASSERT DCC_isBaseValid base EALLOW HWREGH base DCC_O_GCTRL HWREGH base DCC_O_GCTRL DCC_GCTRL_ERRENA_M DCC_DISABLE_VALUE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00362</field>
    <field name="keywords"></field>
    <field name="text">DCC_disableDoneSignal uint32_t base ASSERT DCC_isBaseValid base EALLOW HWREGH base DCC_O_GCTRL HWREGH base DCC_O_GCTRL DCC_GCTRL_DONEENA_M DCC_DISABLE_VALUE DCC_GCTRL_DONEENA_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00399</field>
    <field name="keywords"></field>
    <field name="text">DCC_enableSingleShotMode uint32_t base DCC_SingleShotMode mode ASSERT DCC_isBaseValid base mode DCC_MODE_COUNTER_ZERO EALLOW HWREGH base DCC_O_GCTRL HWREGH base DCC_O_GCTRL DCC_GCTRL_SINGLESHOT_M uint16_t DCC_MODE_COUNTER_ZERO EDIS EALLOW HWREGH base DCC_O_GCTRL HWREGH base DCC_O_GCTRL DCC_GCTRL_SINGLESHOT_M uint16_t DCC_MODE_COUNTER_ONE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00443</field>
    <field name="keywords"></field>
    <field name="text">DCC_disableSingleShotMode uint32_t base ASSERT DCC_isBaseValid base EALLOW HWREGH base DCC_O_GCTRL HWREGH base DCC_O_GCTRL DCC_GCTRL_SINGLESHOT_M DCC_DISABLE_VALUE DCC_GCTRL_SINGLESHOT_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00475</field>
    <field name="keywords"></field>
    <field name="text">DCC_getErrorStatus uint32_t base ASSERT DCC_isBaseValid base HWREGH base DCC_O_STATUS DCC_STATUS_ERR DCC_STATUS_ERR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00502</field>
    <field name="keywords"></field>
    <field name="text">DCC_getSingleShotStatus uint32_t base ASSERT DCC_isBaseValid base HWREGH base DCC_O_STATUS DCC_STATUS_DONE DCC_STATUS_DONE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00528</field>
    <field name="keywords"></field>
    <field name="text">DCC_clearErrorFlag uint32_t base ASSERT DCC_isBaseValid base EALLOW HWREGH base DCC_O_STATUS DCC_STATUS_ERR EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00557</field>
    <field name="keywords"></field>
    <field name="text">DCC_clearDoneFlag uint32_t base ASSERT DCC_isBaseValid base EALLOW HWREGH base DCC_O_STATUS DCC_STATUS_DONE EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00589</field>
    <field name="keywords"></field>
    <field name="text">DCC_getCounter0Value uint32_t base ASSERT DCC_isBaseValid base HWREG base DCC_O_CNT0 uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00618</field>
    <field name="keywords"></field>
    <field name="text">DCC_getValidCounter0Value uint32_t base ASSERT DCC_isBaseValid base HWREGH base DCC_O_VALID0 uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00646</field>
    <field name="keywords"></field>
    <field name="text">DCC_getCounter1Value uint32_t base ASSERT DCC_isBaseValid base HWREG base DCC_O_CNT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00672</field>
    <field name="keywords"></field>
    <field name="text">DCC_setCounter1ClkSource uint32_t base DCC_Count1ClockSource source ASSERT DCC_isBaseValid base EALLOW HWREGH base DCC_O_CLKSRC1 HWREGH base DCC_O_CLKSRC1 DCC_REG_BYTE_MASK DCC_ENABLE_VALUE uint16_t source EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00708</field>
    <field name="keywords"></field>
    <field name="text">DCC_setCounter0ClkSource uint32_t base DCC_Count0ClockSource source ASSERT DCC_isBaseValid base EALLOW HWREGH base DCC_O_CLKSRC0 HWREGH base DCC_O_CLKSRC0 DCC_REG_BYTE_MASK DCC_ENABLE_VALUE uint16_t source EDIS uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00743</field>
    <field name="keywords"></field>
    <field name="text">DCC_getCounter1ClkSource uint32_t base ASSERT DCC_isBaseValid base HWREGH base DCC_O_CLKSRC1 DCC_CLKSRC1_CLKSRC1_M uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00768</field>
    <field name="keywords"></field>
    <field name="text">DCC_getCounter0ClkSource uint32_t base ASSERT DCC_isBaseValid base HWREGH base DCC_O_CLKSRC0 DCC_CLKSRC0_CLKSRC0_M</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00806</field>
    <field name="keywords"></field>
    <field name="text">DCC_setCounterSeeds uint32_t base uint32_t counter0 uint32_t validCounter0 uint32_t counter1 ASSERT DCC_isBaseValid base ASSERT validCounter0 DCC_VALIDSEED_MIN ASSERT counter0 DCC_COUNTSEED_MIN ASSERT counter1 DCC_COUNTSEED_MIN ASSERT validCounter0 DCC_VALIDSEED_MAX ASSERT counter0 DCC_COUNTSEED_MAX ASSERT counter1 DCC_COUNTSEED_MAX EALLOW HWREGH base DCC_O_CNTSEED0 counter0 DCC_REG_WORD_MASK HWREGH base DCC_O_CNTSEED0 HWREGH base DCC_O_CNTSEED0 DCC_SEED_REG_MASK uint32_t counter0 DCC_SEED_CNT_MASK HWREGH base DCC_O_VALIDSEED0 validCounter0 HWREGH base DCC_O_CNTSEED1 counter1 DCC_REG_WORD_MASK HWREGH base DCC_O_CNTSEED1 HWREGH base DCC_O_CNTSEED1 DCC_SEED_REG_MASK uint32_t counter1 DCC_SEED_CNT_MASK EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00872</field>
    <field name="keywords"></field>
    <field name="text">DCC_verifyClockFrequency uint32_t base DCC_Count1ClockSource clock1 float32_t freq1 DCC_Count0ClockSource clock0 float32_t freq0 float32_t tolerance float32_t freqerr float32_t freq_sysclk float32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00902</field>
    <field name="keywords"></field>
    <field name="text">DCC_measureClockFrequency uint32_t base DCC_Count1ClockSource clock1 DCC_Count0ClockSource clock0 float32_t freq0 float32_t tolerance float32_t freqerr float32_t freq_sysclk</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcc.h</field>
    <field name="url">dcc_8h_source.html#l00936</field>
    <field name="keywords"></field>
    <field name="text">DCC_continuousMonitor uint32_t base DCC_Count1ClockSource clock1 float32_t freq1 DCC_Count0ClockSource clock0 float32_t freq0 float32_t tolerance float32_t freqerr float32_t freq_sysclk</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dcc.md</field>
    <field name="url">dcc_8md.html</field>
    <field name="keywords">dcc.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dcc_ex1_single_shot_verification.md</field>
    <field name="url">dcc__ex1__single__shot__verification_8md.html</field>
    <field name="keywords">dcc_ex1_single_shot_verification.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dcc_ex2_single_shot_measurement.md</field>
    <field name="url">dcc__ex2__single__shot__measurement_8md.html</field>
    <field name="keywords">dcc_ex2_single_shot_measurement.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dcc_ex3_continuous_monitoring_of_clock.md</field>
    <field name="url">dcc__ex3__continuous__monitoring__of__clock_8md.html</field>
    <field name="keywords">dcc_ex3_continuous_monitoring_of_clock.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dcc_ex3_continuous_monitoring_of_clock_syscfg.md</field>
    <field name="url">dcc__ex3__continuous__monitoring__of__clock__syscfg_8md.html</field>
    <field name="keywords">dcc_ex3_continuous_monitoring_of_clock_syscfg.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dcc_ex4_clock_fail_detect.md</field>
    <field name="url">dcc__ex4__clock__fail__detect_8md.html</field>
    <field name="keywords">dcc_ex4_clock_fail_detect.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h.html</field>
    <field name="keywords">dcsm.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">uint32_t csmKey0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text">uint32_t csmKey1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text">uint32_t csmKey2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text">uint32_t csmKey3 DCSM_CSMPasswordKey</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">DCSM_MEMORY_INACCESSIBLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">DCSM_MEMORY_ZONE1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">DCSM_MEMORY_ZONE2 DCSM_MEMORY_FULL_ACCESS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">DCSM_MemoryStatus</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00133</field>
    <field name="keywords"></field>
    <field name="text">DCSM_FLSEM_ZONE1 DCSM_FLSEM_ZONE2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00135</field>
    <field name="keywords"></field>
    <field name="text">DCSM_SemaphoreZone</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00146</field>
    <field name="keywords"></field>
    <field name="text">DCSM_STATUS_SECURE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00147</field>
    <field name="keywords"></field>
    <field name="text">DCSM_STATUS_UNSECURE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00148</field>
    <field name="keywords"></field>
    <field name="text">DCSM_STATUS_LOCKED DCSM_STATUS_BLOCKED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">DCSM_SecurityStatus</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00159</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00172</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00174</field>
    <field name="keywords"></field>
    <field name="text">DCSM_PROTECTED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text">DCSM_UNPROTECTED DCSM_INCORRECT_ZONE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00177</field>
    <field name="keywords"></field>
    <field name="text">DCSM_EXEOnlyStatus</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text">DCSM_BANK0_SECTOR_0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text">DCSM_BANK0_SECTOR_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00193</field>
    <field name="keywords"></field>
    <field name="text">DCSM_BANK0_SECTOR_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00194</field>
    <field name="keywords"></field>
    <field name="text">DCSM_BANK0_SECTOR_3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">DCSM_BANK0_SECTOR_31_4 DCSM_BANK0_SECTOR_63_32</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">DCSM_Sector</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00206</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00209</field>
    <field name="keywords"></field>
    <field name="text">DCSM_OTPSECLOCK_JTAG</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00211</field>
    <field name="keywords"></field>
    <field name="text">DCSM_OTPSECLOCK_PSWDLOCK DCSM_OTPLock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00221</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00224</field>
    <field name="keywords"></field>
    <field name="text">DCSM_GRABWD U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00226</field>
    <field name="keywords"></field>
    <field name="text">DCSM_GRABNMIWD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00228</field>
    <field name="keywords"></field>
    <field name="text">DCSM_GRABTIMER1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00230</field>
    <field name="keywords"></field>
    <field name="text">DCSM_GRABCLKCTL DCSM_GRABRSTCTL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00234</field>
    <field name="keywords"></field>
    <field name="text">DCSM_PERSem</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00244</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00245</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00255</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00265</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00266</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00287</field>
    <field name="keywords"></field>
    <field name="text">DCSM_secureZone1 HWREG DCSM_Z1_BASE DCSM_O_Z1_CR DCSM_Z1_CR_FORCESEC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00307</field>
    <field name="keywords"></field>
    <field name="text">DCSM_secureZone2 HWREG DCSM_Z2_BASE DCSM_O_Z2_CR DCSM_Z2_CR_FORCESEC DCSM_SecurityStatus</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00325</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getZone1CSMSecurityStatus uint32_t status DCSM_SecurityStatus returnStatus status HWREG DCSM_Z1_BASE DCSM_O_Z1_CR status DCSM_Z1_CR_ARMED U status DCSM_Z1_CR_UNSECURE U returnStatus DCSM_STATUS_UNSECURE status DCSM_Z1_CR_ALLONE DCSM_Z1_CR_ALLONE returnStatus DCSM_STATUS_BLOCKED status DCSM_Z1_CR_ALLZERO DCSM_Z1_CR_ALLZERO returnStatus DCSM_STATUS_LOCKED returnStatus DCSM_STATUS_SECURE returnStatus DCSM_SecurityStatus</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00366</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getZone2CSMSecurityStatus uint32_t status DCSM_SecurityStatus returnStatus status HWREG DCSM_Z2_BASE DCSM_O_Z2_CR status DCSM_Z2_CR_ARMED U status DCSM_Z2_CR_UNSECURE U returnStatus DCSM_STATUS_UNSECURE status DCSM_Z2_CR_ALLONE DCSM_Z2_CR_ALLONE returnStatus DCSM_STATUS_BLOCKED status DCSM_Z2_CR_ALLZERO DCSM_Z2_CR_ALLZERO returnStatus DCSM_STATUS_LOCKED returnStatus DCSM_STATUS_SECURE returnStatus uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00408</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getZone1ControlStatus uint32_t stat stat HWREG DCSM_Z1_BASE DCSM_O_Z1_CR DCSM_ZX_CR_S uint16_t stat uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00432</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getZone2ControlStatus uint32_t stat stat HWREG DCSM_Z2_BASE DCSM_O_Z2_CR DCSM_ZX_CR_S uint16_t stat DCSM_MemoryStatus</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00459</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getFlashSectorZone DCSM_Sector sector uint32_t sectStat uint16_t shift sector DCSM_BANK0_SECTOR_63_32 sectStat HWREG DCSMCOMMON_BASE DCSM_O_SECTSTAT1 shift uint16_t sector DCSM_MemoryStatus uint16_t sectStat shift uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00489</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getZone1LinkPointerError HWREG DCSM_Z1_BASE DCSM_O_Z1_LINKPOINTERERR uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00507</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getZone2LinkPointerError HWREG DCSM_Z2_BASE DCSM_O_Z2_LINKPOINTERERR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00525</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getFlashErrorStatus HWREG DCSMCOMMON_BASE DCSM_O_SECERRSTAT DCSM_SECERRSTAT_ERR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00541</field>
    <field name="keywords"></field>
    <field name="text">DCSM_clearFlashErrorStatus HWREG DCSMCOMMON_BASE DCSM_O_SECERRCLR DCSM_SECERRCLR_ERR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00556</field>
    <field name="keywords"></field>
    <field name="text">DCSM_forceFlashErrorStatus HWREG DCSMCOMMON_BASE DCSM_O_SECERRFRC DCSM_SECERRFRC_ERR uint32_t DCSM_FORCE_SECERR_KEY DCSM_SECERRFRC_KEY_S uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00594</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getZone1OTPSecureLockStatus DCSM_OTPLock lockType uint32_t status returnStatus status HWREG DCSM_Z1_BASE DCSM_O_Z1_OTPSECLOCK lockType DCSM_OTPSECLOCK_JTAG returnStatus status DCSM_Z1_OTPSECLOCK_JTAGLOCK_M DCSM_Z1_OTPSECLOCK_JTAGLOCK_S lockType DCSM_OTPSECLOCK_PSWDLOCK returnStatus status DCSM_Z1_OTPSECLOCK_PSWDLOCK_M DCSM_Z1_OTPSECLOCK_PSWDLOCK_S returnStatus uint32_t DCSM_OTPSECLOCK_INVALID returnStatus uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00648</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getZone2OTPSecureLockStatus DCSM_OTPLock lockType uint32_t status returnStatus status HWREG DCSM_Z2_BASE DCSM_O_Z2_OTPSECLOCK lockType DCSM_OTPSECLOCK_PSWDLOCK returnStatus status DCSM_Z2_OTPSECLOCK_PSWDLOCK_M DCSM_Z2_OTPSECLOCK_PSWDLOCK_S returnStatus uint32_t DCSM_OTPSECLOCK_INVALID returnStatus uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00680</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getFlashDenyCodeStatus uint16_t HWREG DCSMCOMMON_BASE DCSM_O_DENYCODE uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00695</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getDeviceUIDLow HWREG DCSMCOMMON_BASE DCSM_O_UID_UNIQUE_31_0 uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00713</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getDeviceUIDHigh HWREG DCSMCOMMON_BASE DCSM_O_UID_UNIQUE_63_32 uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00731</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getDevicePartID HWREG DCSMCOMMON_BASE DCSM_O_PARTIDH uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00749</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getPerSemStatus DCSM_PERSem grabType HWREG DCSMCOMMON_BASE DCSM_O_PERSEM1 uint32_t grabType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00769</field>
    <field name="keywords"></field>
    <field name="text">DCSM_forcePerSemStatus DCSM_PERSem grabType uint16_t value EALLOW HWREG DCSMCOMMON_BASE DCSM_O_PERSEM1 uint32_t value uint32_t grabType uint32_t FLSEM_KEY DCSM_PERSEM1_KEY_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00802</field>
    <field name="keywords"></field>
    <field name="text">DCSM_unlockZone1CSM DCSM_CSMPasswordKey psCMDKey</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00824</field>
    <field name="keywords"></field>
    <field name="text">DCSM_unlockZone2CSM DCSM_CSMPasswordKey psCMDKey</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00842</field>
    <field name="keywords"></field>
    <field name="text">DCSM_writeZone1CSM DCSM_CSMPasswordKey psCMDKey</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00861</field>
    <field name="keywords"></field>
    <field name="text">DCSM_writeZone2CSM DCSM_CSMPasswordKey psCMDKey DCSM_EXEOnlyStatus</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00877</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getZone1FlashEXEStatus DCSM_Sector sector DCSM_EXEOnlyStatus</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00895</field>
    <field name="keywords"></field>
    <field name="text">DCSM_getZone2FlashEXEStatus DCSM_Sector sector</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00911</field>
    <field name="keywords"></field>
    <field name="text">DCSM_claimZoneSemaphore DCSM_SemaphoreZone zone</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00925</field>
    <field name="keywords"></field>
    <field name="text">DCSM_releaseZoneSemaphore</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00942</field>
    <field name="keywords"></field>
    <field name="text">DCSM_readZone1CSMPwd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dcsm.h</field>
    <field name="url">dcsm_8h_source.html#l00959</field>
    <field name="keywords"></field>
    <field name="text">DCSM_readZone2CSMPwd</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dcsm.md</field>
    <field name="url">dcsm_8md.html</field>
    <field name="keywords">dcsm.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h.html</field>
    <field name="keywords">dma.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_SOFTWARE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_ADCA1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_ADCA2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_ADCAEVT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_XINT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_XINT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_XINT3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_XINT4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_XINT5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_MCPWM1SOCA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_MCPWM1SOCB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_MCPWM1SOCC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_MCPWM1SOCD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_MCPWM3SOCA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_MCPWM3SOCB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_TINT0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_TINT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_TINT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_ECAP1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_SPIATX</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_SPIARX</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">DMA_TRIGGER_UARTARX DMA_TRIGGER_UARTATX</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">DMA_Trigger</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text">DMA_INT_AT_BEGINNING DMA_INT_AT_END</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">DMA_InterruptMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00145</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00148</field>
    <field name="keywords"></field>
    <field name="text">DMA_EMULATION_STOP DMA_EMULATION_FREE_RUN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text">DMA_EmulationMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00159</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">DMA_Trigger transferTrigger</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">DMA_InterruptMode interruptMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text">enableInterrupt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">uint32_t configSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00168</field>
    <field name="keywords"></field>
    <field name="text">uint32_t transferMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00170</field>
    <field name="keywords"></field>
    <field name="text">uint32_t reinitMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00172</field>
    <field name="keywords"></field>
    <field name="text">uint32_t burstSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00174</field>
    <field name="keywords"></field>
    <field name="text">uint32_t transferSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00177</field>
    <field name="keywords"></field>
    <field name="text">uint32_t srcWrapSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">uint32_t destWrapSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00181</field>
    <field name="keywords"></field>
    <field name="text">uint32_t destAddr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00182</field>
    <field name="keywords"></field>
    <field name="text">uint32_t srcAddr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00185</field>
    <field name="keywords"></field>
    <field name="text">int16_t srcBurstStep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text">int16_t destBurstStep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text">int16_t srcTransferStep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00194</field>
    <field name="keywords"></field>
    <field name="text">int16_t destTransferStep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">int16_t srcWrapStep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00200</field>
    <field name="keywords"></field>
    <field name="text">int16_t destWrapStep DMA_ConfigParams DMA_isBaseValid uint32_t base base DMA_CH1_BASE base DMA_CH2_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00242</field>
    <field name="keywords"></field>
    <field name="text">DMA_initController EALLOW HWREGH DMA_BASE DMA_O_CTRL DMA_CTRL_HARDRESET NOP EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text">DMA_triggerSoftReset uint32_t base EALLOW HWREGH base DMA_O_CONTROL DMA_CONTROL_SOFTRESET NOP EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00298</field>
    <field name="keywords"></field>
    <field name="text">DMA_setEmulationMode DMA_EmulationMode mode EALLOW mode DMA_EMULATION_STOP HWREGH DMA_BASE DMA_O_DEBUGCTRL DMA_DEBUGCTRL_FREE HWREGH DMA_BASE DMA_O_DEBUGCTRL DMA_DEBUGCTRL_FREE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00330</field>
    <field name="keywords"></field>
    <field name="text">DMA_enableTrigger uint32_t base ASSERT DMA_isBaseValid base EALLOW HWREGH base DMA_O_MODE DMA_MODE_PERINTE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00359</field>
    <field name="keywords"></field>
    <field name="text">DMA_disableTrigger uint32_t base ASSERT DMA_isBaseValid base EALLOW HWREGH base DMA_O_MODE DMA_MODE_PERINTE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00388</field>
    <field name="keywords"></field>
    <field name="text">DMA_forceTrigger uint32_t base ASSERT DMA_isBaseValid base EALLOW HWREGH base DMA_O_CONTROL DMA_CONTROL_PERINTFRC EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00417</field>
    <field name="keywords"></field>
    <field name="text">DMA_clearTriggerFlag uint32_t base ASSERT DMA_isBaseValid base EALLOW HWREGH base DMA_O_CONTROL DMA_CONTROL_PERINTCLR EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00448</field>
    <field name="keywords"></field>
    <field name="text">DMA_getTransferStatusFlag uint32_t base ASSERT DMA_isBaseValid base HWREGH base DMA_O_CONTROL DMA_CONTROL_TRANSFERSTS U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00477</field>
    <field name="keywords"></field>
    <field name="text">DMA_getBurstStatusFlag uint32_t base ASSERT DMA_isBaseValid base HWREGH base DMA_O_CONTROL DMA_CONTROL_BURSTSTS U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00507</field>
    <field name="keywords"></field>
    <field name="text">DMA_getRunStatusFlag uint32_t base ASSERT DMA_isBaseValid base HWREGH base DMA_O_CONTROL DMA_CONTROL_RUNSTS U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00537</field>
    <field name="keywords"></field>
    <field name="text">DMA_getOverflowFlag uint32_t base ASSERT DMA_isBaseValid base HWREGH base DMA_O_CONTROL DMA_CONTROL_OVRFLG U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00565</field>
    <field name="keywords"></field>
    <field name="text">DMA_getTriggerFlagStatus uint32_t base ASSERT DMA_isBaseValid base HWREGH base DMA_O_CONTROL DMA_CONTROL_PERINTFLG U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00592</field>
    <field name="keywords"></field>
    <field name="text">DMA_startChannel uint32_t base ASSERT DMA_isBaseValid base EALLOW HWREGH base DMA_O_CONTROL DMA_CONTROL_RUN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00620</field>
    <field name="keywords"></field>
    <field name="text">DMA_stopChannel uint32_t base ASSERT DMA_isBaseValid base EALLOW HWREGH base DMA_O_CONTROL DMA_CONTROL_HALT EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00647</field>
    <field name="keywords"></field>
    <field name="text">DMA_enableInterrupt uint32_t base ASSERT DMA_isBaseValid base EALLOW HWREGH base DMA_O_MODE DMA_MODE_CHINTE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00674</field>
    <field name="keywords"></field>
    <field name="text">DMA_disableInterrupt uint32_t base ASSERT DMA_isBaseValid base EALLOW HWREGH base DMA_O_MODE DMA_MODE_CHINTE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00709</field>
    <field name="keywords"></field>
    <field name="text">DMA_enableOverrunInterrupt uint32_t base ASSERT DMA_isBaseValid base EALLOW HWREGH base DMA_O_MODE DMA_MODE_OVRINTE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00737</field>
    <field name="keywords"></field>
    <field name="text">DMA_disableOverrunInterrupt uint32_t base ASSERT DMA_isBaseValid base EALLOW HWREGH base DMA_O_MODE DMA_MODE_OVRINTE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00765</field>
    <field name="keywords"></field>
    <field name="text">DMA_clearErrorFlag uint32_t base ASSERT DMA_isBaseValid base EALLOW HWREGH base DMA_O_CONTROL DMA_CONTROL_ERRCLR EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00797</field>
    <field name="keywords"></field>
    <field name="text">DMA_setInterruptMode uint32_t base DMA_InterruptMode mode ASSERT DMA_isBaseValid base EALLOW mode DMA_INT_AT_END HWREGH base DMA_O_MODE DMA_MODE_CHINTMODE HWREGH base DMA_O_MODE DMA_MODE_CHINTMODE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00841</field>
    <field name="keywords"></field>
    <field name="text">DMA_setPriorityMode ch1IsHighPri EALLOW ch1IsHighPri HWREGH DMA_BASE DMA_O_PRIORITYCTRL1 DMA_PRIORITYCTRL1_CH1PRIORITY HWREGH DMA_BASE DMA_O_PRIORITYCTRL1 DMA_PRIORITYCTRL1_CH1PRIORITY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00876</field>
    <field name="keywords"></field>
    <field name="text">DMA_configSourceAddress uint32_t base srcAddr ASSERT DMA_isBaseValid base EALLOW HWREG base DMA_O_SRC_BEG_ADDR_SHADOW uint32_t srcAddr HWREG base DMA_O_SRC_ADDR_SHADOW uint32_t srcAddr EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00908</field>
    <field name="keywords"></field>
    <field name="text">DMA_configDestAddress uint32_t base destAddr ASSERT DMA_isBaseValid base EALLOW HWREG base DMA_O_DST_BEG_ADDR_SHADOW uint32_t destAddr HWREG base DMA_O_DST_ADDR_SHADOW uint32_t destAddr EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00940</field>
    <field name="keywords"></field>
    <field name="text">DMA_configChannel uint32_t base DMA_ConfigParams transfParams</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00957</field>
    <field name="keywords"></field>
    <field name="text">DMA_configAddresses uint32_t base destAddr srcAddr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l00986</field>
    <field name="keywords"></field>
    <field name="text">DMA_configBurst uint32_t base uint16_t size int16_t srcStep int16_t destStep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l01020</field>
    <field name="keywords"></field>
    <field name="text">DMA_configTransfer uint32_t base uint32_t transferSize int16_t srcStep int16_t destStep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l01054</field>
    <field name="keywords"></field>
    <field name="text">DMA_configWrap uint32_t base uint32_t srcWrapSize int16_t srcStep uint32_t destWrapSize int16_t destStep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dma.h</field>
    <field name="url">dma_8h_source.html#l01086</field>
    <field name="keywords"></field>
    <field name="text">DMA_configMode uint32_t base DMA_Trigger trigger uint32_t config</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dma.md</field>
    <field name="url">dma_8md.html</field>
    <field name="keywords">dma.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dma_ex1_gsram_transfer.md</field>
    <field name="url">dma__ex1__gsram__transfer_8md.html</field>
    <field name="keywords">dma_ex1_gsram_transfer.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">dma_ex2_gsram_transfer.md</field>
    <field name="url">dma__ex2__gsram__transfer_8md.html</field>
    <field name="keywords">dma_ex2_gsram_transfer.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">driverlib_usage.md</field>
    <field name="url">driverlib__usage_8md.html</field>
    <field name="keywords">driverlib_usage.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">drivers.md</field>
    <field name="url">drivers_8md.html</field>
    <field name="keywords">drivers.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h.html</field>
    <field name="keywords">ecap.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00092</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">ECAP_EMULATION_STOP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">ECAP_EMULATION_RUN_TO_ZERO ECAP_EMULATION_FREE_RUN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00126</field>
    <field name="keywords"></field>
    <field name="text">ECAP_EmulationMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">ECAP_CONTINUOUS_CAPTURE_MODE U ECAP_ONE_SHOT_CAPTURE_MODE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text">ECAP_CaptureMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00149</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text">ECAP_EVENT_1 U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text">ECAP_EVENT_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00153</field>
    <field name="keywords"></field>
    <field name="text">ECAP_EVENT_3 ECAP_EVENT_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00155</field>
    <field name="keywords"></field>
    <field name="text">ECAP_Events</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00163</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">ECAP_SYNC_OUT_SYNCI</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00168</field>
    <field name="keywords"></field>
    <field name="text">ECAP_SYNC_OUT_COUNTER_PRD ECAP_SYNC_OUT_DISABLED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00171</field>
    <field name="keywords"></field>
    <field name="text">ECAP_SyncOutMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00179</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00181</field>
    <field name="keywords"></field>
    <field name="text">ECAP_APWM_ACTIVE_HIGH ECAP_APWM_ACTIVE_LOW</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00183</field>
    <field name="keywords"></field>
    <field name="text">ECAP_APWMPolarity</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00193</field>
    <field name="keywords"></field>
    <field name="text">ECAP_EVNT_RISING_EDGE U ECAP_EVNT_FALLING_EDGE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">ECAP_EventPolarity</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00203</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00205</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00206</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00207</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00208</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00209</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00210</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00211</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00212</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00213</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00214</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00215</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00216</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00217</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00218</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00219</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR15</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00220</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_INPUTXBAR16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00221</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_OUTPUTXBAR1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00222</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_OUTPUTXBAR2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00223</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_OUTPUTXBAR3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00224</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_OUTPUTXBAR4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00225</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_OUTPUTXBAR5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00226</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_OUTPUTXBAR6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00227</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_OUTPUTXBAR7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00228</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_OUTPUTXBAR8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00229</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_ADC_A_EVENT4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00230</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_ADC_A_EVENT3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00231</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_ADC_A_EVENT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00232</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_CMPSS1_CTRIP_LOW</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00233</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_CMPSS2_CTRIP_LOW</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00234</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_CMPSS3_CTRIP_LOW</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00235</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_CMPSS1_CTRIP_HIGH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00236</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_CMPSS2_CTRIP_HIGH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00237</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_CMPSS3_CTRIP_HIGH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00238</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_CMPSS1_CTRIP_HIGH_OR_LOW</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00239</field>
    <field name="keywords"></field>
    <field name="text">ECAP_INPUT_CMPSS2_CTRIP_HIGH_OR_LOW ECAP_INPUT_CMPSS3_CTRIP_HIGH_OR_LOW</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00241</field>
    <field name="keywords"></field>
    <field name="text">ECAP_InputCaptureSignals</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00249</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00252</field>
    <field name="keywords"></field>
    <field name="text">ECAP_SYNC_IN_PULSE_SRC_DISABLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00254</field>
    <field name="keywords"></field>
    <field name="text">ECAP_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00256</field>
    <field name="keywords"></field>
    <field name="text">ECAP_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00258</field>
    <field name="keywords"></field>
    <field name="text">ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_ECAP1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00260</field>
    <field name="keywords"></field>
    <field name="text">ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00262</field>
    <field name="keywords"></field>
    <field name="text">ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM3 ECAP_SyncInPulseSource ECAP_isBaseValid uint32_t base base ECAP1_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00302</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setEventPrescaler uint32_t base uint16_t preScalerValue ASSERT ECAP_isBaseValid base ASSERT preScalerValue ECAP_MAX_PRESCALER_VALUE EALLOW HWREGH base ECAP_O_ECCTL1 HWREGH base ECAP_O_ECCTL1 ECAP_ECCTL1_PRESCALE_M preScalerValue ECAP_ECCTL1_PRESCALE_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00338</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setEventPolarity uint32_t base ECAP_Events event ECAP_EventPolarity polarity uint16_t shift ASSERT ECAP_isBaseValid base shift uint16_t event EALLOW HWREGH base ECAP_O_ECCTL1 HWREGH base ECAP_O_ECCTL1 shift uint16_t polarity shift EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00381</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setCaptureMode uint32_t base ECAP_CaptureMode mode ECAP_Events event ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_CONT_ONESHT uint16_t mode HWREGH base ECAP_O_ECCTL2 HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_STOP_WRAP_M uint16_t event ECAP_ECCTL2_STOP_WRAP_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00416</field>
    <field name="keywords"></field>
    <field name="text">ECAP_reArm uint32_t base ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_REARM EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00451</field>
    <field name="keywords"></field>
    <field name="text">ECAP_enableInterrupt uint32_t base uint16_t intFlags ASSERT ECAP_isBaseValid base ASSERT intFlags ECAP_ISR_SOURCE_CAPTURE_EVENT_1 ECAP_ISR_SOURCE_CAPTURE_EVENT_2 ECAP_ISR_SOURCE_CAPTURE_EVENT_3 ECAP_ISR_SOURCE_CAPTURE_EVENT_4 ECAP_ISR_SOURCE_COUNTER_OVERFLOW ECAP_ISR_SOURCE_COUNTER_PERIOD ECAP_ISR_SOURCE_COUNTER_COMPARE U EALLOW HWREGH base ECAP_O_ECEINT intFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00495</field>
    <field name="keywords"></field>
    <field name="text">ECAP_disableInterrupt uint32_t base uint16_t intFlags ASSERT ECAP_isBaseValid base ASSERT intFlags ECAP_ISR_SOURCE_CAPTURE_EVENT_1 ECAP_ISR_SOURCE_CAPTURE_EVENT_2 ECAP_ISR_SOURCE_CAPTURE_EVENT_3 ECAP_ISR_SOURCE_CAPTURE_EVENT_4 ECAP_ISR_SOURCE_COUNTER_OVERFLOW ECAP_ISR_SOURCE_COUNTER_PERIOD ECAP_ISR_SOURCE_COUNTER_COMPARE U EALLOW HWREGH base ECAP_O_ECEINT intFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00542</field>
    <field name="keywords"></field>
    <field name="text">uint16_t ECAP_getInterruptSource uint32_t base ASSERT ECAP_isBaseValid base HWREGH base ECAP_O_ECFLG</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00563</field>
    <field name="keywords"></field>
    <field name="text">ECAP_getGlobalInterruptStatus uint32_t base ASSERT ECAP_isBaseValid base HWREGH base ECAP_O_ECFLG</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00595</field>
    <field name="keywords"></field>
    <field name="text">ECAP_clearInterrupt uint32_t base uint16_t intFlags ASSERT ECAP_isBaseValid base ASSERT intFlags ECAP_ISR_SOURCE_CAPTURE_EVENT_1 ECAP_ISR_SOURCE_CAPTURE_EVENT_2 ECAP_ISR_SOURCE_CAPTURE_EVENT_3 ECAP_ISR_SOURCE_CAPTURE_EVENT_4 ECAP_ISR_SOURCE_COUNTER_OVERFLOW ECAP_ISR_SOURCE_COUNTER_PERIOD ECAP_ISR_SOURCE_COUNTER_COMPARE U HWREGH base ECAP_O_ECCLR intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00624</field>
    <field name="keywords"></field>
    <field name="text">ECAP_clearGlobalInterrupt uint32_t base ASSERT ECAP_isBaseValid base HWREGH base ECAP_O_ECCLR ECAP_ECCLR_INT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00656</field>
    <field name="keywords"></field>
    <field name="text">ECAP_forceInterrupt uint32_t base uint16_t intFlags ASSERT ECAP_isBaseValid base ASSERT intFlags ECAP_ISR_SOURCE_CAPTURE_EVENT_1 ECAP_ISR_SOURCE_CAPTURE_EVENT_2 ECAP_ISR_SOURCE_CAPTURE_EVENT_3 ECAP_ISR_SOURCE_CAPTURE_EVENT_4 ECAP_ISR_SOURCE_COUNTER_OVERFLOW ECAP_ISR_SOURCE_COUNTER_PERIOD ECAP_ISR_SOURCE_COUNTER_COMPARE U EALLOW HWREGH base ECAP_O_ECFRC intFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00688</field>
    <field name="keywords"></field>
    <field name="text">ECAP_enableCaptureMode uint32_t base ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_CAP_APWM EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00712</field>
    <field name="keywords"></field>
    <field name="text">ECAP_enableAPWMMode uint32_t base ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_CAP_APWM EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00739</field>
    <field name="keywords"></field>
    <field name="text">ECAP_enableCounterResetOnEvent uint32_t base ECAP_Events event ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL1 uint16_t event EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00767</field>
    <field name="keywords"></field>
    <field name="text">ECAP_disableCounterResetOnEvent uint32_t base ECAP_Events event ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL1 uint16_t event EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00792</field>
    <field name="keywords"></field>
    <field name="text">ECAP_enableTimeStampCapture uint32_t base ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL1 ECAP_ECCTL1_CAPLDEN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00816</field>
    <field name="keywords"></field>
    <field name="text">ECAP_disableTimeStampCapture uint32_t base ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL1 ECAP_ECCTL1_CAPLDEN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00842</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setPhaseShiftCount uint32_t base uint32_t shiftCount ASSERT ECAP_isBaseValid base HWREG base ECAP_O_CTRPHS shiftCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00877</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setSyncInPulseSource uint32_t base ECAP_SyncInPulseSource source ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_SYNCINSEL HWREGH base ECAP_O_SYNCINSEL ECAP_SYNCINSEL_SEL_M uint16_t source ECAP_SYNCINSEL_SEL_M EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00905</field>
    <field name="keywords"></field>
    <field name="text">ECAP_enableLoadCounter uint32_t base ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_SYNCI_EN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00931</field>
    <field name="keywords"></field>
    <field name="text">ECAP_disableLoadCounter uint32_t base ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_SYNCI_EN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00959</field>
    <field name="keywords"></field>
    <field name="text">ECAP_loadCounter uint32_t base ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_SWSYNC EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l00987</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setSyncOutMode uint32_t base ECAP_SyncOutMode mode ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_SYNCO_SEL_M uint16_t mode EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01014</field>
    <field name="keywords"></field>
    <field name="text">ECAP_stopCounter uint32_t base ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_TSCTRSTOP EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01038</field>
    <field name="keywords"></field>
    <field name="text">ECAP_startCounter uint32_t base ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_TSCTRSTOP EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01066</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setAPWMPolarity uint32_t base ECAP_APWMPolarity polarity ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_APWMPOL uint16_t polarity EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01093</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setAPWMPeriod uint32_t base uint32_t periodCount ASSERT ECAP_isBaseValid base HWREG base ECAP_O_CAP1 periodCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01121</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setAPWMCompare uint32_t base uint32_t compareCount ASSERT ECAP_isBaseValid base HWREG base ECAP_O_CAP2 compareCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01146</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setAPWMShadowPeriod uint32_t base uint32_t periodCount ASSERT ECAP_isBaseValid base HWREG base ECAP_O_CAP3 periodCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01175</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setAPWMShadowCompare uint32_t base uint32_t compareCount ASSERT ECAP_isBaseValid base HWREG base ECAP_O_CAP4 compareCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01197</field>
    <field name="keywords"></field>
    <field name="text">uint32_t ECAP_getTimeBaseCounter uint32_t base ASSERT ECAP_isBaseValid base HWREG base ECAP_O_TSCTR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01220</field>
    <field name="keywords"></field>
    <field name="text">uint32_t ECAP_getEventTimeStamp uint32_t base ECAP_Events event uint32_t count ASSERT ECAP_isBaseValid base event ECAP_EVENT_1 count HWREG base ECAP_O_CAP1 ECAP_EVENT_2 count HWREG base ECAP_O_CAP2 ECAP_EVENT_3 count HWREG base ECAP_O_CAP3 ECAP_EVENT_4 count HWREG base ECAP_O_CAP4 count U count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01287</field>
    <field name="keywords"></field>
    <field name="text">ECAP_selectECAPInput uint32_t base ECAP_InputCaptureSignals input ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL0 HWREGH base ECAP_O_ECCTL0 ECAP_ECCTL0_INPUTSEL_M uint16_t input EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01315</field>
    <field name="keywords"></field>
    <field name="text">ECAP_resetCounters uint32_t base ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_CTRFILTRESET EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01341</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setDMASource uint32_t base ECAP_Events event ASSERT ECAP_isBaseValid base EALLOW HWREGH base ECAP_O_ECCTL2 HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_DMAEVTSEL_M uint16_t ECAP_ECCTL2_DMAEVTSEL_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01369</field>
    <field name="keywords"></field>
    <field name="text">ECAP_Events ECAP_getModuloCounterStatus uint32_t base uint16_t counterStatusValue ASSERT ECAP_isBaseValid base counterStatusValue HWREGH base ECAP_O_ECCTL2 ECAP_ECCTL2_MODCNTRSTS_M ECAP_ECCTL2_MODCNTRSTS_S ECAP_Events counterStatusValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ecap.h</field>
    <field name="url">ecap_8h_source.html#l01401</field>
    <field name="keywords"></field>
    <field name="text">ECAP_setEmulationMode uint32_t base ECAP_EmulationMode mode</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">ecap.md</field>
    <field name="url">ecap_8md.html</field>
    <field name="keywords">ecap.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">ecap_ex1_apwm.md</field>
    <field name="url">ecap__ex1__apwm_8md.html</field>
    <field name="keywords">ecap_ex1_apwm.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">ecap_ex2_capture_pwm.md</field>
    <field name="url">ecap__ex2__capture__pwm_8md.html</field>
    <field name="keywords">ecap_ex2_capture_pwm.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">empty_driverlib_project.md</field>
    <field name="url">empty__driverlib__project_8md.html</field>
    <field name="keywords">empty_driverlib_project.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">empty_driverlib_project_cpp.md</field>
    <field name="url">empty__driverlib__project__cpp_8md.html</field>
    <field name="keywords">empty_driverlib_project_cpp.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h.html</field>
    <field name="keywords">eqep.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00089</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00132</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00133</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00135</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00142</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00156</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00177</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00178</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00186</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00194</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00202</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00208</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00210</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00215</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00216</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00225</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00228</field>
    <field name="keywords"></field>
    <field name="text">EQEP_POSITION_RESET_IDX</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00230</field>
    <field name="keywords"></field>
    <field name="text">EQEP_POSITION_RESET_MAX_POS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00232</field>
    <field name="keywords"></field>
    <field name="text">EQEP_POSITION_RESET_1ST_IDX EQEP_POSITION_RESET_UNIT_TIME_OUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00235</field>
    <field name="keywords"></field>
    <field name="text">EQEP_PositionResetMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00243</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00245</field>
    <field name="keywords"></field>
    <field name="text">EQEP_CAPTURE_CLK_DIV_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00246</field>
    <field name="keywords"></field>
    <field name="text">EQEP_CAPTURE_CLK_DIV_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00247</field>
    <field name="keywords"></field>
    <field name="text">EQEP_CAPTURE_CLK_DIV_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00248</field>
    <field name="keywords"></field>
    <field name="text">EQEP_CAPTURE_CLK_DIV_8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00249</field>
    <field name="keywords"></field>
    <field name="text">EQEP_CAPTURE_CLK_DIV_16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00250</field>
    <field name="keywords"></field>
    <field name="text">EQEP_CAPTURE_CLK_DIV_32</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00251</field>
    <field name="keywords"></field>
    <field name="text">EQEP_CAPTURE_CLK_DIV_64 EQEP_CAPTURE_CLK_DIV_128</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00253</field>
    <field name="keywords"></field>
    <field name="text">EQEP_CAPCLKPrescale</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00261</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00263</field>
    <field name="keywords"></field>
    <field name="text">EQEP_UNIT_POS_EVNT_DIV_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00264</field>
    <field name="keywords"></field>
    <field name="text">EQEP_UNIT_POS_EVNT_DIV_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00265</field>
    <field name="keywords"></field>
    <field name="text">EQEP_UNIT_POS_EVNT_DIV_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00266</field>
    <field name="keywords"></field>
    <field name="text">EQEP_UNIT_POS_EVNT_DIV_8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text">EQEP_UNIT_POS_EVNT_DIV_16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00268</field>
    <field name="keywords"></field>
    <field name="text">EQEP_UNIT_POS_EVNT_DIV_32</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00269</field>
    <field name="keywords"></field>
    <field name="text">EQEP_UNIT_POS_EVNT_DIV_64</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00270</field>
    <field name="keywords"></field>
    <field name="text">EQEP_UNIT_POS_EVNT_DIV_128</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00271</field>
    <field name="keywords"></field>
    <field name="text">EQEP_UNIT_POS_EVNT_DIV_256</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00272</field>
    <field name="keywords"></field>
    <field name="text">EQEP_UNIT_POS_EVNT_DIV_512</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00273</field>
    <field name="keywords"></field>
    <field name="text">EQEP_UNIT_POS_EVNT_DIV_1024 EQEP_UNIT_POS_EVNT_DIV_2048</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00275</field>
    <field name="keywords"></field>
    <field name="text">EQEP_UPEVNTPrescale</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00283</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00285</field>
    <field name="keywords"></field>
    <field name="text">EQEP_STROBE_FROM_GPIO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00286</field>
    <field name="keywords"></field>
    <field name="text">EQEP_STROBE_OR_ADCSOCA EQEP_STROBE_OR_ADCSOCB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00288</field>
    <field name="keywords"></field>
    <field name="text">EQEP_StrobeSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00296</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00298</field>
    <field name="keywords"></field>
    <field name="text">EQEP_QMA_MODE_BYPASS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00299</field>
    <field name="keywords"></field>
    <field name="text">EQEP_QMA_MODE_1 EQEP_QMA_MODE_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00301</field>
    <field name="keywords"></field>
    <field name="text">EQEP_QMAMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00311</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00313</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_DEVICE_PIN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00314</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_CMPSS1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00315</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_CMPSS2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00316</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_CMPSS3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00317</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_CMPSS4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00318</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00319</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_MCPWMXBAR1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00320</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_MCPWMXBAR2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00321</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_MCPWMXBAR3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00322</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_MCPWMXBAR4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00323</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_MCPWMXBAR5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00324</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_MCPWMXBAR6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00325</field>
    <field name="keywords"></field>
    <field name="text">EQEP_SOURCE_MCPWMXBAR7 EQEP_SOURCE_MCPWMXBAR8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00327</field>
    <field name="keywords"></field>
    <field name="text">EQEP_Source</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00335</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00336</field>
    <field name="keywords"></field>
    <field name="text">EQEP_Source sourceA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">EQEP_Source sourceB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00338</field>
    <field name="keywords"></field>
    <field name="text">EQEP_Source sourceIndex EQEP_SourceSelect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00347</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00349</field>
    <field name="keywords"></field>
    <field name="text">EQEP_EMULATIONMODE_STOPIMMEDIATELY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00350</field>
    <field name="keywords"></field>
    <field name="text">EQEP_EMULATIONMODE_STOPATROLLOVER EQEP_EMULATIONMODE_RUNFREE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00352</field>
    <field name="keywords"></field>
    <field name="text">EQEP_EmulationMode EQEP_isBaseValid uint32_t base base EQEP1_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00397</field>
    <field name="keywords"></field>
    <field name="text">EQEP_enableModule uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEPCTL EQEP_QEPCTL_QPEN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00423</field>
    <field name="keywords"></field>
    <field name="text">EQEP_disableModule uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEPCTL EQEP_QEPCTL_QPEN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00464</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setDecoderConfig uint32_t base uint16_t config ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QDECCTL HWREGH base EQEP_O_QDECCTL EQEP_QDECCTL_SWAP EQEP_QDECCTL_XCR EQEP_QDECCTL_QSRC_M EQEP_QDECCTL_IGATE config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00503</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setPositionCounterConfig uint32_t base EQEP_PositionResetMode mode uint32_t maxPosition ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEPCTL HWREGH base EQEP_O_QEPCTL EQEP_QEPCTL_PCRM_M uint16_t mode HWREG base EQEP_O_QPOSMAX maxPosition uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00539</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getPosition uint32_t base ASSERT EQEP_isBaseValid base HWREG base EQEP_O_QPOSCNT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00566</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setPosition uint32_t base uint32_t position ASSERT EQEP_isBaseValid base HWREG base EQEP_O_QPOSCNT position int16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00595</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getDirection uint32_t base int16_t direction ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEPSTS EQEP_QEPSTS_QDF U direction direction direction</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00645</field>
    <field name="keywords"></field>
    <field name="text">EQEP_enableInterrupt uint32_t base uint16_t intFlags ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEINT intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00684</field>
    <field name="keywords"></field>
    <field name="text">EQEP_disableInterrupt uint32_t base uint16_t intFlags ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEINT intFlags uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00724</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getInterruptStatus uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QFLG</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00764</field>
    <field name="keywords"></field>
    <field name="text">EQEP_clearInterruptStatus uint32_t base uint16_t intFlags ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QCLR intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00803</field>
    <field name="keywords"></field>
    <field name="text">EQEP_forceInterrupt uint32_t base uint16_t intFlags ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QFRC intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00830</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getError uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QFLG EQEP_QFLG_PHE U uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00869</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getStatus uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEPSTS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00907</field>
    <field name="keywords"></field>
    <field name="text">EQEP_clearStatus uint32_t base uint16_t statusFlags ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEPSTS statusFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00948</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setCaptureConfig uint32_t base EQEP_CAPCLKPrescale capPrescale EQEP_UPEVNTPrescale evntPrescale ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QCAPCTL HWREGH base EQEP_O_QCAPCTL EQEP_QCAPCTL_UPPS_M EQEP_QCAPCTL_CCPS_M uint16_t evntPrescale uint16_t capPrescale</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l00977</field>
    <field name="keywords"></field>
    <field name="text">EQEP_enableCapture uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QCAPCTL EQEP_QCAPCTL_CEN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01002</field>
    <field name="keywords"></field>
    <field name="text">EQEP_disableCapture uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QCAPCTL EQEP_QCAPCTL_CEN uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01028</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getCapturePeriod uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QCPRD uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01053</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getCaptureTimer uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QCTMR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01078</field>
    <field name="keywords"></field>
    <field name="text">EQEP_enableCompare uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QPOSCTL EQEP_QPOSCTL_PCE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01104</field>
    <field name="keywords"></field>
    <field name="text">EQEP_disableCompare uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QPOSCTL EQEP_QPOSCTL_PCE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01133</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setComparePulseWidth uint32_t base uint16_t cycles ASSERT EQEP_isBaseValid base ASSERT cycles EQEP_QPOSCTL_PCSPW_M HWREGH base EQEP_O_QPOSCTL HWREGH base EQEP_O_QPOSCTL uint16_t EQEP_QPOSCTL_PCSPW_M cycles</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01164</field>
    <field name="keywords"></field>
    <field name="text">EQEP_loadUnitTimer uint32_t base uint32_t period ASSERT EQEP_isBaseValid base HWREG base EQEP_O_QUPRD period</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01192</field>
    <field name="keywords"></field>
    <field name="text">EQEP_enableUnitTimer uint32_t base uint32_t period ASSERT EQEP_isBaseValid base HWREG base EQEP_O_QUPRD period HWREGH base EQEP_O_QEPCTL EQEP_QEPCTL_UTE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01223</field>
    <field name="keywords"></field>
    <field name="text">EQEP_disableUnitTimer uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEPCTL EQEP_QEPCTL_UTE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01254</field>
    <field name="keywords"></field>
    <field name="text">EQEP_enableWatchdog uint32_t base uint16_t period ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QWDPRD period HWREGH base EQEP_O_QEPCTL EQEP_QEPCTL_WDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01285</field>
    <field name="keywords"></field>
    <field name="text">EQEP_disableWatchdog uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEPCTL EQEP_QEPCTL_WDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01311</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setWatchdogTimerValue uint32_t base uint16_t value ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QWDTMR value uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01334</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getWatchdogTimerValue uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QWDTMR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01374</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setPositionInitMode uint32_t base uint16_t initMode ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEPCTL HWREGH base EQEP_O_QEPCTL EQEP_QEPCTL_IEI_M EQEP_QEPCTL_SEI_M initMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01409</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setSWPositionInit uint32_t base initialize ASSERT EQEP_isBaseValid base initialize HWREGH base EQEP_O_QEPCTL EQEP_QEPCTL_SWI HWREGH base EQEP_O_QEPCTL EQEP_QEPCTL_SWI</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01445</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setInitialPosition uint32_t base uint32_t position ASSERT EQEP_isBaseValid base HWREG base EQEP_O_QPOSINIT position</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01489</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setLatchMode uint32_t base uint32_t latchMode ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEPCTL HWREGH base EQEP_O_QEPCTL EQEP_QEPCTL_QCLM EQEP_QEPCTL_IEL_M EQEP_QEPCTL_SEL latchMode uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01519</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getIndexPositionLatch uint32_t base ASSERT EQEP_isBaseValid base HWREG base EQEP_O_QPOSILAT uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01548</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getStrobePositionLatch uint32_t base ASSERT EQEP_isBaseValid base HWREG base EQEP_O_QPOSSLAT uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01575</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getPositionLatch uint32_t base ASSERT EQEP_isBaseValid base HWREG base EQEP_O_QPOSLAT uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01603</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getCaptureTimerLatch uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QCTMRLAT uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01631</field>
    <field name="keywords"></field>
    <field name="text">EQEP_getCapturePeriodLatch uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QCPRDLAT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01663</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setQMAModuleMode uint32_t base EQEP_QMAMode qmaMode ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QMACTRL HWREGH base EQEP_O_QMACTRL EQEP_QMACTRL_MODE_M uint16_t qmaMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01698</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setStrobeSource uint32_t base EQEP_StrobeSource strobeSrc ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEPSTROBESEL HWREGH base EQEP_O_QEPSTROBESEL EQEP_QEPSTROBESEL_STROBESEL_M uint16_t strobeSrc</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01726</field>
    <field name="keywords"></field>
    <field name="text">EQEP_enableDirectionChangeDuringIndex uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QDECCTL EQEP_QDECCTL_QIDIRE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01752</field>
    <field name="keywords"></field>
    <field name="text">EQEP_disableDirectionChangeDuringIndex uint32_t base ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QDECCTL EQEP_QDECCTL_QIDIRE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01779</field>
    <field name="keywords"></field>
    <field name="text">EQEP_selectSource uint32_t base EQEP_SourceSelect sourceConfig ASSERT EQEP_isBaseValid base HWREG base EQEP_O_QEPSRCSEL HWREG base EQEP_O_QEPSRCSEL EQEP_QEPSRCSEL_QEPASEL_M EQEP_QEPSRCSEL_QEPBSEL_M EQEP_QEPSRCSEL_QEPISEL_M uint32_t uint32_t sourceConfig sourceA EQEP_QEPSRCSEL_QEPASEL_S uint32_t uint32_t sourceConfig sourceB EQEP_QEPSRCSEL_QEPBSEL_S uint32_t uint32_t sourceConfig sourceIndex EQEP_QEPSRCSEL_QEPISEL_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01823</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setEmulationMode uint32_t base EQEP_EmulationMode emuMode ASSERT EQEP_isBaseValid base HWREGH base EQEP_O_QEPCTL HWREGH base EQEP_O_QEPCTL EQEP_QEPCTL_FREE_SOFT_M uint16_t emuMode EQEP_QEPCTL_FREE_SOFT_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01872</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setCompareConfig uint32_t base uint16_t config uint32_t compareValue uint16_t cycles</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eqep.h</field>
    <field name="url">eqep_8h_source.html#l01893</field>
    <field name="keywords"></field>
    <field name="text">EQEP_setInputPolarity uint32_t base invertQEPA invertQEPB invertIndex invertStrobe</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">eqep.md</field>
    <field name="url">eqep_8md.html</field>
    <field name="keywords">eqep.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">eqep_ex1_freq_cal.md</field>
    <field name="url">eqep__ex1__freq__cal_8md.html</field>
    <field name="keywords">eqep_ex1_freq_cal.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">eqep_ex2_pos_speed.md</field>
    <field name="url">eqep__ex2__pos__speed_8md.html</field>
    <field name="keywords">eqep_ex2_pos_speed.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">eqep_ex4_freq_cal_interrupt.md</field>
    <field name="url">eqep__ex4__freq__cal__interrupt_8md.html</field>
    <field name="keywords">eqep_ex4_freq_cal_interrupt.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">eqep_ex5_speed_dir_motor.md</field>
    <field name="url">eqep__ex5__speed__dir__motor_8md.html</field>
    <field name="keywords">eqep_ex5_speed_dir_motor.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">example_intro.md</field>
    <field name="url">example__intro_8md.html</field>
    <field name="keywords">example_intro.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">examples.md</field>
    <field name="url">examples_8md.html</field>
    <field name="keywords">examples.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">examples_drivers.md</field>
    <field name="url">examples__drivers_8md.html</field>
    <field name="keywords">examples_drivers.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">examples_freertos.md</field>
    <field name="url">examples__freertos_8md.html</field>
    <field name="keywords">examples_freertos.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h.html</field>
    <field name="keywords">flash.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00092</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">Flash_isCtrlBaseValid uint32_t ctrlBase ctrlBase FLASH0CTRL_BASE Flash_isECCBaseValid uint32_t eccBase eccBase FLASH0ECC_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text">Flash_setWaitstates uint32_t ctrlBase uint16_t waitstates ASSERT Flash_isCtrlBaseValid ctrlBase ASSERT waitstates EALLOW HWREG ctrlBase FLASH_O_FRDCNTL HWREG ctrlBase FLASH_O_FRDCNTL uint32_t FLASH_FRDCNTL_RWAIT_M uint32_t waitstates FLASH_FRDCNTL_RWAIT_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00224</field>
    <field name="keywords"></field>
    <field name="text">Flash_enablePrefetch uint32_t ctrlBase ASSERT Flash_isCtrlBaseValid ctrlBase EALLOW HWREG ctrlBase FLASH_O_FRD_INTF_CTRL FLASH_FRD_INTF_CTRL_PREFETCH_EN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00254</field>
    <field name="keywords"></field>
    <field name="text">Flash_disablePrefetch uint32_t ctrlBase ASSERT Flash_isCtrlBaseValid ctrlBase EALLOW HWREG ctrlBase FLASH_O_FRD_INTF_CTRL uint32_t FLASH_FRD_INTF_CTRL_PREFETCH_EN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00284</field>
    <field name="keywords"></field>
    <field name="text">Flash_enableCache uint32_t ctrlBase ASSERT Flash_isCtrlBaseValid ctrlBase EALLOW HWREG ctrlBase FLASH_O_FRD_INTF_CTRL FLASH_FRD_INTF_CTRL_DATA_CACHE_EN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00314</field>
    <field name="keywords"></field>
    <field name="text">Flash_disableCache uint32_t ctrlBase ASSERT Flash_isCtrlBaseValid ctrlBase EALLOW HWREG ctrlBase FLASH_O_FRD_INTF_CTRL uint32_t FLASH_FRD_INTF_CTRL_DATA_CACHE_EN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00341</field>
    <field name="keywords"></field>
    <field name="text">Flash_setFLWEPROT uint32_t ctrlBase ASSERT Flash_isCtrlBaseValid ctrlBase EALLOW HWREG ctrlBase FLASH_O_FLPROT uint32_t FLASH_FLPROT_FLWEPROT HWREG ctrlBase FLASH_O_FLPROT uint32_t FLASH_FLPROT_FLWEPROT EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00372</field>
    <field name="keywords"></field>
    <field name="text">Flash_enableECC uint32_t eccBase ASSERT Flash_isECCBaseValid eccBase EALLOW HWREG eccBase FLASH_O_ECC_ENABLE HWREG eccBase FLASH_O_ECC_ENABLE uint32_t FLASH_ECC_ENABLE_ENABLE_M EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00400</field>
    <field name="keywords"></field>
    <field name="text">Flash_disableECC uint32_t eccBase ASSERT Flash_isECCBaseValid eccBase EALLOW HWREG eccBase FLASH_O_ECC_ENABLE HWREG eccBase FLASH_O_ECC_ENABLE uint32_t FLASH_ECC_ENABLE_ENABLE_M EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00430</field>
    <field name="keywords"></field>
    <field name="text">Flash_enableSingleBitECCTestMode uint32_t eccBase ASSERT Flash_isECCBaseValid eccBase EALLOW HWREG eccBase FLASH_O_FECC_CTRL FLASH_SINGLE_BIT_ECC_TEST_EN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00456</field>
    <field name="keywords"></field>
    <field name="text">Flash_enableDoubleBitECCTestMode uint32_t eccBase ASSERT Flash_isECCBaseValid eccBase EALLOW HWREG eccBase FLASH_O_FECC_CTRL FLASH_DOUBLE_BIT_ECC_TEST_EN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00482</field>
    <field name="keywords"></field>
    <field name="text">Flash_disableSingleBitECCTestMode uint32_t eccBase ASSERT Flash_isECCBaseValid eccBase EALLOW HWREG eccBase FLASH_O_FECC_CTRL uint32_t FLASH_SINGLE_BIT_ECC_TEST_EN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00508</field>
    <field name="keywords"></field>
    <field name="text">Flash_disableDoubleBitECCTestMode uint32_t eccBase ASSERT Flash_isECCBaseValid eccBase EALLOW HWREG eccBase FLASH_O_FECC_CTRL uint32_t FLASH_DOUBLE_BIT_ECC_TEST_EN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00545</field>
    <field name="keywords"></field>
    <field name="text">Flash_initModule uint32_t ctrlBase uint32_t eccBase uint16_t waitstates</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">flash.h</field>
    <field name="url">flash_8h_source.html#l00556</field>
    <field name="keywords"></field>
    <field name="text">Flash_writeTrims uint32_t reg_offset uint32_t mask uint32_t shift uint32_t value EALLOW HWREG_BP FLASHCONFIG_BASE reg_offset uint32_t mask HWREG_BP FLASHCONFIG_BASE reg_offset uint32_t value shift EDIS</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">flash.md</field>
    <field name="url">flash_8md.html</field>
    <field name="keywords">flash.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h.html</field>
    <field name="keywords">gpio.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00089</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00092</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00125</field>
    <field name="keywords"></field>
    <field name="text">GPIO_DIR_MODE_IN GPIO_DIR_MODE_OUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00127</field>
    <field name="keywords"></field>
    <field name="text">GPIO_Direction</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00135</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">GPIO_INT_TYPE_FALLING_EDGE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">GPIO_INT_TYPE_RISING_EDGE GPIO_INT_TYPE_BOTH_EDGES</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text">GPIO_IntType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00148</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">GPIO_QUAL_SYNC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text">GPIO_QUAL_3SAMPLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text">GPIO_QUAL_6SAMPLE GPIO_QUAL_ASYNC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text">GPIO_QualificationMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00163</field>
    <field name="keywords"></field>
    <field name="text">GPIO_ANALOG_DISABLED GPIO_ANALOG_ENABLED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00165</field>
    <field name="keywords"></field>
    <field name="text">GPIO_AnalogMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00173</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text">GPIO_PORT_A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00176</field>
    <field name="keywords"></field>
    <field name="text">GPIO_PORT_B GPIO_PORT_H</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00178</field>
    <field name="keywords"></field>
    <field name="text">GPIO_Port</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text">GPIO_INT_XINT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00190</field>
    <field name="keywords"></field>
    <field name="text">GPIO_INT_XINT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text">GPIO_INT_XINT3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text">GPIO_INT_XINT4 GPIO_INT_XINT5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00194</field>
    <field name="keywords"></field>
    <field name="text">GPIO_ExternalIntNum GPIO_isPinValid uint32_t pin pin pin pin pin pin pin pin pin pin pin pin pin pin pin pin pin pin pin pin pin pin pin pin pin</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00257</field>
    <field name="keywords"></field>
    <field name="text">GPIO_setInterruptType GPIO_ExternalIntNum extIntNum GPIO_IntType intType HWREGH XINT_BASE uint16_t extIntNum HWREGH XINT_BASE uint16_t extIntNum XINT_1CR_POLARITY_M uint16_t intType GPIO_IntType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00290</field>
    <field name="keywords"></field>
    <field name="text">GPIO_getInterruptType GPIO_ExternalIntNum extIntNum GPIO_IntType uint16_t HWREGH XINT_BASE uint16_t extIntNum XINT_1CR_POLARITY_M</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00322</field>
    <field name="keywords"></field>
    <field name="text">GPIO_enableInterrupt GPIO_ExternalIntNum extIntNum HWREGH XINT_BASE uint16_t extIntNum XINT_1CR_ENABLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00353</field>
    <field name="keywords"></field>
    <field name="text">GPIO_disableInterrupt GPIO_ExternalIntNum extIntNum HWREGH XINT_BASE uint16_t extIntNum XINT_1CR_ENABLE uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00380</field>
    <field name="keywords"></field>
    <field name="text">GPIO_getInterruptCounter GPIO_ExternalIntNum extIntNum ASSERT extIntNum GPIO_INT_XINT3 HWREGH XINT_BASE XINT_O_1CTR uint16_t extIntNum uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00406</field>
    <field name="keywords"></field>
    <field name="text">GPIO_readPin uint32_t pin uint32_t gpioDataReg ASSERT GPIO_isPinValid pin gpioDataReg uint32_t uintptr_t GPIODATA_BASE pin GPIO_DATA_REGS_STEP gpioDataReg GPIO_GPxDAT_INDEX pin uint32_t uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00439</field>
    <field name="keywords"></field>
    <field name="text">GPIO_readPinDataRegister uint32_t pin uint32_t gpioDataReg ASSERT GPIO_isPinValid pin gpioDataReg uint32_t uintptr_t GPIODATAREAD_BASE pin GPIO_DATA_READ_REGS_STEP gpioDataReg GPIO_GPxDAT_R_INDEX pin uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00471</field>
    <field name="keywords"></field>
    <field name="text">GPIO_writePin uint32_t pin uint32_t outVal uint32_t gpioDataReg uint32_t pinMask ASSERT GPIO_isPinValid pin gpioDataReg uint32_t uintptr_t GPIODATA_BASE pin GPIO_DATA_REGS_STEP pinMask uint32_t pin outVal U gpioDataReg GPIO_GPxCLEAR_INDEX pinMask gpioDataReg GPIO_GPxSET_INDEX pinMask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00517</field>
    <field name="keywords"></field>
    <field name="text">GPIO_writeODPin uint32_t pin uint32_t outVal uint32_t gpioBaseAddr uint32_t pinMask ASSERT GPIO_isPinValid pin gpioBaseAddr uint32_t GPIOCTRL_BASE pin GPIO_CTRL_REGS_STEP pinMask uint32_t pin outVal gpioBaseAddr GPIO_GPxDIR_INDEX pinMask gpioBaseAddr GPIO_GPxDIR_INDEX pinMask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00558</field>
    <field name="keywords"></field>
    <field name="text">GPIO_togglePin uint32_t pin uint32_t gpioDataReg ASSERT GPIO_isPinValid pin gpioDataReg uint32_t uintptr_t GPIODATA_BASE pin GPIO_DATA_REGS_STEP gpioDataReg GPIO_GPxTOGGLE_INDEX uint32_t pin uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00586</field>
    <field name="keywords"></field>
    <field name="text">GPIO_readPortData GPIO_Port port uint32_t gpioDataReg gpioDataReg uint32_t uintptr_t GPIODATA_BASE uint32_t port GPIO_DATA_REGS_STEP gpioDataReg GPIO_GPxDAT_INDEX uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00619</field>
    <field name="keywords"></field>
    <field name="text">GPIO_readPortDataRegister GPIO_Port port uint32_t gpioDataReg gpioDataReg uint32_t uintptr_t GPIODATAREAD_BASE uint32_t port GPIO_DATA_READ_REGS_STEP gpioDataReg GPIO_GPxDAT_R_INDEX</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00652</field>
    <field name="keywords"></field>
    <field name="text">GPIO_writePortData GPIO_Port port uint32_t outVal uint32_t gpioDataReg gpioDataReg uint32_t uintptr_t GPIODATA_BASE uint32_t port GPIO_DATA_REGS_STEP gpioDataReg GPIO_GPxDAT_INDEX outVal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00685</field>
    <field name="keywords"></field>
    <field name="text">GPIO_setPortPins GPIO_Port port uint32_t pinMask uint32_t gpioDataReg gpioDataReg uint32_t uintptr_t GPIODATA_BASE uint32_t port GPIO_DATA_REGS_STEP gpioDataReg GPIO_GPxSET_INDEX pinMask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00718</field>
    <field name="keywords"></field>
    <field name="text">GPIO_clearPortPins GPIO_Port port uint32_t pinMask uint32_t gpioDataReg gpioDataReg uint32_t uintptr_t GPIODATA_BASE uint32_t port GPIO_DATA_REGS_STEP gpioDataReg GPIO_GPxCLEAR_INDEX pinMask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00751</field>
    <field name="keywords"></field>
    <field name="text">GPIO_togglePortPins GPIO_Port port uint32_t pinMask uint32_t gpioDataReg gpioDataReg uint32_t uintptr_t GPIODATA_BASE uint32_t port GPIO_DATA_REGS_STEP gpioDataReg GPIO_GPxTOGGLE_INDEX pinMask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00788</field>
    <field name="keywords"></field>
    <field name="text">GPIO_lockPortConfig GPIO_Port port uint32_t pinMask uint32_t gpioDataReg gpioDataReg uint32_t uintptr_t GPIOCTRL_BASE uint32_t port GPIO_CTRL_REGS_STEP EALLOW gpioDataReg GPIO_GPxLOCK_INDEX pinMask EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00823</field>
    <field name="keywords"></field>
    <field name="text">GPIO_unlockPortConfig GPIO_Port port uint32_t pinMask uint32_t gpioDataReg gpioDataReg uint32_t uintptr_t GPIOCTRL_BASE uint32_t port GPIO_CTRL_REGS_STEP EALLOW gpioDataReg GPIO_GPxLOCK_INDEX pinMask EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00862</field>
    <field name="keywords"></field>
    <field name="text">GPIO_commitPortConfig GPIO_Port port uint32_t pinMask uint32_t gpioDataReg gpioDataReg uint32_t uintptr_t GPIOCTRL_BASE uint32_t port GPIO_CTRL_REGS_STEP EALLOW gpioDataReg GPIO_GPxCR_INDEX pinMask EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00903</field>
    <field name="keywords"></field>
    <field name="text">GPIO_setDirectionMode uint32_t pin GPIO_Direction pinIO GPIO_Direction</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00920</field>
    <field name="keywords"></field>
    <field name="text">GPIO_getDirectionMode uint32_t pin</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00949</field>
    <field name="keywords"></field>
    <field name="text">GPIO_setInterruptPin uint32_t pin GPIO_ExternalIntNum extIntNum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00975</field>
    <field name="keywords"></field>
    <field name="text">GPIO_setPadConfig uint32_t pin uint32_t pinType uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l00991</field>
    <field name="keywords"></field>
    <field name="text">GPIO_getPadConfig uint32_t pin</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l01014</field>
    <field name="keywords"></field>
    <field name="text">GPIO_setQualificationMode uint32_t pin GPIO_QualificationMode qualification GPIO_QualificationMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l01028</field>
    <field name="keywords"></field>
    <field name="text">GPIO_getQualificationMode uint32_t pin</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l01053</field>
    <field name="keywords"></field>
    <field name="text">GPIO_setQualificationPeriod uint32_t pin uint32_t divider</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l01083</field>
    <field name="keywords"></field>
    <field name="text">GPIO_setAnalogMode uint32_t pin GPIO_AnalogMode mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gpio.h</field>
    <field name="url">gpio_8h_source.html#l01104</field>
    <field name="keywords"></field>
    <field name="text">GPIO_setPinConfig uint32_t pinConfig</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">gpio.md</field>
    <field name="url">gpio_8md.html</field>
    <field name="keywords">gpio.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">gpio_ex1_setup.md</field>
    <field name="url">gpio__ex1__setup_8md.html</field>
    <field name="keywords">gpio_ex1_setup.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">gpio_ex2_toggle.md</field>
    <field name="url">gpio__ex2__toggle_8md.html</field>
    <field name="keywords">gpio_ex2_toggle.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">gpio_ex3_interrupt.md</field>
    <field name="url">gpio__ex3__interrupt_8md.html</field>
    <field name="keywords">gpio_ex3_interrupt.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">gpio_ex4_aio_external_interrupt.md</field>
    <field name="url">gpio__ex4__aio__external__interrupt_8md.html</field>
    <field name="keywords">gpio_ex4_aio_external_interrupt.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">gpio_ex5_interrupt_sysconfig.md</field>
    <field name="url">gpio__ex5__interrupt__sysconfig_8md.html</field>
    <field name="keywords">gpio_ex5_interrupt_sysconfig.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">adc_api</field>
    <field name="url">group__adc__api.html</field>
    <field name="keywords">ADC</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setPPBCalibrationOffset</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, int16_t offset)</field>
    <field name="url">group__adc__api.html#ga008165282a809edb8eedb1ee06a90031</field>
    <field name="keywords">ADC_setPPBCalibrationOffset ADC_setPPBCalibrationOffset</field>
    <field name="text">Sets the post processing block offset correction base is the base address of the ADC module ppbNumber is the number of the post-processing block offset is the 6 bit signed value subtracted from ADC the output This function sets the PPB offset correction value This value can be used to digitally remove any system-level offset inherent in the ADCIN circuit before it is stored in the appropriate result register The offset parameter is subtracted from the ADC output and is a signed value from 5 1 2 to 5 1 1 inclusive For example when offset 1 ADCRESULT ADC output 1 When offset 5 1 2 ADCRESULT ADC output 5 1 2 or ADC output 5 1 2 Passing a zero in to the offset parameter will effectively disable the calculation allowing the raw ADC result to be passed unchanged into the result register If multiple PPBs are applied to the same SOC the offset that will be applied will be that of the PPB with the highest number None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_forceRepeaterTriggerSync</field>
    <field name="args">(uint32_t base, uint16_t repInstance)</field>
    <field name="url">group__adc__api.html#ga015a7c1f53a4ac4f47d5b60dcc8e8a6a</field>
    <field name="keywords">ADC_forceRepeaterTriggerSync ADC_forceRepeaterTriggerSync</field>
    <field name="text">Forces software sync for the trigger repeater block base is the base address of the ADC module repInstance is the repeater instance This function forces the software sync for the trigger repeater block The repInstance is the repeater instance to be configured Valid values for this parameter can be referred from the enum ADC_RepInstance None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_disableContinuousMode</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga0177c7401a22a4607272157e025fd6bb</field>
    <field name="keywords">ADC_disableContinuousMode ADC_disableContinuousMode</field>
    <field name="text">Disables continuous mode for an ADC interrupt base is the base address of the ADC adcIntNum is interrupt number within the ADC wrapper This function disables continuous mode for the ADC interrupt passed into adcIntNum This means that pulses will not be generated for the specified ADC interrupt until the corresponding interrupt flag for the previous interrupt occurrence has been cleared using ADC_clearInterruptStatus() adcIntNum can take the value ADC_INT_NUMBER1 ADC_INT_NUMBER2 ADC_INT_NUMBER3 or ADC_INT_NUMBER4 to express which of the four interrupts of the ADC module is being configured None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC7</field>
    <field name="url">group__adc__api.html#ga03a41bc17f74223f884ab1d2b95fe202</field>
    <field name="keywords">ADC_FORCE_SOC7 ADC_FORCE_SOC7</field>
    <field name="text">SW trigger ADC SOC 7 SW trigger ADC SOC 7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_enableSampleCAPReset</field>
    <field name="args">(uint32_t base, ADC_SOCNumber socNumber)</field>
    <field name="url">group__adc__api.html#ga04f8b3bd87fc811bb9a91e9be82cef6b</field>
    <field name="keywords">ADC_enableSampleCAPReset ADC_enableSampleCAPReset</field>
    <field name="text">Enable the sample capacitor reset for an ADC SOC base is the base address of the ADC module socNumber is the number of the start-of-conversion This function enables the sample capacitor reset after each conversion for a particular SOC The socNumber number is a value ADC_SOC_NUMBERX where X is a number from 0 to 1 5 specifying which SOC is to be configured on the ADC module specified by base None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_enableContinuousMode</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga055d357ccf4b5583815c5d4063535c49</field>
    <field name="keywords">ADC_enableContinuousMode ADC_enableContinuousMode</field>
    <field name="text">Enables continuous mode for an ADC interrupt base is the base address of the ADC adcIntNum is interrupt number within the ADC wrapper This function enables continuous mode for the ADC interrupt passed into adcIntNum This means that pulses will be generated for the specified ADC interrupt whenever an EOC pulse is generated irrespective of whether or not the flag bit is set adcIntNum can take the value ADC_INT_NUMBER1 ADC_INT_NUMBER2 ADC_INT_NUMBER3 or ADC_INT_NUMBER4 to express which of the four interrupts of the ADC module is being configured None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_triggerRepeaterSyncIn</field>
    <field name="args">(uint32_t base, uint16_t repInstance, ADC_SyncInput syncInput)</field>
    <field name="url">group__adc__api.html#ga056c8a6e3fb375ec619caa88fb4be150</field>
    <field name="keywords">ADC_triggerRepeaterSyncIn ADC_triggerRepeaterSyncIn</field>
    <field name="text">Configures the trigger repeater syncin source base is the base address of the ADC module repInstance is the repeater instance syncInput is the desired sync event to reset all counters This function configures desired ADC trigger repeater sync event that corresponds to syncInput to reset all counters and any pending repeated triggers are discarded The repInstance is the repeater instance to be configured Valid values for this parameter can be referred from the enum ADC_RepInstance None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_clearDMAInterruptOverflowStatus</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga05feb7294bf643f0644192b605795c3e</field>
    <field name="keywords">ADC_clearDMAInterruptOverflowStatus ADC_clearDMAInterruptOverflowStatus</field>
    <field name="text">Clears ADC DMA interrupt overflow sources base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function clears the specified ADC DMA interrupt overflow sources so that they no longer assert If software tries to clear the overflow in same cycle that hardware tries to set the overflow then hardware has priority adcIntNum takes a one of the values ADC_INT_NUMBER1 and ADC_INT_NUMBER2 to express which of the DMA interrupt overflow status of the ADC module should be cleared None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_PPBCompSource</field>
    <field name="url">group__adc__api.html#ga0959e6a2d0772e9adc3327878252fe2a</field>
    <field name="keywords">ADC_PPBCompSource ADC_PPBCompSource</field>
    <field name="text">Values that can be passed to ADC_selectPPBCompareSource() as the compSrc parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setInterruptSource</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum, uint16_t intTrigger)</field>
    <field name="url">group__adc__api.html#ga0ad2864322a112a5c735f45785dc841d</field>
    <field name="keywords">ADC_setInterruptSource ADC_setInterruptSource</field>
    <field name="text">Sets the source EOC for an analog-to-digital converter interrupt base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper socNumber is the number of the start-of-conversion This function sets which conversion is the source of an ADC interrupt The intTrigger number is a value ADC_INT_TRIGGER_X where X specifies the interrupt trigger to be configured for the ADC module specified by base Refer ADC_IntTrigger enum for valid values for this input adcIntNum can take the value ADC_INT_NUMBER1 ADC_INT_NUMBER2 ADC_INT_NUMBER3 or ADC_INT_NUMBER4 to express which of the four interrupts of the ADC module is being configured None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_getTemperatureK</field>
    <field name="args">(uint16_t tempResult, ADC_ReferenceMode refMode, float32_t vref)</field>
    <field name="url">group__adc__api.html#ga0b257540ca9de741ae52d04c2d9880ee</field>
    <field name="keywords">ADC_getTemperatureK ADC_getTemperatureK</field>
    <field name="text">Converts temperature from sensor reading to degrees K tempResult is the raw ADC A conversion result from the temp sensor vref is the reference voltage being used for example 3.3 for 3.3V refMode is the reference mode being used ADC_REFERENCE_INTERNAL or ADC_REFERENCE_EXTERNAL This function converts temperature from temp sensor reading to degrees K Temp sensor values in production test are derived with 2.5V reference The vref argument in the function is used to scale the temp sensor reading accordingly if temp sensor value is read at a different VREF setting Returns the temperature sensor reading converted to degrees K</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_REPEATER_MODULE_BUSY</field>
    <field name="url">group__adc__api.html#ga0c29fcb97890c54886e8148fcae13b0e</field>
    <field name="keywords">ADC_REPEATER_MODULE_BUSY ADC_REPEATER_MODULE_BUSY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_PPBxPSUM_OFFSET_BASE</field>
    <field name="url">group__adc__api.html#ga0d1b5698287de79f5f1577fcda816386</field>
    <field name="keywords">ADC_PPBxPSUM_OFFSET_BASE ADC_PPBxPSUM_OFFSET_BASE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_getInterruptStatus</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga165a92ff6bfa9057c4f7d2aec87e8724</field>
    <field name="keywords">ADC_getInterruptStatus ADC_getInterruptStatus</field>
    <field name="text">Gets the current ADC interrupt status base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function returns the interrupt status for the analog-to-digital converter adcIntNum takes a one of the values ADC_INT_NUMBER1 ADC_INT_NUMBER2 ADC_INT_NUMBER3 or ADC_INT_NUMBER4 to get the interrupt status for the given interrupt number of the ADC module true if the interrupt flag for the specified interrupt number is set and false if it is not</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_IntSOCTrigger</field>
    <field name="url">group__adc__api.html#ga174a238f04d1d0ec1b89fdd7fed64716</field>
    <field name="keywords">ADC_IntSOCTrigger ADC_IntSOCTrigger</field>
    <field name="text">Values that can be passed in as the trigger parameter for the ADC_setInterruptSOCTrigger() function</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">REPCTL_MASK</field>
    <field name="url">group__adc__api.html#ga176a93bffba08939c5605585de69e991</field>
    <field name="keywords">REPCTL_MASK REPCTL_MASK</field>
    <field name="text">ADC_REP1CTL_TRIGGER_M</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_PPBNumber</field>
    <field name="url">group__adc__api.html#ga17f0c071ab2c71a40e3d95c9eeadf3b9</field>
    <field name="keywords">ADC_PPBNumber ADC_PPBNumber</field>
    <field name="text">Values that can be passed in as the ppbNumber parameter for several functions</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_triggerRepeaterCount</field>
    <field name="args">(uint32_t base, uint16_t repInstance, uint16_t repCount)</field>
    <field name="url">group__adc__api.html#ga1902ac05acbff8e3348be8f2a587be0f</field>
    <field name="keywords">ADC_triggerRepeaterCount ADC_triggerRepeaterCount</field>
    <field name="text">Configures the trigger repeater count base is the base address of the ADC module repInstance is the repeater instance repCount is the desired trigger count to be selected This function indicates the number of repeated triggers passed into repCount and remaining triggers to be generated/supressed In oversampling mode the repCount parameter is to generate 2 triggers It should be a value between 0 to 3 For example when repCount 1 2 triggers will be generated when repCount 2 4 triggers will be generated and so on The repInstance is the repeater instance to be configured Valid values for this parameter can be referred from the enum ADC_RepInstance None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC15</field>
    <field name="url">group__adc__api.html#ga1ac4cb4163b351c54459f8fa4f6cb125</field>
    <field name="keywords">ADC_FORCE_SOC15 ADC_FORCE_SOC15</field>
    <field name="text">SW trigger ADC SOC 1 5 SW trigger ADC SOC 1 5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_getRAWInterruptStatus</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga1dd68560df5adedfd9cef796425dd5a4</field>
    <field name="keywords">ADC_getRAWInterruptStatus ADC_getRAWInterruptStatus</field>
    <field name="text">Gets the Raw ADC interrupt status base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function returns the raw ADC interrupt status which indicates if the associated interrupt condition occured This flag will be set irrespective of corresponding INTE adcIntNum takes a one of the values ADC_INT_NUMBER1 or ADC_INT_NUMBER2 to get the raw ADC interrupt status for the given interrupt number of the ADC module true if the interrupt flag for the specified interrupt number is set and false if it is not</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_enableDMAInterrupt</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga1f067b98925aff0032efeea16002da7a</field>
    <field name="keywords">ADC_enableDMAInterrupt ADC_enableDMAInterrupt</field>
    <field name="text">Enables a ADC interrupt for DMA base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function enables the indicated ADC interrupt for DMA Only the sources that are enabled can be reflected to the processor interrupt Disabled sources have no effect on the processor adcIntNum can take the value ADC_INT_NUMBER1 and ADC_INT_NUMBER2 to express which of the interrupts of the ADC module should be enabled None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setINLTrim</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__adc__api.html#ga245251ff514fae5b6959e78842bec621</field>
    <field name="keywords">ADC_setINLTrim ADC_setINLTrim</field>
    <field name="text">Configures the INL trim for the desired ADC instance base is the base address of the ADC module This function loads the INL trims for the desired ADC instance None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_REPSTATUS_MASK</field>
    <field name="url">group__adc__api.html#ga24bde289150fdfe7017a65d553223e99</field>
    <field name="keywords">ADC_REPSTATUS_MASK ADC_REPSTATUS_MASK</field>
    <field name="text">ADC_REP1CTL_MODULEBUSY</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_SOCNumber</field>
    <field name="url">group__adc__api.html#ga254fedc72090784dcfcdcebebdf3ea39</field>
    <field name="keywords">ADC_SOCNumber ADC_SOCNumber</field>
    <field name="text">Values that can be passed in as the socNumber parameter for several functions This value identifies the start-of-conversion SOC that a function is configuring or accessing Note that in some cases for example ADC_setInterruptSource() socNumber is used to refer to the corresponding end-of-conversion EOC</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_IntNumber</field>
    <field name="url">group__adc__api.html#ga2cb95bd359b9df2dfd0977ce2020df06</field>
    <field name="keywords">ADC_IntNumber ADC_IntNumber</field>
    <field name="text">Values that can be passed to ADC_enableInterrupt() ADC_disableInterrupt() and ADC_getInterruptStatus() as the adcIntNum parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_disableInterrupt</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga2cd7ccb6a979feb445dabdf8de679491</field>
    <field name="keywords">ADC_disableInterrupt ADC_disableInterrupt</field>
    <field name="text">Disables an ADC interrupt source base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function disables the indicated ADC interrupt source Only the sources that are enabled can be reflected to the processor interrupt Disabled sources have no effect on the processor adcIntNum can take the value ADC_INT_NUMBER1 ADC_INT_NUMBER2 ADC_INT_NUMBER3 or ADC_INT_NUMBER4 to express which of the four interrupts of the ADC module should be disabled None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_disableDMAInterrupt</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga2e4852ba1adac7e526795add91b6d3f5</field>
    <field name="keywords">ADC_disableDMAInterrupt ADC_disableDMAInterrupt</field>
    <field name="text">Disables an ADC interrupt for DMA base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function disables the indicated ADC interrupt for DMA Only the sources that are enabled can be reflected to the processor interrupt Disabled sources have no effect on the processor adcIntNum can take the value ADC_INT_NUMBER1 or ADC_INT_NUMBER2 to express which of the interrupts of the ADC module should be disabled None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setInterruptSOCTrigger</field>
    <field name="args">(uint32_t base, ADC_SOCNumber socNumber, ADC_IntSOCTrigger trigger)</field>
    <field name="url">group__adc__api.html#ga2fb0ebaac520b28386565d7087e5233b</field>
    <field name="keywords">ADC_setInterruptSOCTrigger ADC_setInterruptSOCTrigger</field>
    <field name="text">Configures the interrupt SOC trigger of an SOC base is the base address of the ADC module socNumber is the number of the start-of-conversion trigger the interrupt source that will cause the SOC This function configures the interrupt start-of-conversion trigger in the ADC module The socNumber number is a value ADC_SOC_NUMBERX where X is a number from 0 to 1 5 specifying which SOC is to be configured on the ADC module specified by base The trigger specifies the interrupt that causes a start of conversion or none It should be one of the following values ADC_INT_SOC_TRIGGER_NONE ADC_INT_SOC_TRIGGER_ADCINT1 ADC_INT_SOC_TRIGGER_ADCINT2 ADC_INT_SOC_TRIGGER_EOC This functionality is useful for creating continuous conversions None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_forceSOC</field>
    <field name="args">(uint32_t base, ADC_SOCNumber socNumber)</field>
    <field name="url">group__adc__api.html#ga30d2ff9ba612c7b9389cba4644934c17</field>
    <field name="keywords">ADC_forceSOC ADC_forceSOC</field>
    <field name="text">Forces a SOC flag to a 1 in the analog-to-digital converter base is the base address of the ADC module socNumber is the number of the start-of-conversion This function forces the SOC flag associated with the SOC specified by socNumber This initiates a conversion once that SOC is given priority This software trigger can be used whether or not the SOC has been configured to accept some other specific trigger None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC4</field>
    <field name="url">group__adc__api.html#ga3486abfa85d7db062e93c79fd98108c2</field>
    <field name="keywords">ADC_FORCE_SOC4 ADC_FORCE_SOC4</field>
    <field name="text">SW trigger ADC SOC 4 SW trigger ADC SOC 4</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC1</field>
    <field name="url">group__adc__api.html#ga34a89bbd990a8266b5c104056b3a27e7</field>
    <field name="keywords">ADC_FORCE_SOC1 ADC_FORCE_SOC1</field>
    <field name="text">SW trigger ADC SOC 1 SW trigger ADC SOC 1</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_PPBxOFFREF_STEP</field>
    <field name="url">group__adc__api.html#ga35370a5262c1ac07f4632525cfb9a22d</field>
    <field name="keywords">ADC_PPBxOFFREF_STEP ADC_PPBxOFFREF_STEP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_INT_REF_TSOFFSET</field>
    <field name="url">group__adc__api.html#ga36eb294ee1f115e334fc48af8cd63095</field>
    <field name="keywords">ADC_INT_REF_TSOFFSET ADC_INT_REF_TSOFFSET</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_disablePPBEvent</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, uint16_t evtFlags)</field>
    <field name="url">group__adc__api.html#ga376f84196313556c889bd93c6f67a3cb</field>
    <field name="keywords">ADC_disablePPBEvent ADC_disablePPBEvent</field>
    <field name="text">Disables individual ADC PPB event sources base is the base address of the ADC module ppbNumber is the number of the post-processing block evtFlags is a bit mask of the event sources to be enabled This function disables the indicated ADC PPB event sources This will stop the specified events from propagating through the X-BAR to other modules The evtFlags parameter can be any of the ADC_EVT_TRIPHI ADC_EVT_TRIPLO ADC_EVT_ZERO or ADC_EVT_NLIMIT values None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setPPBTripLimits</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, int32_t tripHiLimit, int32_t tripLoLimit)</field>
    <field name="url">group__adc__api.html#ga378cb44d8b8674121e44de0acf48006f</field>
    <field name="keywords">ADC_setPPBTripLimits ADC_setPPBTripLimits</field>
    <field name="text">Sets the windowed trip limits for a PPB base is the base address of the ADC module ppbNumber is the number of the post-processing block tripHiLimit is the value is the digital comparator trip high limit tripLoLimit is the value is the digital comparator trip low limit This function sets the windowed trip limits for a PPB These values set the digital comparator so that when one of the values is exceeded either a high or low trip event will occur The ppbNumber is a value ADC_PPB_NUMBERX where X is a value from 1 to 4 inclusive that identifies a PPB to be configured None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_RepInstance</field>
    <field name="url">group__adc__api.html#ga38766c01be33adece810b912d379bf31</field>
    <field name="keywords">ADC_RepInstance ADC_RepInstance</field>
    <field name="text">Values that can be passed to ADC_configureRepeater() as the repInstance parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setupPPB</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, ADC_SOCNumber socNumber)</field>
    <field name="url">group__adc__api.html#ga3d1903175f9643e20d98597894b66982</field>
    <field name="keywords">ADC_setupPPB ADC_setupPPB</field>
    <field name="text">Configures a post-processing block PPB in the ADC base is the base address of the ADC module ppbNumber is the number of the post-processing block socNumber is the number of the start-of-conversion This function associates a post-processing block with a SOC The ppbNumber is a value ADC_PPB_NUMBERX where X is a value from 1 to 3 inclusive that identifies a PPB to be configured The socNumber number is a value ADC_SOC_NUMBERX where X is a number from 0 to 1 5 specifying which SOC is to be configured on the ADC module specified by base You can have more that one PPB associated with the same SOC but a PPB can only be configured to correspond to one SOC at a time Also note that when you have multiple PPBs for the same SOC the calibration offset that actually gets applied will be that of the PPB with the highest number Since SOC0 is the default for all PPBs look out for unintentional overwriting of a lower numbered PPB s offset None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setSOCPriority</field>
    <field name="args">(uint32_t base, ADC_PriorityMode priMode)</field>
    <field name="url">group__adc__api.html#ga3e32e7d5a6618ac054685004a7f0a9ae</field>
    <field name="keywords">ADC_setSOCPriority ADC_setSOCPriority</field>
    <field name="text">Sets the priority mode of the SOCs base is the base address of the ADC priMode is the priority mode of the SOCs This function sets the priority mode of the SOCs There are three main modes that can be passed in the priMode parameter All SOCs are in round-robin mode This means no SOC has an inherent higher priority over another This is selected by passing in the value ADC_PRI_ALL_ROUND_ROBIN All priorities are in high priority mode This means that the priority of the SOC is determined by its SOC number This option is selected by passing in the value ADC_PRI_ALL_HIPRI A range of SOCs are assigned high priority with all others in round robin mode High priority mode means that an SOC with high priority will interrupt the round robin wheel and insert itself as the next conversion Passing in the value ADC_PRI_SOC0_HIPRI will make SOC0 highest priority ADC_PRI_THRU_SOC1_HIPRI will put SOC0 and SOC 1 in high priority and so on up to ADC_PRI_THRU_SOC2_HIPRI where SOCs 0 through 2 are in high priority None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_EVT_NLIMIT</field>
    <field name="url">group__adc__api.html#ga410ee7ea9709ed44db59a3e13200ef82</field>
    <field name="keywords">ADC_EVT_NLIMIT ADC_EVT_NLIMIT</field>
    <field name="text">Within Trip limit Event Within Trip limit Event</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_PPBxPCOUNT_OFFSET_BASE</field>
    <field name="url">group__adc__api.html#ga437d861f409a157db3f2d9a07344dfca</field>
    <field name="keywords">ADC_PPBxPCOUNT_OFFSET_BASE ADC_PPBxPCOUNT_OFFSET_BASE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_ReferenceVoltage</field>
    <field name="url">group__adc__api.html#ga4513a58978c46b76510fbf645bf77922</field>
    <field name="keywords">ADC_ReferenceVoltage ADC_ReferenceVoltage</field>
    <field name="text">Values that can be passed to ADC_setVREF() and ADC_setOffsetTrimAll() as the refVoltage parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC6</field>
    <field name="url">group__adc__api.html#ga45d517b84b7a0c2d9c86fe3cfaa4d58c</field>
    <field name="keywords">ADC_FORCE_SOC6 ADC_FORCE_SOC6</field>
    <field name="text">SW trigger ADC SOC 6 SW trigger ADC SOC 6</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_clearInterruptOverflowStatus</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga46228bae2066ad4bbe74fe5621f756b1</field>
    <field name="keywords">ADC_clearInterruptOverflowStatus ADC_clearInterruptOverflowStatus</field>
    <field name="text">Clears ADC interrupt overflow sources base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function clears the specified ADC interrupt overflow sources so that they no longer assert If software tries to clear the overflow in the same cycle that hardware tries to set the overflow then hardware has priority adcIntNum takes a one of the values ADC_INT_NUMBER1 ADC_INT_NUMBER2 ADC_INT_NUMBER3 or ADC_INT_NUMBER4 to express which of the four interrupt overflow status of the ADC module should be cleared None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_getPPBEventStatus</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber)</field>
    <field name="url">group__adc__api.html#ga464d17a4de0eee1b757faa08ba026874</field>
    <field name="keywords">ADC_getPPBEventStatus ADC_getPPBEventStatus</field>
    <field name="text">Gets the current ADC event status base is the base address of the ADC module ppbNumber is the number of the post-processing block This function returns the event status for the analog-to-digital converter Returns the current event status enumerated as a bit field of ADC_EVT_TRIPHI ADC_EVT_TRIPLO ADC_EVT_ZERO and ADC_EVT_NLIMIT</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_enablePPBEventInterrupt</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, uint16_t intFlags)</field>
    <field name="url">group__adc__api.html#ga46969886a0a44d8fee4d1b0febea3bc4</field>
    <field name="keywords">ADC_enablePPBEventInterrupt ADC_enablePPBEventInterrupt</field>
    <field name="text">Enables individual ADC PPB event interrupt sources base is the base address of the ADC module ppbNumber is the number of the post-processing block intFlags is a bit mask of the interrupt sources to be enabled This function enables the indicated ADC PPB interrupt sources Only the sources that are enabled can be reflected to the processor interrupt Disabled sources have no effect on the processor The intFlags parameter can be any of the ADC_EVT_TRIPHI ADC_EVT_TRIPLO ADC_EVT_ZERO or ADC_EVT_NLIMIT values None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setupSOC</field>
    <field name="args">(uint32_t base, ADC_SOCNumber socNumber, ADC_Trigger trigger, ADC_Channel channel, uint32_t sampleWindow)</field>
    <field name="url">group__adc__api.html#ga476ce05331b08ff2fec27cbf5bca73fd</field>
    <field name="keywords">ADC_setupSOC ADC_setupSOC</field>
    <field name="text">Configures a start-of-conversion SOC in the ADC base is the base address of the ADC module socNumber is the number of the start-of-conversion trigger the source that will cause the SOC channel is the number associated with the input signal sampleWindow is the acquisition window duration This function configures the a start-of-conversion SOC in the ADC module The socNumber number is a value ADC_SOC_NUMBERX where X is a number from 0 to 1 5 specifying which SOC is to be configured on the ADC module specified by base The trigger specifies the event that causes the SOC such as software a timer interrupt an PWM event or an ADC interrupt It should be a value in the format of ADC_TRIGGER_XXXX where XXXX is the event such as ADC_TRIGGER_SW_ONLY ADC_TRIGGER_CPU1_TINT0 ADC_TRIGGER_GPIO ADC_TRIGGER_PWM1_SOCA and so on The channel parameter specifies the channel to be converted In single-ended mode this is a single pin given by ADC_CH_ADCINx where x is the number identifying the pin between 0 and 1 5 inclusive The sampleWindow parameter is the acquisition window duration in SYSCLK cycles The selected duration must be at least as long as one ADCCLK cycle Also the datasheet will specify a minimum window duration requirement in nanoseconds The sample window value is calculated based on the combination of ACQPS 7 6 and ACQPS 5 0 where ACQPS 7 6 determines scale and ACQPS 7 6 determines offset If ACQPS 7 6 value is sample window ACQPS 5 0 1 sysclk cycles sample window 6 4 ACQPS 5 0 1 2 sysclk cycles sample window 1 9 2 ACQPS 5 0 1 4 sysclk cycles sample window 4 4 8 ACQPS 5 0 1 1 6 sysclk cycles Based on the sampleWindow corresponding ACQPS value will be calculated and configured in ADCSOCxCTL register None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_clearDMAInterruptStatus</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga494b11081fdf4363a09b51eedf6d6dae</field>
    <field name="keywords">ADC_clearDMAInterruptStatus ADC_clearDMAInterruptStatus</field>
    <field name="text">Clears ADC DMA interrupt sources base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function clears the specified ADC DMA interrupt sources so that they no longer assert If not in continuous mode this function must be called before any further interrupt pulses may occur adcIntNum takes a one of the values ADC_INT_NUMBER1 and ADC_INT_NUMBER2 to express which of the two DMA interrupts of the ADC module should be cleared None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_configureRepeater</field>
    <field name="args">(uint32_t base, uint16_t repInstance, ADC_RepeaterConfig *config)</field>
    <field name="url">group__adc__api.html#ga4a3111e591fb1bc4bb1d40487aff721f</field>
    <field name="keywords">ADC_configureRepeater ADC_configureRepeater</field>
    <field name="text">Configures the trigger repeater base is the base address of the ADC module repInstance is the repeater instance config is the desired repeater configuration This function configures ADC trigger repeater for trigger and sync along with count and spread of triggers The repInstance is the repeater instance to be configured Valid values for this parameter can be referred from the enum ADC_RepInstance The config is the desired trigger repeater configuration which is of type ADC_RepeaterConfig None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_selectPPBOSINTSource</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, uint16_t osIntSrc)</field>
    <field name="url">group__adc__api.html#ga4abf537056e4d763125591c7c53c4faf</field>
    <field name="keywords">ADC_selectPPBOSINTSource ADC_selectPPBOSINTSource</field>
    <field name="text">Configures PPB interrupt source base is the base address of the ADC module ppbNumber is the number of the post-processing block osIntSrc selects PPB interrupt source This function sets which oversampling event is the source of a PPB intterupt For valid values of osIntSrc refer to enum ADC_PPBIntSrcSelect Only ADC_PPB_NUMBER1 supports this feature None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_PriorityMode</field>
    <field name="url">group__adc__api.html#ga4f60e7ea55578eb4eb621f31b0b8d434</field>
    <field name="keywords">ADC_PriorityMode ADC_PriorityMode</field>
    <field name="text">Values that can be passed to ADC_setSOCPriority() as the priMode parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC13</field>
    <field name="url">group__adc__api.html#ga508d12a6dce4ff635b1f4985a4c73586</field>
    <field name="keywords">ADC_FORCE_SOC13 ADC_FORCE_SOC13</field>
    <field name="text">SW trigger ADC SOC 1 3 SW trigger ADC SOC 1 3</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_SyncInput</field>
    <field name="url">group__adc__api.html#ga51ed1bc5073c7ef6394c3538b007e730</field>
    <field name="keywords">ADC_SyncInput ADC_SyncInput</field>
    <field name="text">Values that can be passed to ADC_selectPPBSyncInput() and ADC_triggerRepeaterSyncIn() as the syncInput parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC12</field>
    <field name="url">group__adc__api.html#ga5406d791b02b1a03113ad092df1c1d6b</field>
    <field name="keywords">ADC_FORCE_SOC12 ADC_FORCE_SOC12</field>
    <field name="text">SW trigger ADC SOC 1 2 SW trigger ADC SOC 1 2</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC0</field>
    <field name="url">group__adc__api.html#ga5546f06bbe099383e97e8b14c1d7a072</field>
    <field name="keywords">ADC_FORCE_SOC0 ADC_FORCE_SOC0</field>
    <field name="text">SW trigger ADC SOC 0 SW trigger ADC SOC 0</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_EVT_TRIPHI</field>
    <field name="url">group__adc__api.html#ga55b4edea639bba1c6e05726b23aeaf3c</field>
    <field name="keywords">ADC_EVT_TRIPHI ADC_EVT_TRIPHI</field>
    <field name="text">Trip High Event Trip High Event</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_PPBxCOUNT_OFFSET_BASE</field>
    <field name="url">group__adc__api.html#ga5a70b72944ed25738a637efa0e0ee2e7</field>
    <field name="keywords">ADC_PPBxCOUNT_OFFSET_BASE ADC_PPBxCOUNT_OFFSET_BASE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_getDMAInterruptStatus</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga5acb6b758a435f9506b91a79e1c51e3e</field>
    <field name="keywords">ADC_getDMAInterruptStatus ADC_getDMAInterruptStatus</field>
    <field name="text">Gets the current ADC DMA interrupt status base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function returns the DMA interrupt status for the analog-to-digital converter adcIntNum takes a one of the values ADC_INT_NUMBER1 and ADC_INT_NUMBER2 to get the DMA interrupt status for the given interrupt number of the ADC module true if the DMA interrupt flag for the specified interrupt number is set and false if it is not</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_PPBTRIP_MASK</field>
    <field name="url">group__adc__api.html#ga5bafdd4dbb1a1d7b88cd2894021d35b6</field>
    <field name="keywords">ADC_PPBTRIP_MASK ADC_PPBTRIP_MASK</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_triggerRepeaterSpread</field>
    <field name="args">(uint32_t base, uint16_t repInstance, uint16_t repSpread)</field>
    <field name="url">group__adc__api.html#ga5bf92097d3156aa96c009ce254371e8e</field>
    <field name="keywords">ADC_triggerRepeaterSpread ADC_triggerRepeaterSpread</field>
    <field name="text">Configures the trigger repeater spread base is the base address of the ADC module repInstance is the repeater instance repSpread is the desired trigger spread in sysclk cycle This function configures the spread time by setting repSpread to number of sysclk desired between triggers In oversampling mode the repSpread parameter is the minimum number of sysclks to wait before creating the next repeated trigger to the ADC It should be a value between 0 and 6 5 5 3 5 inclusive For example passing a 2 to the offset parameter will create at least 2 sysclk time between repeated triggers The repInstance is the repeater instance to be configured Valid values for this parameter can be referred from the enum ADC_RepInstance None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setInterruptCycleOffset</field>
    <field name="args">(uint32_t base, uint16_t cycleOffset)</field>
    <field name="url">group__adc__api.html#ga5ca94cb6901a957107b6b3377809dead</field>
    <field name="keywords">ADC_setInterruptCycleOffset ADC_setInterruptCycleOffset</field>
    <field name="text">Sets the timing of early interrupt generation base is the base address of the ADC module cycleOffset is the cycles from an SOC falling edge to an early interrupt pulse This function configures cycle offset between the negative edge of a sample pulse and an early interrupt pulse being generated This number of cycles is specified with the cycleOffset parameter This function only applies when early interrupt generation is enabled That means the ADC_setInterruptPulseMode() function pulseMode parameter is configured as ADC_PULSE_END_OF_ACQ_WIN None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_readPPBResult</field>
    <field name="args">(uint32_t resultBase, ADC_PPBNumber ppbNumber)</field>
    <field name="url">group__adc__api.html#ga5f71042c5db9607d857ae343adc8e538</field>
    <field name="keywords">ADC_readPPBResult ADC_readPPBResult</field>
    <field name="text">Reads the processed conversion result from the PPB resultBase is the base address of the ADC results ppbNumber is the number of the post-processing block This function returns the processed conversion result that corresponds to the base address passed into resultBase and the PPB passed into ppbNumber Take care that you are using a base address for the result registers ADCxRESULT_BASE and not a base address for the control registers Returns the signed 3 2 bit conversion result</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_getPPBCountLimit</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber)</field>
    <field name="url">group__adc__api.html#ga620ead3d56f3d738a2786bdba26d70a2</field>
    <field name="keywords">ADC_getPPBCountLimit ADC_getPPBCountLimit</field>
    <field name="text">Returns the PPB count limit base is the base address of the ADC module ppbNumber is the number of the post-processing block This function returns the PPB oversampling count limit which defines the number of ADC conversions to accumulate before partial sum is automatically loaded to the sum registes Only ADC_PPB_NUMBER1 supports this feature Returns the PPB count limit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_clearInterruptStatus</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga63ac0329f83ef6b282224339e4fcc40e</field>
    <field name="keywords">ADC_clearInterruptStatus ADC_clearInterruptStatus</field>
    <field name="text">Clears ADC interrupt sources base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function clears the specified ADC interrupt sources so that they no longer assert If not in continuous mode this function must be called before any further interrupt pulses may occur adcIntNum takes a one of the values ADC_INT_NUMBER1 ADC_INT_NUMBER2 ADC_INT_NUMBER3 or ADC_INT_NUMBER4 to express which of the four interrupts of the ADC module should be cleared None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_SOCxCTL_OFFSET_BASE</field>
    <field name="url">group__adc__api.html#ga68f8653816fd2da9ed485b770ce4962f</field>
    <field name="keywords">ADC_SOCxCTL_OFFSET_BASE ADC_SOCxCTL_OFFSET_BASE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_readPPBPSum</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber)</field>
    <field name="url">group__adc__api.html#ga690e6c04b6b02623aaae6f7c8fac5d7f</field>
    <field name="keywords">ADC_readPPBPSum ADC_readPPBPSum</field>
    <field name="text">Reads the oversampled partial sum from the PPB base is the base address of the ADC module ppbNumber is the number of the post-processing block This function returns the oversampled partial sum of PPB results that corresponds to the base address passed into base and the PPB passed into ppbNumber Only ADC_PPB_NUMBER1 supports this feature Returns the oversampled partial sum value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setPPBShiftValue</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, uint16_t shiftVal)</field>
    <field name="url">group__adc__api.html#ga6a18954567891ba2eef2900b418d9902</field>
    <field name="keywords">ADC_setPPBShiftValue ADC_setPPBShiftValue</field>
    <field name="text">Configures PPB shift value base is the base address of the ADC module ppbNumber is the number of the post-processing block shiftVal is the number of bits to right shift PSUM before loading to final PPB SUM This function configured the shift value required to right shift the PPB PSUM before loading into the final PPB SUM Only ADC_PPB_NUMBER1 supports this feature None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC9</field>
    <field name="url">group__adc__api.html#ga6d6649d983e8e3b4104e7e348d216512</field>
    <field name="keywords">ADC_FORCE_SOC9 ADC_FORCE_SOC9</field>
    <field name="text">SW trigger ADC SOC 9 SW trigger ADC SOC 9</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_clearPPBEventStatus</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, uint16_t evtFlags)</field>
    <field name="url">group__adc__api.html#ga6f11fd6d73672e158f5e1461dd318582</field>
    <field name="keywords">ADC_clearPPBEventStatus ADC_clearPPBEventStatus</field>
    <field name="text">Clears ADC event flags base is the base address of the ADC module ppbNumber is the number of the post-processing block evtFlags is a bit mask of the event source to be cleared This function clears the indicated ADC PPB event flags After an event occurs this function must be called to allow additional events to be produced The evtFlags parameter can be any of the ADC_EVT_TRIPHI ADC_EVT_TRIPLO ADC_EVT_ZERO or ADC_EVT_NLIMIT None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC5</field>
    <field name="url">group__adc__api.html#ga706eb5885d18f368a605395fef52f10e</field>
    <field name="keywords">ADC_FORCE_SOC5 ADC_FORCE_SOC5</field>
    <field name="text">SW trigger ADC SOC 5 SW trigger ADC SOC 5</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC2</field>
    <field name="url">group__adc__api.html#ga72f6effcfb943dcdae134673dff51598</field>
    <field name="keywords">ADC_FORCE_SOC2 ADC_FORCE_SOC2</field>
    <field name="text">SW trigger ADC SOC 2 SW trigger ADC SOC 2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_enablePPBTwosComplement</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber)</field>
    <field name="url">group__adc__api.html#ga7387f98f7a343bed3f421f315f5823a5</field>
    <field name="keywords">ADC_enablePPBTwosComplement ADC_enablePPBTwosComplement</field>
    <field name="text">Enables two s complement capability in the PPB base is the base address of the ADC module ppbNumber is the number of the post-processing block This function enables two s complement in the post-processing block specified by the ppbNumber parameter When enabled a two s complement will be performed on the output of the offset subtraction before it is stored in the appropriate PPB result register In other words the PPB result will be the reference offset value minus the the ADC result value ADCPPBxRESULT ADCSOCxOFFREF ADCRESULTx None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_SampleCAPResetValue</field>
    <field name="url">group__adc__api.html#ga741d0005d3126db3e23760f58357e115</field>
    <field name="keywords">ADC_SampleCAPResetValue ADC_SampleCAPResetValue</field>
    <field name="text">Values that can be passed to ADC_SelectSampleCAPResetValue() as the capResetVal parameter</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_Trigger</field>
    <field name="url">group__adc__api.html#ga7973b7d12fc7bfb96bd276b0a5926834</field>
    <field name="keywords">ADC_Trigger ADC_Trigger</field>
    <field name="text">Values that can be passed to ADC_setupSOC() as the trigger parameter to specify the event that will trigger a conversion to start It is also used with ADC_setBurstModeConfig() and ADC_triggerRepeaterSelect()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_disableDMAContinuousMode</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga7b52c5231a1443547a949e7e3280806b</field>
    <field name="keywords">ADC_disableDMAContinuousMode ADC_disableDMAContinuousMode</field>
    <field name="text">Disables continuous mode of an ADC interrupt for DMA base is the base address of the ADC adcIntNum is interrupt number within the ADC wrapper This function disables continuous mode for the ADC interrupt passed into adcIntNum This means that pulses will not be generated for DMA for the specified ADC interrupt until the corresponding interrupt flag for the previous interrupt occurrence has been cleared using ADC_clearInterruptStatus() adcIntNum can take the value ADC_INT_NUMBER1 or ADC_INT_NUMBER2 to express which of the interrupts of the ADC module is being configured None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_EXT_REF_TSOFFSET</field>
    <field name="url">group__adc__api.html#ga7cd21facf4d774ca7afc43a915246fe7</field>
    <field name="keywords">ADC_EXT_REF_TSOFFSET ADC_EXT_REF_TSOFFSET</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_triggerRepeaterModuleBusy</field>
    <field name="args">(uint32_t base, uint32_t repInstance)</field>
    <field name="url">group__adc__api.html#ga7f3c9a9df9f7d4ba7ad777173ff2d74c</field>
    <field name="keywords">ADC_triggerRepeaterModuleBusy ADC_triggerRepeaterModuleBusy</field>
    <field name="text">Get the trigger repeater module busy indication base is the base address of the ADC module repInstance is the repeater instance This function returns the status of the ADC trigger repeater module for the selected repeater instance The repInstance is the repeater instance to be configured Valid values for this parameter can be referred from the enum ADC_RepInstance Returns the staus of the trigger repeater module busy</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_PPBxOFFCAL_STEP</field>
    <field name="url">group__adc__api.html#ga814daeb44e4839dce3066526745774aa</field>
    <field name="keywords">ADC_PPBxOFFCAL_STEP ADC_PPBxOFFCAL_STEP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_disableConverter</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__adc__api.html#ga82e41ec771b321f60a5e19b735d82943</field>
    <field name="keywords">ADC_disableConverter ADC_disableConverter</field>
    <field name="text">Powers down the analog-to-digital converter module base is the base address of the ADC module This function powers down the analog circuitry inside the analog core None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setDMAInterruptSource</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum, uint32_t intTrigger)</field>
    <field name="url">group__adc__api.html#ga846569301f050552d1f1e29810a8fa84</field>
    <field name="keywords">ADC_setDMAInterruptSource ADC_setDMAInterruptSource</field>
    <field name="text">Select the EOC source for an ADC interrupt for DMA base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper socNumber is the number of the start-of-conversion This function sets which conversion is the source of an ADC interrupt for DMA The intTrigger number is a value ADC_INT_TRIGGER_X where X specifies the interrupt trigger to be configured for the ADC module specified by base Refer ADC_IntTrigger enum for valid values for this input adcIntNum can take the value ADC_INT_NUMBER1 or ADC_INT_NUMBER2 to express which of the interrupts of the ADC module is being configured None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_REP1CTL_ACTIVEMODE_S</field>
    <field name="url">group__adc__api.html#ga869b25bb4e431bfcd0eb9e1665e89284</field>
    <field name="keywords">ADC_REP1CTL_ACTIVEMODE_S ADC_REP1CTL_ACTIVEMODE_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC14</field>
    <field name="url">group__adc__api.html#ga879cfb1b496ef7148754cc51c623a2b2</field>
    <field name="keywords">ADC_FORCE_SOC14 ADC_FORCE_SOC14</field>
    <field name="text">SW trigger ADC SOC 1 4 SW trigger ADC SOC 1 4</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_NUM_INTERRUPTS</field>
    <field name="url">group__adc__api.html#ga88d04369ecd4b4f0d62689d85725c154</field>
    <field name="keywords">ADC_NUM_INTERRUPTS ADC_NUM_INTERRUPTS</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_readPPBSum</field>
    <field name="args">(uint32_t resultBase, ADC_PPBNumber ppbNumber)</field>
    <field name="url">group__adc__api.html#ga89e7d277897b4e9d7f869a59dbedfa39</field>
    <field name="keywords">ADC_readPPBSum ADC_readPPBSum</field>
    <field name="text">Reads the oversampled final sum from the PPB resultBase is the base address of the ADC results ppbNumber is the number of the post-processing block This function returns the processed sum of results that corresponds to the base address passed into resultBase and the PPB passed into ppbNumber Take care that you are using a base address for the result registers ADCxRESULT_BASE and not a base address for the control registers Only ADC_PPB_NUMBER1 supports this feature Returns the oversampled final sum value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_getTemperatureC</field>
    <field name="args">(uint16_t tempResult, ADC_ReferenceMode refMode, float32_t vref)</field>
    <field name="url">group__adc__api.html#ga8a5cb219b8d081574e4434d4e7329204</field>
    <field name="keywords">ADC_getTemperatureC ADC_getTemperatureC</field>
    <field name="text">Converts temperature from sensor reading to degrees C tempResult is the raw ADC A conversion result from the temp sensor vref is the reference voltage being used for example 3.3 for 3.3V refMode is the reference mode being used ADC_REFERENCE_INTERNAL or ADC_REFERENCE_EXTERNAL This function converts temperature from temp sensor reading to degrees C Temp sensor values in production test are derived with 2.5V reference The vref argument in the function is used to scale the temp sensor reading accordingly if temp sensor value is read at a different VREF setting Returns the temperature sensor reading converted to degrees C</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_readPPBCount</field>
    <field name="args">(uint32_t resultBase, ADC_PPBNumber ppbNumber)</field>
    <field name="url">group__adc__api.html#ga8c8545a682f15560b275ec1e570c2f84</field>
    <field name="keywords">ADC_readPPBCount ADC_readPPBCount</field>
    <field name="text">Reads the oversampled final count from the PPB resultBase is the base address of the ADC results ppbNumber is the number of the post-processing block This function returns the oversampled final count that corresponds to the base address passed into resultBase and the PPB passed into ppbNumber Take care that you are using a base address for the result registers ADCxRESULT_BASE and not a base address for the control registers Only ADC_PPB_NUMBER1 supports this feature Returns the oversampled final count value</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_ClkPrescale</field>
    <field name="url">group__adc__api.html#ga8d6ae5ac93027785bc422c07d87f4a5a</field>
    <field name="keywords">ADC_ClkPrescale ADC_ClkPrescale</field>
    <field name="text">Values that can be passed to ADC_setPrescaler() as the clkPrescale parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_EVT_TRIPLO</field>
    <field name="url">group__adc__api.html#ga8fceea30c153bbc9d27c7097620dc958</field>
    <field name="keywords">ADC_EVT_TRIPLO ADC_EVT_TRIPLO</field>
    <field name="text">Trip Low Event Trip Low Event</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_disableSampleCAPReset</field>
    <field name="args">(uint32_t base, ADC_SOCNumber socNumber)</field>
    <field name="url">group__adc__api.html#ga9125bdbe9919b8e5468263bdb1c2f43d</field>
    <field name="keywords">ADC_disableSampleCAPReset ADC_disableSampleCAPReset</field>
    <field name="text">Disable the sample capacitor reset for an ADC SOC base is the base address of the ADC module socNumber is the number of the start-of-conversion This function disables the sample capacitor reset after each conversion for a particular SOC The socNumber number is a value ADC_SOC_NUMBERX where X is a number from 0 to 1 5 specifying which SOC is to be configured on the ADC module specified by base None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_getInterruptOverflowStatus</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga9296366f932150ad9fa53865286f7c6d</field>
    <field name="keywords">ADC_getInterruptOverflowStatus ADC_getInterruptOverflowStatus</field>
    <field name="text">Gets the current ADC interrupt overflow status base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function returns the interrupt overflow status for the analog-to-digital converter An overflow condition is generated irrespective of the continuous mode adcIntNum takes a one of the values ADC_INT_NUMBER1 ADC_INT_NUMBER2 ADC_INT_NUMBER3 or ADC_INT_NUMBER4 to get the interrupt overflow status for the given interrupt number true if the interrupt overflow flag for the specified interrupt number is set and false if it is not</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_INT_REF_TSSLOPE</field>
    <field name="url">group__adc__api.html#ga97668ed9382ff2bb9394639953da28be</field>
    <field name="keywords">ADC_INT_REF_TSSLOPE ADC_INT_REF_TSSLOPE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_isBusy</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__adc__api.html#ga98e2f552716281f947255e5ca763d74a</field>
    <field name="keywords">ADC_isBusy ADC_isBusy</field>
    <field name="text">Determines whether the ADC is busy or not base is the base address of the ADC This function allows the caller to determine whether or not the ADC is busy and can sample another channel Returns true if the ADC is sampling or false if all samples are complete</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC3</field>
    <field name="url">group__adc__api.html#ga9b66e439cf7b5b4d5e14ef0d7915e7ed</field>
    <field name="keywords">ADC_FORCE_SOC3 ADC_FORCE_SOC3</field>
    <field name="text">SW trigger ADC SOC 3 SW trigger ADC SOC 3</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_PPBxSUM_OFFSET_BASE</field>
    <field name="url">group__adc__api.html#ga9d1b25bfa0a3e3943018cfb170511a04</field>
    <field name="keywords">ADC_PPBxSUM_OFFSET_BASE ADC_PPBxSUM_OFFSET_BASE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_getDMAInterruptOverflowStatus</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#ga9d54b20566350f9ff404ef01ffeabfbc</field>
    <field name="keywords">ADC_getDMAInterruptOverflowStatus ADC_getDMAInterruptOverflowStatus</field>
    <field name="text">Gets the current ADC DMA interrupt overflow status base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function returns the DMA interrupt overflow status for the analog-to-digital converter An overflow condition is generated irrespective of the continuous mode adcIntNum takes a one of the values ADC_INT_NUMBER1 and ADC_INT_NUMBER2 to get the DMA interrupt overflow status for the given interrupt number true if the DMA interrupt overflow flag for the specified interrupt number is set and false if it is not</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_RESULTx_OFFSET_BASE</field>
    <field name="url">group__adc__api.html#gaa112157a688d3a93ad050744df519d8c</field>
    <field name="keywords">ADC_RESULTx_OFFSET_BASE ADC_RESULTx_OFFSET_BASE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_selectPPBCompareSource</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, uint16_t compSrc)</field>
    <field name="url">group__adc__api.html#gaa175163ed33e34c0c9ccc3df3d132a51</field>
    <field name="keywords">ADC_selectPPBCompareSource ADC_selectPPBCompareSource</field>
    <field name="text">Configures PPB compare source base is the base address of the ADC module ppbNumber is the number of the post-processing block compSrc is the desired source to be used for zero crossing detect logic and threshold compare This function configures the desired source to be used for zero crossing detect logic and threshold compare For valid values of compSrc refer to enum ADC_PPBCompSource Only ADC_PPB_NUMBER1 supports this feature None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_selectPPBSyncInput</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, uint16_t syncInput)</field>
    <field name="url">group__adc__api.html#gaa3c93f183885d08630e3ab81c564cada</field>
    <field name="keywords">ADC_selectPPBSyncInput ADC_selectPPBSyncInput</field>
    <field name="text">Configures PPB sync input base is the base address of the ADC module ppbNumber is the number of the post-processing block syncInput is the desired sync event to transfer partial registers to final registers and reset the partial registers This function configures desired sync event to transfer partial registers to final registers and reset the partial registers For valid values of syncInput refer to enum ADC_SyncInput Only ADC_PPB_NUMBER1 supports this feature None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_PPBxTRIPHI_STEP</field>
    <field name="url">group__adc__api.html#gaa48fe3f2e0ef31a0b05a116c34893314</field>
    <field name="keywords">ADC_PPBxTRIPHI_STEP ADC_PPBxTRIPHI_STEP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_enableInterrupt</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#gaa69979fefb4f785b64fac098e8354874</field>
    <field name="keywords">ADC_enableInterrupt ADC_enableInterrupt</field>
    <field name="text">Enables an ADC interrupt source base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function enables the indicated ADC interrupt source Only the sources that are enabled can be reflected to the processor interrupt Disabled sources have no effect on the processor adcIntNum can take the value ADC_INT_NUMBER1 ADC_INT_NUMBER2 ADC_INT_NUMBER3 or ADC_INT_NUMBER4 to express which of the four interrupts of the ADC module should be enabled None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_disablePPBTwosComplement</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber)</field>
    <field name="url">group__adc__api.html#gaaae64f453feb28a460395f12a4f03b0d</field>
    <field name="keywords">ADC_disablePPBTwosComplement ADC_disablePPBTwosComplement</field>
    <field name="text">Disables two s complement capability in the PPB base is the base address of the ADC module ppbNumber is the number of the post-processing block This function disables two s complement in the post-processing block specified by the ppbNumber parameter When disabled a two s complement will NOT be performed on the output of the offset subtraction before it is stored in the appropriate PPB result register In other words the PPB result will be the ADC result value minus the reference offset value ADCPPBxRESULT ADCRESULTx ADCSOCxOFFREF None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_forcePPBSync</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber)</field>
    <field name="url">group__adc__api.html#gaab67bc7211b9941f30486957717005b7</field>
    <field name="keywords">ADC_forcePPBSync ADC_forcePPBSync</field>
    <field name="text">Forces PPB software sync base is the base address of the ADC module ppbNumber is the number of the post-processing block This function forces the software sync for the desired PPB Only ADC_PPB_NUMBER1 supports this feature None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_enableConverter</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__adc__api.html#gaab8fcddeb20120b29ac370be462b74b2</field>
    <field name="keywords">ADC_enableConverter ADC_enableConverter</field>
    <field name="text">Powers up the analog-to-digital converter core base is the base address of the ADC module This function powers up the analog circuitry inside the analog core Allow at least a 5 0 0 us delay before sampling after calling this API If you enable multiple ADCs you can delay after they all have begun powering up None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setPPBReferenceOffset</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, uint16_t offset)</field>
    <field name="url">group__adc__api.html#gab031c67b0336c9a513bb2a2d4a9562d2</field>
    <field name="keywords">ADC_setPPBReferenceOffset ADC_setPPBReferenceOffset</field>
    <field name="text">Sets the post processing block reference offset base is the base address of the ADC module ppbNumber is the number of the post-processing block offset is the 1 2 bit unsigned value subtracted from ADC the output This function sets the PPB reference offset value This can be used to either calculate the feedback error or convert a unipolar signal to bipolar by subtracting a reference value The result will be stored in the appropriate PPB result register which can be read using ADC_readPPBResult() Passing a zero in to the offset parameter will effectively disable the calculation and will pass the ADC result to the PPB result register unchanged If in 1 2 bit mode you may only pass a 1 2 bit value into the offset parameter None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setPPBCountLimit</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, uint16_t limit)</field>
    <field name="url">group__adc__api.html#gab53d59890d5dca53617f11a647d13ea7</field>
    <field name="keywords">ADC_setPPBCountLimit ADC_setPPBCountLimit</field>
    <field name="text">Configures PPB count limit base is the base address of the ADC module ppbNumber is the number of the post-processing block limit is the desired PPB count limit This function configures the PPB oversampling count limit which defines the number of ADC conversions to accumulate before partial sum is automatically loaded to the sum registes Only ADC_PPB_NUMBER1 supports this feature None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setInterruptPulseMode</field>
    <field name="args">(uint32_t base, ADC_PulseMode pulseMode)</field>
    <field name="url">group__adc__api.html#gab6890bb228e2ecce16a531094de3b81b</field>
    <field name="keywords">ADC_setInterruptPulseMode ADC_setInterruptPulseMode</field>
    <field name="text">Sets the timing of the end-of-conversion pulse base is the base address of the ADC module pulseMode is the generation mode of the EOC pulse This function configures the end-of-conversion EOC pulse generated by ADC This pulse will be generated either at the end of the acquisition window plus a number of SYSCLK cycles configured by ADC_setInterruptCycleOffset() pass ADC_PULSE_END_OF_ACQ_WIN into pulseMode or at the end of the voltage conversion one cycle prior to the ADC result latching into it s result register pass ADC_PULSE_END_OF_CONV into pulseMode None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_REP1CTL_MODULEBUSY_S</field>
    <field name="url">group__adc__api.html#gab842e8dcd72fbf8a8b0d2278ed737701</field>
    <field name="keywords">ADC_REP1CTL_MODULEBUSY_S ADC_REP1CTL_MODULEBUSY_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_PPBxRESULT_OFFSET_BASE</field>
    <field name="url">group__adc__api.html#gab93b3d59039266605bee26e11b6077be</field>
    <field name="keywords">ADC_PPBxRESULT_OFFSET_BASE ADC_PPBxRESULT_OFFSET_BASE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_PPBxCONFIG_STEP</field>
    <field name="url">group__adc__api.html#gabc6bdbd41b411aac98ed70aae0409333</field>
    <field name="keywords">ADC_PPBxCONFIG_STEP ADC_PPBxCONFIG_STEP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setVREF</field>
    <field name="args">(uint32_t base, ADC_ReferenceMode refMode, ADC_ReferenceVoltage refVoltage)</field>
    <field name="url">group__adc__api.html#gabc9c09c11263685170ed7d88dd36f9e4</field>
    <field name="keywords">ADC_setVREF ADC_setVREF</field>
    <field name="text">Configures the ADC module s reference mode and offset trim base is the base address of the ADC module refMode is the reference mode being used ADC_REFERENCE_INTERNAL or ADC_REFERENCE_EXTERNAL refVoltage is the reference voltage being used ADC_REFERENCE_2_5V or ADC_REFERENCE_3_3V This is ignored when the reference mode is external This function configures the ADC module s reference mode and loads the corresponding offset trims None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setOffsetTrim</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__adc__api.html#gabe0d15283495abce50c21eb97a8491a4</field>
    <field name="keywords">ADC_setOffsetTrim ADC_setOffsetTrim</field>
    <field name="text">Configures the offset trim for the desired ADC instance base is the base address of the ADC module This function loads the offset trims for the desired ADC instance None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_getDMARAWIntStatus</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#gac2ee8b9f341bc61d1ce2a93b407365fd</field>
    <field name="keywords">ADC_getDMARAWIntStatus ADC_getDMARAWIntStatus</field>
    <field name="text">Gets the Raw DMA interrupt status base is the base address of the ADC module adcIntNum is interrupt number for the ADC wrapper This function returns the Raw DMA interrupt status associated with the selected interrupt number for the ADC wrapper adcIntNum takes a one of the values ADC_INT_NUMBER1 or ADC_INT_NUMBER1 to get the Raw DMA interrupt status for the conversions associated with the given interrupt number This flag will be set irrespective of corresponding DMAINTE true if the result is available for the selected interrupt and false if it is not</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_DMAINTSEL_OFFSET_BASE</field>
    <field name="url">group__adc__api.html#gac561e8c8cd77c96253ba1d96e8b3655d</field>
    <field name="keywords">ADC_DMAINTSEL_OFFSET_BASE ADC_DMAINTSEL_OFFSET_BASE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_forceMultipleSOC</field>
    <field name="args">(uint32_t base, uint32_t socMask)</field>
    <field name="url">group__adc__api.html#gac6fde563ca4016ac8b885c904d4f388d</field>
    <field name="keywords">ADC_forceMultipleSOC ADC_forceMultipleSOC</field>
    <field name="text">Forces multiple SOC flags to 1 in the analog-to-digital converter base is the base address of the ADC module socMask is the SOCs to be forced through software This function forces the SOCFRC1 flags associated with the SOCs specified by socMask This initiates a conversion once the desired SOCs are given priority This software trigger can be used whether or not the SOC has been configured to accept some other specific trigger Valid values for socMask parameter can be any of the individual ADC_FORCE_SOCx values or any of their OR d combination to trigger multiple SOCs To trigger SOC0 SOC1 and SOC2 value ADC_FORCE_SOC0 ADC_FORCE_SOC1 ADC_FORCE_SOC2 should be passed as socMask None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_EVT_ZERO</field>
    <field name="url">group__adc__api.html#gacbe53d8a8e55fff293d0642f9bea6c08</field>
    <field name="keywords">ADC_EVT_ZERO ADC_EVT_ZERO</field>
    <field name="text">Zero Crossing Event Zero Crossing Event</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC11</field>
    <field name="url">group__adc__api.html#gaccfc3b01bc20ec72c7c2f942e3ffd126</field>
    <field name="keywords">ADC_FORCE_SOC11 ADC_FORCE_SOC11</field>
    <field name="text">SW trigger ADC SOC 1 1 SW trigger ADC SOC 1 1</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_PulseMode</field>
    <field name="url">group__adc__api.html#gacd907be60c59083e2bf41efcc36d4baf</field>
    <field name="keywords">ADC_PulseMode ADC_PulseMode</field>
    <field name="text">Values that can be passed to ADC_setInterruptPulseMode() as the pulseMode parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_EXT_REF_TSSLOPE</field>
    <field name="url">group__adc__api.html#gacdf6f073dd1336bc9d4a386155bb53a3</field>
    <field name="keywords">ADC_EXT_REF_TSSLOPE ADC_EXT_REF_TSSLOPE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_readResult</field>
    <field name="args">(uint32_t resultBase, ADC_SOCNumber socNumber)</field>
    <field name="url">group__adc__api.html#gad08fa23cfc0caf97b88e4cfa853c22f1</field>
    <field name="keywords">ADC_readResult ADC_readResult</field>
    <field name="text">Reads the conversion result resultBase is the base address of the ADC results socNumber is the number of the start-of-conversion This function returns the conversion result that corresponds to the base address passed into resultBase and the SOC passed into socNumber The socNumber number is a value ADC_SOC_NUMBERX where X is a number from 0 to 1 5 specifying which SOC s result is to be read Take care that you are using a base address for the result registers ADCxRESULT_BASE and not a base address for the control registers Returns the conversion result</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_forceRepeaterTrigger</field>
    <field name="args">(uint32_t base, uint16_t repInstance)</field>
    <field name="url">group__adc__api.html#gad14126566549676ac9724d87f22a575d</field>
    <field name="keywords">ADC_forceRepeaterTrigger ADC_forceRepeaterTrigger</field>
    <field name="text">Forces software trigger to ADC trigger repeater block base is the base address of the ADC module repInstance is the repeater instance to be triggered This function forces the selected ADC repeater block Valid values for repInstance parameter can be any of the individual ADC_REPEATER_INSTANCEx values defined by enum ADC_RepInstance None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_ReferenceMode</field>
    <field name="url">group__adc__api.html#gad33ea1f3c3db73f25e0bdf15a86be959</field>
    <field name="keywords">ADC_ReferenceMode ADC_ReferenceMode</field>
    <field name="text">Values that can be passed to ADC_getTemperatureC() ADC_getTemperatureK() ADC_setVREF() and ADC_setOffsetTrimAll() as the refMode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_readPPBPCount</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber)</field>
    <field name="url">group__adc__api.html#gad4c9ef0d376cf6fa09b739a118396a54</field>
    <field name="keywords">ADC_readPPBPCount ADC_readPPBPCount</field>
    <field name="text">Reads the oversampled partial count from the PPB base is the base address of the ADC module ppbNumber is the number of the post-processing block This function returns the oversampled partial count that corresponds to the base address passed into base and the PPB passed into ppbNumber Only ADC_PPB_NUMBER1 supports this feature Returns the oversampled partial count value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_disablePPBEventCBCClear</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber)</field>
    <field name="url">group__adc__api.html#gad721d382bf8269d4fa4c305137f80796</field>
    <field name="keywords">ADC_disablePPBEventCBCClear ADC_disablePPBEventCBCClear</field>
    <field name="text">Disables cycle-by-cycle clear of ADC PPB event flags base is the base address of the ADC module ppbNumber is the number of the post-processing block This function disables the cycle-by-cycle clear of ADC PPB event flags When disabled the desired PPB event flags are to be cleared explicitly in software inorder to generate next set of interrupts/events None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_Channel</field>
    <field name="url">group__adc__api.html#gad7b9fa1ae8a65e534cce7d26fa0984f6</field>
    <field name="keywords">ADC_Channel ADC_Channel</field>
    <field name="text">Values that can be passed to ADC_setupSOC() as the channel parameter This is the input pin on which the signal to be converted is located</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_PPBIntSrcSelect</field>
    <field name="url">group__adc__api.html#gadae07564f94d93024778cb2e621781ae</field>
    <field name="keywords">ADC_PPBIntSrcSelect ADC_PPBIntSrcSelect</field>
    <field name="text">Values that can be passed to ADC_selectPPBOSINTSource() as the osIntSrc parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_disablePPBEventInterrupt</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, uint16_t intFlags)</field>
    <field name="url">group__adc__api.html#gadb61333815952e5d00d1c13fdc362ba4</field>
    <field name="keywords">ADC_disablePPBEventInterrupt ADC_disablePPBEventInterrupt</field>
    <field name="text">Disables individual ADC PPB event interrupt sources base is the base address of the ADC module ppbNumber is the number of the post-processing block intFlags is a bit mask of the interrupt source to be disabled This function disables the indicated ADC PPB interrupt sources Only the sources that are enabled can be reflected to the processor interrupt Disabled sources have no effect on the processor The intFlags parameter can be any of the ADC_EVT_TRIPHI ADC_EVT_TRIPLO ADC_EVT_ZERO or ADC_EVT_NLIMIT values None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_enablePPBEvent</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber, uint16_t evtFlags)</field>
    <field name="url">group__adc__api.html#gadc2372da3f307307e45b3e5575ae28f5</field>
    <field name="keywords">ADC_enablePPBEvent ADC_enablePPBEvent</field>
    <field name="text">Enables individual ADC PPB event sources base is the base address of the ADC module ppbNumber is the number of the post-processing block evtFlags is a bit mask of the event sources to be enabled This function enables the indicated ADC PPB event sources This will allow the specified events to propagate through the X-BAR to a pin or to an PWM module The evtFlags parameter can be any of the ADC_EVT_TRIPHI ADC_EVT_TRIPLO ADC_EVT_ZERO or ADC_EVT_NLIMIT values None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_getRepeaterStatus</field>
    <field name="args">(uint32_t base, uint16_t repInstance)</field>
    <field name="url">group__adc__api.html#gade865eb281ee570ed2f7ceafcf5e5161</field>
    <field name="keywords">ADC_getRepeaterStatus ADC_getRepeaterStatus</field>
    <field name="text">Gets the current status for repeater block base is the base address of the ADC module repInstance is the repeater instance This function returns the current status for the repeater block Returns the current event status enumerated as a bit field of ADC_REPEATER_MODULE_BUSY ADC_REPEATER_TRIGGER_OVERFLOW</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC10</field>
    <field name="url">group__adc__api.html#gae035db14e59bc94f8a2cbe090310e789</field>
    <field name="keywords">ADC_FORCE_SOC10 ADC_FORCE_SOC10</field>
    <field name="text">SW trigger ADC SOC 1 0 SW trigger ADC SOC 1 0</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_FORCE_SOC8</field>
    <field name="url">group__adc__api.html#gae0374de833882347f3e55911739cf1af</field>
    <field name="keywords">ADC_FORCE_SOC8 ADC_FORCE_SOC8</field>
    <field name="text">SW trigger ADC SOC 8 SW trigger ADC SOC 8</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ADC_IntTrigger</field>
    <field name="url">group__adc__api.html#gae4463487eb170cf7f23699e7f01407de</field>
    <field name="keywords">ADC_IntTrigger ADC_IntTrigger</field>
    <field name="text">Values that can be passed to ADC_setInterruptSource() as the intTrigger parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_PPBxTRIPLO_STEP</field>
    <field name="url">group__adc__api.html#gae674bf5583947a8c5665cc2b908b3053</field>
    <field name="keywords">ADC_PPBxTRIPLO_STEP ADC_PPBxTRIPLO_STEP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_enablePPBEventCBCClear</field>
    <field name="args">(uint32_t base, ADC_PPBNumber ppbNumber)</field>
    <field name="url">group__adc__api.html#gaecdf111119c3951f30b74fac186738bd</field>
    <field name="keywords">ADC_enablePPBEventCBCClear ADC_enablePPBEventCBCClear</field>
    <field name="text">Enables cycle-by-cycle clear of ADC PPB event flags base is the base address of the ADC module ppbNumber is the number of the post-processing block This function enables the automatic cycle-by-cycle clear of ADC PPB event flags When enabled the desired PPB event flags are automatically cleared on the next PPBxRESULT load unless a set condition is also occurring at the same time in which case the set takes precedence None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_enableDMAContinuousMode</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#gaf1ce90345b31c6a965537f84bf77c115</field>
    <field name="keywords">ADC_enableDMAContinuousMode ADC_enableDMAContinuousMode</field>
    <field name="text">Enables continuous mode of an ADC interrupt for DMA base is the base address of the ADC adcIntNum is interrupt number within the ADC wrapper This function enables continuous mode for the ADC interrupt passed into adcIntNum This means that pulses will be generated for the specified ADC interrupt for DMA whenever an EOC pulse is generated irrespective of whether or not the flag bit is set adcIntNum can take the value ADC_INT_NUMBER1 or ADC_INT_NUMBER2 to express which of the interrupts of the ADC module is being configured None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_triggerRepeaterSelect</field>
    <field name="args">(uint32_t base, uint16_t repInstance, ADC_Trigger trigger)</field>
    <field name="url">group__adc__api.html#gaf1ea56047e279646f979e75b14e5917f</field>
    <field name="keywords">ADC_triggerRepeaterSelect ADC_triggerRepeaterSelect</field>
    <field name="text">Configures the trigger source of the trigger repeater base is the base address of the ADC module repInstance is the repeater instance trigger the source to modify via oversampling or undersampling This function configures ADC trigger repeater by selecting the trigger source passed into trigger to modify via oversampling The repInstance is the repeater instance to be configured Valid values for this parameter can be referred from the enum ADC_RepInstance None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_getIntResultStatus</field>
    <field name="args">(uint32_t base, ADC_IntNumber adcIntNum)</field>
    <field name="url">group__adc__api.html#gaf206a9818dee54d9963f44a519b53142</field>
    <field name="keywords">ADC_getIntResultStatus ADC_getIntResultStatus</field>
    <field name="text">Gets the result ready status for ADC interrupt base is the base address of the ADC module adcIntNum is interrupt number within the ADC wrapper This function returns the result ready status associated with the selected interrupt number within the ADC wrapper adcIntNum takes a one of the values ADC_INT_NUMBER1 ADC_INT_NUMBER2 ADC_INT_NUMBER3 or ADC_INT_NUMBER4 to get the result ready status for the conversions associated with the given interrupt number true if the result is available for the selected interrupt and false if it is not</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_selectSampleCAPResetValue</field>
    <field name="args">(uint32_t base, ADC_SOCNumber socNumber, ADC_SampleCAPResetValue capResetVal)</field>
    <field name="url">group__adc__api.html#gaf64eb3a199bd4b06ab947fb2dc67a45e</field>
    <field name="keywords">ADC_selectSampleCAPResetValue ADC_selectSampleCAPResetValue</field>
    <field name="text">Set the sample capacitor to reset to VREFLO base is the base address of the ADC module socNumber is the number of the start-of-conversion capResetVal is the desired sample capacitor reset value This function sets the sample capacitor to reset to either Vrefhi/2 or Vreflo after each conversion The socNumber number is a value ADC_SOC_NUMBERX where X is a number from 0 to 1 5 specifying which SOC is to be configured on the ADC module specified by base The capResetVal is the desired sample capacitor reset value Valid values can be refered from the enum ADC_SampleCAPResetValue None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ADC_INTSEL_OFFSET_BASE</field>
    <field name="url">group__adc__api.html#gafa41e5a79a5acf3a8bbef1f347bae22e</field>
    <field name="keywords">ADC_INTSEL_OFFSET_BASE ADC_INTSEL_OFFSET_BASE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ADC_setPrescaler</field>
    <field name="args">(uint32_t base, ADC_ClkPrescale clkPrescale)</field>
    <field name="url">group__adc__api.html#gafaada54342e70b870f9e3919d92bca7a</field>
    <field name="keywords">ADC_setPrescaler ADC_setPrescaler</field>
    <field name="text">Configures the analog-to-digital converter module prescaler base is the base address of the ADC module clkPrescale is the ADC clock prescaler This function configures the ADC module s ADCCLK The clkPrescale parameter specifies the value by which the input clock is divided to make the ADCCLK The clkPrescale value can be specified with any of the following enum values ADC_CLK_DIV_1_0 ADC_CLK_DIV_2_0 ADC_CLK_DIV_2_5 ADC_CLK_DIV_7_5 ADC_CLK_DIV_8_0 or ADC_CLK_DIV_8_5 None</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PPB_COMPSOURCE_RESULT</field>
    <field name="url">group__adc__api.html#gga0959e6a2d0772e9adc3327878252fe2aa9adb1df4f3d9b2927906a8d086ec506f</field>
    <field name="keywords">ADC_PPB_COMPSOURCE_RESULT ADC_PPB_COMPSOURCE_RESULT</field>
    <field name="text">PPB compare source is ADCRESULT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PPB_COMPSOURCE_SUM</field>
    <field name="url">group__adc__api.html#gga0959e6a2d0772e9adc3327878252fe2aac4553bb2628055d20ffa5c037fb58654</field>
    <field name="keywords">ADC_PPB_COMPSOURCE_SUM ADC_PPB_COMPSOURCE_SUM</field>
    <field name="text">PPB compare source is SUM</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_SOC_TRIGGER_ADCINT2</field>
    <field name="url">group__adc__api.html#gga174a238f04d1d0ec1b89fdd7fed64716a080ccc812e44c8e0810b21002f063441</field>
    <field name="keywords">ADC_INT_SOC_TRIGGER_ADCINT2 ADC_INT_SOC_TRIGGER_ADCINT2</field>
    <field name="text">ADCINT2 will trigger the SOC</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_SOC_TRIGGER_ADCINT1</field>
    <field name="url">group__adc__api.html#gga174a238f04d1d0ec1b89fdd7fed64716a39b229325d41b2005924aa16092f4a1b</field>
    <field name="keywords">ADC_INT_SOC_TRIGGER_ADCINT1 ADC_INT_SOC_TRIGGER_ADCINT1</field>
    <field name="text">ADCINT1 will trigger the SOC</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_SOC_TRIGGER_NONE</field>
    <field name="url">group__adc__api.html#gga174a238f04d1d0ec1b89fdd7fed64716a4033eb805c2ff7c5c075dc9fa605e83c</field>
    <field name="keywords">ADC_INT_SOC_TRIGGER_NONE ADC_INT_SOC_TRIGGER_NONE</field>
    <field name="text">No ADCINT will trigger the SOC</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_SOC_TRIGGER_EOC</field>
    <field name="url">group__adc__api.html#gga174a238f04d1d0ec1b89fdd7fed64716ac6852d6323de9b65aaeb7115ac04d5b8</field>
    <field name="keywords">ADC_INT_SOC_TRIGGER_EOC ADC_INT_SOC_TRIGGER_EOC</field>
    <field name="text">EOC of previous SOC will trigger the SOC</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PPB_NUMBER1</field>
    <field name="url">group__adc__api.html#gga17f0c071ab2c71a40e3d95c9eeadf3b9a3d5ab08197c2c052a70bbd9e11e3d85b</field>
    <field name="keywords">ADC_PPB_NUMBER1 ADC_PPB_NUMBER1</field>
    <field name="text">Post-processing block 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PPB_NUMBER3</field>
    <field name="url">group__adc__api.html#gga17f0c071ab2c71a40e3d95c9eeadf3b9a449772890acf04ae6376aa660f62acbb</field>
    <field name="keywords">ADC_PPB_NUMBER3 ADC_PPB_NUMBER3</field>
    <field name="text">Post-processing block 3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PPB_NUMBER2</field>
    <field name="url">group__adc__api.html#gga17f0c071ab2c71a40e3d95c9eeadf3b9a9bf980daa1de121251f266292f09184b</field>
    <field name="keywords">ADC_PPB_NUMBER2 ADC_PPB_NUMBER2</field>
    <field name="text">Post-processing block 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER0</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39a13f3e19d5ee844b3a2eff08681becbb3</field>
    <field name="keywords">ADC_SOC_NUMBER0 ADC_SOC_NUMBER0</field>
    <field name="text">SOC/EOC number 0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER11</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39a24cd87237628ac79b2891574e0b2ca16</field>
    <field name="keywords">ADC_SOC_NUMBER11 ADC_SOC_NUMBER11</field>
    <field name="text">SOC/EOC number 1 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER4</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39a39f5749e05562cc10e49c564b9b882f8</field>
    <field name="keywords">ADC_SOC_NUMBER4 ADC_SOC_NUMBER4</field>
    <field name="text">SOC/EOC number 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER1</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39a59ed2ddcb0833aaa80234623679f25f2</field>
    <field name="keywords">ADC_SOC_NUMBER1 ADC_SOC_NUMBER1</field>
    <field name="text">SOC/EOC number 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER9</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39a5fdf20c2c172e83b96b13e6cbe780113</field>
    <field name="keywords">ADC_SOC_NUMBER9 ADC_SOC_NUMBER9</field>
    <field name="text">SOC/EOC number 9</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER5</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39a6cdb8e506ca9a7824feee9777a5614d1</field>
    <field name="keywords">ADC_SOC_NUMBER5 ADC_SOC_NUMBER5</field>
    <field name="text">SOC/EOC number 5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER12</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39a74351fde1fcdcaa8748a395f988954c2</field>
    <field name="keywords">ADC_SOC_NUMBER12 ADC_SOC_NUMBER12</field>
    <field name="text">SOC/EOC number 1 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER8</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39a7516eb2cb9c101fbf83d0cf686b4131e</field>
    <field name="keywords">ADC_SOC_NUMBER8 ADC_SOC_NUMBER8</field>
    <field name="text">SOC/EOC number 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER6</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39a78cc89a06b99db4baf8fc31f5e6c4266</field>
    <field name="keywords">ADC_SOC_NUMBER6 ADC_SOC_NUMBER6</field>
    <field name="text">SOC/EOC number 6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER3</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39a8db276a4433b2be5934d7574feca8ea7</field>
    <field name="keywords">ADC_SOC_NUMBER3 ADC_SOC_NUMBER3</field>
    <field name="text">SOC/EOC number 3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER10</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39a91693adcb98cdb52520609381ae97d32</field>
    <field name="keywords">ADC_SOC_NUMBER10 ADC_SOC_NUMBER10</field>
    <field name="text">SOC/EOC number 1 0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER2</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39a9efee36aa12204bd511fe602f86fb3c6</field>
    <field name="keywords">ADC_SOC_NUMBER2 ADC_SOC_NUMBER2</field>
    <field name="text">SOC/EOC number 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER7</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39ab06f22bdc9d1c47c5f821e02509ceb43</field>
    <field name="keywords">ADC_SOC_NUMBER7 ADC_SOC_NUMBER7</field>
    <field name="text">SOC/EOC number 7</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER13</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39ab5f9d250d79f83f71eb90ecc93fcde16</field>
    <field name="keywords">ADC_SOC_NUMBER13 ADC_SOC_NUMBER13</field>
    <field name="text">SOC/EOC number 1 3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER14</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39ab87336c7e8a08b3f4676385f10f6e5b0</field>
    <field name="keywords">ADC_SOC_NUMBER14 ADC_SOC_NUMBER14</field>
    <field name="text">SOC/EOC number 1 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SOC_NUMBER15</field>
    <field name="url">group__adc__api.html#gga254fedc72090784dcfcdcebebdf3ea39ac8d4c48ec980b4cf3a20afcf5527d37b</field>
    <field name="keywords">ADC_SOC_NUMBER15 ADC_SOC_NUMBER15</field>
    <field name="text">SOC/EOC number 1 5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_NUMBER2</field>
    <field name="url">group__adc__api.html#gga2cb95bd359b9df2dfd0977ce2020df06a2971cc781b210a2fdb5100778ab39ab7</field>
    <field name="keywords">ADC_INT_NUMBER2 ADC_INT_NUMBER2</field>
    <field name="text">ADCINT2 Interrupt</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_NUMBER1</field>
    <field name="url">group__adc__api.html#gga2cb95bd359b9df2dfd0977ce2020df06afa11dee02381f1e8e1a6c7474f5d9948</field>
    <field name="keywords">ADC_INT_NUMBER1 ADC_INT_NUMBER1</field>
    <field name="text">ADCINT1 Interrupt</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_REPINST1</field>
    <field name="url">group__adc__api.html#gga38766c01be33adece810b912d379bf31a7dc9a0cd69ba103a635dd46c7634a4d0</field>
    <field name="keywords">ADC_REPINST1 ADC_REPINST1</field>
    <field name="text">Select ADC repeater instance 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_REFERENCE_VREFHI</field>
    <field name="url">group__adc__api.html#gga4513a58978c46b76510fbf645bf77922a7486ac63976ca4dd678ca8d47d089d6e</field>
    <field name="keywords">ADC_REFERENCE_VREFHI ADC_REFERENCE_VREFHI</field>
    <field name="text">This value is valid when ADC reference mode is external</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_REFERENCE_2_5V</field>
    <field name="url">group__adc__api.html#gga4513a58978c46b76510fbf645bf77922ac0b015eefabe43c59815ba330013acb7</field>
    <field name="keywords">ADC_REFERENCE_2_5V ADC_REFERENCE_2_5V</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_REFERENCE_3_3V</field>
    <field name="url">group__adc__api.html#gga4513a58978c46b76510fbf645bf77922af645e2719e5cdd487c98e90d3ba05daf</field>
    <field name="keywords">ADC_REFERENCE_3_3V ADC_REFERENCE_3_3V</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PRI_THRU_SOC1_HIPRI</field>
    <field name="url">group__adc__api.html#gga4f60e7ea55578eb4eb621f31b0b8d434a19a3f3c76a8963f876008710aeb3a5b5</field>
    <field name="keywords">ADC_PRI_THRU_SOC1_HIPRI ADC_PRI_THRU_SOC1_HIPRI</field>
    <field name="text">SOC 0 1 hi pri others in round robin</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PRI_ALL_ROUND_ROBIN</field>
    <field name="url">group__adc__api.html#gga4f60e7ea55578eb4eb621f31b0b8d434a297bc0c03e8352b0f234a141252dc7f3</field>
    <field name="keywords">ADC_PRI_ALL_ROUND_ROBIN ADC_PRI_ALL_ROUND_ROBIN</field>
    <field name="text">Round robin mode is used for all</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PRI_THRU_SOC2_HIPRI</field>
    <field name="url">group__adc__api.html#gga4f60e7ea55578eb4eb621f31b0b8d434a372fef4bd7fe8686df74123f40603d50</field>
    <field name="keywords">ADC_PRI_THRU_SOC2_HIPRI ADC_PRI_THRU_SOC2_HIPRI</field>
    <field name="text">SOC 0 2 hi pri others in round robin</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PRI_SOC0_HIPRI</field>
    <field name="url">group__adc__api.html#gga4f60e7ea55578eb4eb621f31b0b8d434ae10aaea1f0763b40c298500b057774a8</field>
    <field name="keywords">ADC_PRI_SOC0_HIPRI ADC_PRI_SOC0_HIPRI</field>
    <field name="text">SOC 0 hi pri others in round robin</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SYNCIN_MCPWM3SYNCPER</field>
    <field name="url">group__adc__api.html#gga51ed1bc5073c7ef6394c3538b007e730a210b174293c912a77b3d1825eefc09d4</field>
    <field name="keywords">ADC_SYNCIN_MCPWM3SYNCPER ADC_SYNCIN_MCPWM3SYNCPER</field>
    <field name="text">MCPWM1 SYNCPER Signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SYNCIN_DISABLE</field>
    <field name="url">group__adc__api.html#gga51ed1bc5073c7ef6394c3538b007e730a41950eda6b33032b1ed1796e261c5e46</field>
    <field name="keywords">ADC_SYNCIN_DISABLE ADC_SYNCIN_DISABLE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SYNCIN_INPUTXBAROUTPUT6</field>
    <field name="url">group__adc__api.html#gga51ed1bc5073c7ef6394c3538b007e730a4237b3a4beb4c67e26ee2c3c28b33b74</field>
    <field name="keywords">ADC_SYNCIN_INPUTXBAROUTPUT6 ADC_SYNCIN_INPUTXBAROUTPUT6</field>
    <field name="text">ADC Syncin is INPUTXBAROUTPUT5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SYNCIN_MCPWM1SYNCPER</field>
    <field name="url">group__adc__api.html#gga51ed1bc5073c7ef6394c3538b007e730a47b1d56dda1892a2ff3ac74c3208dd3c</field>
    <field name="keywords">ADC_SYNCIN_MCPWM1SYNCPER ADC_SYNCIN_MCPWM1SYNCPER</field>
    <field name="text">ADC Syncin is ECAP1YNCOUT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SYNCIN_INPUTXBAROUTPUT5</field>
    <field name="url">group__adc__api.html#gga51ed1bc5073c7ef6394c3538b007e730a656ffa7dc83419044269a595880dc7b9</field>
    <field name="keywords">ADC_SYNCIN_INPUTXBAROUTPUT5 ADC_SYNCIN_INPUTXBAROUTPUT5</field>
    <field name="text">ADC Syncin is disabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_SYNCIN_ECAP1YNCOUT</field>
    <field name="url">group__adc__api.html#gga51ed1bc5073c7ef6394c3538b007e730aeed5d2f93c9926d1a586c0fb65228e6c</field>
    <field name="keywords">ADC_SYNCIN_ECAP1YNCOUT ADC_SYNCIN_ECAP1YNCOUT</field>
    <field name="text">ADC Syncin is INPUTXBAROUTPUT6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CAP_RESET_VREFLO</field>
    <field name="url">group__adc__api.html#gga741d0005d3126db3e23760f58357e115a9881cd888df71a80eff7dcb3ac0c084e</field>
    <field name="keywords">ADC_CAP_RESET_VREFLO ADC_CAP_RESET_VREFLO</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CAP_RESET_VREFHIBY2</field>
    <field name="url">group__adc__api.html#gga741d0005d3126db3e23760f58357e115adebba982074a1be719d03e128700dbe3</field>
    <field name="keywords">ADC_CAP_RESET_VREFHIBY2 ADC_CAP_RESET_VREFHIBY2</field>
    <field name="text">Sample Capacitor reset to Vreflo</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_TRIGGER_MCPWM1_SOCC</field>
    <field name="url">group__adc__api.html#gga7973b7d12fc7bfb96bd276b0a5926834a08e18a35f1686f435290826cdaee86a1</field>
    <field name="keywords">ADC_TRIGGER_MCPWM1_SOCC ADC_TRIGGER_MCPWM1_SOCC</field>
    <field name="text">MCPWM1 ADC SOCB</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_TRIGGER_MCPWM3_SOCA</field>
    <field name="url">group__adc__api.html#gga7973b7d12fc7bfb96bd276b0a5926834a1c04b4154b817976fbae7f8656c96381</field>
    <field name="keywords">ADC_TRIGGER_MCPWM3_SOCA ADC_TRIGGER_MCPWM3_SOCA</field>
    <field name="text">MCPWM1 ADC SOCD</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_TRIGGER_MCPWM1_SOCA</field>
    <field name="url">group__adc__api.html#gga7973b7d12fc7bfb96bd276b0a5926834a248fa78f4cc95db0edf0c4e68d816e4c</field>
    <field name="keywords">ADC_TRIGGER_MCPWM1_SOCA ADC_TRIGGER_MCPWM1_SOCA</field>
    <field name="text">GPIO ADCEXTSOC</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_TRIGGER_MCPWM3_SOCB</field>
    <field name="url">group__adc__api.html#gga7973b7d12fc7bfb96bd276b0a5926834a262d53876e27d371094605fe7ee4383c</field>
    <field name="keywords">ADC_TRIGGER_MCPWM3_SOCB ADC_TRIGGER_MCPWM3_SOCB</field>
    <field name="text">MCPWM3 ADC SOCA</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_TRIGGER_CPU1_TINT1</field>
    <field name="url">group__adc__api.html#gga7973b7d12fc7bfb96bd276b0a5926834a4f6bcc25d7f13d1a9a10776faad46008</field>
    <field name="keywords">ADC_TRIGGER_CPU1_TINT1 ADC_TRIGGER_CPU1_TINT1</field>
    <field name="text">CPU1 Timer 0 TINT0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_TRIGGER_SW_ONLY</field>
    <field name="url">group__adc__api.html#gga7973b7d12fc7bfb96bd276b0a5926834a9b08ad6080adb6fb14f27aa9b983fb51</field>
    <field name="keywords">ADC_TRIGGER_SW_ONLY ADC_TRIGGER_SW_ONLY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_TRIGGER_GPIO</field>
    <field name="url">group__adc__api.html#gga7973b7d12fc7bfb96bd276b0a5926834aa38d4a5ab3ee5946465236aac1f26c76</field>
    <field name="keywords">ADC_TRIGGER_GPIO ADC_TRIGGER_GPIO</field>
    <field name="text">CPU1 Timer 2 TINT2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_TRIGGER_CPU1_TINT0</field>
    <field name="url">group__adc__api.html#gga7973b7d12fc7bfb96bd276b0a5926834ab0c33f3e6509025d9792afdce374a9fa</field>
    <field name="keywords">ADC_TRIGGER_CPU1_TINT0 ADC_TRIGGER_CPU1_TINT0</field>
    <field name="text">Software only</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_TRIGGER_CPU1_TINT2</field>
    <field name="url">group__adc__api.html#gga7973b7d12fc7bfb96bd276b0a5926834ac891128b2fb71b4fa8b63ebf51f3790c</field>
    <field name="keywords">ADC_TRIGGER_CPU1_TINT2 ADC_TRIGGER_CPU1_TINT2</field>
    <field name="text">CPU1 Timer 1 TINT1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_TRIGGER_MCPWM1_SOCB</field>
    <field name="url">group__adc__api.html#gga7973b7d12fc7bfb96bd276b0a5926834ac939c4039c4b1d57669864ced9d5c1e6</field>
    <field name="keywords">ADC_TRIGGER_MCPWM1_SOCB ADC_TRIGGER_MCPWM1_SOCB</field>
    <field name="text">MCPWM1 ADC SOCA</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_TRIGGER_MCPWM1_SOCD</field>
    <field name="url">group__adc__api.html#gga7973b7d12fc7bfb96bd276b0a5926834ad23336f6754f8af39ee7dcd7988745f9</field>
    <field name="keywords">ADC_TRIGGER_MCPWM1_SOCD ADC_TRIGGER_MCPWM1_SOCD</field>
    <field name="text">MCPWM1 ADC SOCC</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_TRIGGER_REPEATER1</field>
    <field name="url">group__adc__api.html#gga7973b7d12fc7bfb96bd276b0a5926834aef5f39e65ea6b98b02ce86d74a36472f</field>
    <field name="keywords">ADC_TRIGGER_REPEATER1 ADC_TRIGGER_REPEATER1</field>
    <field name="text">MCPWM3 ADC SOCB</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_3_5</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aa0e5d67b46514a35868245754a3d72ec3</field>
    <field name="keywords">ADC_CLK_DIV_3_5 ADC_CLK_DIV_3_5</field>
    <field name="text">ADCCLK input clock 3.5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_7_0</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aa233be0327034ddd52c0bc1005173e819</field>
    <field name="keywords">ADC_CLK_DIV_7_0 ADC_CLK_DIV_7_0</field>
    <field name="text">ADCCLK input clock 7.0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_1_0</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aa3e33987cc2dd1ef61167608c18b28c21</field>
    <field name="keywords">ADC_CLK_DIV_1_0 ADC_CLK_DIV_1_0</field>
    <field name="text">ADCCLK input clock 1.0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_6_0</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aa5d738f4dbf1b69bcaf3820a96a7ab375</field>
    <field name="keywords">ADC_CLK_DIV_6_0 ADC_CLK_DIV_6_0</field>
    <field name="text">ADCCLK input clock 6.0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_2_5</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aa61dc1a46ec5ac11678b089db8cd709d1</field>
    <field name="keywords">ADC_CLK_DIV_2_5 ADC_CLK_DIV_2_5</field>
    <field name="text">ADCCLK input clock 2.5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_6_5</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aa69b20ca30cee7c2f341af1ff00ffd82f</field>
    <field name="keywords">ADC_CLK_DIV_6_5 ADC_CLK_DIV_6_5</field>
    <field name="text">ADCCLK input clock 6.5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_2_0</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aa6c3a25aced6f3c35d1be5e21b1a6e8b1</field>
    <field name="keywords">ADC_CLK_DIV_2_0 ADC_CLK_DIV_2_0</field>
    <field name="text">ADCCLK input clock 2.0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_5_5</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aa87a63f5b0d306bda18b5dd6aa76087e4</field>
    <field name="keywords">ADC_CLK_DIV_5_5 ADC_CLK_DIV_5_5</field>
    <field name="text">ADCCLK input clock 5.5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_5_0</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aa99ab26b48430e29121d48445b17f922f</field>
    <field name="keywords">ADC_CLK_DIV_5_0 ADC_CLK_DIV_5_0</field>
    <field name="text">ADCCLK input clock 5.0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_8_0</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aaa5e3810a6b7ac706ff7bec299842c211</field>
    <field name="keywords">ADC_CLK_DIV_8_0 ADC_CLK_DIV_8_0</field>
    <field name="text">ADCCLK input clock 8.0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_3_0</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aaabdbcd923c3a6134c444faba022536aa</field>
    <field name="keywords">ADC_CLK_DIV_3_0 ADC_CLK_DIV_3_0</field>
    <field name="text">ADCCLK input clock 3.0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_7_5</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aab9ca56b534ab8d4e7cc3d0ea775f6540</field>
    <field name="keywords">ADC_CLK_DIV_7_5 ADC_CLK_DIV_7_5</field>
    <field name="text">ADCCLK input clock 7.5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_8_5</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aad4c5ac99de171a9d1cda6572bea6e9f8</field>
    <field name="keywords">ADC_CLK_DIV_8_5 ADC_CLK_DIV_8_5</field>
    <field name="text">ADCCLK input clock 8.5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_4_5</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aaddaf5682b390f7fcf31adc3abb6a2ca3</field>
    <field name="keywords">ADC_CLK_DIV_4_5 ADC_CLK_DIV_4_5</field>
    <field name="text">ADCCLK input clock 4.5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CLK_DIV_4_0</field>
    <field name="url">group__adc__api.html#gga8d6ae5ac93027785bc422c07d87f4a5aafaeb50b93500d9e1b5f49a5ea23465d9</field>
    <field name="keywords">ADC_CLK_DIV_4_0 ADC_CLK_DIV_4_0</field>
    <field name="text">ADCCLK input clock 4.0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PULSE_END_OF_ACQ_WIN</field>
    <field name="url">group__adc__api.html#ggacd907be60c59083e2bf41efcc36d4bafa5c34190501b6d5ab20ff71972cf84fbd</field>
    <field name="keywords">ADC_PULSE_END_OF_ACQ_WIN ADC_PULSE_END_OF_ACQ_WIN</field>
    <field name="text">Occurs at the end of the acquisition window</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PULSE_END_OF_CONV</field>
    <field name="url">group__adc__api.html#ggacd907be60c59083e2bf41efcc36d4bafa5e8213d4f17b42a398ea39e0318606e2</field>
    <field name="keywords">ADC_PULSE_END_OF_CONV ADC_PULSE_END_OF_CONV</field>
    <field name="text">Occurs at the end of the conversion</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_REFERENCE_EXTERNAL</field>
    <field name="url">group__adc__api.html#ggad33ea1f3c3db73f25e0bdf15a86be959a0ee3dc6caaacf9fe3cd3122d5cba5ac3</field>
    <field name="keywords">ADC_REFERENCE_EXTERNAL ADC_REFERENCE_EXTERNAL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_REFERENCE_INTERNAL</field>
    <field name="url">group__adc__api.html#ggad33ea1f3c3db73f25e0bdf15a86be959afbf176ce408c0621a20dd98442ac05ae</field>
    <field name="keywords">ADC_REFERENCE_INTERNAL ADC_REFERENCE_INTERNAL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN16</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a0bf3f6d7920c89513793694d67870444</field>
    <field name="keywords">ADC_CH_ADCIN16 ADC_CH_ADCIN16</field>
    <field name="text">ADCIN16 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN19</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a0c547d7955c51fc84bfeb8fd4e23ddc6</field>
    <field name="keywords">ADC_CH_ADCIN19 ADC_CH_ADCIN19</field>
    <field name="text">ADCIN19 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN8</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a0cdf45e738b440e491d63c3e18987671</field>
    <field name="keywords">ADC_CH_ADCIN8 ADC_CH_ADCIN8</field>
    <field name="text">ADCIN8 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN1</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a1eb94448700a96e3d736df1c22a9024a</field>
    <field name="keywords">ADC_CH_ADCIN1 ADC_CH_ADCIN1</field>
    <field name="text">ADCIN1 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN20</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a1f5be514575cda01b0f0ac2f5823ce0c</field>
    <field name="keywords">ADC_CH_ADCIN20 ADC_CH_ADCIN20</field>
    <field name="text">ADCIN20 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN10</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a213b49d5ae49aca4068020771fecff4b</field>
    <field name="keywords">ADC_CH_ADCIN10 ADC_CH_ADCIN10</field>
    <field name="text">ADCIN10 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN15</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a2d377b4128a4dd24e56a867f395110fc</field>
    <field name="keywords">ADC_CH_ADCIN15 ADC_CH_ADCIN15</field>
    <field name="text">ADCIN15 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN18</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a39af6e7b573f7ed2985726a914530a89</field>
    <field name="keywords">ADC_CH_ADCIN18 ADC_CH_ADCIN18</field>
    <field name="text">ADCIN18 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN7</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a4389106875b6aab9b6fe8940bfe2d922</field>
    <field name="keywords">ADC_CH_ADCIN7 ADC_CH_ADCIN7</field>
    <field name="text">ADCIN7 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN17</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a51b1dbf71808d2cf808b1e4feeb3684b</field>
    <field name="keywords">ADC_CH_ADCIN17 ADC_CH_ADCIN17</field>
    <field name="text">ADCIN17 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN11</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a5a2482d45fdda131ce65d30fdee49d9e</field>
    <field name="keywords">ADC_CH_ADCIN11 ADC_CH_ADCIN11</field>
    <field name="text">ADCIN11 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN12</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a695f52a73207a15b4e7c66184d955566</field>
    <field name="keywords">ADC_CH_ADCIN12 ADC_CH_ADCIN12</field>
    <field name="text">ADCIN12 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN21</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a88273e5111fd705ca5cd1a10442e2d81</field>
    <field name="keywords">ADC_CH_ADCIN21 ADC_CH_ADCIN21</field>
    <field name="text">ADCIN21 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN22</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a9276f8be27422aad47a184bb1f63d80a</field>
    <field name="keywords">ADC_CH_ADCIN22 ADC_CH_ADCIN22</field>
    <field name="text">ADCIN22 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN24</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a998b57980e387abf1e73fc4893d65b6a</field>
    <field name="keywords">ADC_CH_ADCIN24 ADC_CH_ADCIN24</field>
    <field name="text">ADCIN24 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN3</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6a9faf1b6f5731d3d254aef3c61f3c5c63</field>
    <field name="keywords">ADC_CH_ADCIN3 ADC_CH_ADCIN3</field>
    <field name="text">ADCIN3 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN25</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6aa50df941f03d8648f4a1a7f2f6652eb5</field>
    <field name="keywords">ADC_CH_ADCIN25 ADC_CH_ADCIN25</field>
    <field name="text">ADCIN25 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN2</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6ab8c49d498941741257b1da57aec5e3ab</field>
    <field name="keywords">ADC_CH_ADCIN2 ADC_CH_ADCIN2</field>
    <field name="text">ADCIN2 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN4</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6ac8c4e9648bae64323935a75cbbb34556</field>
    <field name="keywords">ADC_CH_ADCIN4 ADC_CH_ADCIN4</field>
    <field name="text">ADCIN4 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN23</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6acda3a3f6322dc89b62a45105a720ba8e</field>
    <field name="keywords">ADC_CH_ADCIN23 ADC_CH_ADCIN23</field>
    <field name="text">ADCIN23 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN14</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6ad57e92e33ff745530fdab094baeedded</field>
    <field name="keywords">ADC_CH_ADCIN14 ADC_CH_ADCIN14</field>
    <field name="text">ADCIN14 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN5</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6adca7353a2c8bb18c5e0e54fb91863b3c</field>
    <field name="keywords">ADC_CH_ADCIN5 ADC_CH_ADCIN5</field>
    <field name="text">ADCIN5 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN0</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6adf3fcf575362183753c35541c57214ec</field>
    <field name="keywords">ADC_CH_ADCIN0 ADC_CH_ADCIN0</field>
    <field name="text">ADCIN0 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN13</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6aea3d0820ce79591573ac87abb6834b9c</field>
    <field name="keywords">ADC_CH_ADCIN13 ADC_CH_ADCIN13</field>
    <field name="text">ADCIN13 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN6</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6aebb29c83c442e7472261e1a3c652d64f</field>
    <field name="keywords">ADC_CH_ADCIN6 ADC_CH_ADCIN6</field>
    <field name="text">ADCIN6 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_CH_ADCIN9</field>
    <field name="url">group__adc__api.html#ggad7b9fa1ae8a65e534cce7d26fa0984f6aef4dd01a0b2f4b0bf6a1ec9ce60cb88e</field>
    <field name="keywords">ADC_CH_ADCIN9 ADC_CH_ADCIN9</field>
    <field name="text">ADCIN9 is converted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PPB_OS_INT_2</field>
    <field name="url">group__adc__api.html#ggadae07564f94d93024778cb2e621781aeaa11f3a1099ed33a69feff17f86bf5c49</field>
    <field name="keywords">ADC_PPB_OS_INT_2 ADC_PPB_OS_INT_2</field>
    <field name="text">PCount/Sync generates PPB interrupt</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_PPB_OS_INT_1</field>
    <field name="url">group__adc__api.html#ggadae07564f94d93024778cb2e621781aeae5cb2607a2c7d5dd5463e7dcf5cc51f3</field>
    <field name="keywords">ADC_PPB_OS_INT_1 ADC_PPB_OS_INT_1</field>
    <field name="text">PCount generates PPB interrupt</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC13</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dea1821021d2f11ff390522e39ab01459ea</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC13 ADC_INT_TRIGGER_EOC13</field>
    <field name="text">SOC/EOC13</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC15</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dea2beda0c3545710449cf83f72d188d8d6</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC15 ADC_INT_TRIGGER_EOC15</field>
    <field name="text">SOC/EOC15</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC11</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dea2d3d9433df29fb7fa5a2ba0c0472eaed</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC11 ADC_INT_TRIGGER_EOC11</field>
    <field name="text">SOC/EOC11</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC9</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dea374338a5b0dcf9eccc5b1a4001919353</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC9 ADC_INT_TRIGGER_EOC9</field>
    <field name="text">SOC/EOC9</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC5</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dea3cbd125de68d66ae2c85248a966dd38f</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC5 ADC_INT_TRIGGER_EOC5</field>
    <field name="text">SOC/EOC5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC4</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dea5c8b209b2082703e8049a9274cfded31</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC4 ADC_INT_TRIGGER_EOC4</field>
    <field name="text">SOC/EOC4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_OSINT1</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dea6077eca8223871d0b5e08bf59dd5ac70</field>
    <field name="keywords">ADC_INT_TRIGGER_OSINT1 ADC_INT_TRIGGER_OSINT1</field>
    <field name="text">OSINT1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC8</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dea6a74db64e6456af9370382a7794388ab</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC8 ADC_INT_TRIGGER_EOC8</field>
    <field name="text">SOC/EOC8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC6</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dea7c24904e334f0fa486819ea7b784409c</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC6 ADC_INT_TRIGGER_EOC6</field>
    <field name="text">SOC/EOC6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC14</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dea85901a0f3ca55488629c7fdd2236c83e</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC14 ADC_INT_TRIGGER_EOC14</field>
    <field name="text">SOC/EOC14</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC3</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dea8fe1c5a1301d86ff3a8c0ff5df0755e1</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC3 ADC_INT_TRIGGER_EOC3</field>
    <field name="text">SOC/EOC3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC1</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407deaa0e0df9643f002c4d6c10e55c6d706e2</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC1 ADC_INT_TRIGGER_EOC1</field>
    <field name="text">SOC/EOC1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC10</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dead363cfbc6c9892cc0192d422d6ae12b7</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC10 ADC_INT_TRIGGER_EOC10</field>
    <field name="text">SOC/EOC10</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC0</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dead4acdf8ca5a203cf89c67c6d694b2571</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC0 ADC_INT_TRIGGER_EOC0</field>
    <field name="text">SOC/EOC0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC2</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407dead96d0ff5c846e3b6a1f261f9bb1bed7b</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC2 ADC_INT_TRIGGER_EOC2</field>
    <field name="text">SOC/EOC2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC7</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407deaf6f18a3623bddd8b80311cfad41c6f46</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC7 ADC_INT_TRIGGER_EOC7</field>
    <field name="text">SOC/EOC7</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ADC_INT_TRIGGER_EOC12</field>
    <field name="url">group__adc__api.html#ggae4463487eb170cf7f23699e7f01407deafc8eaf85e4437d37cf7269b0cd322d19</field>
    <field name="keywords">ADC_INT_TRIGGER_EOC12 ADC_INT_TRIGGER_EOC12</field>
    <field name="text">SOC/EOC12</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">asysctl_api</field>
    <field name="url">group__asysctl__api.html</field>
    <field name="keywords">ASysCtl</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_selectCMPLNMux</field>
    <field name="args">(uint16_t select)</field>
    <field name="url">group__asysctl__api.html#ga0026b17f22cabb6bb70f4b6764171496</field>
    <field name="keywords">ASysCtl_selectCMPLNMux ASysCtl_selectCMPLNMux</field>
    <field name="text">Select the value for individual CMPxLNMXSEL select is a combination of CMPLNMXSEL values The parameter select can be the bitwise OR of the below values ASYSCTL_CMPLNMUX_SELECT_1 ASYSCTL_CMPLNMUX_SELECT_2 ASYSCTL_CMPLNMUX_SELECT_3 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_selectCMPHPMux</field>
    <field name="args">(ASysCtl_CMPHPMuxSelect select, uint32_t value)</field>
    <field name="url">group__asysctl__api.html#ga00f788ee7ed3aacd9bd9e9ed44a1cb5a</field>
    <field name="keywords">ASysCtl_selectCMPHPMux ASysCtl_selectCMPHPMux</field>
    <field name="text">Select the value for CMPHPMXSEL select is of type ASysCtl_CMPHPMuxSelect This function is used to write a value to one mux select at a time The parameter select can be one of the following values ASYSCTL_CMPHPMUX_SELECT_1 ASYSCTL_CMPHPMUX_SELECT_2 ASYSCTL_CMPHPMUX_SELECT_3 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_lockCMPLPMux</field>
    <field name="args">(void)</field>
    <field name="url">group__asysctl__api.html#ga05adef817a1bd0c6dde99e3c85cec279</field>
    <field name="keywords">ASysCtl_lockCMPLPMux ASysCtl_lockCMPLPMux</field>
    <field name="text">Locks the CMPLPMXSEL control register None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ASysCtl_CMPLPMuxSelect</field>
    <field name="url">group__asysctl__api.html#ga16525824b37b4bd85ea3eadef0cb365f</field>
    <field name="keywords">ASysCtl_CMPLPMuxSelect ASysCtl_CMPLPMuxSelect</field>
    <field name="text">ASysCtl_CMPLPMuxSelect used for function ASysCtl_selectCMPLPMux() ASysCtl_CMPLPMuxSelect used for function ASysCtl_selectCMPLPMux()</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ASYSCTL_CMPSS3_DACL</field>
    <field name="url">group__asysctl__api.html#ga199bd7224a50a9b33c039f4fea8d4862</field>
    <field name="keywords">ASYSCTL_CMPSS3_DACL ASYSCTL_CMPSS3_DACL</field>
    <field name="text">CMPSS3.DACL CMPSS3.DACL</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_selectCMPLPMux</field>
    <field name="args">(ASysCtl_CMPLPMuxSelect select, uint32_t value)</field>
    <field name="url">group__asysctl__api.html#ga203e690fc3f07ce2ea737ae3ce4eacb8</field>
    <field name="keywords">ASysCtl_selectCMPLPMux ASysCtl_selectCMPLPMux</field>
    <field name="text">Select the value for CMPLPMXSEL select is of type ASysCtl_CMPLPMuxSelect This function is used to write a value to one mux select at a time The parameter select can be one of the following values ASYSCTL_CMPLPMUX_SELECT_1 ASYSCTL_CMPLPMUX_SELECT_2 ASYSCTL_CMPLPMUX_SELECT_3 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_lockVMON</field>
    <field name="args">(void)</field>
    <field name="url">group__asysctl__api.html#ga2352fb42ecc446474ca33ec0e5fdf7d7</field>
    <field name="keywords">ASysCtl_lockVMON ASysCtl_lockVMON</field>
    <field name="text">Locks the voltage monitor control register None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ASYSCTL_CMPLNMUX_SELECT_1</field>
    <field name="url">group__asysctl__api.html#ga2869b3e6e1529e012288f1a535bd8886</field>
    <field name="keywords">ASYSCTL_CMPLNMUX_SELECT_1 ASYSCTL_CMPLNMUX_SELECT_1</field>
    <field name="text">CMPLNMUX select 1 CMPLNMUX select 1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_enableADCDACLoopback</field>
    <field name="args">(uint32_t config)</field>
    <field name="url">group__asysctl__api.html#ga2ecd0767c338c6177cce4fc6c6727392</field>
    <field name="keywords">ASysCtl_enableADCDACLoopback ASysCtl_enableADCDACLoopback</field>
    <field name="text">Enable loopback from DAC to ADCs config can be bitwise OR of the following values ASYSCTL_ADCDACLOOPBACK_ENLB2ADCA None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_disableGPIOInputBuffer</field>
    <field name="args">(uint32_t pin)</field>
    <field name="url">group__asysctl__api.html#ga355f03bd62f56ec5eae40e8f6cbfd92e</field>
    <field name="keywords">ASysCtl_disableGPIOInputBuffer ASysCtl_disableGPIOInputBuffer</field>
    <field name="text">Disable GPIO Input buffer INENA control pin can be 0 2 3 2 5 3 1 4 6 or 1 0 3 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_lockVREG</field>
    <field name="args">(void)</field>
    <field name="url">group__asysctl__api.html#ga3c525d5f7619b736ebf31ad126648dc4</field>
    <field name="keywords">ASysCtl_lockVREG ASysCtl_lockVREG</field>
    <field name="text">Locks the VREG control register None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_lockCMPSSCTL</field>
    <field name="args">(void)</field>
    <field name="url">group__asysctl__api.html#ga54c2f6cd978a3179f3d89b1a70071eca</field>
    <field name="keywords">ASysCtl_lockCMPSSCTL ASysCtl_lockCMPSSCTL</field>
    <field name="text">Locks the CMPSSCTL register None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ASysCtl_TestSelect</field>
    <field name="url">group__asysctl__api.html#ga571a66eaee545a31aaa278ef82ab7a8f</field>
    <field name="keywords">ASysCtl_TestSelect ASysCtl_TestSelect</field>
    <field name="text">ASysCtl_TestSelect used for function ASysCtl_selectInternalTestNode() ASysCtl_TestSelect used for function ASysCtl_selectInternalTestNode()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_enableGPIOInputBuffer</field>
    <field name="args">(uint32_t pin)</field>
    <field name="url">group__asysctl__api.html#ga5a0e882cddbe0f8ee036535fface0f70</field>
    <field name="keywords">ASysCtl_enableGPIOInputBuffer ASysCtl_enableGPIOInputBuffer</field>
    <field name="text">Enable GPIO Input buffer INENA control pin can be 0 2 3 2 5 3 1 4 6 or 1 0 3 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_selectInternalTestNode</field>
    <field name="args">(ASysCtl_TestSelect testSelect)</field>
    <field name="url">group__asysctl__api.html#ga5d6f9c27178256978abed05226d8cd92</field>
    <field name="keywords">ASysCtl_selectInternalTestNode ASysCtl_selectInternalTestNode</field>
    <field name="text">Select internal test node for ADC testSelect is internal node to come out on ADC The testSelect is the desired internal test node Valid values can be refered from the enum ASysCtl_TestSelect None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_setAnalogReferenceExternal</field>
    <field name="args">(uint32_t reference)</field>
    <field name="url">group__asysctl__api.html#ga6058c3ce65b31069f2a1368e8a999f62</field>
    <field name="keywords">ASysCtl_setAnalogReferenceExternal ASysCtl_setAnalogReferenceExternal</field>
    <field name="text">Set the analog voltage reference selection to external reference is the analog reference The parameter reference can be a combination of the following values ASYSCTL_VREFHI Unlike other F28x devices we need to set REFCONFIGA register to configure the analog voltage reference None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ASYSCTL_CMPHNMUX_SELECT_3</field>
    <field name="url">group__asysctl__api.html#ga68ecccb7c85bd0452fb1eed0ffbc5992</field>
    <field name="keywords">ASYSCTL_CMPHNMUX_SELECT_3 ASYSCTL_CMPHNMUX_SELECT_3</field>
    <field name="text">CMPHNMUX select 3 CMPHNMUX select 3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_selectCMPHNMux</field>
    <field name="args">(uint16_t select)</field>
    <field name="url">group__asysctl__api.html#ga77d8f427f280db5c300664d859d73356</field>
    <field name="keywords">ASysCtl_selectCMPHNMux ASysCtl_selectCMPHNMux</field>
    <field name="text">Select the value for CMPHNMXSEL select is a combination of CMPHNMXSEL values The parameter select can be a bitwise OR of the below values ASYSCTL_CMPHNMUX_SELECT_1 ASYSCTL_CMPHNMUX_SELECT_2 ASYSCTL_CMPHNMUX_SELECT_3 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_setAnalogReference2P5</field>
    <field name="args">(uint16_t reference)</field>
    <field name="url">group__asysctl__api.html#ga79bf46ed47ada6accdc48bb6888fbc32</field>
    <field name="keywords">ASysCtl_setAnalogReference2P5 ASysCtl_setAnalogReference2P5</field>
    <field name="text">Set the internal analog voltage reference selection to 2.5V reference is the analog reference The parameter reference can be a combination of the following values ASYSCTL_VREFHI None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ASysCtl_CMPHPMuxSelect</field>
    <field name="url">group__asysctl__api.html#ga7c8245cb4286a7cd88c0ed7df63dc257</field>
    <field name="keywords">ASysCtl_CMPHPMuxSelect ASysCtl_CMPHPMuxSelect</field>
    <field name="text">ASysCtl_CMPHPMuxSelect used for function ASysCtl_selectCMPHPMux() ASysCtl_CMPHPMuxSelect used for function ASysCtl_selectCMPHPMux()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_lockTemperatureSensor</field>
    <field name="args">(void)</field>
    <field name="url">group__asysctl__api.html#ga8dbb23abf5123ba2a0e9bfea18c4d20c</field>
    <field name="keywords">ASysCtl_lockTemperatureSensor ASysCtl_lockTemperatureSensor</field>
    <field name="text">Locks the temperature sensor control register None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_disableCMPSSExternalDAC</field>
    <field name="args">(uint32_t select)</field>
    <field name="url">group__asysctl__api.html#ga8fd216cc8e6571696f78f61dcc619d3f</field>
    <field name="keywords">ASysCtl_disableCMPSSExternalDAC ASysCtl_disableCMPSSExternalDAC</field>
    <field name="text">Disbales the CMPSSx.DACL output to be routed to a pin select is CMPSS instance This function enables CMPSSx.COMPL and the associated DAC will act as reference for comparator The parameter select can be OR of the following values ASYSCTL_CMPSS3_DACL None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_enableTemperatureSensor</field>
    <field name="args">(void)</field>
    <field name="url">group__asysctl__api.html#ga92f70bd2b29e31f324d24e2b53a22924</field>
    <field name="keywords">ASysCtl_enableTemperatureSensor ASysCtl_enableTemperatureSensor</field>
    <field name="text">Enable temperature sensor This function enables the temperature sensor output to the ADC None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_selectCMPHNMuxValue</field>
    <field name="args">(uint16_t select, uint16_t value)</field>
    <field name="url">group__asysctl__api.html#ga944f02a6cff3fff1653a0ff65c6b7b36</field>
    <field name="keywords">ASysCtl_selectCMPHNMuxValue ASysCtl_selectCMPHNMuxValue</field>
    <field name="text">Select the value for individual CMPxHNMXSEL select is the CMPxHNMXSEL to be set value is 0 or 1 The parameter select can be one of the below values ASYSCTL_CMPHNMUX_SELECT_1 ASYSCTL_CMPHNMUX_SELECT_2 ASYSCTL_CMPHNMUX_SELECT_3 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_setAnalogReferenceInternal</field>
    <field name="args">(uint32_t reference)</field>
    <field name="url">group__asysctl__api.html#ga9af11dcc9b005e7083e28a7933b7e6c5</field>
    <field name="keywords">ASysCtl_setAnalogReferenceInternal ASysCtl_setAnalogReferenceInternal</field>
    <field name="text">Set the analog voltage reference selection to internal reference is the analog reference The parameter reference can be a combination of the following values ASYSCTL_VREFHI Unlike other F28x devices we need to set REFCONFIGA register to configure the analog voltage reference None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_getExtROscStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__asysctl__api.html#ga9da3e4125c325c2b44a4fca65279eb13</field>
    <field name="keywords">ASysCtl_getExtROscStatus ASysCtl_getExtROscStatus</field>
    <field name="text">Gets the Ext-R OSC Status Ext-R OSC Status</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_selectCMPLNMuxValue</field>
    <field name="args">(uint16_t select, uint16_t value)</field>
    <field name="url">group__asysctl__api.html#gaa3ec63c895b201006ce8b943c40dec53</field>
    <field name="keywords">ASysCtl_selectCMPLNMuxValue ASysCtl_selectCMPLNMuxValue</field>
    <field name="text">Select the value for CMPLNMXSEL select is the CMPxHNMXSEL to be set value is 0 or 1 The parameter select can be one of the below values ASYSCTL_CMPLNMUX_SELECT_1 ASYSCTL_CMPLNMUX_SELECT_2 ASYSCTL_CMPLNMUX_SELECT_3 None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ASYSCTL_VREFHI</field>
    <field name="url">group__asysctl__api.html#gaabfcece3e39a369b716d41debf1fd6ed</field>
    <field name="keywords">ASYSCTL_VREFHI ASYSCTL_VREFHI</field>
    <field name="text">VREFHI VREFHI</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ASYSCTL_CMPHNMUX_SELECT_2</field>
    <field name="url">group__asysctl__api.html#gaaffdc6b3cf735776931c757801eea53a</field>
    <field name="keywords">ASYSCTL_CMPHNMUX_SELECT_2 ASYSCTL_CMPHNMUX_SELECT_2</field>
    <field name="text">CMPHNMUX select 2 CMPHNMUX select 2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_disableADCDACLoopback</field>
    <field name="args">(uint32_t config)</field>
    <field name="url">group__asysctl__api.html#gab850f059b68b7b347cefab0f7ab07121</field>
    <field name="keywords">ASysCtl_disableADCDACLoopback ASysCtl_disableADCDACLoopback</field>
    <field name="text">Disable loopback from DAC to ADCs config can be bitwise OR of the following values ASYSCTL_ADCDACLOOPBACK_ENLB2ADCA None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ASYSCTL_CMPHNMUX_SELECT_1</field>
    <field name="url">group__asysctl__api.html#gabe866a55244f154e26c117b0c2d703fc</field>
    <field name="keywords">ASYSCTL_CMPHNMUX_SELECT_1 ASYSCTL_CMPHNMUX_SELECT_1</field>
    <field name="text">CMPHNMUX select 1 CMPHNMUX select 1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_lockANAREF</field>
    <field name="args">(void)</field>
    <field name="url">group__asysctl__api.html#gac32a8fdd7cd96ca8922ff015dd8d2aee</field>
    <field name="keywords">ASysCtl_lockANAREF ASysCtl_lockANAREF</field>
    <field name="text">Locks the analog reference control register None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_lockCMPHPMux</field>
    <field name="args">(void)</field>
    <field name="url">group__asysctl__api.html#gac730e4944f45c6865e33977830b457d7</field>
    <field name="keywords">ASysCtl_lockCMPHPMux ASysCtl_lockCMPHPMux</field>
    <field name="text">Locks the CMPHPMXSEL control register None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ASYSCTL_CMPLNMUX_SELECT_3</field>
    <field name="url">group__asysctl__api.html#gac73d6fbe07a844c813b725ad984b293a</field>
    <field name="keywords">ASYSCTL_CMPLNMUX_SELECT_3 ASYSCTL_CMPLNMUX_SELECT_3</field>
    <field name="text">CMPLNMUX select 3 CMPLNMUX select 3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_enableCMPSSExternalDAC</field>
    <field name="args">(uint32_t select)</field>
    <field name="url">group__asysctl__api.html#gac9602d818a953717059902558a82bb80</field>
    <field name="keywords">ASysCtl_enableCMPSSExternalDAC ASysCtl_enableCMPSSExternalDAC</field>
    <field name="text">Enables the CMPSSx.DACL output to be routed to a pin select is CMPSS instance This function disables CMPSSx.COMPL and the associated DAC will act as a general purpose DAC with 1 1 bit resolution The parameter select can be OR of the following values ASYSCTL_CMPSS3_DACL In this case all other CMPSS module functionality is not useable including the high DAC both comparators ramp generation and the digital filters None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_lockCMPHNMux</field>
    <field name="args">(void)</field>
    <field name="url">group__asysctl__api.html#gad95ddae2b2afd6792e675538e5c4d39a</field>
    <field name="keywords">ASysCtl_lockCMPHNMux ASysCtl_lockCMPHNMux</field>
    <field name="text">Locks the CMPHNMXSEL control register None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ASYSCTL_CMPLNMUX_SELECT_2</field>
    <field name="url">group__asysctl__api.html#gad99bfa7f9929aa68a53ecd2526df9b6f</field>
    <field name="keywords">ASYSCTL_CMPLNMUX_SELECT_2 ASYSCTL_CMPLNMUX_SELECT_2</field>
    <field name="text">CMPLNMUX select 2 CMPLNMUX select 2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_lockCMPLNMux</field>
    <field name="args">(void)</field>
    <field name="url">group__asysctl__api.html#gaee4dd5dcb08401f50683296a6f00d2f4</field>
    <field name="keywords">ASysCtl_lockCMPLNMux ASysCtl_lockCMPLNMux</field>
    <field name="text">Locks the CMPLNMXSEL control register None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_setAnalogReference1P65</field>
    <field name="args">(uint16_t reference)</field>
    <field name="url">group__asysctl__api.html#gaefab98468690a4e6af84ca05b350ad5a</field>
    <field name="keywords">ASysCtl_setAnalogReference1P65 ASysCtl_setAnalogReference1P65</field>
    <field name="text">Set the internal analog voltage reference selection to 1.65V reference is the analog reference The parameter reference can be a combination of the following values ASYSCTL_VREFHI None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ASysCtl_disableTemperatureSensor</field>
    <field name="args">(void)</field>
    <field name="url">group__asysctl__api.html#gaf050ff326dc1c7de57ec07b6262fa9c0</field>
    <field name="keywords">ASysCtl_disableTemperatureSensor ASysCtl_disableTemperatureSensor</field>
    <field name="text">Disable temperature sensor This function disables the temperature sensor output to the ADC None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ASYSCTL_EXTR_ENABLE_COMPLETE</field>
    <field name="url">group__asysctl__api.html#gaf05127d5f12634659f3d5c64de5b506d</field>
    <field name="keywords">ASYSCTL_EXTR_ENABLE_COMPLETE ASYSCTL_EXTR_ENABLE_COMPLETE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_CMPLPMUX_SELECT_1</field>
    <field name="url">group__asysctl__api.html#gga16525824b37b4bd85ea3eadef0cb365fa29de04b3dd5296ab3a45bc7c0dbb7a12</field>
    <field name="keywords">ASYSCTL_CMPLPMUX_SELECT_1 ASYSCTL_CMPLPMUX_SELECT_1</field>
    <field name="text">CMPLPMUX select 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_CMPLPMUX_SELECT_2</field>
    <field name="url">group__asysctl__api.html#gga16525824b37b4bd85ea3eadef0cb365fa812d75dc36b9a25e75935b31d1685dd6</field>
    <field name="keywords">ASYSCTL_CMPLPMUX_SELECT_2 ASYSCTL_CMPLPMUX_SELECT_2</field>
    <field name="text">CMPLPMUX select 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_CMPLPMUX_SELECT_3</field>
    <field name="url">group__asysctl__api.html#gga16525824b37b4bd85ea3eadef0cb365fabf53ba8d38d4fd83ddf314eac230f538</field>
    <field name="keywords">ASYSCTL_CMPLPMUX_SELECT_3 ASYSCTL_CMPLPMUX_SELECT_3</field>
    <field name="text">CMPLPMUX select 3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_VSSA</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fa0ab94de98382fe4626f2ca7847fd0fb8</field>
    <field name="keywords">ASYSCTL_TEST_NODE_VSSA ASYSCTL_TEST_NODE_VSSA</field>
    <field name="text">VSSA Analog ground pin</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_CDAC1H</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fa10445183881c9b0e359260b83fce8daa</field>
    <field name="keywords">ASYSCTL_TEST_NODE_CDAC1H ASYSCTL_TEST_NODE_CDAC1H</field>
    <field name="text">CMPSS1 High DAC output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_VREFLOAC</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fa2eb5c67352856ebbb7d607602a9e0c48</field>
    <field name="keywords">ASYSCTL_TEST_NODE_VREFLOAC ASYSCTL_TEST_NODE_VREFLOAC</field>
    <field name="text">VREFLOAC pin voltage</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_CDAC2L</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fa3eb1f6bb8bd404f70347b35b8b08f7ec</field>
    <field name="keywords">ASYSCTL_TEST_NODE_CDAC2L ASYSCTL_TEST_NODE_CDAC2L</field>
    <field name="text">CMPSS2 Low DAC output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_PGA1</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fa582d495fc0418214321cd9d987162fbf</field>
    <field name="keywords">ASYSCTL_TEST_NODE_PGA1 ASYSCTL_TEST_NODE_PGA1</field>
    <field name="text">PGA1 output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_CDAC3L</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fa5f28b373688e7d30b4d6897a07fe210a</field>
    <field name="keywords">ASYSCTL_TEST_NODE_CDAC3L ASYSCTL_TEST_NODE_CDAC3L</field>
    <field name="text">CMPSS3 Low DAC output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_CDAC4H</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fa6ac13a8fc808c5f420ef068091ae87a0</field>
    <field name="keywords">ASYSCTL_TEST_NODE_CDAC4H ASYSCTL_TEST_NODE_CDAC4H</field>
    <field name="text">CMPSS4 High DAC output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_CDAC2H</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fa6d41bf646bc59ca2503f6a62cff9684b</field>
    <field name="keywords">ASYSCTL_TEST_NODE_CDAC2H ASYSCTL_TEST_NODE_CDAC2H</field>
    <field name="text">CMPSS2 High DAC output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_ADC</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fa754a89df0a7637822e3980b152250b48</field>
    <field name="keywords">ASYSCTL_TEST_NODE_ADC ASYSCTL_TEST_NODE_ADC</field>
    <field name="text">ADC output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_CDAC1L</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fa8615b4088532c4f95e316a97a741bc47</field>
    <field name="keywords">ASYSCTL_TEST_NODE_CDAC1L ASYSCTL_TEST_NODE_CDAC1L</field>
    <field name="text">CMPSS1 Low DAC output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_CDAC4L</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fa9279a6b14741e747995b43912237c802</field>
    <field name="keywords">ASYSCTL_TEST_NODE_CDAC4L ASYSCTL_TEST_NODE_CDAC4L</field>
    <field name="text">CMPSS4 Low DAC output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_COMP_DAC_BUF</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8faa5ea0e4d9461f204dd9289674245d8e1</field>
    <field name="keywords">ASYSCTL_TEST_NODE_COMP_DAC_BUF ASYSCTL_TEST_NODE_COMP_DAC_BUF</field>
    <field name="text">COMP DAC Buffer output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_CMPSS1</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fab0630d3b9758b091d064612cc0fe4f7c</field>
    <field name="keywords">ASYSCTL_TEST_NODE_CMPSS1 ASYSCTL_TEST_NODE_CMPSS1</field>
    <field name="text">CMPSS1 output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_CDAC3H</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fac9d31817ee9bd83764bdb2be6d520441</field>
    <field name="keywords">ASYSCTL_TEST_NODE_CDAC3H ASYSCTL_TEST_NODE_CDAC3H</field>
    <field name="text">CMPSS3 High DAC output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_NO_CONN</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8facf5cc5f2efc819541d472f9929e695f9</field>
    <field name="keywords">ASYSCTL_TEST_NODE_NO_CONN ASYSCTL_TEST_NODE_NO_CONN</field>
    <field name="text">No Internal Connection</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_VDDA</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fae4c221fd03fad74bdbddc54acc81ac1e</field>
    <field name="keywords">ASYSCTL_TEST_NODE_VDDA ASYSCTL_TEST_NODE_VDDA</field>
    <field name="text">VDDA voltage</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_VDDCORE</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fae7898409426fb05c9f7ff59c6ea667b8</field>
    <field name="keywords">ASYSCTL_TEST_NODE_VDDCORE ASYSCTL_TEST_NODE_VDDCORE</field>
    <field name="text">Core VDD 1.2V voltage</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_TEST_NODE_ADCCIO</field>
    <field name="url">group__asysctl__api.html#gga571a66eaee545a31aaa278ef82ab7a8fafb0b8c1c71672b5c8837965636b688cb</field>
    <field name="keywords">ASYSCTL_TEST_NODE_ADCCIO ASYSCTL_TEST_NODE_ADCCIO</field>
    <field name="text">ADCCIO output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_CMPHPMUX_SELECT_3</field>
    <field name="url">group__asysctl__api.html#gga7c8245cb4286a7cd88c0ed7df63dc257a6700dc420a584a0ca92d7f34f6616cc6</field>
    <field name="keywords">ASYSCTL_CMPHPMUX_SELECT_3 ASYSCTL_CMPHPMUX_SELECT_3</field>
    <field name="text">CMPHPMUX select 3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_CMPHPMUX_SELECT_2</field>
    <field name="url">group__asysctl__api.html#gga7c8245cb4286a7cd88c0ed7df63dc257ad34a4cb4f864fec5693b943d0fc25c29</field>
    <field name="keywords">ASYSCTL_CMPHPMUX_SELECT_2 ASYSCTL_CMPHPMUX_SELECT_2</field>
    <field name="text">CMPHPMUX select 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ASYSCTL_CMPHPMUX_SELECT_1</field>
    <field name="url">group__asysctl__api.html#gga7c8245cb4286a7cd88c0ed7df63dc257af5d5c16cb14fc70843711c196a31afab</field>
    <field name="keywords">ASYSCTL_CMPHPMUX_SELECT_1 ASYSCTL_CMPHPMUX_SELECT_1</field>
    <field name="text">CMPHPMUX select 1</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">cputimer_api</field>
    <field name="url">group__cputimer__api.html</field>
    <field name="keywords">CPUTimer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_reloadTimerCounter</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__cputimer__api.html#ga06a8d5536106ea72ce195c8fc72c93a4</field>
    <field name="keywords">CPUTimer_reloadTimerCounter CPUTimer_reloadTimerCounter</field>
    <field name="text">Reloads CPU timer counter base is the base address of the timer module This function reloads the CPU timer counter with the values contained in the CPU timer period register None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_enableInterrupt</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__cputimer__api.html#ga0a7c39ff546820eb43035b572ecc5a7c</field>
    <field name="keywords">CPUTimer_enableInterrupt CPUTimer_enableInterrupt</field>
    <field name="text">Enables CPU timer interrupt base is the base address of the timer module This function enables the CPU timer interrupt None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">CPUTimer_EmulationMode</field>
    <field name="url">group__cputimer__api.html#ga108fe1191ffed926840ac00928024644</field>
    <field name="keywords">CPUTimer_EmulationMode CPUTimer_EmulationMode</field>
    <field name="text">Values that can be passed to CPUTimer_setEmulationMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">CPUTimer_ClockSource</field>
    <field name="url">group__cputimer__api.html#ga214aff735b0acf172ffe29ebe591fe61</field>
    <field name="keywords">CPUTimer_ClockSource CPUTimer_ClockSource</field>
    <field name="text">The following are values that can be passed to CPUTimer_selectClockSource() as the source parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_setPeriod</field>
    <field name="args">(uint32_t base, uint32_t periodCount)</field>
    <field name="url">group__cputimer__api.html#ga246fa1d4f1f3f4de27bf856d0dc95227</field>
    <field name="keywords">CPUTimer_setPeriod CPUTimer_setPeriod</field>
    <field name="text">Sets CPU timer period base is the base address of the timer module periodCount is the CPU timer period count This function sets the CPU timer period count None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_disableInterrupt</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__cputimer__api.html#ga58192d248e0d0de4054dd5bde76954b8</field>
    <field name="keywords">CPUTimer_disableInterrupt CPUTimer_disableInterrupt</field>
    <field name="text">Disables CPU timer interrupt base is the base address of the timer module This function disables the CPU timer interrupt None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_getTimerCount</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__cputimer__api.html#ga5ec7266a6de00db24c8d1d1a18be3dd1</field>
    <field name="keywords">CPUTimer_getTimerCount CPUTimer_getTimerCount</field>
    <field name="text">Returns the current CPU timer counter value base is the base address of the timer module This function returns the current CPU timer counter value Returns the current CPU timer count value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_resumeTimer</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__cputimer__api.html#ga62a7963fafabc7fbb0452253617c4016</field>
    <field name="keywords">CPUTimer_resumeTimer CPUTimer_resumeTimer</field>
    <field name="text">Starts(restarts) CPU timer base is the base address of the timer module This function starts restarts the CPU timer Note This function doesn t reset the timer counter None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_startTimer</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__cputimer__api.html#ga7b48c39c1c03126fc5800d11f5c994bd</field>
    <field name="keywords">CPUTimer_startTimer CPUTimer_startTimer</field>
    <field name="text">Starts(restarts) CPU timer base is the base address of the timer module This function starts restarts the CPU timer Note This function reloads the timer counter None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_setEmulationMode</field>
    <field name="args">(uint32_t base, CPUTimer_EmulationMode mode)</field>
    <field name="url">group__cputimer__api.html#ga8e9243f5ea3917004c5b3205a2a72894</field>
    <field name="keywords">CPUTimer_setEmulationMode CPUTimer_setEmulationMode</field>
    <field name="text">Sets Emulation mode for CPU timer base is the base address of the timer module mode is the emulation mode of the timer This function sets the behaviour of CPU timer during emulation Valid values mode are CPUTIMER_EMULATIONMODE_STOPAFTERNEXTDECREMENT CPUTIMER_EMULATIONMODE_STOPATZERO and CPUTIMER_EMULATIONMODE_RUNFREE None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_selectClockSource</field>
    <field name="args">(uint32_t base, CPUTimer_ClockSource source, CPUTimer_Prescaler prescaler)</field>
    <field name="url">group__cputimer__api.html#ga956f3be8d7c0e2883cc9912fed947fee</field>
    <field name="keywords">CPUTimer_selectClockSource CPUTimer_selectClockSource</field>
    <field name="text">Select CPU Timer 2 Clock Source and Prescaler base is the base address of the timer module source is the clock source to use for CPU Timer 2 prescaler is the value that configures the selected clock source relative to the system clock This function selects the specified clock source and prescaler value for the CPU timer CPU timer 2 only The source parameter can be any one of the following CPUTIMER_CLOCK_SOURCE_SYS System Clock CPUTIMER_CLOCK_SOURCE_WROSCDIV8 WROSC Wide Range Oscillator output clock after the fixed BY8 divider CPUTIMER_CLOCK_SOURCE_SYSOSCDIV4 SYSOSC output clock after the fixed BY4 divider CPUTIMER_CLOCK_SOURCE_XTAL External Clock The prescaler parameter can be any one of the following CPUTIMER_CLOCK_PRESCALER_1 Prescaler value of 1 CPUTIMER_CLOCK_PRESCALER_2 Prescaler value of 2 CPUTIMER_CLOCK_PRESCALER_4 Prescaler value of 4 CPUTIMER_CLOCK_PRESCALER_8 Prescaler value of 8 CPUTIMER_CLOCK_PRESCALER_16 Prescaler value of 1 6 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_getTimerOverflowStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__cputimer__api.html#gab3614f19c2b8f346b3b75979b3c4433d</field>
    <field name="keywords">CPUTimer_getTimerOverflowStatus CPUTimer_getTimerOverflowStatus</field>
    <field name="text">Return the CPU timer overflow status base is the base address of the timer module This function returns the CPU timer overflow status Returns true if the CPU timer has overflowed false if not</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_stopTimer</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__cputimer__api.html#gab7d3df1344d594548b0dda9455ba9dae</field>
    <field name="keywords">CPUTimer_stopTimer CPUTimer_stopTimer</field>
    <field name="text">Stops CPU timer base is the base address of the timer module This function stops the CPU timer None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_setPreScaler</field>
    <field name="args">(uint32_t base, uint16_t prescaler)</field>
    <field name="url">group__cputimer__api.html#gae2b419bee3c160e639cf41697e88362e</field>
    <field name="keywords">CPUTimer_setPreScaler CPUTimer_setPreScaler</field>
    <field name="text">Set CPU timer pre-scaler value base is the base address of the timer module prescaler is the CPU timer pre-scaler value This function sets the pre-scaler value for the CPU timer For every value of prescaler 1 the CPU timer counter decrements by 1 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">CPUTimer_clearOverflowFlag</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__cputimer__api.html#gae3b2e219398e21ab7dd29787f035ff59</field>
    <field name="keywords">CPUTimer_clearOverflowFlag CPUTimer_clearOverflowFlag</field>
    <field name="text">Clears CPU timer overflow flag base is the base address of the timer module This function clears the CPU timer overflow flag None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">CPUTimer_Prescaler</field>
    <field name="url">group__cputimer__api.html#gafa70b7d5a2a5b33b6bd56e84ff1cec4d</field>
    <field name="keywords">CPUTimer_Prescaler CPUTimer_Prescaler</field>
    <field name="text">The following are values that can be passed to CPUTimer_selectClockSource() as the prescaler parameter</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTIMER_EMULATIONMODE_STOPATZERO</field>
    <field name="url">group__cputimer__api.html#gga108fe1191ffed926840ac00928024644a240bcacad635eddb1aaa852c5f7e8397</field>
    <field name="keywords">CPUTIMER_EMULATIONMODE_STOPATZERO CPUTIMER_EMULATIONMODE_STOPATZERO</field>
    <field name="text">Denotes that the timer will stop when it reaches zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTIMER_EMULATIONMODE_RUNFREE</field>
    <field name="url">group__cputimer__api.html#gga108fe1191ffed926840ac00928024644a7bdf30431f93bfaa5d277aab530c587c</field>
    <field name="keywords">CPUTIMER_EMULATIONMODE_RUNFREE CPUTIMER_EMULATIONMODE_RUNFREE</field>
    <field name="text">Denotes that the timer will run free</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTIMER_EMULATIONMODE_STOPAFTERNEXTDECREMENT</field>
    <field name="url">group__cputimer__api.html#gga108fe1191ffed926840ac00928024644a9e8b546a384b59d2095cd666961dedac</field>
    <field name="keywords">CPUTIMER_EMULATIONMODE_STOPAFTERNEXTDECREMENT CPUTIMER_EMULATIONMODE_STOPAFTERNEXTDECREMENT</field>
    <field name="text">Denotes that the timer will stop after the next decrement</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTIMER_CLOCK_SOURCE_SYS</field>
    <field name="url">group__cputimer__api.html#gga214aff735b0acf172ffe29ebe591fe61a560d4a2c75937be8db9a1d70b97982d9</field>
    <field name="keywords">CPUTIMER_CLOCK_SOURCE_SYS CPUTIMER_CLOCK_SOURCE_SYS</field>
    <field name="text">System Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTIMER_CLOCK_SOURCE_WROSCDIV8</field>
    <field name="url">group__cputimer__api.html#gga214aff735b0acf172ffe29ebe591fe61a87b6d6ee9ca23a3b61d16dff784e2abe</field>
    <field name="keywords">CPUTIMER_CLOCK_SOURCE_WROSCDIV8 CPUTIMER_CLOCK_SOURCE_WROSCDIV8</field>
    <field name="text">WROSC Wide Range Oscillator output clock after the fixed BY8 divider</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTIMER_CLOCK_SOURCE_XTAL</field>
    <field name="url">group__cputimer__api.html#gga214aff735b0acf172ffe29ebe591fe61a92cf2e75fbd905b71f4df1f809eca0fa</field>
    <field name="keywords">CPUTIMER_CLOCK_SOURCE_XTAL CPUTIMER_CLOCK_SOURCE_XTAL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTIMER_CLOCK_SOURCE_SYSOSCDIV4</field>
    <field name="url">group__cputimer__api.html#gga214aff735b0acf172ffe29ebe591fe61ab3a927a8d0d128ea761cbe9d10b4aad7</field>
    <field name="keywords">CPUTIMER_CLOCK_SOURCE_SYSOSCDIV4 CPUTIMER_CLOCK_SOURCE_SYSOSCDIV4</field>
    <field name="text">SYSOSC output clock after the fixed BY4 divider</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTIMER_CLOCK_PRESCALER_1</field>
    <field name="url">group__cputimer__api.html#ggafa70b7d5a2a5b33b6bd56e84ff1cec4da33340a58dd0e4e4cbde4fba33e0de7b6</field>
    <field name="keywords">CPUTIMER_CLOCK_PRESCALER_1 CPUTIMER_CLOCK_PRESCALER_1</field>
    <field name="text">Prescaler value of 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTIMER_CLOCK_PRESCALER_4</field>
    <field name="url">group__cputimer__api.html#ggafa70b7d5a2a5b33b6bd56e84ff1cec4da585b094e951b2761735f0e6f20f12de7</field>
    <field name="keywords">CPUTIMER_CLOCK_PRESCALER_4 CPUTIMER_CLOCK_PRESCALER_4</field>
    <field name="text">Prescaler value of 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTIMER_CLOCK_PRESCALER_16</field>
    <field name="url">group__cputimer__api.html#ggafa70b7d5a2a5b33b6bd56e84ff1cec4da9cf1593619914c85d583a6e58ec58614</field>
    <field name="keywords">CPUTIMER_CLOCK_PRESCALER_16 CPUTIMER_CLOCK_PRESCALER_16</field>
    <field name="text">Prescaler value of 1 6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTIMER_CLOCK_PRESCALER_2</field>
    <field name="url">group__cputimer__api.html#ggafa70b7d5a2a5b33b6bd56e84ff1cec4dad5a1ddb1f79aa8d56cec23324333dd49</field>
    <field name="keywords">CPUTIMER_CLOCK_PRESCALER_2 CPUTIMER_CLOCK_PRESCALER_2</field>
    <field name="text">Prescaler value of 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">CPUTIMER_CLOCK_PRESCALER_8</field>
    <field name="url">group__cputimer__api.html#ggafa70b7d5a2a5b33b6bd56e84ff1cec4dae82ed2a72019c42716c153e592368021</field>
    <field name="keywords">CPUTIMER_CLOCK_PRESCALER_8 CPUTIMER_CLOCK_PRESCALER_8</field>
    <field name="text">Prescaler value of 8</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">dcc_api</field>
    <field name="url">group__dcc__api.html</field>
    <field name="keywords">DCC</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_getCounter0Value</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#ga1530f9ab9d44ed0589fb8bb996ad6090</field>
    <field name="keywords">DCC_getCounter0Value DCC_getCounter0Value</field>
    <field name="text">Get Current Value of Counter 0 base is the DCC module base address This function gets current value of counter 0 Reads of the counter value may not be exact since the read operation is synchronized to the vbus clock Returns the current value of counter 0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_setCounter1ClkSource</field>
    <field name="args">(uint32_t base, DCC_Count1ClockSource source)</field>
    <field name="url">group__dcc__api.html#ga160cec37375b01f3dc09a1396dc071eb</field>
    <field name="keywords">DCC_setCounter1ClkSource DCC_setCounter1ClkSource</field>
    <field name="text">Set Counter 1 Clock Source base is the DCC module base address source is the selected clock source for counter 1 This function sets the counter 1 clock source None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_setCounter0ClkSource</field>
    <field name="args">(uint32_t base, DCC_Count0ClockSource source)</field>
    <field name="url">group__dcc__api.html#ga1b2acdeb98d5ce042cd8e867276ec59e</field>
    <field name="keywords">DCC_setCounter0ClkSource DCC_setCounter0ClkSource</field>
    <field name="text">Set Counter 0 Clock Source base is the DCC module base address source is the selected clock source for counter 0 This function sets the counter 0 clock source None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCC_SEED_CNT_MASK</field>
    <field name="url">group__dcc__api.html#ga1c684be5c2839b57917a3a36e00dd64e</field>
    <field name="keywords">DCC_SEED_CNT_MASK DCC_SEED_CNT_MASK</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCC_REG_WORD_MASK</field>
    <field name="url">group__dcc__api.html#ga2dc51e817daa922e4289a063eeea429e</field>
    <field name="keywords">DCC_REG_WORD_MASK DCC_REG_WORD_MASK</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_getCounter1ClkSource</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#ga31ada622995e50157b2d0ddd2ee05c1d</field>
    <field name="keywords">DCC_getCounter1ClkSource DCC_getCounter1ClkSource</field>
    <field name="text">Get Counter 1 Clock Source base is the DCC module base address This function gets the counter 1 clock source Returns Counter 1 clock source from the enum DCC_Count1ClockSource</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_verifyClockFrequency</field>
    <field name="args">(uint32_t base, DCC_Count1ClockSource clock1, float32_t freq1, DCC_Count0ClockSource clock0, float32_t freq0, float32_t tolerance, float32_t freqerr, float32_t freq_sysclk)</field>
    <field name="url">group__dcc__api.html#ga337c8343635bbae9e6f52f382c7f6f10</field>
    <field name="keywords">DCC_verifyClockFrequency DCC_verifyClockFrequency</field>
    <field name="text">Verify the frequency of a clock source using a reference clock base is the DCC module base address clock1 is the clock source to be verified freq1 is the frequency of the clock source to be verified clock0 is the reference clock freq0 is the frequency of the reference clock tolerance is the DCC error tolerance in percentage freqerr is the allowable Frequency Tolerance in percentage freq_sysclk is the frequency of the system clock This function verifies the frequency of the specified clock using a reference clock Make sure that the frequency of all the clocks are in the same unit Returns true if the actual frequency of clock1 is matching freq1 false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_disableDoneSignal</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#ga372d9f87583a12129564806f155f3811</field>
    <field name="keywords">DCC_disableDoneSignal DCC_disableDoneSignal</field>
    <field name="text">Disable DCC Done Signal base is the DCC module base address This function disables the done signal interrupt None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DCC_SingleShotMode</field>
    <field name="url">group__dcc__api.html#ga37644cf23d308e62324dc2f6604c83b5</field>
    <field name="keywords">DCC_SingleShotMode DCC_SingleShotMode</field>
    <field name="text">The following are defines for the mode parameter of the DCC_enableSingleShotMode() function</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCC_SEED_REG_MASK</field>
    <field name="url">group__dcc__api.html#ga37977e9876124524a35a4b5234f0a02e</field>
    <field name="keywords">DCC_SEED_REG_MASK DCC_SEED_REG_MASK</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_getValidCounter0Value</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#ga39e7b7928b9d0caa57f50d7b43de20d8</field>
    <field name="keywords">DCC_getValidCounter0Value DCC_getValidCounter0Value</field>
    <field name="text">Get Current Value of the Valid Duration Counter for Counter 0 base is the DCC module base address This function gets current value of the valid duration counter for counter 0 Reads of the counter value may not be exact since the read operation is synchronized to the vbus clock Returns the current value of the valid duration counter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_setCounterSeeds</field>
    <field name="args">(uint32_t base, uint32_t counter0, uint32_t validCounter0, uint32_t counter1)</field>
    <field name="url">group__dcc__api.html#ga3ae107141988aad7b1ed0f9b376c25eb</field>
    <field name="keywords">DCC_setCounterSeeds DCC_setCounterSeeds</field>
    <field name="text">Set the seed values base is the DCC module base address counter0 sets the seed value that gets loaded into Counter 0 validCounter0 sets the seed value that gets loaded into the valid duration counter for Counter 0 counter1 sets the seed value that gets loaded into Counter 1 This function sets the seed values for Counter 0 Valid Duration Counter 0 and Counter 1 Operating DCC with 0 set as the seed value for Counter 0 Valid Duration Counter 0 and/or Counter 1 will result in undefined operation The Valid Duration Counter 0 is designed to be at least four cycles wide and shouldn t be programmed with a value less than 4 None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCC_ENABLE_VALUE</field>
    <field name="url">group__dcc__api.html#ga3e9ced5544839e5ed4cf2c8a67eff2b8</field>
    <field name="keywords">DCC_ENABLE_VALUE DCC_ENABLE_VALUE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_enableModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#ga4856bb4dd7be9a92bf347aa46ccb48f3</field>
    <field name="keywords">DCC_enableModule DCC_enableModule</field>
    <field name="text">Enables the DCC module base is the DCC module base address This function starts the DCC counter operation None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_getCounter1Value</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#ga6f00fd2b233f5af7577450a52c35ac31</field>
    <field name="keywords">DCC_getCounter1Value DCC_getCounter1Value</field>
    <field name="text">Get Current Value of Counter 1 base is the DCC module base address This function gets current value of counter 1 Reads of the counter value may not be exact since the read operation is synchronized to the vbus clock Returns the current value of counter 1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_clearDoneFlag</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#ga701b2b19be81e3ef6869e529948fc036</field>
    <field name="keywords">DCC_clearDoneFlag DCC_clearDoneFlag</field>
    <field name="text">Clear Single-Shot Done Status Flag base is the DCC module base address This function clears the DCC single-shot done status flag None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_disableModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#ga7789fd5c1952044b1cec6fdffc467473</field>
    <field name="keywords">DCC_disableModule DCC_disableModule</field>
    <field name="text">Disable the DCC module base is the DCC module base address This function stops the DCC counter operation None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DCC_Count1ClockSource</field>
    <field name="url">group__dcc__api.html#ga7add4a61bd1021a4544f99b59180c076</field>
    <field name="keywords">DCC_Count1ClockSource DCC_Count1ClockSource</field>
    <field name="text">The following are defines for the source parameter of the DCC_setCounter1ClkSource() function</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_disableSingleShotMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#ga7fb7843bec8a2059311331a09d1cc360</field>
    <field name="keywords">DCC_disableSingleShotMode DCC_disableSingleShotMode</field>
    <field name="text">Disable DCC Single-Shot Mode base is the DCC module base address This function disables the DCC Single-Shot operation mode None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCC_VALIDSEED_MAX</field>
    <field name="url">group__dcc__api.html#ga87167c5a5647aedfd18d43cd931e0bbc</field>
    <field name="keywords">DCC_VALIDSEED_MAX DCC_VALIDSEED_MAX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DCC_Count0ClockSource</field>
    <field name="url">group__dcc__api.html#ga882339b23939a26439e16b9361080ea3</field>
    <field name="keywords">DCC_Count0ClockSource DCC_Count0ClockSource</field>
    <field name="text">The following are defines for the source parameter of the DCC_setCounter0ClkSource() function</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_getCounter0ClkSource</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#ga95d9ad7033905001d1d3aa5dcff024d0</field>
    <field name="keywords">DCC_getCounter0ClkSource DCC_getCounter0ClkSource</field>
    <field name="text">Get Counter 0 Clock Source base is the DCC module base address This function gets the counter 0 clock source Returns Counter 0 clock source from the enum DCC_Count0ClockSource</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_disableErrorSignal</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#ga9c5ad523ddb73d90bae09d225485bfe3</field>
    <field name="keywords">DCC_disableErrorSignal DCC_disableErrorSignal</field>
    <field name="text">Disable DCC Error Signal base is the DCC module base address This function disables the error signal interrupt None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_continuousMonitor</field>
    <field name="args">(uint32_t base, DCC_Count1ClockSource clock1, float32_t freq1, DCC_Count0ClockSource clock0, float32_t freq0, float32_t tolerance, float32_t freqerr, float32_t freq_sysclk)</field>
    <field name="url">group__dcc__api.html#ga9d0cea773d6d05b71b5eb1d9ff56e05a</field>
    <field name="keywords">DCC_continuousMonitor DCC_continuousMonitor</field>
    <field name="text">Continuously monitor the frequency of a clock source using a reference clock base is the DCC module base address clock1 is the clock source to be verified freq1 is the frequency of the clock source to be verified clock0 is the reference clock freq0 is the frequency of the reference clock tolerance is the DCC error tolerance in percentage freqerr is the allowable Frequency Tolerance in percentage freq_sysclk is the frequency of the system clock This function continuously monitors the frequency of the specified clock using a reference clock An error signal is generated if the frequency ratio is altered Make sure that the frequency of all the clocks are in the same unit This function does not enable the DCC interrupt The user application must enable it to trigger an intetrupt when an error is detected Returns None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCC_COUNTSEED_MIN</field>
    <field name="url">group__dcc__api.html#gaa678f03d89e6a52268d31967d01a139f</field>
    <field name="keywords">DCC_COUNTSEED_MIN DCC_COUNTSEED_MIN</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCC_COUNTSEED_MAX</field>
    <field name="url">group__dcc__api.html#gabc92c04a8fac330b0f3b9c45bbcea69c</field>
    <field name="keywords">DCC_COUNTSEED_MAX DCC_COUNTSEED_MAX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_clearErrorFlag</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#gaca66a598c255a41717bcace3dc3700f6</field>
    <field name="keywords">DCC_clearErrorFlag DCC_clearErrorFlag</field>
    <field name="text">Clear Error Status Flag base is the DCC module base address This function clears the DCC error status flag None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_enableSingleShotMode</field>
    <field name="args">(uint32_t base, DCC_SingleShotMode mode)</field>
    <field name="url">group__dcc__api.html#gaca9622ea524157a486431ade82b9f925</field>
    <field name="keywords">DCC_enableSingleShotMode DCC_enableSingleShotMode</field>
    <field name="text">Enable DCC Single-Shot Mode base is the DCC module base address mode is the selected Single-Shot operation mode This function enables the single-shot mode and sets the operation mode The mode parameter can have one of two values DCC_MODE_COUNTER_ZERO Stops counting when counter0 and valid0 both reach zero DCC_MODE_COUNTER_ONE Stops counting when counter1 reaches zero None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_enableErrorSignal</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#gace0792dfcd8667a45dcc6762d52f14ee</field>
    <field name="keywords">DCC_enableErrorSignal DCC_enableErrorSignal</field>
    <field name="text">Enable DCC Error Signal base is the DCC module base address This function enables the error signal interrupt None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCC_VALIDSEED_MIN</field>
    <field name="url">group__dcc__api.html#gacfd369897cfaeb43936234ba5e5bb4f7</field>
    <field name="keywords">DCC_VALIDSEED_MIN DCC_VALIDSEED_MIN</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCC_REG_BYTE_MASK</field>
    <field name="url">group__dcc__api.html#gad27a12e55ea17ee190edb88361d2621f</field>
    <field name="keywords">DCC_REG_BYTE_MASK DCC_REG_BYTE_MASK</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_measureClockFrequency</field>
    <field name="args">(uint32_t base, DCC_Count1ClockSource clock1, DCC_Count0ClockSource clock0, float32_t freq0, float32_t tolerance, float32_t freqerr, float32_t freq_sysclk)</field>
    <field name="url">group__dcc__api.html#gadc29cccc1525f8029b83b9d2ffeba37e</field>
    <field name="keywords">DCC_measureClockFrequency DCC_measureClockFrequency</field>
    <field name="text">Measure the frequency of a clock source using a reference clock base is the DCC module base address clock1 is the clock source to be measured clock0 is the reference clock freq0 is the frequency of the reference clock tolerance is the DCC error tolerance in percentage freqerr is the allowable Frequency Tolerance in percentage freq_sysclk is the frequency of the system clock This function measures the frequency of the specified clock using a reference clock Make sure that the frequency of all the clocks are in the same unit Measured clock frequency</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_getSingleShotStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#gaeefddaf0b46e5c99e3dc43ebae12ac8c</field>
    <field name="keywords">DCC_getSingleShotStatus DCC_getSingleShotStatus</field>
    <field name="text">Get Single-Shot Done Flag Status base is the DCC module base address This function gets the single-shot done flag status Returns true if single-shot mode has completed false if single-shot mode has not completed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_getErrorStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#gafac2fc09894e43928b814e8dd830fc14</field>
    <field name="keywords">DCC_getErrorStatus DCC_getErrorStatus</field>
    <field name="text">Get Error Flag Status base is the DCC module base address This function gets the error flag status Returns true if an error has occurred false if no errors have occurred</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCC_DISABLE_VALUE</field>
    <field name="url">group__dcc__api.html#gafe9e789efdc5a4ce115468a357777c51</field>
    <field name="keywords">DCC_DISABLE_VALUE DCC_DISABLE_VALUE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCC_enableDoneSignal</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dcc__api.html#gafecc8e4c9691e996491d00b814d828b3</field>
    <field name="keywords">DCC_enableDoneSignal DCC_enableDoneSignal</field>
    <field name="text">Enable DCC Done Signal base is the DCC module base address This function enables the done signal interrupt None</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_MODE_COUNTER_ONE</field>
    <field name="url">group__dcc__api.html#gga37644cf23d308e62324dc2f6604c83b5ab05ee1f72ec325ff02f75c59ebe0d789</field>
    <field name="keywords">DCC_MODE_COUNTER_ONE DCC_MODE_COUNTER_ONE</field>
    <field name="text">Use to stop counting when counter1 reaches zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_MODE_COUNTER_ZERO</field>
    <field name="url">group__dcc__api.html#gga37644cf23d308e62324dc2f6604c83b5af65e48e40c28ea85ba3b6e2fc78a11d4</field>
    <field name="keywords">DCC_MODE_COUNTER_ZERO DCC_MODE_COUNTER_ZERO</field>
    <field name="text">Use to stop counting when counter0 and valid0 both reach zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_XBAR1_IN11</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076a0de7ae648b4eff16ab1d4eb7032a8db4</field>
    <field name="keywords">DCC_COUNT1SRC_XBAR1_IN11 DCC_COUNT1SRC_XBAR1_IN11</field>
    <field name="text">Input Crossbar1 Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_XBAR1_IN12</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076a11e47f65006cfae9c2aa2799588e63e5</field>
    <field name="keywords">DCC_COUNT1SRC_XBAR1_IN12 DCC_COUNT1SRC_XBAR1_IN12</field>
    <field name="text">Input Crossbar1 Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_NW_FCLK</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076a41c9d6803f1403ca5e238894feac9555</field>
    <field name="keywords">DCC_COUNT1SRC_NW_FCLK DCC_COUNT1SRC_NW_FCLK</field>
    <field name="text">from Flash Wrapper(NW) FCLK divided clock output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_SYSCLK</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076a61d7b0f279103e3c0999e39ca4347f73</field>
    <field name="keywords">DCC_COUNT1SRC_SYSCLK DCC_COUNT1SRC_SYSCLK</field>
    <field name="text">SYSCLK System Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_PLL</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076a65d1c31103cfcbe9da1db49a5e7b8efc</field>
    <field name="keywords">DCC_COUNT1SRC_PLL DCC_COUNT1SRC_PLL</field>
    <field name="text">PLLRAWCLK Clock Out Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_ADCCLK</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076a77cd3be86e7f672aa6600beec468de3f</field>
    <field name="keywords">DCC_COUNT1SRC_ADCCLK DCC_COUNT1SRC_ADCCLK</field>
    <field name="text">ADC Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_AUXCLKIN</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076a7830cf952fd5de743857e5293d55745e</field>
    <field name="keywords">DCC_COUNT1SRC_AUXCLKIN DCC_COUNT1SRC_AUXCLKIN</field>
    <field name="text">AUXCLKIN Auxiliary Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_EPWM</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076a9376073a28339d5302348d7d63c08436</field>
    <field name="keywords">DCC_COUNT1SRC_EPWM DCC_COUNT1SRC_EPWM</field>
    <field name="text">EPWM Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_SYSOSCDIV4</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076aaabe3369d80aac66a8af2390de2a1e60</field>
    <field name="keywords">DCC_COUNT1SRC_SYSOSCDIV4 DCC_COUNT1SRC_SYSOSCDIV4</field>
    <field name="text">SYSOSC output clock after the fixed BY4 divider</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_XBAR_IN15</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076aac4db1120e78eb67cd0be3703e46aaf2</field>
    <field name="keywords">DCC_COUNT1SRC_XBAR_IN15 DCC_COUNT1SRC_XBAR_IN15</field>
    <field name="text">Input Crossbar Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_WDCLK</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076ad906f548bd30b7095633c49a6227779c</field>
    <field name="keywords">DCC_COUNT1SRC_WDCLK DCC_COUNT1SRC_WDCLK</field>
    <field name="text">Watch Dog Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_LSPCLK</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076ae9ed75b664aafb4bab22ec9f43d8b2c4</field>
    <field name="keywords">DCC_COUNT1SRC_LSPCLK DCC_COUNT1SRC_LSPCLK</field>
    <field name="text">LSP Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT1SRC_WROSCDIV8</field>
    <field name="url">group__dcc__api.html#gga7add4a61bd1021a4544f99b59180c076aee1c510fdf85d715ea361a78e645470c</field>
    <field name="keywords">DCC_COUNT1SRC_WROSCDIV8 DCC_COUNT1SRC_WROSCDIV8</field>
    <field name="text">Wide Range Oscillator WROSC output clock after the fixed BY8 divider</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT0SRC_AUXCLK</field>
    <field name="url">group__dcc__api.html#gga882339b23939a26439e16b9361080ea3a371e57a41c15462d93c4cd457e6ab413</field>
    <field name="keywords">DCC_COUNT0SRC_AUXCLK DCC_COUNT0SRC_AUXCLK</field>
    <field name="text">AUX Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT0SRC_XTAL</field>
    <field name="url">group__dcc__api.html#gga882339b23939a26439e16b9361080ea3a79419651bfcdd2f55618b1b218f298b3</field>
    <field name="keywords">DCC_COUNT0SRC_XTAL DCC_COUNT0SRC_XTAL</field>
    <field name="text">XTAL Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT0SRC_TCK</field>
    <field name="url">group__dcc__api.html#gga882339b23939a26439e16b9361080ea3a82d6b6e825b04a37c4306443759d797c</field>
    <field name="keywords">DCC_COUNT0SRC_TCK DCC_COUNT0SRC_TCK</field>
    <field name="text">Preliminary Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT0SRC_WROSCDIV8</field>
    <field name="url">group__dcc__api.html#gga882339b23939a26439e16b9361080ea3a90a52c17ba3f04524982358bf2cc5850</field>
    <field name="keywords">DCC_COUNT0SRC_WROSCDIV8 DCC_COUNT0SRC_WROSCDIV8</field>
    <field name="text">Wide Range Oscillator WROSC OUTPUT CLOCK AFTER THE FIXED BY-8 DIVIDER</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT0SRC_XBAR</field>
    <field name="url">group__dcc__api.html#gga882339b23939a26439e16b9361080ea3a9c00b93008473a6b1a906a98871ab31c</field>
    <field name="keywords">DCC_COUNT0SRC_XBAR DCC_COUNT0SRC_XBAR</field>
    <field name="text">Input XBAR Clock Source</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT0SRC_SYSOSCDIV4</field>
    <field name="url">group__dcc__api.html#gga882339b23939a26439e16b9361080ea3a9d0cb1f6ad1d059581962afe9461e0be</field>
    <field name="keywords">DCC_COUNT0SRC_SYSOSCDIV4 DCC_COUNT0SRC_SYSOSCDIV4</field>
    <field name="text">SYSOSC output clock after the fixed BY4 divider</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCC_COUNT0SRC_SYSCLK</field>
    <field name="url">group__dcc__api.html#gga882339b23939a26439e16b9361080ea3ad81b9f3c221540cdcf4d0ac2039144da</field>
    <field name="keywords">DCC_COUNT0SRC_SYSCLK DCC_COUNT0SRC_SYSCLK</field>
    <field name="text">System Clock Source</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">dcsm_api</field>
    <field name="url">group__dcsm__api.html</field>
    <field name="keywords">DCSM</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_EXEONLYSECTR_M</field>
    <field name="url">group__dcsm__api.html#ga046d14a03842455b6a37828acbd72c8d</field>
    <field name="keywords">DCSM_EXEONLYSECTR_M DCSM_EXEONLYSECTR_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DCSM_SecurityStatus</field>
    <field name="url">group__dcsm__api.html#ga083d5a130186c33e20216df1e9d05151</field>
    <field name="keywords">DCSM_SecurityStatus DCSM_SecurityStatus</field>
    <field name="text">Values to distinguish the security status of the zones These values can be returned from DCSM_getZone1CSMSecurityStatus() DCSM_getZone2CSMSecurityStatus()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_secureZone2</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#ga08ca5a9a812a391d26fd64095fe4a60d</field>
    <field name="keywords">DCSM_secureZone2 DCSM_secureZone2</field>
    <field name="text">Secures zone 2 by setting the FORCESEC bit of Z2_CR register This function resets the state of the zone If the zone is unlocked it will lock(secure) the zone and also reset all the bits in the Control Register None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getZone2LinkPointerError</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#ga0b21540ec17ed55021f69232082249f2</field>
    <field name="keywords">DCSM_getZone2LinkPointerError DCSM_getZone2LinkPointerError</field>
    <field name="text">Read Zone 2 Link Pointer Error A non-zero value indicates an error on the bit position that is set to 1 Returns the value of the Zone 2 Link Pointer error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getZone1FlashEXEStatus</field>
    <field name="args">(DCSM_Sector sector)</field>
    <field name="url">group__dcsm__api.html#ga0d62b5d37df7c88e687a1222c85e1705</field>
    <field name="keywords">DCSM_getZone1FlashEXEStatus DCSM_getZone1FlashEXEStatus</field>
    <field name="text">Returns the EXE-ONLY status of zone 1 for a flash sector sector is the flash sector value Use DCSM_Sector type This function takes in a valid sector value and returns the status of EXE ONLY security protection for the sector Returns DCSM_PROTECTED if the sector is EXE-ONLY protected DCSM_UNPROTECTED if the sector is not EXE-ONLY protected DCSM_INCORRECT_ZONE if sector does not belong to this zone</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_O_Z2_CSMPSWD3</field>
    <field name="url">group__dcsm__api.html#ga0feb9e3fb99a37778b04ff970a28169a</field>
    <field name="keywords">DCSM_O_Z2_CSMPSWD3 DCSM_O_Z2_CSMPSWD3</field>
    <field name="text">Z2 CSMPSWD3 offset Z2 CSMPSWD3 offset</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_O_Z1_CSMPSWD0</field>
    <field name="url">group__dcsm__api.html#ga191314fc9806cb851e111a27c87ee1c8</field>
    <field name="keywords">DCSM_O_Z1_CSMPSWD0 DCSM_O_Z1_CSMPSWD0</field>
    <field name="text">Z1 CSMPSWD0 offset Z1 CSMPSWD0 offset</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_Z1_OTPSECLOCK_JTAGLOCK_S</field>
    <field name="url">group__dcsm__api.html#ga1b032d26b90049e11287181f08af61b0</field>
    <field name="keywords">DCSM_Z1_OTPSECLOCK_JTAGLOCK_S DCSM_Z1_OTPSECLOCK_JTAGLOCK_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getFlashDenyCodeStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#ga25bc9432a5f18885d3ac3b4c92040330</field>
    <field name="keywords">DCSM_getFlashDenyCodeStatus DCSM_getFlashDenyCodeStatus</field>
    <field name="text">Returns the status of Deny Code register This function returns the status of Deny Code register Returns the Status of Deny Code register which can be used with the provided defines</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_clearFlashErrorStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#ga25cf6f8f6108cecc899cfc42b8543cda</field>
    <field name="keywords">DCSM_clearFlashErrorStatus DCSM_clearFlashErrorStatus</field>
    <field name="text">Clear the Flash Error Status bit Write a 1 to the clear bit to clear the sector error status bit None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_ARMED</field>
    <field name="url">group__dcsm__api.html#ga2fe98384a3374e50de809feeb95fb1fe</field>
    <field name="keywords">DCSM_ARMED DCSM_ARMED</field>
    <field name="text">CSM is armed CSM is armed</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DCSM_OTPLock</field>
    <field name="url">group__dcsm__api.html#ga3f2440ed91b5c8293c135841c15edd7e</field>
    <field name="keywords">DCSM_OTPLock DCSM_OTPLock</field>
    <field name="text">The following are values that can be passed to DCSM_getZone1OTPSecureLockStatus() DCSM_getZone2OTPSecureLockStatus() as lockType parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_EXEONLYSECTR_S</field>
    <field name="url">group__dcsm__api.html#ga3fc4c0873d9e1c3cd3bd9e80e6637758</field>
    <field name="keywords">DCSM_EXEONLYSECTR_S DCSM_EXEONLYSECTR_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_ZX_CR_S</field>
    <field name="url">group__dcsm__api.html#ga420421f21efe8dce72546c5d95b6bc5e</field>
    <field name="keywords">DCSM_ZX_CR_S DCSM_ZX_CR_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getDevicePartID</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#ga4703b132d19774443e77dfbe12f31664</field>
    <field name="keywords">DCSM_getDevicePartID DCSM_getDevicePartID</field>
    <field name="text">Get the device PARTIDH value This function returns the device PARTIDH value Returns the device PARTIDH value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_writeZone2CSM</field>
    <field name="args">(const DCSM_CSMPasswordKey *const psCMDKey)</field>
    <field name="url">group__dcsm__api.html#ga4ba553c2c2ee170ac54e0a1f8c06d8bd</field>
    <field name="keywords">DCSM_writeZone2CSM DCSM_writeZone2CSM</field>
    <field name="text">Write Zone 2 CSM psCMDKey is a pointer to the CSMPSWDKEY that has the CSM password for zone 2 Password match flow is essentially a sequence of dummy reads from password locations PWL followed by writes to CSMKEY registers This function helps writing the provided passwords into the CSM Key registers The DCSM_readZone2CSMPwd() should be called by CPU1 before calling this API None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_O_Z1_CSMPSWD1</field>
    <field name="url">group__dcsm__api.html#ga56b03c7d09910a1b481df9032ae544d6</field>
    <field name="keywords">DCSM_O_Z1_CSMPSWD1 DCSM_O_Z1_CSMPSWD1</field>
    <field name="text">Z1 CSMPSWD1 offset Z1 CSMPSWD1 offset</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getZone2FlashEXEStatus</field>
    <field name="args">(DCSM_Sector sector)</field>
    <field name="url">group__dcsm__api.html#ga60bfa11ac91a3dd2646f785dac734376</field>
    <field name="keywords">DCSM_getZone2FlashEXEStatus DCSM_getZone2FlashEXEStatus</field>
    <field name="text">Returns the EXE-ONLY status of zone 2 for a flash sector sector is the flash sector value Use DCSM_Sector type This function takes in a valid sector value and returns the status of EXE ONLY security protection for the sector Returns DCSM_PROTECTED if the sector is EXE-ONLY protected DCSM_UNPROTECTED if the sector is not EXE-ONLY protected DCSM_INCORRECT_ZONE if sector does not belong to this zone</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLSEM_KEY</field>
    <field name="url">group__dcsm__api.html#ga6294245c881569b5ce1355cb4d193bcc</field>
    <field name="keywords">FLSEM_KEY FLSEM_KEY</field>
    <field name="text">Zone semaphore key Zone semaphore key</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DCSM_MemoryStatus</field>
    <field name="url">group__dcsm__api.html#ga69a15eff42fedeb917311db83ff7ea9f</field>
    <field name="keywords">DCSM_MemoryStatus DCSM_MemoryStatus</field>
    <field name="text">Values to distinguish the status of RAM or FLASH sectors These values describe which zone the memory location belongs too These values can be returned from DCSM_getRAMZone() DCSM_getFlashSectorZone()</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_Z1_OTPSECLOCK_JTAGLOCK_M</field>
    <field name="url">group__dcsm__api.html#ga6ab58507cfc01e454de9d55f42678c83</field>
    <field name="keywords">DCSM_Z1_OTPSECLOCK_JTAGLOCK_M DCSM_Z1_OTPSECLOCK_JTAGLOCK_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getZone1OTPSecureLockStatus</field>
    <field name="args">(DCSM_OTPLock lockType)</field>
    <field name="url">group__dcsm__api.html#ga6bd0af6533ac14cb2ec52c9b99337ee9</field>
    <field name="keywords">DCSM_getZone1OTPSecureLockStatus DCSM_getZone1OTPSecureLockStatus</field>
    <field name="text">Returns the OTP secure Lock status of zone 1 lockType is the OTP secure Lock feature type The lockType parameter can have one of the following values of the DCSM_CPUSel type DCSM_OTPSECLOCK_JTAG JTAG Lock Status DCSM_OTPSECLOCK_PSWDLOCK Zone Password Lock This function takes in a valid OTP secure Lock feature type and returns the status of zone 1 lock feature Returns security lock status can be For JTAG lock 0 JTAG is not locked 1 JTAG is locked For Zone Password Lock 1 1 1 1 CSM Pwd locations in the OTP are not protected and can be read from the debugger as well as code running from anywhere Other Value CSM Pwd locations in the OTP are protected and can t be read without unlocking CSM of that zone For Zone CRC Lock 1 1 1 1 VCU has ability to calculate CRC on secure memories Other Value VCU doesn t have the ability to calculate CRC on secure memories</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getDeviceUIDLow</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#ga7579e1a92c5ae8489f8737a81fe658bc</field>
    <field name="keywords">DCSM_getDeviceUIDLow DCSM_getDeviceUIDLow</field>
    <field name="text">Get the device UID_UNIQUE value bits 3 1 to 0 This function returns the device UID_UNIQUE value bits 3 1 to 0 Returns the device UID_UNIQUE value low</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_FORCE_SECERR_KEY</field>
    <field name="url">group__dcsm__api.html#ga76e573302bcf1bce95138ea9f5d5e759</field>
    <field name="keywords">DCSM_FORCE_SECERR_KEY DCSM_FORCE_SECERR_KEY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getFlashErrorStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#ga7d8dc2511deff94cc442c39555c5d36e</field>
    <field name="keywords">DCSM_getFlashErrorStatus DCSM_getFlashErrorStatus</field>
    <field name="text">Get the status of the security configuration load from USER-OTP or sector error status Returns 0 if no error in loading security information from USER-OTP 1 if an error has occurred in the load from USER-OTP</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_secureZone1</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#ga8565db102b03817def7bce7cfdda2c73</field>
    <field name="keywords">DCSM_secureZone1 DCSM_secureZone1</field>
    <field name="text">Secures zone 1 by setting the FORCESEC bit of Z1_CR register This function resets the state of the zone If the zone is unlocked it will lock(secure) the zone and also reset all the bits in the Control Register None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_O_Z2_CSMPSWD2</field>
    <field name="url">group__dcsm__api.html#ga89e46144a96ce8bf3e9322de0e6c43e8</field>
    <field name="keywords">DCSM_O_Z2_CSMPSWD2 DCSM_O_Z2_CSMPSWD2</field>
    <field name="text">Z2 CSMPSWD2 offset Z2 CSMPSWD2 offset</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_OTPSECLOCK_INVALID</field>
    <field name="url">group__dcsm__api.html#ga8d51d09f0e93b0632d93c8c7ec3abfbb</field>
    <field name="keywords">DCSM_OTPSECLOCK_INVALID DCSM_OTPSECLOCK_INVALID</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_ALLZERO</field>
    <field name="url">group__dcsm__api.html#ga92fdf56ee57660e54b3fa06d72f1f09e</field>
    <field name="keywords">DCSM_ALLZERO DCSM_ALLZERO</field>
    <field name="text">CSM Passwords all zeros CSM Passwords all zeros</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getZone1CSMSecurityStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#ga9549036f1839776c81cd78ba1a25a75e</field>
    <field name="keywords">DCSM_getZone1CSMSecurityStatus DCSM_getZone1CSMSecurityStatus</field>
    <field name="text">Returns the CSM security status of zone 1 This function returns the security status of zone 1 CSM Returns security status as an enumerated type DCSM_SecurityStatus</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DCSM_EXEOnlyStatus</field>
    <field name="url">group__dcsm__api.html#ga9783b5852cc118416fb51a736be8bfe4</field>
    <field name="keywords">DCSM_EXEOnlyStatus DCSM_EXEOnlyStatus</field>
    <field name="text">Values to decribe the EXEONLY Status These values are returned from to DCSM_getZone1RAMEXEStatus() DCSM_getZone2RAMEXEStatus() DCSM_getZone1FlashEXEStatus() DCSM_getZone2FlashEXEStatus()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getZone1LinkPointerError</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#ga988abf59f71ff7b22c367fc1ac80078c</field>
    <field name="keywords">DCSM_getZone1LinkPointerError DCSM_getZone1LinkPointerError</field>
    <field name="text">Read Zone 1 Link Pointer Error A non-zero value indicates an error on the bit position that is set to 1 Returns the value of the Zone 1 Link Pointer error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getZone2OTPSecureLockStatus</field>
    <field name="args">(DCSM_OTPLock lockType)</field>
    <field name="url">group__dcsm__api.html#ga9b35709565ffbdb50bb3b1a6154d730b</field>
    <field name="keywords">DCSM_getZone2OTPSecureLockStatus DCSM_getZone2OTPSecureLockStatus</field>
    <field name="text">Returns the OTP secure Lock status of zone 2 lockType is the OTP secure Lock feature type The lockType parameter can have one of the following values of the DCSM_CPUSel type DCSM_OTPSECLOCK_PSWDLOCK Zone Password Lock This function takes in a valid OTP secure Lock feature type and returns the status of zone 2 lock feature Returns security lock status can be For Zone Password Lock 1 1 1 1 CSM Pwd locations in the OTP are not protected and can be read from the debugger as well as code running from anywhere Other Value CSM Pwd locations in the OTP are protected and can t be read without unlocking CSM of that zone For Zone CRC Lock 1 1 1 1 VCU has ability to calculate CRC on secure memories Other Value VCU doesn t have the ability to calculate CRC on secure memories</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_O_Z1_CSMPSWD2</field>
    <field name="url">group__dcsm__api.html#gaa5434f85632d25fb7544f23678104f6f</field>
    <field name="keywords">DCSM_O_Z1_CSMPSWD2 DCSM_O_Z1_CSMPSWD2</field>
    <field name="text">Z1 CSMPSWD2 offset Z1 CSMPSWD2 offset</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getZone1ControlStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#gaa5aa91b72a84d167949f6c1dd7cb8ff7</field>
    <field name="keywords">DCSM_getZone1ControlStatus DCSM_getZone1ControlStatus</field>
    <field name="text">Returns the Control Status of zone 1 This function returns the Control Status of zone 1 CSM Returns the contents of the Control Register which can be used with provided defines</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getZone2CSMSecurityStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#gaa71aba583947d603f650e7b0995ff347</field>
    <field name="keywords">DCSM_getZone2CSMSecurityStatus DCSM_getZone2CSMSecurityStatus</field>
    <field name="text">Returns the CSM security status of zone 2 This function returns the security status of zone 2 CSM Returns security status as an enumerated type DCSM_SecurityStatus</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_claimZoneSemaphore</field>
    <field name="args">(DCSM_SemaphoreZone zone)</field>
    <field name="url">group__dcsm__api.html#gaaa9949a3c204f3a1036f2fe6725b4ffe</field>
    <field name="keywords">DCSM_claimZoneSemaphore DCSM_claimZoneSemaphore</field>
    <field name="text">Claims the zone semaphore which allows access to the Flash Wrapper register for that zone zone is the zone which is trying to claim the semaphore which allows access to the Flash Wrapper registers Returns true for a successful semaphore capture false if it was unable to capture the semaphore</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_forcePerSemStatus</field>
    <field name="args">(DCSM_PERSem grabType, uint16_t value)</field>
    <field name="url">group__dcsm__api.html#gaabf6eb7fcfc177f410d2bbb1c370b0f8</field>
    <field name="keywords">DCSM_forcePerSemStatus DCSM_forcePerSemStatus</field>
    <field name="text">Force the Flash wrapper semaphore register value This function writes into the Flash wrapper register field None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_O_Z2_CSMPSWD0</field>
    <field name="url">group__dcsm__api.html#gaafa41b3cb96c4f0575d374f4cf5ff616</field>
    <field name="keywords">DCSM_O_Z2_CSMPSWD0 DCSM_O_Z2_CSMPSWD0</field>
    <field name="text">Z2 CSMPSWD0 offset Z2 CSMPSWD0 offset</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_O_Z2_CSMPSWD1</field>
    <field name="url">group__dcsm__api.html#gabe199d1d034d727ac6e74ff0606586f6</field>
    <field name="keywords">DCSM_O_Z2_CSMPSWD1 DCSM_O_Z2_CSMPSWD1</field>
    <field name="text">Z2 CSMPSWD1 offset Z2 CSMPSWD1 offset</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getPerSemStatus</field>
    <field name="args">(DCSM_PERSem grabType)</field>
    <field name="url">group__dcsm__api.html#gac15da77806b28ad56eb6220d1ae0d38d</field>
    <field name="keywords">DCSM_getPerSemStatus DCSM_getPerSemStatus</field>
    <field name="text">Get the Flash wrapper semaphore register value This function returns the Flash wrapper register value Returns the Flash wrapper semaphore register value</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_O_Z1_CSMPSWD3</field>
    <field name="url">group__dcsm__api.html#gac3043e49478b8079311c35941c86bf7c</field>
    <field name="keywords">DCSM_O_Z1_CSMPSWD3 DCSM_O_Z1_CSMPSWD3</field>
    <field name="text">Z1 CSMPSWD3 offset Z1 CSMPSWD3 offset</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DCSM_Sector</field>
    <field name="url">group__dcsm__api.html#gacbb37e96f23403edc203ceb97460c05f</field>
    <field name="keywords">DCSM_Sector DCSM_Sector</field>
    <field name="text">Values to distinguish Flash Sector These values can be passed to DCSM_getZone1FlashEXEStatus() DCSM_getZone2FlashEXEStatus() DCSM_getFlashSectorZone()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_readZone2CSMPwd</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#gacd01b31ee3298c05ff801fe2487e136c</field>
    <field name="keywords">DCSM_readZone2CSMPwd DCSM_readZone2CSMPwd</field>
    <field name="text">Perform dummy reads on the 1 2 8 bit Zone 2 CSM password This function reads the four password locations in the User OTP needed to be done as part of the Password Match Flow before writes to the CSMKEY registers This would need to be done before a DCSM_writeZone2CSM() None This API to be called from CPU1</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_ALLONE</field>
    <field name="url">group__dcsm__api.html#gad926e6718a322661690023090ba277e1</field>
    <field name="keywords">DCSM_ALLONE DCSM_ALLONE</field>
    <field name="text">CSM Passwords all ones CSM Passwords all ones</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_writeZone1CSM</field>
    <field name="args">(const DCSM_CSMPasswordKey *const psCMDKey)</field>
    <field name="url">group__dcsm__api.html#gadc47f99dcdcbe78ac7f444523ebc523d</field>
    <field name="keywords">DCSM_writeZone1CSM DCSM_writeZone1CSM</field>
    <field name="text">Write Zone 1 CSM psCMDKey is a pointer to the CSMPSWDKEY that has the CSM password for zone 1 Password match flow is essentially a sequence of dummy reads from password locations PWL followed by writes to CSMKEY registers This function helps writing the provided passwords into the CSM Key registers The DCSM_readZone1CSMPwd() should be called by CPU1 before calling this API None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_releaseZoneSemaphore</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#gadc6ab62a2b0dac4fc184ebd60bbd4d35</field>
    <field name="keywords">DCSM_releaseZoneSemaphore DCSM_releaseZoneSemaphore</field>
    <field name="text">Releases the zone semaphore Returns true if it was successful in releasing the zone semaphore and false if it was unsuccessful in releasing the zone semaphore If the calling function is not in the right zone to be able to access this register it will return a false</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DCSM_UNSECURE</field>
    <field name="url">group__dcsm__api.html#gadfc7c7abf773970d3a7a908b6d489535</field>
    <field name="keywords">DCSM_UNSECURE DCSM_UNSECURE</field>
    <field name="text">Zone is secure/unsecure Zone is secure/unsecure</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_unlockZone2CSM</field>
    <field name="args">(const DCSM_CSMPasswordKey *const psCMDKey)</field>
    <field name="url">group__dcsm__api.html#gae4ac162d28ac2f33b70f1a1deb4c550e</field>
    <field name="keywords">DCSM_unlockZone2CSM DCSM_unlockZone2CSM</field>
    <field name="text">Unlocks Zone 2 CSM psCMDKey is a pointer to the CSMPSWDKEY that has the CSM password for zone 2 This function unlocks the CSM password It first reads the four password locations in the User OTP If any of the password values is different from 0 xFFFFFFFF it unlocks the device by writing the provided passwords into CSM Key registers None This function should not be called in an actual application should only be used for once to program the OTP memory Ensure flash data cache is disabled before calling this function(Flash_disableCache)</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getZone2ControlStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#gae6d165737bff19f0828d39c9932e0907</field>
    <field name="keywords">DCSM_getZone2ControlStatus DCSM_getZone2ControlStatus</field>
    <field name="text">Returns the Control Status of zone 2 This function returns the Control Status of zone 2 CSM Returns the contents of the Control Register which can be used with the provided defines</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DCSM_PERSem</field>
    <field name="url">group__dcsm__api.html#gae8e40487050ecbd6a5aac1eaf7e7a5a2</field>
    <field name="keywords">DCSM_PERSem DCSM_PERSem</field>
    <field name="text">The following are values that can be passed to DCSM_forcePerSemStatus() DCSM_getPerSemStatus() as grabType parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_readZone1CSMPwd</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#gae953f3b222b172a05916dd81687c9e35</field>
    <field name="keywords">DCSM_readZone1CSMPwd DCSM_readZone1CSMPwd</field>
    <field name="text">Perform dummy reads on the 1 2 8 bit Zone 1 CSM password This function reads the four password locations in the User OTP needed to be done as part of the Password Match Flow before writes to the CSMKEY registers This would need to be done before a DCSM_writeZone1CSM() None This API to be called from CPU1</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DCSM_SemaphoreZone</field>
    <field name="url">group__dcsm__api.html#gae9689cbafcb2d7c66d866b9658abc54f</field>
    <field name="keywords">DCSM_SemaphoreZone DCSM_SemaphoreZone</field>
    <field name="text">Values to pass to DCSM_claimZoneSemaphore() These values are used to describe the zone that can write to Flash Wrapper registers</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_unlockZone1CSM</field>
    <field name="args">(const DCSM_CSMPasswordKey *const psCMDKey)</field>
    <field name="url">group__dcsm__api.html#gaf005f731a5d5761badfcaedde46b2d15</field>
    <field name="keywords">DCSM_unlockZone1CSM DCSM_unlockZone1CSM</field>
    <field name="text">Unlocks Zone 1 CSM psCMDKey is a pointer to the DCSM_CSMPasswordKey struct that has the CSM password for zone 1 This function unlocks the CSM password It first reads the four password locations in the User OTP If any of the password values is different from 0 xFFFFFFFF it unlocks the device by writing the provided passwords into CSM Key registers None This function should not be called in an actual application should only be used for once to program the OTP memory Ensure flash data cache is disabled before calling this function(Flash_disableCache)</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getFlashSectorZone</field>
    <field name="args">(DCSM_Sector sector)</field>
    <field name="url">group__dcsm__api.html#gaf357acb23d8b96308120088b860702d0</field>
    <field name="keywords">DCSM_getFlashSectorZone DCSM_getFlashSectorZone</field>
    <field name="text">Returns the security zone a flash sector belongs to sector is the flash sector value Use DCSM_Sector type This function returns the security zone a flash sector belongs to Returns DCSM_MEMORY_INACCESSIBLE if the section is inaccessible DCSM_MEMORY_ZONE1 if the section belongs to zone 1 DCSM_MEMORY_ZONE2 if the section belongs to zone 2 and DCSM_MEMORY_FULL_ACCESS if the section doesn t belong to any zone or if the section is unsecure</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_getDeviceUIDHigh</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#gafb7f0d47ce78a3c1f741cd44bcf2d1e1</field>
    <field name="keywords">DCSM_getDeviceUIDHigh DCSM_getDeviceUIDHigh</field>
    <field name="text">Get the device UID_UNIQUE value bits 6 3 to 3 2 This function returns the device UID_UNIQUE value bits 6 3 to 3 2 Returns the device UID_UNIQUE value high</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DCSM_forceFlashErrorStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__dcsm__api.html#gafd843681e64867f5adcf7af11e603bcd</field>
    <field name="keywords">DCSM_forceFlashErrorStatus DCSM_forceFlashErrorStatus</field>
    <field name="text">Set the force Flash Error Status bit Write a 1 to force bit to set the sector error status bit None</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_STATUS_LOCKED</field>
    <field name="url">group__dcsm__api.html#gga083d5a130186c33e20216df1e9d05151a41ce754d0bbf18d0ae71bf940859a82d</field>
    <field name="keywords">DCSM_STATUS_LOCKED DCSM_STATUS_LOCKED</field>
    <field name="text">Locked</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_STATUS_BLOCKED</field>
    <field name="url">group__dcsm__api.html#gga083d5a130186c33e20216df1e9d05151a6380c642721c74bb5387bce4edc14777</field>
    <field name="keywords">DCSM_STATUS_BLOCKED DCSM_STATUS_BLOCKED</field>
    <field name="text">Blocked</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_STATUS_UNSECURE</field>
    <field name="url">group__dcsm__api.html#gga083d5a130186c33e20216df1e9d05151a6ffa6884c2380eea40a756e0def8c568</field>
    <field name="keywords">DCSM_STATUS_UNSECURE DCSM_STATUS_UNSECURE</field>
    <field name="text">Unsecure</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_STATUS_SECURE</field>
    <field name="url">group__dcsm__api.html#gga083d5a130186c33e20216df1e9d05151a9163577eb7d10b9fe5e8ada3bf0f4748</field>
    <field name="keywords">DCSM_STATUS_SECURE DCSM_STATUS_SECURE</field>
    <field name="text">Secure</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_OTPSECLOCK_PSWDLOCK</field>
    <field name="url">group__dcsm__api.html#gga3f2440ed91b5c8293c135841c15edd7ea070a6b0e77aecb96fa7e9ecd951f7887</field>
    <field name="keywords">DCSM_OTPSECLOCK_PSWDLOCK DCSM_OTPSECLOCK_PSWDLOCK</field>
    <field name="text">Zone Password Lock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_OTPSECLOCK_JTAG</field>
    <field name="url">group__dcsm__api.html#gga3f2440ed91b5c8293c135841c15edd7ea10df47db23df17f3d44bad43c2448d3f</field>
    <field name="keywords">DCSM_OTPSECLOCK_JTAG DCSM_OTPSECLOCK_JTAG</field>
    <field name="text">JTAG Lock Status</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_MEMORY_FULL_ACCESS</field>
    <field name="url">group__dcsm__api.html#gga69a15eff42fedeb917311db83ff7ea9fa2e5c50b3d8fd42f91969b9d9034fe522</field>
    <field name="keywords">DCSM_MEMORY_FULL_ACCESS DCSM_MEMORY_FULL_ACCESS</field>
    <field name="text">Full access</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_MEMORY_ZONE2</field>
    <field name="url">group__dcsm__api.html#gga69a15eff42fedeb917311db83ff7ea9fa589701f5880ee42a51dc48e8ef5e9f4c</field>
    <field name="keywords">DCSM_MEMORY_ZONE2 DCSM_MEMORY_ZONE2</field>
    <field name="text">Zone 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_MEMORY_ZONE1</field>
    <field name="url">group__dcsm__api.html#gga69a15eff42fedeb917311db83ff7ea9fa6cfca1b8b399755198c81672f8278b10</field>
    <field name="keywords">DCSM_MEMORY_ZONE1 DCSM_MEMORY_ZONE1</field>
    <field name="text">Zone 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_MEMORY_INACCESSIBLE</field>
    <field name="url">group__dcsm__api.html#gga69a15eff42fedeb917311db83ff7ea9fadbc0ace9a8305f6d6ec92a7f3c9db7f4</field>
    <field name="keywords">DCSM_MEMORY_INACCESSIBLE DCSM_MEMORY_INACCESSIBLE</field>
    <field name="text">Inaccessible</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_UNPROTECTED</field>
    <field name="url">group__dcsm__api.html#gga9783b5852cc118416fb51a736be8bfe4a0512e8a7a093f60d810653001e90cca7</field>
    <field name="keywords">DCSM_UNPROTECTED DCSM_UNPROTECTED</field>
    <field name="text">Unprotected</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_INCORRECT_ZONE</field>
    <field name="url">group__dcsm__api.html#gga9783b5852cc118416fb51a736be8bfe4a27f0da0fde4f70beb21667d157dfada2</field>
    <field name="keywords">DCSM_INCORRECT_ZONE DCSM_INCORRECT_ZONE</field>
    <field name="text">Incorrect Zone</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_PROTECTED</field>
    <field name="url">group__dcsm__api.html#gga9783b5852cc118416fb51a736be8bfe4a6acb2468e18b3e33eda25c3c705dfcad</field>
    <field name="keywords">DCSM_PROTECTED DCSM_PROTECTED</field>
    <field name="text">Protected</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_BANK0_SECTOR_0</field>
    <field name="url">group__dcsm__api.html#ggacbb37e96f23403edc203ceb97460c05fa2d7fa0a2eb2d5270f0e1b87645412a44</field>
    <field name="keywords">DCSM_BANK0_SECTOR_0 DCSM_BANK0_SECTOR_0</field>
    <field name="text">Bank 0 Sector 0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_BANK0_SECTOR_1</field>
    <field name="url">group__dcsm__api.html#ggacbb37e96f23403edc203ceb97460c05fa45b3e35bb0f9dd0dafc9fea284a99cf2</field>
    <field name="keywords">DCSM_BANK0_SECTOR_1 DCSM_BANK0_SECTOR_1</field>
    <field name="text">Bank 0 Sector 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_BANK0_SECTOR_3</field>
    <field name="url">group__dcsm__api.html#ggacbb37e96f23403edc203ceb97460c05fa6df8481464eb23b0dee42832c2b9af9b</field>
    <field name="keywords">DCSM_BANK0_SECTOR_3 DCSM_BANK0_SECTOR_3</field>
    <field name="text">Bank 0 Sector 3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_BANK0_SECTOR_63_32</field>
    <field name="url">group__dcsm__api.html#ggacbb37e96f23403edc203ceb97460c05fa9b2f21fbe96fe53b9757a81b54d47771</field>
    <field name="keywords">DCSM_BANK0_SECTOR_63_32 DCSM_BANK0_SECTOR_63_32</field>
    <field name="text">Bank 0 Sector 6 3 3 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_BANK0_SECTOR_2</field>
    <field name="url">group__dcsm__api.html#ggacbb37e96f23403edc203ceb97460c05fac2e6f5ce1c6c400097a9d6b7d66e2580</field>
    <field name="keywords">DCSM_BANK0_SECTOR_2 DCSM_BANK0_SECTOR_2</field>
    <field name="text">Bank 0 Sector 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_BANK0_SECTOR_31_4</field>
    <field name="url">group__dcsm__api.html#ggacbb37e96f23403edc203ceb97460c05fac9a4732384a3d5b751383be537396744</field>
    <field name="keywords">DCSM_BANK0_SECTOR_31_4 DCSM_BANK0_SECTOR_31_4</field>
    <field name="text">Bank 0 Sector 3 1 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_GRABRSTCTL</field>
    <field name="url">group__dcsm__api.html#ggae8e40487050ecbd6a5aac1eaf7e7a5a2a9d921d9c18edda98026f22d8af12116e</field>
    <field name="keywords">DCSM_GRABRSTCTL DCSM_GRABRSTCTL</field>
    <field name="text">Grab Reset configuration</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_GRABCLKCTL</field>
    <field name="url">group__dcsm__api.html#ggae8e40487050ecbd6a5aac1eaf7e7a5a2aa51cd50a679b96ddf1a0306314919251</field>
    <field name="keywords">DCSM_GRABCLKCTL DCSM_GRABCLKCTL</field>
    <field name="text">Grab Clock configuration</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_GRABTIMER1</field>
    <field name="url">group__dcsm__api.html#ggae8e40487050ecbd6a5aac1eaf7e7a5a2ae29dc976ddb87ead8296184802e17434</field>
    <field name="keywords">DCSM_GRABTIMER1 DCSM_GRABTIMER1</field>
    <field name="text">Grab TIMER1 configuration</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_GRABWD</field>
    <field name="url">group__dcsm__api.html#ggae8e40487050ecbd6a5aac1eaf7e7a5a2af33ebe794983c91e82de9b4d1e1c48d8</field>
    <field name="keywords">DCSM_GRABWD DCSM_GRABWD</field>
    <field name="text">Grab Watchdog configuration</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_GRABNMIWD</field>
    <field name="url">group__dcsm__api.html#ggae8e40487050ecbd6a5aac1eaf7e7a5a2af953d6a9437a9c6edde00906f764e960</field>
    <field name="keywords">DCSM_GRABNMIWD DCSM_GRABNMIWD</field>
    <field name="text">Grab NMIWD configuration</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_FLSEM_ZONE1</field>
    <field name="url">group__dcsm__api.html#ggae9689cbafcb2d7c66d866b9658abc54fa2ee70f90513222423fe24dca9ffa6abe</field>
    <field name="keywords">DCSM_FLSEM_ZONE1 DCSM_FLSEM_ZONE1</field>
    <field name="text">Flash semaphore Zone 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DCSM_FLSEM_ZONE2</field>
    <field name="url">group__dcsm__api.html#ggae9689cbafcb2d7c66d866b9658abc54fa65ecee832ca184038b046ffb5b87aa30</field>
    <field name="keywords">DCSM_FLSEM_ZONE2 DCSM_FLSEM_ZONE2</field>
    <field name="text">Flash semaphore Zone 2</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">dma_api</field>
    <field name="url">group__dma__api.html</field>
    <field name="keywords">DMA</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_configTransfer</field>
    <field name="args">(uint32_t base, uint32_t transferSize, int16_t srcStep, int16_t destStep)</field>
    <field name="url">group__dma__api.html#ga0aa51ed5155166eb9332bf6c2165ae92</field>
    <field name="keywords">DMA_configTransfer DMA_configTransfer</field>
    <field name="text">Configures the DMA channel s transfer settings base is the base address of the DMA channel control registers transferSize is the number of bursts per transfer srcStep is the amount to increment or decrement the source address after each burst of a transfer unless a wrap occurs destStep is the amount to increment or decrement the destination address after each burst of a transfer unless a wrap occurs This function configures the transfer size and the address step that is made after each burst The transferSize parameter is the number of bursts per transfer If DMA channel interrupts are enabled they will occur after this number of bursts have completed The maximum number of bursts is 6 5 5 3 6 The srcStep and destStep parameters specify the address step that should be added to the source and destination addresses after each transferred burst of a transfer Only signed values from 4 0 9 6 to 4 0 9 5 are valid If a wrap occurs these step values will be ignored Wrapping is configured with DMA_configWrap() Note that regardless of what data size configured by DMA_configMode() is used parameters are in terms of 1 6 bits words None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DMA_EmulationMode</field>
    <field name="url">group__dma__api.html#ga1f299229c8568154779e9a37d8125596</field>
    <field name="keywords">DMA_EmulationMode DMA_EmulationMode</field>
    <field name="text">Values that can be passed to DMA_setEmulationMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_clearTriggerFlag</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#ga20440b78c16f2d22c2c3a7d6821b98e7</field>
    <field name="keywords">DMA_clearTriggerFlag DMA_clearTriggerFlag</field>
    <field name="text">Clears a DMA channel s peripheral trigger flag base is the base address of the DMA channel control registers This function clears the peripheral trigger flag Normally you would use this function when initializing the DMA for the first time The flag is cleared automatically when the DMA starts the first burst of a transfer None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_configBurst</field>
    <field name="args">(uint32_t base, uint16_t size, int16_t srcStep, int16_t destStep)</field>
    <field name="url">group__dma__api.html#ga2439c8b8c65376c649965a180166e0d9</field>
    <field name="keywords">DMA_configBurst DMA_configBurst</field>
    <field name="text">Configures the DMA channel s burst settings base is the base address of the DMA channel control registers size is the number of words transferred per burst srcStep is the amount to increment or decrement the source address after each word of a burst destStep is the amount to increment or decrement the destination address after each word of a burst This function configures the size of each burst and the address step size The size parameter is the number of words that will be transferred during a single burst Possible amounts range from 1 word to 3 2 words The srcStep and destStep parameters specify the address step that should be added to the source and destination addresses after each transferred word of a burst Only signed values from 4 0 9 6 to 4 0 9 5 are valid Note that regardless of what data size configured by DMA_configMode() is used parameters are in terms of 1 6 bits words None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_startChannel</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#ga307b1f39953f45040b0feb3d6b6c05db</field>
    <field name="keywords">DMA_startChannel DMA_startChannel</field>
    <field name="text">Starts a DMA channel base is the base address of the DMA channel control registers This function starts the DMA running typically after you have configured it It will wait for the first trigger event to start operation To halt the channel use DMA_stopChannel() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_configWrap</field>
    <field name="args">(uint32_t base, uint32_t srcWrapSize, int16_t srcStep, uint32_t destWrapSize, int16_t destStep)</field>
    <field name="url">group__dma__api.html#ga3bf1e97d735ac34a5dc04645227ee31a</field>
    <field name="keywords">DMA_configWrap DMA_configWrap</field>
    <field name="text">Configures the DMA channel s wrap settings base is the base address of the DMA channel control registers srcWrapSize is the number of bursts to be transferred before a wrap of the source address occurs srcStep is the amount to increment or decrement the source address after each burst of a transfer unless a wrap occurs destWrapSize is the number of bursts to be transferred before a wrap of the destination address occurs destStep is the amount to increment or decrement the destination address after each burst of a transfer unless a wrap occurs This function configures the DMA channel s wrap settings The srcWrapSize and destWrapSize parameters are the number of bursts that are to be transferred before their respective addresses are wrapped The maximum wrap size is 6 5 5 3 6 bursts The srcStep and destStep parameters specify the address step that should be added to the source and destination addresses when the wrap occurs Only signed values from 4 0 9 6 to 4 0 9 5 are valid Note that regardless of what data size configured by DMA_configMode() is used parameters are in terms of 1 6 bits words None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_enableOverrunInterrupt</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#ga44032aea9d6cf961b7b82b591b2475af</field>
    <field name="keywords">DMA_enableOverrunInterrupt DMA_enableOverrunInterrupt</field>
    <field name="text">Enables the DMA channel overrun interrupt base is the base address of the DMA channel control registers This function enables the indicated DMA channel s ability to generate an interrupt upon the detection of an overrun An overrun is when a peripheral event trigger is received by the DMA before a previous trigger on that channel had been serviced and its flag had been cleared Note that this is the same interrupt signal as the interrupt that gets generated at the beginning/end of a transfer That interrupt must first be enabled using DMA_enableInterrupt() in order for the overrun interrupt to be generated None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_getRunStatusFlag</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#ga4857353007c6bfe465f3f0ea43a3d638</field>
    <field name="keywords">DMA_getRunStatusFlag DMA_getRunStatusFlag</field>
    <field name="text">Gets the status of a DMA channel s Run Status Flag base is the base address of the DMA channel control registers This function returns true if the Run Status Flag is set which means the DMA channel is enabled This flag is cleared when a transfer completes TRANSFER_COUNT 0 and continuous mode is disabled or when the HARDRESET SOFTRESET or HALT bit is set Returns true if the channel is enabled Returns false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_forceTrigger</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#ga49257e24c76546865be3e2dbad79ede4</field>
    <field name="keywords">DMA_forceTrigger DMA_forceTrigger</field>
    <field name="text">Force a peripheral trigger to a DMA channel base is the base address of the DMA channel control registers This function sets the peripheral trigger flag and if triggering a DMA burst is enabled see DMA_enableTrigger() a DMA burst transfer will be forced None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DMA_CFG_ONESHOT_ENABLE</field>
    <field name="url">group__dma__api.html#ga4d169efab7d753a99565375a5498b123</field>
    <field name="keywords">DMA_CFG_ONESHOT_ENABLE DMA_CFG_ONESHOT_ENABLE</field>
    <field name="text">Burst transfers occur without additional event triggers after the first Burst transfers occur without additional event triggers after the first</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_disableOverrunInterrupt</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#ga4e2c2b6c11267d8b23b22720afa24fdb</field>
    <field name="keywords">DMA_disableOverrunInterrupt DMA_disableOverrunInterrupt</field>
    <field name="text">Disables the DMA channel overrun interrupt base is the base address of the DMA channel control registers This function disables the indicated DMA channel s ability to generate an interrupt upon the detection of an overrun None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_enableInterrupt</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#ga51c845f784ba6f47e493610ce6084b34</field>
    <field name="keywords">DMA_enableInterrupt DMA_enableInterrupt</field>
    <field name="text">Enables a DMA channel interrupt source base is the base address of the DMA channel control registers This function enables the indicated DMA channel interrupt source None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_setPriorityMode</field>
    <field name="args">(bool ch1IsHighPri)</field>
    <field name="url">group__dma__api.html#ga543dc469332c63aaa8a7408063297608</field>
    <field name="keywords">DMA_setPriorityMode DMA_setPriorityMode</field>
    <field name="text">Sets the DMA channel priority mode ch1IsHighPri is a flag to indicate the channel interrupt mode This function sets the channel interrupt mode When the ch1IsHighPri parameter is false the DMA channels are serviced in round-robin mode This is the default behavior If true channel 1 will be given higher priority than the other channels This means that if a channel 1 trigger occurs the current word transfer on any other channel is completed and channel 1 is serviced for the complete burst count The lower-priority channel s interrupted transfer will then resume None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DMA_CFG_SIZE_32BIT</field>
    <field name="url">group__dma__api.html#ga58bf946ba53a61ce4d9565c23bf8a861</field>
    <field name="keywords">DMA_CFG_SIZE_32BIT DMA_CFG_SIZE_32BIT</field>
    <field name="text">DMA transfers 3 2 bits at a time DMA transfers 3 2 bits at a time</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_setInterruptMode</field>
    <field name="args">(uint32_t base, DMA_InterruptMode mode)</field>
    <field name="url">group__dma__api.html#ga596c5bb7d03fc2f4e2c404751a98da83</field>
    <field name="keywords">DMA_setInterruptMode DMA_setInterruptMode</field>
    <field name="text">Sets the interrupt generation mode of a DMA channel interrupt base is the base address of the DMA channel control registers mode is a flag to indicate the channel interrupt mode This function sets the channel interrupt mode When the mode parameter is DMA_INT_AT_END the DMA channel interrupt will be generated at the end of the transfer If DMA_INT_AT_BEGINNING the interrupt will be generated at the beginning of a new transfer Generating at the beginning of a new transfer is the default behavior None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_configMode</field>
    <field name="args">(uint32_t base, DMA_Trigger trigger, uint32_t config)</field>
    <field name="url">group__dma__api.html#ga60e33dcbda8ed7c6d603cab17bdb7f19</field>
    <field name="keywords">DMA_configMode DMA_configMode</field>
    <field name="text">Configures the DMA channel trigger and mode base is the base address of the DMA channel control registers trigger is the interrupt source that triggers a DMA transfer config is a bit field of several configuration selections This function configures the DMA channel s trigger and mode The trigger parameter is the interrupt source that will trigger the start of a DMA transfer The config parameter is the logical OR of the following values DMA_CFG_ONESHOT_DISABLE or DMA_CFG_ONESHOT_ENABLE If enabled the subsequent burst transfers occur without additional event triggers after the first event trigger If disabled only one burst transfer is performed per event trigger DMA_CFG_CONTINUOUS_DISABLE or DMA_CFG_CONTINUOUS_ENABLE If enabled the DMA reinitializes when the transfer count is zero and waits for the next interrupt event trigger If disabled the DMA stops and clears the run status bit DMA_CFG_SIZE_16BIT or DMA_CFG_SIZE_32BIT This setting selects whether the databus width is 1 6 or 3 2 bits None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_configAddresses</field>
    <field name="args">(uint32_t base, const void *destAddr, const void *srcAddr)</field>
    <field name="url">group__dma__api.html#ga6ce0b2e96a07ac5ece62f8dff7a61ad2</field>
    <field name="keywords">DMA_configAddresses DMA_configAddresses</field>
    <field name="text">Configures the DMA channel base is the base address of the DMA channel control registers is the destination address is a source address This function configures the source and destination addresses of a DMA channel The parameters are pointers to the data to be transferred None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_disableInterrupt</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#ga6e1fe4e880dd93f80a26f96405b35fde</field>
    <field name="keywords">DMA_disableInterrupt DMA_disableInterrupt</field>
    <field name="text">Disables a DMA channel interrupt source base is the base address of the DMA channel control registers This function disables the indicated DMA channel interrupt source None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DMA_Trigger</field>
    <field name="url">group__dma__api.html#ga754b55b8adb26102e0d825ad5ecf1973</field>
    <field name="keywords">DMA_Trigger DMA_Trigger</field>
    <field name="text">Values that can be passed to DMA_configMode() as the trigger parameter Values that can be passed to DMA_configMode() as the trigger parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_stopChannel</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#ga7eadb5b54eb1a3248b9fcb5148cd8570</field>
    <field name="keywords">DMA_stopChannel DMA_stopChannel</field>
    <field name="text">Halts a DMA channel base is the base address of the DMA channel control registers This function halts the DMA at its current state and any current read-write access is completed To start the channel again use DMA_startChannel() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_getBurstStatusFlag</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#ga83612ace854ed924c299dde96d6cfa48</field>
    <field name="keywords">DMA_getBurstStatusFlag DMA_getBurstStatusFlag</field>
    <field name="text">Gets the status of a DMA channel s Burst Status Flag base is the base address of the DMA channel control registers This function returns true if the Burst Status Flag is set which means a DMA burst has begun This flag is cleared when BURST_COUNT reaches zero or when the HARDRESET or SOFTRESET bit is set Returns true if the Burst Status Flag is set Returns false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_getTransferStatusFlag</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#ga8c289bc2dcb49b73b29466f37b729383</field>
    <field name="keywords">DMA_getTransferStatusFlag DMA_getTransferStatusFlag</field>
    <field name="text">Gets the status of a DMA channel s Transfer Status Flag base is the base address of the DMA channel control registers This function returns true if the Transfer Status Flag is set which means a DMA transfer has begun This flag is cleared when TRANSFER_COUNT reaches zero or when the HARDRESET or SOFTRESET bit is set Returns true if the Transfer Status Flag is set Returns false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_setEmulationMode</field>
    <field name="args">(DMA_EmulationMode mode)</field>
    <field name="url">group__dma__api.html#ga8e0855abdfe02a0540d21bfd7fa058a3</field>
    <field name="keywords">DMA_setEmulationMode DMA_setEmulationMode</field>
    <field name="text">Sets DMA emulation mode mode is the emulation mode to be selected This function sets the behavior of the DMA operation when an emulation suspend occurs The mode parameter can be one of the following DMA_EMULATION_STOP DMA runs until the current read-write access is completed DMA_EMULATION_FREE_RUN DMA operation continues regardless of a the suspend None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DMA_CFG_SIZE_16BIT</field>
    <field name="url">group__dma__api.html#ga9518c4804b92cdd68c4456a91f6d82aa</field>
    <field name="keywords">DMA_CFG_SIZE_16BIT DMA_CFG_SIZE_16BIT</field>
    <field name="text">DMA transfers 1 6 bits at a time DMA transfers 1 6 bits at a time</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">DMA_InterruptMode</field>
    <field name="url">group__dma__api.html#ga97af429464af799862f05c17057a5274</field>
    <field name="keywords">DMA_InterruptMode DMA_InterruptMode</field>
    <field name="text">Values that can be passed to DMA_setInterruptMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_configSourceAddress</field>
    <field name="args">(uint32_t base, const void *srcAddr)</field>
    <field name="url">group__dma__api.html#ga98a2ece7483e546416054f2407ce1499</field>
    <field name="keywords">DMA_configSourceAddress DMA_configSourceAddress</field>
    <field name="text">Configures the source address for the DMA channel base is the base address of the DMA channel control registers is a source address This function configures the source address of a DMA channel None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DMA_CFG_CONTINUOUS_DISABLE</field>
    <field name="url">group__dma__api.html#gaa9b388933f94abc75c681a86663e7142</field>
    <field name="keywords">DMA_CFG_CONTINUOUS_DISABLE DMA_CFG_CONTINUOUS_DISABLE</field>
    <field name="text">DMA channel will be disabled at the end of a transfer DMA channel will be disabled at the end of a transfer</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_getTriggerFlagStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#gac19fecbd3d7828bdcb724d2bc366e79d</field>
    <field name="keywords">DMA_getTriggerFlagStatus DMA_getTriggerFlagStatus</field>
    <field name="text">Gets the status of a DMA channel s peripheral trigger flag base is the base address of the DMA channel control registers This function returns true if a peripheral trigger event has occurred The flag is automatically cleared when the first burst transfer begins but if needed it can be cleared using DMA_clearTriggerFlag() Returns true if a peripheral trigger event has occurred and its flag is set Returns false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_getOverflowFlag</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#gac2e3a33ed6408afed5c10e22347ebe49</field>
    <field name="keywords">DMA_getOverflowFlag DMA_getOverflowFlag</field>
    <field name="text">Gets the status of a DMA channel s Overflow Flag base is the base address of the DMA channel control registers This function returns true if the Overflow Flag is set which means peripheral event trigger was received while Peripheral Event Trigger Flag was already set This flag can be cleared by writing to ERRCLR bit using the function DMA_clearErrorFlag() Returns true if the channel is enabled Returns false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_configDestAddress</field>
    <field name="args">(uint32_t base, const void *destAddr)</field>
    <field name="url">group__dma__api.html#gac45d0425e3d1767d92de5e399b099a23</field>
    <field name="keywords">DMA_configDestAddress DMA_configDestAddress</field>
    <field name="text">Configures the destination address for the DMA channel base is the base address of the DMA channel control registers is the destination address This function configures the destinaton address of a DMA channel None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DMA_CFG_CONTINUOUS_ENABLE</field>
    <field name="url">group__dma__api.html#gac9454e1d36871bcdcd3b49aa61f21cec</field>
    <field name="keywords">DMA_CFG_CONTINUOUS_ENABLE DMA_CFG_CONTINUOUS_ENABLE</field>
    <field name="text">DMA reinitializes when the transfer count is zero and waits for a trigger DMA reinitializes when the transfer count is zero and waits for a trigger</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_configChannel</field>
    <field name="args">(uint32_t base, const DMA_ConfigParams *transfParams)</field>
    <field name="url">group__dma__api.html#gace97e0ecaa35c4ba7e8978f24b0b32a6</field>
    <field name="keywords">DMA_configChannel DMA_configChannel</field>
    <field name="text">Setup DMA to transfer data on the specified channel base is Base address of the DMA channel control register configuration parameter Refer struct DMA_ConfigParams This function configures the DMA transfer on the specified channel None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_disableTrigger</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#gad05fcef34d43fc4b27e3b68eedef5ff3</field>
    <field name="keywords">DMA_disableTrigger DMA_disableTrigger</field>
    <field name="text">Disables peripherals from triggering a DMA transfer base is the base address of the DMA channel control registers This function disables the selected peripheral trigger from starting a DMA transfer on the specified channel This also disables the use of the software force using the DMA_forceTrigger() API None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_triggerSoftReset</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#gad547e4884e1dd591dbc7593ac0336d14</field>
    <field name="keywords">DMA_triggerSoftReset DMA_triggerSoftReset</field>
    <field name="text">Channel Soft Reset base is the base address of the DMA channel control registers This function does a soft reset to place the channel into its default state None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_enableTrigger</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#gae9fb39491d7b069639418c8070c5477d</field>
    <field name="keywords">DMA_enableTrigger DMA_enableTrigger</field>
    <field name="text">Enables peripherals to trigger a DMA transfer base is the base address of the DMA channel control registers This function enables the selected peripheral trigger to start a DMA transfer on the specified channel None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_initController</field>
    <field name="args">(void)</field>
    <field name="url">group__dma__api.html#gaf24429e47b48eda3aef685d79053c083</field>
    <field name="keywords">DMA_initController DMA_initController</field>
    <field name="text">Initializes the DMA controller to a known state This function configures does a hard reset of the DMA controller in order to put it into a known state The function also sets the DMA to run free during an emulation suspend see the field DEBUGCTRL.FREE for more info None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DMA_clearErrorFlag</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__dma__api.html#gaf9fec00e68d03c8c1fcc8741fd15d473</field>
    <field name="keywords">DMA_clearErrorFlag DMA_clearErrorFlag</field>
    <field name="text">Clears the DMA channel error flags base is the base address of the DMA channel control registers This function clears both the DMA channel s sync error flag and its overrun error flag None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">DMA_CFG_ONESHOT_DISABLE</field>
    <field name="url">group__dma__api.html#gafb24dc3641edf6de2825263e011276ca</field>
    <field name="keywords">DMA_CFG_ONESHOT_DISABLE DMA_CFG_ONESHOT_DISABLE</field>
    <field name="text">Only one burst transfer performed per trigger Only one burst transfer performed per trigger</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_EMULATION_FREE_RUN</field>
    <field name="url">group__dma__api.html#gga1f299229c8568154779e9a37d8125596a6f4c60bc1b1e35112c38fb01802c0720</field>
    <field name="keywords">DMA_EMULATION_FREE_RUN DMA_EMULATION_FREE_RUN</field>
    <field name="text">Continue DMA operation regardless of emulation suspend</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_EMULATION_STOP</field>
    <field name="url">group__dma__api.html#gga1f299229c8568154779e9a37d8125596ac63080115e0c9ec6e4dffc295e0c45e9</field>
    <field name="keywords">DMA_EMULATION_STOP DMA_EMULATION_STOP</field>
    <field name="text">Transmission stops after current read-write access is completed</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_XINT5</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a02b42a5d33432bc88499ddfddd34db0c</field>
    <field name="keywords">DMA_TRIGGER_XINT5 DMA_TRIGGER_XINT5</field>
    <field name="text">TRIGGER XINT4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_MCPWM1SOCB</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a09c6aa54b08da078c4713c06286b0310</field>
    <field name="keywords">DMA_TRIGGER_MCPWM1SOCB DMA_TRIGGER_MCPWM1SOCB</field>
    <field name="text">TRIGGER MCPWM1SOCA</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_SOFTWARE</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a0a9a7347ed1c488a3592cee213cae79b</field>
    <field name="keywords">DMA_TRIGGER_SOFTWARE DMA_TRIGGER_SOFTWARE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_MCPWM3SOCA</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a0cdf550e5f8c44992d94fb4522bfa11e</field>
    <field name="keywords">DMA_TRIGGER_MCPWM3SOCA DMA_TRIGGER_MCPWM3SOCA</field>
    <field name="text">TRIGGER MCPWM1SOCD</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_MCPWM3SOCB</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a0d23de10d90ad328a12321af6ec270b5</field>
    <field name="keywords">DMA_TRIGGER_MCPWM3SOCB DMA_TRIGGER_MCPWM3SOCB</field>
    <field name="text">TRIGGER MCPWM3SOCA</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_UARTATX</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a0e937067067833f0e19a4bd6ef815cd1</field>
    <field name="keywords">DMA_TRIGGER_UARTATX DMA_TRIGGER_UARTATX</field>
    <field name="text">TRIGGER UARTARX</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_ADCAEVT</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a251cf7d67b30469f9b0729233fdd64dc</field>
    <field name="keywords">DMA_TRIGGER_ADCAEVT DMA_TRIGGER_ADCAEVT</field>
    <field name="text">TRIGGER ADCA2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_XINT2</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a2fc7c5cf5ea5c9dfd0341d0ae2d7033d</field>
    <field name="keywords">DMA_TRIGGER_XINT2 DMA_TRIGGER_XINT2</field>
    <field name="text">TRIGGER XINT1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_TINT1</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a30d298ff199db6d46ee33f5f36cda04f</field>
    <field name="keywords">DMA_TRIGGER_TINT1 DMA_TRIGGER_TINT1</field>
    <field name="text">TRIGGER TINT0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_TINT2</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a34a63182646f2ff12b6adc90cd077b99</field>
    <field name="keywords">DMA_TRIGGER_TINT2 DMA_TRIGGER_TINT2</field>
    <field name="text">TRIGGER TINT1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_SPIATX</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a45b2b59a43ab1ede2911621de60e8a54</field>
    <field name="keywords">DMA_TRIGGER_SPIATX DMA_TRIGGER_SPIATX</field>
    <field name="text">TRIGGER ECAP1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_XINT1</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a4e98385d3caeb0f8ee396ab37f58ba1a</field>
    <field name="keywords">DMA_TRIGGER_XINT1 DMA_TRIGGER_XINT1</field>
    <field name="text">TRIGGER ADCAEVT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_SPIARX</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a5051e85523782550936f592d76330e6f</field>
    <field name="keywords">DMA_TRIGGER_SPIARX DMA_TRIGGER_SPIARX</field>
    <field name="text">TRIGGER SPIATX</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_MCPWM1SOCA</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a71415e554bfa268f0e76be0a250ebcd2</field>
    <field name="keywords">DMA_TRIGGER_MCPWM1SOCA DMA_TRIGGER_MCPWM1SOCA</field>
    <field name="text">TRIGGER XINT5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_MCPWM1SOCC</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a79ef5aa7e89ceeb75b2153c3be5f429c</field>
    <field name="keywords">DMA_TRIGGER_MCPWM1SOCC DMA_TRIGGER_MCPWM1SOCC</field>
    <field name="text">TRIGGER MCPWM1SOCB</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_ECAP1</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a7bd9b4c80cdf102b80ef347b7a08b990</field>
    <field name="keywords">DMA_TRIGGER_ECAP1 DMA_TRIGGER_ECAP1</field>
    <field name="text">TRIGGER TINT2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_ADCA1</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a895b8583ad80c8e1ee5bcdb5933d9d43</field>
    <field name="keywords">DMA_TRIGGER_ADCA1 DMA_TRIGGER_ADCA1</field>
    <field name="text">TRIGGER SOFTWARE</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_XINT3</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a8fef9e5ecb6814795f7323b9f0f94767</field>
    <field name="keywords">DMA_TRIGGER_XINT3 DMA_TRIGGER_XINT3</field>
    <field name="text">TRIGGER XINT2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_UARTARX</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973a94ec49aa27a429310c79f92265dfc013</field>
    <field name="keywords">DMA_TRIGGER_UARTARX DMA_TRIGGER_UARTARX</field>
    <field name="text">TRIGGER SPIARX</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_MCPWM1SOCD</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973ac0dd0765ac9183be8a94c1c7d9c153aa</field>
    <field name="keywords">DMA_TRIGGER_MCPWM1SOCD DMA_TRIGGER_MCPWM1SOCD</field>
    <field name="text">TRIGGER MCPWM1SOCC</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_ADCA2</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973aca3d0d20a5dc46e124d4a4d25f3e0b88</field>
    <field name="keywords">DMA_TRIGGER_ADCA2 DMA_TRIGGER_ADCA2</field>
    <field name="text">TRIGGER ADCA1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_XINT4</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973af7af14e3100a04eed96cf79d2f1af593</field>
    <field name="keywords">DMA_TRIGGER_XINT4 DMA_TRIGGER_XINT4</field>
    <field name="text">TRIGGER XINT3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_TRIGGER_TINT0</field>
    <field name="url">group__dma__api.html#gga754b55b8adb26102e0d825ad5ecf1973afdc53959788c4b7484b68b0e182d75d6</field>
    <field name="keywords">DMA_TRIGGER_TINT0 DMA_TRIGGER_TINT0</field>
    <field name="text">TRIGGER MCPWM3SOCB</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_INT_AT_BEGINNING</field>
    <field name="url">group__dma__api.html#gga97af429464af799862f05c17057a5274ab83f42cce7a0bb8f4dc2950f20b3b409</field>
    <field name="keywords">DMA_INT_AT_BEGINNING DMA_INT_AT_BEGINNING</field>
    <field name="text">DMA interrupt is generated at the beginning of a transfer</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">DMA_INT_AT_END</field>
    <field name="url">group__dma__api.html#gga97af429464af799862f05c17057a5274ad62cd29e6a459fd9d45786032b860fba</field>
    <field name="keywords">DMA_INT_AT_END DMA_INT_AT_END</field>
    <field name="text">DMA interrupt is generated at the end of a transfer</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">ecap_api</field>
    <field name="url">group__ecap__api.html</field>
    <field name="keywords">eCAP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ECAP_MAX_PRESCALER_VALUE</field>
    <field name="url">group__ecap__api.html#ga020e31c9d1c25171cb6f74b8fa7eafa2</field>
    <field name="keywords">ECAP_MAX_PRESCALER_VALUE ECAP_MAX_PRESCALER_VALUE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ECAP_ISR_SOURCE_CAPTURE_EVENT_4</field>
    <field name="url">group__ecap__api.html#ga18116b7d4b675d31ccaa89ab65dc6e13</field>
    <field name="keywords">ECAP_ISR_SOURCE_CAPTURE_EVENT_4 ECAP_ISR_SOURCE_CAPTURE_EVENT_4</field>
    <field name="text">Event 4 ISR source</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ECAP_ISR_SOURCE_COUNTER_PERIOD</field>
    <field name="url">group__ecap__api.html#ga1fbe7c38c371e96adc06ffecbd448958</field>
    <field name="keywords">ECAP_ISR_SOURCE_COUNTER_PERIOD ECAP_ISR_SOURCE_COUNTER_PERIOD</field>
    <field name="text">Counter equals period ISR source</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_selectECAPInput</field>
    <field name="args">(uint32_t base, ECAP_InputCaptureSignals input)</field>
    <field name="url">group__ecap__api.html#ga2fc7bd03e9215936f7ad1769e28d8de7</field>
    <field name="keywords">ECAP_selectECAPInput ECAP_selectECAPInput</field>
    <field name="text">Select eCAP input base is the base address of the ECAP module input is the eCAP input signal This function selects the eCAP input signal Please refer to the ECAP_InputCaptureSignals Enum for the valid values to be passed to input parameter None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_stopCounter</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#ga30dc80033512b249ddaf41aa65f5f2e6</field>
    <field name="keywords">ECAP_stopCounter ECAP_stopCounter</field>
    <field name="text">Stops Time stamp counter base is the base address of the ECAP module This function stops the time stamp counter None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ECAP_SyncOutMode</field>
    <field name="url">group__ecap__api.html#ga3b974cda173284f4c703b9faaf81903b</field>
    <field name="keywords">ECAP_SyncOutMode ECAP_SyncOutMode</field>
    <field name="text">Values that can be passed to ECAP_setSyncOutMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setAPWMShadowCompare</field>
    <field name="args">(uint32_t base, uint32_t compareCount)</field>
    <field name="url">group__ecap__api.html#ga3c43b08f620a2650e7a6d5e819c57bda</field>
    <field name="keywords">ECAP_setAPWMShadowCompare ECAP_setAPWMShadowCompare</field>
    <field name="text">Set eCAP APWM shadow on or off time count base is the base address of the ECAP module compareCount is the on or off count for APWM This function sets the shadow on or off time count of the APWM waveform depending on the polarity of the output If the output as set by ECAP_setAPWMPolarity() is active high then compareCount determines the on time If the output is active low then compareCount determines the off time compareCount takes the actual count which is written to the register The user is responsible for converting the desired frequency or time into the appropriate count value None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ECAP_SyncInPulseSource</field>
    <field name="url">group__ecap__api.html#ga3c4c87e55a04a252c25cffff2af2f2e0</field>
    <field name="keywords">ECAP_SyncInPulseSource ECAP_SyncInPulseSource</field>
    <field name="text">Values that can be passed to ECAP_setSyncInPulseSource() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_resetCounters</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#ga3dad2f6c4fbfac01e2f7e8606654b63f</field>
    <field name="keywords">ECAP_resetCounters ECAP_resetCounters</field>
    <field name="text">Resets eCAP counters and flags base is the base address of the ECAP module This function resets the main counter TSCTR register event filter modulo counter capture events and counter overflow flags None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_loadCounter</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#ga4009fdcbdcca5750fdb1d57650a54a77</field>
    <field name="keywords">ECAP_loadCounter ECAP_loadCounter</field>
    <field name="text">Load time stamp counter base is the base address of the ECAP module This function forces the value in the phase shift counter register to be loaded into Time stamp counter register Make sure to enable loading of Time stamp counter by calling ECAP_enableLoadCounter() function before calling this function None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ECAP_ISR_SOURCE_CAPTURE_EVENT_1</field>
    <field name="url">group__ecap__api.html#ga48c07a9bdb706ea86d09027024daf532</field>
    <field name="keywords">ECAP_ISR_SOURCE_CAPTURE_EVENT_1 ECAP_ISR_SOURCE_CAPTURE_EVENT_1</field>
    <field name="text">Event 1 ISR source</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ECAP_InputCaptureSignals</field>
    <field name="url">group__ecap__api.html#ga50d62d237fd7f51387dd4a5dea22a0fe</field>
    <field name="keywords">ECAP_InputCaptureSignals ECAP_InputCaptureSignals</field>
    <field name="text">Values that can be passed to ECAP_selectECAPInput() as the input parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setAPWMCompare</field>
    <field name="args">(uint32_t base, uint32_t compareCount)</field>
    <field name="url">group__ecap__api.html#ga559342b88e57b3850c5857b098545f8d</field>
    <field name="keywords">ECAP_setAPWMCompare ECAP_setAPWMCompare</field>
    <field name="text">Set eCAP APWM on or off time count base is the base address of the ECAP module compareCount is the on or off count for APWM This function sets the on or off time count of the APWM waveform depending on the polarity of the output If the output as set by ECAP_setAPWMPolarity() is active high then compareCount determines the on time If the output is active low then compareCount determines the off time compareCount takes the actual count which is written to the register The user is responsible for converting the desired frequency or time into the appropriate count value None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_disableInterrupt</field>
    <field name="args">(uint32_t base, uint16_t intFlags)</field>
    <field name="url">group__ecap__api.html#ga5799120e3442c2a696672715c61b2780</field>
    <field name="keywords">ECAP_disableInterrupt ECAP_disableInterrupt</field>
    <field name="text">Disables interrupt source base is the base address of the ECAP module intFlags is the interrupt source to be disabled This function clears and disables eCAP interrupt source The following are valid interrupt sources ECAP_ISR_SOURCE_CAPTURE_EVENT_1 Event 1 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_2 Event 2 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_3 Event 3 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_4 Event 4 generates interrupt ECAP_ISR_SOURCE_COUNTER_OVERFLOW Counter overflow generates interrupt ECAP_ISR_SOURCE_COUNTER_PERIOD Counter equal period generates interrupt ECAP_ISR_SOURCE_COUNTER_COMPARE Counter equal compare generates interrupt None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setAPWMPolarity</field>
    <field name="args">(uint32_t base, ECAP_APWMPolarity polarity)</field>
    <field name="url">group__ecap__api.html#ga5bbc4002878cfa92058d76580f49f6b5</field>
    <field name="keywords">ECAP_setAPWMPolarity ECAP_setAPWMPolarity</field>
    <field name="text">Set eCAP APWM polarity base is the base address of the ECAP module polarity is the polarity of APWM This function sets the polarity of the eCAP in APWM mode Valid inputs for polarity are ECAP_APWM_ACTIVE_HIGH For active high ECAP_APWM_ACTIVE_LOW For active low None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setSyncInPulseSource</field>
    <field name="args">(uint32_t base, ECAP_SyncInPulseSource source)</field>
    <field name="url">group__ecap__api.html#ga5d4f65479bbc2791cb83d4f519040828</field>
    <field name="keywords">ECAP_setSyncInPulseSource ECAP_setSyncInPulseSource</field>
    <field name="text">Set up the source for sync-in pulse base is the base address of the ECAP module source is the sync-in pulse source This function set the sync out pulse mode Valid values for mode are ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_EPWMx sync-in pulse source can be any of the EPWMx sync-out signal ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_ECAPx sync-in pulse source can be selected as any of the ECAPx sync-out signal ECAP_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT5-6 sync-in pulse source can be selected as any of the Input xbar out5-6 signal ECAP_SYNC_IN_PULSE_SRC_DISABLE sync-in pulse is disabled for the ECAP module None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setEventPrescaler</field>
    <field name="args">(uint32_t base, uint16_t preScalerValue)</field>
    <field name="url">group__ecap__api.html#ga62ecef786efdba670057287f06961b16</field>
    <field name="keywords">ECAP_setEventPrescaler ECAP_setEventPrescaler</field>
    <field name="text">Sets the input prescaler base is the base address of the ECAP module preScalerValue is the pre scaler value for ECAP input This function divides the ECAP input scaler The pre scale value is doubled inside the module For example a preScalerValue of 5 will divide the scaler by 1 0 Use a value of 1 to divide the pre scaler by 1 The preScalerValue should be less than ECAP_MAX_PRESCALER_VALUE None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_getInterruptSource</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#ga6ca1a51fa56640b8e9a5450b61b4119f</field>
    <field name="keywords">ECAP_getInterruptSource ECAP_getInterruptSource</field>
    <field name="text">Returns the interrupt flag base is the base address of the ECAP module This function returns the eCAP interrupt flag The following are valid interrupt sources corresponding to the eCAP interrupt flag Returns the eCAP interrupt that has occurred The following are valid return values ECAP_ISR_SOURCE_CAPTURE_EVENT_1 Event 1 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_2 Event 2 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_3 Event 3 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_4 Event 4 generates interrupt ECAP_ISR_SOURCE_COUNTER_OVERFLOW Counter overflow generates interrupt ECAP_ISR_SOURCE_COUNTER_PERIOD Counter equal period generates interrupt ECAP_ISR_SOURCE_COUNTER_COMPARE Counter equal compare generates interrupt User can check if a combination of various interrupts have occurred by ORing the above return values</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_clearInterrupt</field>
    <field name="args">(uint32_t base, uint16_t intFlags)</field>
    <field name="url">group__ecap__api.html#ga6df979b146722014392716f435c9e318</field>
    <field name="keywords">ECAP_clearInterrupt ECAP_clearInterrupt</field>
    <field name="text">Clears interrupt flag base is the base address of the ECAP module intFlags is the interrupt source This function clears eCAP interrupt flags The following are valid interrupt sources ECAP_ISR_SOURCE_CAPTURE_EVENT_1 Event 1 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_2 Event 2 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_3 Event 3 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_4 Event 4 generates interrupt ECAP_ISR_SOURCE_COUNTER_OVERFLOW Counter overflow generates interrupt ECAP_ISR_SOURCE_COUNTER_PERIOD Counter equal period generates interrupt ECAP_ISR_SOURCE_COUNTER_COMPARE Counter equal compare generates interrupt None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_disableTimeStampCapture</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#ga6f2fd96fa823096442f64d0e99e30c20</field>
    <field name="keywords">ECAP_disableTimeStampCapture ECAP_disableTimeStampCapture</field>
    <field name="text">Disables time stamp capture base is the base address of the ECAP module This function disables time stamp count to be captured None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_enableLoadCounter</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#ga713d19d4f76ad7f7b18137c1f9ed9475</field>
    <field name="keywords">ECAP_enableLoadCounter ECAP_enableLoadCounter</field>
    <field name="text">Enable counter loading with phase shift value base is the base address of the ECAP module This function enables loading of the counter with the value present in the phase shift counter as defined by the ECAP_setPhaseShiftCount() function None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_clearGlobalInterrupt</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#ga71ada92fd0a3060cf416b5669f2867b5</field>
    <field name="keywords">ECAP_clearGlobalInterrupt ECAP_clearGlobalInterrupt</field>
    <field name="text">Clears global interrupt flag base is the base address of the ECAP module This function clears the global interrupt bit None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ECAP_APWMPolarity</field>
    <field name="url">group__ecap__api.html#ga721df1b285568425f14b777252fa3ef4</field>
    <field name="keywords">ECAP_APWMPolarity ECAP_APWMPolarity</field>
    <field name="text">Values that can be passed to ECAP_setAPWMPolarity() as the polarity parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_enableInterrupt</field>
    <field name="args">(uint32_t base, uint16_t intFlags)</field>
    <field name="url">group__ecap__api.html#ga7345bdf60bc4ced84edbd01c36ac1528</field>
    <field name="keywords">ECAP_enableInterrupt ECAP_enableInterrupt</field>
    <field name="text">Enables interrupt source base is the base address of the ECAP module intFlags is the interrupt source to be enabled This function sets and enables eCAP interrupt source The following are valid interrupt sources ECAP_ISR_SOURCE_CAPTURE_EVENT_1 Event 1 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_2 Event 2 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_3 Event 3 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_4 Event 4 generates interrupt ECAP_ISR_SOURCE_COUNTER_OVERFLOW Counter overflow generates interrupt ECAP_ISR_SOURCE_COUNTER_PERIOD Counter equal period generates interrupt ECAP_ISR_SOURCE_COUNTER_COMPARE Counter equal compare generates interrupt None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ECAP_EventPolarity</field>
    <field name="url">group__ecap__api.html#ga74157b9f7ea65fa58756b73d7b94c859</field>
    <field name="keywords">ECAP_EventPolarity ECAP_EventPolarity</field>
    <field name="text">Values that can be passed to ECAP_setEventPolarity() as the polarity parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ECAP_ISR_SOURCE_CAPTURE_EVENT_3</field>
    <field name="url">group__ecap__api.html#ga81f1fee3d3f5ac946361094cd5fa221d</field>
    <field name="keywords">ECAP_ISR_SOURCE_CAPTURE_EVENT_3 ECAP_ISR_SOURCE_CAPTURE_EVENT_3</field>
    <field name="text">Event 3 ISR source</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_disableCounterResetOnEvent</field>
    <field name="args">(uint32_t base, ECAP_Events event)</field>
    <field name="url">group__ecap__api.html#ga841281e729c8e70f9fcd76b1c3ce2529</field>
    <field name="keywords">ECAP_disableCounterResetOnEvent ECAP_disableCounterResetOnEvent</field>
    <field name="text">Disables counter reset on events base is the base address of the ECAP module event is the event number the time base gets reset This function disables the base timer TSCTR from being reset on capture event provided by the variable event Valid inputs for event are ECAP_EVENT_1 to ECAP_EVENT_4 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_enableAPWMMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#ga886af56dcea5014903cc2adb12661006</field>
    <field name="keywords">ECAP_enableAPWMMode ECAP_enableAPWMMode</field>
    <field name="text">Sets eCAP in APWM mode base is the base address of the ECAP module This function sets the eCAP module to operate in APWM mode None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setEventPolarity</field>
    <field name="args">(uint32_t base, ECAP_Events event, ECAP_EventPolarity polarity)</field>
    <field name="url">group__ecap__api.html#ga8cbaa5b5427c96adea11f5ddd9e4b788</field>
    <field name="keywords">ECAP_setEventPolarity ECAP_setEventPolarity</field>
    <field name="text">Sets the Capture event polarity base is the base address of the ECAP module event is the event number polarity is the polarity of the event This function sets the polarity of a given event The value of event is between ECAP_EVENT_1 and ECAP_EVENT_4 inclusive corresponding to the four available events.For each event the polarity value determines the edge on which the capture is activated For a rising edge use a polarity value of ECAP_EVNT_RISING_EDGE and for a falling edge use a polarity of ECAP_EVNT_FALLING_EDGE None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_forceInterrupt</field>
    <field name="args">(uint32_t base, uint16_t intFlags)</field>
    <field name="url">group__ecap__api.html#ga8fb5bbc7c8090c1782c0c12c3b0136a5</field>
    <field name="keywords">ECAP_forceInterrupt ECAP_forceInterrupt</field>
    <field name="text">Forces interrupt source base is the base address of the ECAP module intFlags is the interrupt source This function forces and enables eCAP interrupt source The following are valid interrupt sources ECAP_ISR_SOURCE_CAPTURE_EVENT_1 Event 1 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_2 Event 2 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_3 Event 3 generates interrupt ECAP_ISR_SOURCE_CAPTURE_EVENT_4 Event 4 generates interrupt ECAP_ISR_SOURCE_COUNTER_OVERFLOW Counter overflow generates interrupt ECAP_ISR_SOURCE_COUNTER_PERIOD Counter equal period generates interrupt ECAP_ISR_SOURCE_COUNTER_COMPARE Counter equal compare generates interrupt None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setAPWMPeriod</field>
    <field name="args">(uint32_t base, uint32_t periodCount)</field>
    <field name="url">group__ecap__api.html#ga91e6196b4970568f9f205c0b4f6c1f8b</field>
    <field name="keywords">ECAP_setAPWMPeriod ECAP_setAPWMPeriod</field>
    <field name="text">Set eCAP APWM period base is the base address of the ECAP module periodCount is the period count for APWM This function sets the period count of the APWM waveform periodCount takes the actual count which is written to the register The user is responsible for converting the desired frequency or time into the period count None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_enableCounterResetOnEvent</field>
    <field name="args">(uint32_t base, ECAP_Events event)</field>
    <field name="url">group__ecap__api.html#ga9a08b2c9d3f2ac7c82df651897740bd6</field>
    <field name="keywords">ECAP_enableCounterResetOnEvent ECAP_enableCounterResetOnEvent</field>
    <field name="text">Enables counter reset on an event base is the base address of the ECAP module event is the event number the time base gets reset This function enables the base timer TSCTR to be reset on capture event provided by the variable event Valid inputs for event are ECAP_EVENT_1 to ECAP_EVENT_4 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_getModuloCounterStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#gaa12a67944c2b31064cb3601873a669cd</field>
    <field name="keywords">ECAP_getModuloCounterStatus ECAP_getModuloCounterStatus</field>
    <field name="text">Return the Modulo counter status base is the base address of the ECAP module This function returns the modulo counter status indicating which register gets loaded on the next capture event Returns an ECAP_EVENT_n value indicating that CAPn is the register to be loaded on the next event</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_startCounter</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#gaa76a546e94b7af20769b5a2018703acc</field>
    <field name="keywords">ECAP_startCounter ECAP_startCounter</field>
    <field name="text">Starts Time stamp counter base is the base address of the ECAP module This function starts the time stamp counter None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_reArm</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#gaaa5cd279370b0cbc35b5979c0a3f81d0</field>
    <field name="keywords">ECAP_reArm ECAP_reArm</field>
    <field name="text">Re-arms the eCAP module base is the base address of the ECAP module This function re-arms the eCAP module None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ECAP_ISR_SOURCE_COUNTER_COMPARE</field>
    <field name="url">group__ecap__api.html#gabead4b701c7a637dec72d535ae770f56</field>
    <field name="keywords">ECAP_ISR_SOURCE_COUNTER_COMPARE ECAP_ISR_SOURCE_COUNTER_COMPARE</field>
    <field name="text">Counter equals compare ISR source</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ECAP_ISR_SOURCE_COUNTER_OVERFLOW</field>
    <field name="url">group__ecap__api.html#gac41d1a3aa7f926374903c0801d183d6f</field>
    <field name="keywords">ECAP_ISR_SOURCE_COUNTER_OVERFLOW ECAP_ISR_SOURCE_COUNTER_OVERFLOW</field>
    <field name="text">Counter overflow ISR source</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setCaptureMode</field>
    <field name="args">(uint32_t base, ECAP_CaptureMode mode, ECAP_Events event)</field>
    <field name="url">group__ecap__api.html#gac5994e5867e046e98be8261c9a91b238</field>
    <field name="keywords">ECAP_setCaptureMode ECAP_setCaptureMode</field>
    <field name="text">Sets the capture mode base is the base address of the ECAP module mode is the capture mode event is the event number at which the counter stops or wraps This function sets the eCAP module to a continuous or one-shot mode The value of mode should be either ECAP_CONTINUOUS_CAPTURE_MODE or ECAP_ONE_SHOT_CAPTURE_MODE corresponding to continuous or one-shot mode respectively The value of event determines the event number at which the counter stops in one-shot mode or the counter wraps in continuous mode The value of event should be between ECAP_EVENT_1 and ECAP_EVENT_4 corresponding to the valid event numbers None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setPhaseShiftCount</field>
    <field name="args">(uint32_t base, uint32_t shiftCount)</field>
    <field name="url">group__ecap__api.html#gac746b5c6a5780223c7061334b8131efc</field>
    <field name="keywords">ECAP_setPhaseShiftCount ECAP_setPhaseShiftCount</field>
    <field name="text">Sets a phase shift value count base is the base address of the ECAP module shiftCount is the phase shift value This function writes a phase shift value to be loaded into the main time stamp counter None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_disableLoadCounter</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#gaca86dba3054e00d662a13e9c1f49a2d2</field>
    <field name="keywords">ECAP_disableLoadCounter ECAP_disableLoadCounter</field>
    <field name="text">Disable counter loading with phase shift value base is the base address of the ECAP module This function disables loading of the counter with the value present in the phase shift counter as defined by the ECAP_setPhaseShiftCount() function None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_getTimeBaseCounter</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#gacce7a668617181453944a47e64c4ab60</field>
    <field name="keywords">ECAP_getTimeBaseCounter ECAP_getTimeBaseCounter</field>
    <field name="text">Returns the time base counter value base is the base address of the ECAP module This function returns the time base counter value Returns the time base counter value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setEmulationMode</field>
    <field name="args">(uint32_t base, ECAP_EmulationMode mode)</field>
    <field name="url">group__ecap__api.html#gacda7e8d137a05f23fd285ac655d493c5</field>
    <field name="keywords">ECAP_setEmulationMode ECAP_setEmulationMode</field>
    <field name="text">Configures emulation mode base is the base address of the ECAP module mode is the emulation mode This function configures the eCAP counter TSCTR to the desired emulation mode when emulation suspension occurs Valid inputs for mode are ECAP_EMULATION_STOP Counter is stopped immediately ECAP_EMULATION_RUN_TO_ZERO Counter runs till it reaches 0 ECAP_EMULATION_FREE_RUN Counter is not affected None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_getEventTimeStamp</field>
    <field name="args">(uint32_t base, ECAP_Events event)</field>
    <field name="url">group__ecap__api.html#gad97295535b95e152c80b4caec1e2a9c2</field>
    <field name="keywords">ECAP_getEventTimeStamp ECAP_getEventTimeStamp</field>
    <field name="text">Returns event time stamp base is the base address of the ECAP module event is the event number This function returns the current time stamp count of the given event Valid values for event are ECAP_EVENT_1 to ECAP_EVENT_4 Event time stamp value or 0 if event is invalid</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ECAP_CaptureMode</field>
    <field name="url">group__ecap__api.html#gadec1bfe3dcb4cb346ba3149d0c359e7e</field>
    <field name="keywords">ECAP_CaptureMode ECAP_CaptureMode</field>
    <field name="text">Values that can be passed to ECAP_setCaptureMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setSyncOutMode</field>
    <field name="args">(uint32_t base, ECAP_SyncOutMode mode)</field>
    <field name="url">group__ecap__api.html#gae51b45d2b52d8a559d3354793df14e27</field>
    <field name="keywords">ECAP_setSyncOutMode ECAP_setSyncOutMode</field>
    <field name="text">Configures Sync out signal mode base is the base address of the ECAP module mode is the sync out mode This function sets the sync out mode Valid parameters for mode are ECAP_SYNC_OUT_SYNCI Trigger sync out on sync-in event ECAP_SYNC_OUT_COUNTER_PRD Trigger sync out when counter equals period ECAP_SYNC_OUT_DISABLED Disable sync out None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setDMASource</field>
    <field name="args">(uint32_t base, ECAP_Events event)</field>
    <field name="url">group__ecap__api.html#gae9e23314acfa413a8f92aa68849dd150</field>
    <field name="keywords">ECAP_setDMASource ECAP_setDMASource</field>
    <field name="text">Sets the eCAP DMA source base is the base address of the ECAP module event is the eCAP event for the DMA This function sets the eCAP event source for the DMA trigger Valid values for event are ECAP_EVENT_1 to ECAP_EVENT_4 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_getGlobalInterruptStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#gaef1cb19e30bf402f0d7e6ad59164ccda</field>
    <field name="keywords">ECAP_getGlobalInterruptStatus ECAP_getGlobalInterruptStatus</field>
    <field name="text">Returns the Global interrupt flag base is the base address of the ECAP module This function returns the eCAP Global interrupt flag Returns true if there is a global eCAP interrupt false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_enableCaptureMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#gaf3255e38df7900eebd3775fcb0a3b13c</field>
    <field name="keywords">ECAP_enableCaptureMode ECAP_enableCaptureMode</field>
    <field name="text">Sets eCAP in Capture mode base is the base address of the ECAP module This function sets the eCAP module to operate in Capture mode None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_enableTimeStampCapture</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__ecap__api.html#gaf6c0a363eebd8790068f8b85feb92a11</field>
    <field name="keywords">ECAP_enableTimeStampCapture ECAP_enableTimeStampCapture</field>
    <field name="text">Enables time stamp capture base is the base address of the ECAP module This function enables time stamp count to be captured None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">ECAP_ISR_SOURCE_CAPTURE_EVENT_2</field>
    <field name="url">group__ecap__api.html#gaf7f231cbd40d909ce2a2347533cf3625</field>
    <field name="keywords">ECAP_ISR_SOURCE_CAPTURE_EVENT_2 ECAP_ISR_SOURCE_CAPTURE_EVENT_2</field>
    <field name="text">Event 2 ISR source</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ECAP_Events</field>
    <field name="url">group__ecap__api.html#gaf84d48584bb1432ede6c502395f538f1</field>
    <field name="keywords">ECAP_Events ECAP_Events</field>
    <field name="text">Values that can be passed to ECAP_setEventPolarity() ECAP_setCaptureMode() ECAP_enableCounterResetOnEvent() ECAP_disableCounterResetOnEvent() ECAP_getEventTimeStamp() ECAP_setDMASource() as the event parameter</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">ECAP_EmulationMode</field>
    <field name="url">group__ecap__api.html#gafe3cbee44a90b3d086cbfa77675c88ba</field>
    <field name="keywords">ECAP_EmulationMode ECAP_EmulationMode</field>
    <field name="text">Values that can be passed to ECAP_setEmulationMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ECAP_setAPWMShadowPeriod</field>
    <field name="args">(uint32_t base, uint32_t periodCount)</field>
    <field name="url">group__ecap__api.html#gaff8992e974b399555a00f9d333f99c07</field>
    <field name="keywords">ECAP_setAPWMShadowPeriod ECAP_setAPWMShadowPeriod</field>
    <field name="text">Load eCAP APWM shadow period base is the base address of the ECAP module periodCount is the shadow period count for APWM This function sets the shadow period count of the APWM waveform periodCount takes the actual count which is written to the register The user is responsible for converting the desired frequency or time into the period count None</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_SYNC_OUT_SYNCI</field>
    <field name="url">group__ecap__api.html#gga3b974cda173284f4c703b9faaf81903ba07b50a4703932e30ce3c5aeb10c9f4bd</field>
    <field name="keywords">ECAP_SYNC_OUT_SYNCI ECAP_SYNC_OUT_SYNCI</field>
    <field name="text">sync out on the sync in signal and software force</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_SYNC_OUT_DISABLED</field>
    <field name="url">group__ecap__api.html#gga3b974cda173284f4c703b9faaf81903ba274c19a1e77b373d0ebe9b8ea7fb7818</field>
    <field name="keywords">ECAP_SYNC_OUT_DISABLED ECAP_SYNC_OUT_DISABLED</field>
    <field name="text">Disable sync out signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_SYNC_OUT_COUNTER_PRD</field>
    <field name="url">group__ecap__api.html#gga3b974cda173284f4c703b9faaf81903bad358b137c3f24f0d0534c9bcdf2a7801</field>
    <field name="keywords">ECAP_SYNC_OUT_COUNTER_PRD ECAP_SYNC_OUT_COUNTER_PRD</field>
    <field name="text">sync out on counter equals period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_SYNC_IN_PULSE_SRC_DISABLE</field>
    <field name="url">group__ecap__api.html#gga3c4c87e55a04a252c25cffff2af2f2e0a0134a31cc99fd6b95a8f7d6ee49b9a75</field>
    <field name="keywords">ECAP_SYNC_IN_PULSE_SRC_DISABLE ECAP_SYNC_IN_PULSE_SRC_DISABLE</field>
    <field name="text">Disable Sync-in</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM1</field>
    <field name="url">group__ecap__api.html#gga3c4c87e55a04a252c25cffff2af2f2e0a0ef5b01d986a7dd85f965c10e9114c04</field>
    <field name="keywords">ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM1 ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM1</field>
    <field name="text">Sync-in source is PWM1 sync-out signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM3</field>
    <field name="url">group__ecap__api.html#gga3c4c87e55a04a252c25cffff2af2f2e0a3c8c6288b7af98ee59d54ce55c8a0c9d</field>
    <field name="keywords">ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM3 ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM3</field>
    <field name="text">Sync-in source is PWM 3 sync-out signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT6</field>
    <field name="url">group__ecap__api.html#gga3c4c87e55a04a252c25cffff2af2f2e0a5df192acae562c8d67d1d0e172f55070</field>
    <field name="keywords">ECAP_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT6 ECAP_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT6</field>
    <field name="text">Sync-in source is Input Xbar 6 sync-out signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT5</field>
    <field name="url">group__ecap__api.html#gga3c4c87e55a04a252c25cffff2af2f2e0a72c0edf2e03d91ba61cc1508daac6202</field>
    <field name="keywords">ECAP_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT5 ECAP_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT5</field>
    <field name="text">Sync-in source is Input Xbar 5 sync-out signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_ECAP1</field>
    <field name="url">group__ecap__api.html#gga3c4c87e55a04a252c25cffff2af2f2e0a7baf2275bbd61669e9c67037f707a809</field>
    <field name="keywords">ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_ECAP1 ECAP_SYNC_IN_PULSE_SRC_SYNCOUT_ECAP1</field>
    <field name="text">Sync-in source is ECAP1 sync-out signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR4</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea0e85f5a0d9eafb1144fe3d3f88a9de58</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR4 ECAP_INPUT_INPUTXBAR4</field>
    <field name="text">GPIO Input Crossbar output signal-3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_CMPSS1_CTRIP_HIGH_OR_LOW</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea11a13a912468375e911ccfa1bddaf146</field>
    <field name="keywords">ECAP_INPUT_CMPSS1_CTRIP_HIGH_OR_LOW ECAP_INPUT_CMPSS1_CTRIP_HIGH_OR_LOW</field>
    <field name="text">Compare Subsystem-3 High Trip</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_OUTPUTXBAR2</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea133164321497668c01200255547b3e52</field>
    <field name="keywords">ECAP_INPUT_OUTPUTXBAR2 ECAP_INPUT_OUTPUTXBAR2</field>
    <field name="text">Output Xbar Output-1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR1</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea173917b303cbe6a007a0c35c46e83a36</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR1 ECAP_INPUT_INPUTXBAR1</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_CMPSS2_CTRIP_HIGH</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea1d80684b7da94a0d1c77329d893acf8f</field>
    <field name="keywords">ECAP_INPUT_CMPSS2_CTRIP_HIGH ECAP_INPUT_CMPSS2_CTRIP_HIGH</field>
    <field name="text">Compare Subsystem-1 High Trip</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR12</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea2b61ab6cf1bdf58ae4cb6ea18bad5ed7</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR12 ECAP_INPUT_INPUTXBAR12</field>
    <field name="text">GPIO Input Crossbar output signal-11</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR13</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea2bc27b21006f86571394e126eae44aa5</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR13 ECAP_INPUT_INPUTXBAR13</field>
    <field name="text">GPIO Input Crossbar output signal-12</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR15</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea2d86c8df4e07a6029b3574baa122d6f1</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR15 ECAP_INPUT_INPUTXBAR15</field>
    <field name="text">GPIO Input Crossbar output signal-14</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR9</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea303d4dec3848c334e43c3bc3d49456e5</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR9 ECAP_INPUT_INPUTXBAR9</field>
    <field name="text">GPIO Input Crossbar output signal-8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_CMPSS1_CTRIP_HIGH</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea3539dd6f12b6b4facf720ea60db12427</field>
    <field name="keywords">ECAP_INPUT_CMPSS1_CTRIP_HIGH ECAP_INPUT_CMPSS1_CTRIP_HIGH</field>
    <field name="text">Compare Subsystem-3 Low Trip</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_CMPSS1_CTRIP_LOW</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea3de8f7815d2940f3d69a054317f7c424</field>
    <field name="keywords">ECAP_INPUT_CMPSS1_CTRIP_LOW ECAP_INPUT_CMPSS1_CTRIP_LOW</field>
    <field name="text">ADCA Event2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR16</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea473bcc77e9e5fe81f18ccc61f9b03f5b</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR16 ECAP_INPUT_INPUTXBAR16</field>
    <field name="text">GPIO Input Crossbar output signal-15</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR5</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea5483a6df5744789a533f012505de3116</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR5 ECAP_INPUT_INPUTXBAR5</field>
    <field name="text">GPIO Input Crossbar output signal-4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_CMPSS3_CTRIP_LOW</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea5630c428b93428b2c459224b907c85e1</field>
    <field name="keywords">ECAP_INPUT_CMPSS3_CTRIP_LOW ECAP_INPUT_CMPSS3_CTRIP_LOW</field>
    <field name="text">Compare Subsystem-2 Low Trip</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_ADC_A_EVENT2</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea5964cf2518ed3b10d9a5d666368e0050</field>
    <field name="keywords">ECAP_INPUT_ADC_A_EVENT2 ECAP_INPUT_ADC_A_EVENT2</field>
    <field name="text">ADCA Event3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR10</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea72252e7d515f81f072a195eb8e8f204b</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR10 ECAP_INPUT_INPUTXBAR10</field>
    <field name="text">GPIO Input Crossbar output signal-9</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_ADC_A_EVENT4</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea73c48e2ce9e8de0f92285b24bdc97bd9</field>
    <field name="keywords">ECAP_INPUT_ADC_A_EVENT4 ECAP_INPUT_ADC_A_EVENT4</field>
    <field name="text">Output Xbar Output-8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_ADC_A_EVENT3</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea7a1bbd9e36a1be9a655b70ad7f9d5368</field>
    <field name="keywords">ECAP_INPUT_ADC_A_EVENT3 ECAP_INPUT_ADC_A_EVENT3</field>
    <field name="text">ADCA Event4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_OUTPUTXBAR5</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea7c7b91d169bc993f168ffd04da160e47</field>
    <field name="keywords">ECAP_INPUT_OUTPUTXBAR5 ECAP_INPUT_OUTPUTXBAR5</field>
    <field name="text">Output Xbar Output-4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR6</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea7eb9ef4b42168608c90d91780f7ff79b</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR6 ECAP_INPUT_INPUTXBAR6</field>
    <field name="text">GPIO Input Crossbar output signal-5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_CMPSS2_CTRIP_HIGH_OR_LOW</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea7f0a0a95daceda361ebb9526d774eba5</field>
    <field name="keywords">ECAP_INPUT_CMPSS2_CTRIP_HIGH_OR_LOW ECAP_INPUT_CMPSS2_CTRIP_HIGH_OR_LOW</field>
    <field name="text">Compare Subsystem-1 High Trip or Low Trip</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_OUTPUTXBAR1</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea94a3c1ecb3845a755f7ffd05e773ca7d</field>
    <field name="keywords">ECAP_INPUT_OUTPUTXBAR1 ECAP_INPUT_OUTPUTXBAR1</field>
    <field name="text">GPIO Input Crossbar output signal-16</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_CMPSS2_CTRIP_LOW</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea9ae7c4ee0587e33a8a978df74b0411a4</field>
    <field name="keywords">ECAP_INPUT_CMPSS2_CTRIP_LOW ECAP_INPUT_CMPSS2_CTRIP_LOW</field>
    <field name="text">Compare Subsystem-1 Low Trip</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_CMPSS3_CTRIP_HIGH_OR_LOW</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fea9f8cc0837122b5d2ce037df91e511a69</field>
    <field name="keywords">ECAP_INPUT_CMPSS3_CTRIP_HIGH_OR_LOW ECAP_INPUT_CMPSS3_CTRIP_HIGH_OR_LOW</field>
    <field name="text">Compare Subsystem-1 High Trip or Low Trip</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR8</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0feaa49b4c5e5b08d04ea2c12fdddd4fb84a</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR8 ECAP_INPUT_INPUTXBAR8</field>
    <field name="text">GPIO Input Crossbar output signal-7</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_OUTPUTXBAR4</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0feaa9d1e9bddb853bd44c3be6996b57b367</field>
    <field name="keywords">ECAP_INPUT_OUTPUTXBAR4 ECAP_INPUT_OUTPUTXBAR4</field>
    <field name="text">Output Xbar Output-3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_OUTPUTXBAR3</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0feab2cd37754a7ad7cd646edd8fd365cdbe</field>
    <field name="keywords">ECAP_INPUT_OUTPUTXBAR3 ECAP_INPUT_OUTPUTXBAR3</field>
    <field name="text">Output Xbar Output-2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_OUTPUTXBAR6</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0feab73b262d9d2a7c17bdba14278ba1e1ac</field>
    <field name="keywords">ECAP_INPUT_OUTPUTXBAR6 ECAP_INPUT_OUTPUTXBAR6</field>
    <field name="text">Output Xbar Output-5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_CMPSS3_CTRIP_HIGH</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0fead45cfcd488d2f56a79394a5430cad525</field>
    <field name="keywords">ECAP_INPUT_CMPSS3_CTRIP_HIGH ECAP_INPUT_CMPSS3_CTRIP_HIGH</field>
    <field name="text">Compare Subsystem-2 High Trip</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR3</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0feae0420765d6b543f611afda1455dbd68d</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR3 ECAP_INPUT_INPUTXBAR3</field>
    <field name="text">GPIO Input Crossbar output signal-2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR2</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0feae416c0da747040166132307015e11cfb</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR2 ECAP_INPUT_INPUTXBAR2</field>
    <field name="text">GPIO Input Crossbar output signal-1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_OUTPUTXBAR8</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0feaec125fa3aa38469f6b9fdf5898041670</field>
    <field name="keywords">ECAP_INPUT_OUTPUTXBAR8 ECAP_INPUT_OUTPUTXBAR8</field>
    <field name="text">Output Xbar Output-7</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_OUTPUTXBAR7</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0feaf0a4c0aef90bd143679e88c82f910d43</field>
    <field name="keywords">ECAP_INPUT_OUTPUTXBAR7 ECAP_INPUT_OUTPUTXBAR7</field>
    <field name="text">Output Xbar Output-6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR14</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0feaf31d010b306c0de2bf451a68620c718e</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR14 ECAP_INPUT_INPUTXBAR14</field>
    <field name="text">GPIO Input Crossbar output signal-13</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR11</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0feaf834afadb67fee0eb7ad779ec92e06f1</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR11 ECAP_INPUT_INPUTXBAR11</field>
    <field name="text">GPIO Input Crossbar output signal-10</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_INPUT_INPUTXBAR7</field>
    <field name="url">group__ecap__api.html#gga50d62d237fd7f51387dd4a5dea22a0feafa9d96c20bfb5b58318916d89603c30b</field>
    <field name="keywords">ECAP_INPUT_INPUTXBAR7 ECAP_INPUT_INPUTXBAR7</field>
    <field name="text">GPIO Input Crossbar output signal-6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_APWM_ACTIVE_HIGH</field>
    <field name="url">group__ecap__api.html#gga721df1b285568425f14b777252fa3ef4a18b250bbf0df88c15efc75dcfdabef0e</field>
    <field name="keywords">ECAP_APWM_ACTIVE_HIGH ECAP_APWM_ACTIVE_HIGH</field>
    <field name="text">APWM is active high</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_APWM_ACTIVE_LOW</field>
    <field name="url">group__ecap__api.html#gga721df1b285568425f14b777252fa3ef4ae3ed35eb413cd08d74ea4bb52d41f4f9</field>
    <field name="keywords">ECAP_APWM_ACTIVE_LOW ECAP_APWM_ACTIVE_LOW</field>
    <field name="text">APWM is active low</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_EVNT_RISING_EDGE</field>
    <field name="url">group__ecap__api.html#gga74157b9f7ea65fa58756b73d7b94c859a1b770e0d2568f86a3ef19d27b74f83c5</field>
    <field name="keywords">ECAP_EVNT_RISING_EDGE ECAP_EVNT_RISING_EDGE</field>
    <field name="text">Rising edge polarity</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_EVNT_FALLING_EDGE</field>
    <field name="url">group__ecap__api.html#gga74157b9f7ea65fa58756b73d7b94c859a1bf60bd8868be3c2b4ecb3c4f08cbda1</field>
    <field name="keywords">ECAP_EVNT_FALLING_EDGE ECAP_EVNT_FALLING_EDGE</field>
    <field name="text">Falling edge polarity</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_ONE_SHOT_CAPTURE_MODE</field>
    <field name="url">group__ecap__api.html#ggadec1bfe3dcb4cb346ba3149d0c359e7ea495cd7bc64dbd6551aa1a31e5f94ebe8</field>
    <field name="keywords">ECAP_ONE_SHOT_CAPTURE_MODE ECAP_ONE_SHOT_CAPTURE_MODE</field>
    <field name="text">eCAP operates in one shot capture mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_CONTINUOUS_CAPTURE_MODE</field>
    <field name="url">group__ecap__api.html#ggadec1bfe3dcb4cb346ba3149d0c359e7ea6bb93ba6f860cdbbc41224625f397437</field>
    <field name="keywords">ECAP_CONTINUOUS_CAPTURE_MODE ECAP_CONTINUOUS_CAPTURE_MODE</field>
    <field name="text">eCAP operates in continuous capture mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_EVENT_3</field>
    <field name="url">group__ecap__api.html#ggaf84d48584bb1432ede6c502395f538f1a1f0adb6a52104b1f5eba37ed33ad46ff</field>
    <field name="keywords">ECAP_EVENT_3 ECAP_EVENT_3</field>
    <field name="text">eCAP event 3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_EVENT_4</field>
    <field name="url">group__ecap__api.html#ggaf84d48584bb1432ede6c502395f538f1a275a95809a4915aad084e29ef73b6fc5</field>
    <field name="keywords">ECAP_EVENT_4 ECAP_EVENT_4</field>
    <field name="text">eCAP event 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_EVENT_2</field>
    <field name="url">group__ecap__api.html#ggaf84d48584bb1432ede6c502395f538f1a79cf74a41e6285a917868b0456b6222a</field>
    <field name="keywords">ECAP_EVENT_2 ECAP_EVENT_2</field>
    <field name="text">eCAP event 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_EVENT_1</field>
    <field name="url">group__ecap__api.html#ggaf84d48584bb1432ede6c502395f538f1aa67bf52eb0e219210fa41cec5b509090</field>
    <field name="keywords">ECAP_EVENT_1 ECAP_EVENT_1</field>
    <field name="text">eCAP event 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_EMULATION_FREE_RUN</field>
    <field name="url">group__ecap__api.html#ggafe3cbee44a90b3d086cbfa77675c88baa015989a4413d8ea4543039b2a7a96385</field>
    <field name="keywords">ECAP_EMULATION_FREE_RUN ECAP_EMULATION_FREE_RUN</field>
    <field name="text">TSCTR is not affected by emulation suspension</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_EMULATION_RUN_TO_ZERO</field>
    <field name="url">group__ecap__api.html#ggafe3cbee44a90b3d086cbfa77675c88baab8e16593de14416f5bd645fd6c1a1f33</field>
    <field name="keywords">ECAP_EMULATION_RUN_TO_ZERO ECAP_EMULATION_RUN_TO_ZERO</field>
    <field name="text">TSCTR runs until 0 before stopping on emulation suspension</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">ECAP_EMULATION_STOP</field>
    <field name="url">group__ecap__api.html#ggafe3cbee44a90b3d086cbfa77675c88baafa030aadfc125a617876900be11c60cd</field>
    <field name="keywords">ECAP_EMULATION_STOP ECAP_EMULATION_STOP</field>
    <field name="text">TSCTR is stopped on emulation suspension</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">eqep_api</field>
    <field name="url">group__eqep__api.html</field>
    <field name="keywords">eQEP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setInputPolarity</field>
    <field name="args">(uint32_t base, bool invertQEPA, bool invertQEPB, bool invertIndex, bool invertStrobe)</field>
    <field name="url">group__eqep__api.html#ga00c9bf4bd5ca0fcbb89948ec424904b3</field>
    <field name="keywords">EQEP_setInputPolarity EQEP_setInputPolarity</field>
    <field name="text">Sets the polarity of the eQEP module s input signals base is the base address of the eQEP module invertQEPA is the flag to negate the QEPA input invertQEPB is the flag to negate the QEPA input invertIndex is the flag to negate the index input invertStrobe is the flag to negate the strobe input This function configures the polarity of the inputs to the eQEP module To negate the polarity of any of the input signals pass true into its corresponding parameter in this function Pass false to leave it as-is None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_disableInterrupt</field>
    <field name="args">(uint32_t base, uint16_t intFlags)</field>
    <field name="url">group__eqep__api.html#ga016bf9838bf3f583883d10ae08ed65b9</field>
    <field name="keywords">EQEP_disableInterrupt EQEP_disableInterrupt</field>
    <field name="text">Disables individual eQEP module interrupt sources base is the base address of the eQEP module intFlags is a bit mask of the interrupt sources to be disabled This function disables eQEP module interrupt sources The intFlags parameter can be any of the following values OR d together EQEP_INT_POS_CNT_ERROR Position counter error EQEP_INT_PHASE_ERROR Quadrature phase error EQEP_INT_DIR_CHANGE Quadrature direction change EQEP_INT_WATCHDOG Watchdog time-out EQEP_INT_UNDERFLOW Position counter underflow EQEP_INT_OVERFLOW Position counter overflow EQEP_INT_POS_COMP_READY Position-compare ready EQEP_INT_POS_COMP_MATCH Position-compare match EQEP_INT_STROBE_EVNT_LATCH Strobe event latch EQEP_INT_INDEX_EVNT_LATCH Index event latch EQEP_INT_UNIT_TIME_OUT Unit time-out EQEP_INT_QMA_ERROR QMA error None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_CONFIG_QUADRATURE</field>
    <field name="url">group__eqep__api.html#ga06a1dfb9bb738e28c380b1b252cecaac</field>
    <field name="keywords">EQEP_CONFIG_QUADRATURE EQEP_CONFIG_QUADRATURE</field>
    <field name="text">Quadrature-clock mode Quadrature-clock mode</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_STS_DIR_ON_1ST_IDX</field>
    <field name="url">group__eqep__api.html#ga0f7edb03875c1e2289cb1f90cd6181c4</field>
    <field name="keywords">EQEP_STS_DIR_ON_1ST_IDX EQEP_STS_DIR_ON_1ST_IDX</field>
    <field name="text">Direction was clockwise on first index event Direction was clockwise on first index event</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_COMPARE_STROBE_SYNC_OUT</field>
    <field name="url">group__eqep__api.html#ga14be285d6e139588cf4315889a6b2935</field>
    <field name="keywords">EQEP_COMPARE_STROBE_SYNC_OUT EQEP_COMPARE_STROBE_SYNC_OUT</field>
    <field name="text">Sync output on strobe pin Sync output on strobe pin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_selectSource</field>
    <field name="args">(uint32_t base, EQEP_SourceSelect sourceConfig)</field>
    <field name="url">group__eqep__api.html#ga1547d4503f15dcb53866f0049ddfd932</field>
    <field name="keywords">EQEP_selectSource EQEP_selectSource</field>
    <field name="text">Selects the source for eQEPA/B/I signals base is the base address of the enhanced quadrature encoder pulse eQEP module sourceConfig is the structure that contains source configuration This function configures the sources for QEPA QEPB and Index of eQEP module None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_STS_1ST_IDX_FLAG</field>
    <field name="url">group__eqep__api.html#ga17bb62e70645e005a29f645ed29c2bd2</field>
    <field name="keywords">EQEP_STS_1ST_IDX_FLAG EQEP_STS_1ST_IDX_FLAG</field>
    <field name="text">First index pulse occurred First index pulse occurred</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">EQEP_EmulationMode</field>
    <field name="url">group__eqep__api.html#ga1a29cdf5b9ee72eeb0befcb3b1255842</field>
    <field name="keywords">EQEP_EmulationMode EQEP_EmulationMode</field>
    <field name="text">Values that can be passed to EQEP_setEmulationMode() as the emuMode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_enableInterrupt</field>
    <field name="args">(uint32_t base, uint16_t intFlags)</field>
    <field name="url">group__eqep__api.html#ga1dc01831c8efa4176aa983327ff4f200</field>
    <field name="keywords">EQEP_enableInterrupt EQEP_enableInterrupt</field>
    <field name="text">Enables individual eQEP module interrupt sources base is the base address of the eQEP module intFlags is a bit mask of the interrupt sources to be enabled This function enables eQEP module interrupt sources The intFlags parameter can be any of the following values OR d together EQEP_INT_POS_CNT_ERROR Position counter error EQEP_INT_PHASE_ERROR Quadrature phase error EQEP_INT_DIR_CHANGE Quadrature direction change EQEP_INT_WATCHDOG Watchdog time-out EQEP_INT_UNDERFLOW Position counter underflow EQEP_INT_OVERFLOW Position counter overflow EQEP_INT_POS_COMP_READY Position-compare ready EQEP_INT_POS_COMP_MATCH Position-compare match EQEP_INT_STROBE_EVNT_LATCH Strobe event latch EQEP_INT_INDEX_EVNT_LATCH Index event latch EQEP_INT_UNIT_TIME_OUT Unit time-out EQEP_INT_QMA_ERROR QMA error None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setStrobeSource</field>
    <field name="args">(uint32_t base, EQEP_StrobeSource strobeSrc)</field>
    <field name="url">group__eqep__api.html#ga2167d173aa60cef9b2bb7e602872e02d</field>
    <field name="keywords">EQEP_setStrobeSource EQEP_setStrobeSource</field>
    <field name="text">Set the strobe input source of the eQEP module base is the base address of the eQEP module strobeSrc is the source of the strobe signal This function sets the source of the eQEP module s strobe signal The possible values of the strobeSrc parameter are EQEP_STROBE_FROM_GPIO The strobe is used as-is after passing through the polarity select logic EQEP_STROBE_OR_ADCSOCA The strobe is OR d with the ADCSOCA signal after passing through the polarity select logic EQEP_STROBE_OR_ADCSOCB The strobe is OR d with the ADCSOCB signal after passing through the polarity select logic None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_STS_UNIT_POS_EVNT</field>
    <field name="url">group__eqep__api.html#ga219add3fb5ae0c13308ff1c5333946cb</field>
    <field name="keywords">EQEP_STS_UNIT_POS_EVNT EQEP_STS_UNIT_POS_EVNT</field>
    <field name="text">Unit position event detected Unit position event detected</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_STS_DIR_LATCH</field>
    <field name="url">group__eqep__api.html#ga219eff4a9ccf8326efe2824ad5171a31</field>
    <field name="keywords">EQEP_STS_DIR_LATCH EQEP_STS_DIR_LATCH</field>
    <field name="text">Direction was CW on index Direction was CW on index</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_INDEX_EVNT_LATCH</field>
    <field name="url">group__eqep__api.html#ga2691109a16737ee55d56447f79e26fe2</field>
    <field name="keywords">EQEP_INT_INDEX_EVNT_LATCH EQEP_INT_INDEX_EVNT_LATCH</field>
    <field name="text">Index event latch Index event latch</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getCapturePeriod</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga2bec8bf079b35cf3c6692bd028d09e49</field>
    <field name="keywords">EQEP_getCapturePeriod EQEP_getCapturePeriod</field>
    <field name="text">Gets the encoder capture period base is the base address of the eQEP module This function returns the period count value between the last successive eQEP position events The period count value between the last successive position events</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_QMA_ERROR</field>
    <field name="url">group__eqep__api.html#ga2d1849b7161d006b24dee5ba725d7bda</field>
    <field name="keywords">EQEP_INT_QMA_ERROR EQEP_INT_QMA_ERROR</field>
    <field name="text">QMA error QMA error</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">EQEP_CAPCLKPrescale</field>
    <field name="url">group__eqep__api.html#ga2e04c0498d140cf387ec6ae8faa75bc1</field>
    <field name="keywords">EQEP_CAPCLKPrescale EQEP_CAPCLKPrescale</field>
    <field name="text">Values that can be passed to EQEP_setCaptureConfig() as the capPrescale parameter CAPCLK is the capture timer clock frequency</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_PHASE_ERROR</field>
    <field name="url">group__eqep__api.html#ga2e4c0b607970f908e9328426180e3dbd</field>
    <field name="keywords">EQEP_INT_PHASE_ERROR EQEP_INT_PHASE_ERROR</field>
    <field name="text">Quadrature phase error Quadrature phase error</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_LATCH_RISING_INDEX</field>
    <field name="url">group__eqep__api.html#ga2f447448b6dadf2d85a1d99bd9f09420</field>
    <field name="keywords">EQEP_LATCH_RISING_INDEX EQEP_LATCH_RISING_INDEX</field>
    <field name="text">On rising edge of index On rising edge of index</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_forceInterrupt</field>
    <field name="args">(uint32_t base, uint16_t intFlags)</field>
    <field name="url">group__eqep__api.html#ga339790705b5a774f285be2c386e35624</field>
    <field name="keywords">EQEP_forceInterrupt EQEP_forceInterrupt</field>
    <field name="text">Forces individual eQEP module interrupts base is the base address of the eQEP module intFlags is a bit mask of the interrupt sources to be forced This function forces eQEP module interrupt flags The intFlags parameter can be any of the following values OR d together EQEP_INT_POS_CNT_ERROR EQEP_INT_PHASE_ERROR EQEP_INT_DIR_CHANGE EQEP_INT_WATCHDOG EQEP_INT_UNDERFLOW EQEP_INT_OVERFLOW EQEP_INT_POS_COMP_READY EQEP_INT_POS_COMP_MATCH EQEP_INT_STROBE_EVNT_LATCH EQEP_INT_INDEX_EVNT_LATCH EQEP_INT_UNIT_TIME_OUT EQEP_INT_QMA_ERROR None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INIT_EDGE_DIR_STROBE</field>
    <field name="url">group__eqep__api.html#ga3664028f11634ef8692c1959256f66ce</field>
    <field name="keywords">EQEP_INIT_EDGE_DIR_STROBE EQEP_INIT_EDGE_DIR_STROBE</field>
    <field name="text">On rising edge when clockwise on falling when counter clockwise On rising edge when clockwise on falling when counter clockwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getStrobePositionLatch</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga3baca8f23be6ac826d67de2b4c5ea51e</field>
    <field name="keywords">EQEP_getStrobePositionLatch EQEP_getStrobePositionLatch</field>
    <field name="text">Gets the encoder position that was latched on a strobe event base is the base address of the eQEP module This function returns the value in the strobe position latch register The position counter can be configured to be latched into this register on rising strobe edges only or on rising strobe edges while moving clockwise and falling strobe edges while moving counter-clockwise This is configured using EQEP_setLatchMode() The position count latched on a strobe event</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_enableModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga4368ab746b3e28a341a8c4abef10ca7b</field>
    <field name="keywords">EQEP_enableModule EQEP_enableModule</field>
    <field name="text">Enables the eQEP module base is the base address of the eQEP module This function enables operation of the enhanced quadrature encoder pulse eQEP module The module must be configured before it is enabled EQEP_setConfig() None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_COMPARE_NO_SYNC_OUT</field>
    <field name="url">group__eqep__api.html#ga491cdfbfe78402c9350fac55a7227dfb</field>
    <field name="keywords">EQEP_COMPARE_NO_SYNC_OUT EQEP_COMPARE_NO_SYNC_OUT</field>
    <field name="text">Disable sync output Disable sync output</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_clearInterruptStatus</field>
    <field name="args">(uint32_t base, uint16_t intFlags)</field>
    <field name="url">group__eqep__api.html#ga4c073cac90fa47dcbb66326bcf87980e</field>
    <field name="keywords">EQEP_clearInterruptStatus EQEP_clearInterruptStatus</field>
    <field name="text">Clears eQEP module interrupt sources base is the base address of the eQEP module intFlags is a bit mask of the interrupt sources to be cleared This function clears eQEP module interrupt flags The intFlags parameter can be any of the following values OR d together EQEP_INT_GLOBAL Global interrupt flag EQEP_INT_POS_CNT_ERROR Position counter error EQEP_INT_PHASE_ERROR Quadrature phase error EQEP_INT_DIR_CHANGE Quadrature direction change EQEP_INT_WATCHDOG Watchdog time-out EQEP_INT_UNDERFLOW Position counter underflow EQEP_INT_OVERFLOW Position counter overflow EQEP_INT_POS_COMP_READY Position-compare ready EQEP_INT_POS_COMP_MATCH Position-compare match EQEP_INT_STROBE_EVNT_LATCH Strobe event latch EQEP_INT_INDEX_EVNT_LATCH Index event latch EQEP_INT_UNIT_TIME_OUT Unit time-out EQEP_INT_QMA_ERROR QMA error Note that the EQEP_INT_GLOBAL value is the global interrupt flag In order to get any further eQEP interrupts this flag must be cleared None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_disableUnitTimer</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga5022e70f2f3f9cb233c979bb46a189f3</field>
    <field name="keywords">EQEP_disableUnitTimer EQEP_disableUnitTimer</field>
    <field name="text">Disables the eQEP module unit timer base is the base address of the eQEP module This function disables operation of the eQEP module s peripheral unit timer None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_UNDERFLOW</field>
    <field name="url">group__eqep__api.html#ga50c34e6d8a17f072edf288e484a06937</field>
    <field name="keywords">EQEP_INT_UNDERFLOW EQEP_INT_UNDERFLOW</field>
    <field name="text">Position counter underflow Position counter underflow</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_disableDirectionChangeDuringIndex</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga5100ec1f1365e7225bfafa57419ccd7a</field>
    <field name="keywords">EQEP_disableDirectionChangeDuringIndex EQEP_disableDirectionChangeDuringIndex</field>
    <field name="text">Disables the index direction enhancement mode of the eQEP module base is the base address of the eQEP module This function disables the enhancement mode for direction change during Index event None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_disableModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga572befdf4bda946401ccd89ddb541dc3</field>
    <field name="keywords">EQEP_disableModule EQEP_disableModule</field>
    <field name="text">Disables the eQEP module base is the base address of the enhanced quadrature encoder pulse eQEP module This function disables operation of the eQEP module None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_STS_DIR_FLAG</field>
    <field name="url">group__eqep__api.html#ga57ce9437cfd844a871af657b98add53f</field>
    <field name="keywords">EQEP_STS_DIR_FLAG EQEP_STS_DIR_FLAG</field>
    <field name="text">Direction is CW forward Direction is CW forward</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_disableWatchdog</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga58fa25214257bff3b4214d1c9c223c84</field>
    <field name="keywords">EQEP_disableWatchdog EQEP_disableWatchdog</field>
    <field name="text">Disables the eQEP module watchdog timer base is the base address of the eQEP module This function disables operation of the eQEP module s peripheral watchdog timer None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">EQEP_Source</field>
    <field name="url">group__eqep__api.html#ga59786493454a1c244de2cc2d0888105e</field>
    <field name="keywords">EQEP_Source EQEP_Source</field>
    <field name="text">Possible values of sources for QEPA QEPB and Index signal which are passed as a structure to EQEP_selectSource() as sourceConfig</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_enableDirectionChangeDuringIndex</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga5e817861949e46b3053732ab7751c52c</field>
    <field name="keywords">EQEP_enableDirectionChangeDuringIndex EQEP_enableDirectionChangeDuringIndex</field>
    <field name="text">Enables the index direction enhancement mode of the eQEP module base is the base address of the eQEP module This function enables the enhancement mode for direction change during Index event None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">EQEP_QMAMode</field>
    <field name="url">group__eqep__api.html#ga5fd6d19c4fd26f29f840751cb931b993</field>
    <field name="keywords">EQEP_QMAMode EQEP_QMAMode</field>
    <field name="text">Values that can be passed to EQEP_setQMAModuleMode() as the qmaMode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setSWPositionInit</field>
    <field name="args">(uint32_t base, bool initialize)</field>
    <field name="url">group__eqep__api.html#ga6356cc545cdcd532b1adee9827e54b71</field>
    <field name="keywords">EQEP_setSWPositionInit EQEP_setSWPositionInit</field>
    <field name="text">Sets the software initialization of the encoder position counter base is the base address of the eQEP module initialize is a flag to specify if software initialization of the position counter is enabled This function does a software initialization of the position counter when the initialize parameter is true When false the QEPCTL SWI bit is cleared and no action is taken The init value to be loaded into the position counter can be set with EQEP_setInitialPosition() Additional initialization causes can be configured with EQEP_setPositionInitMode() None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INIT_FALLING_INDEX</field>
    <field name="url">group__eqep__api.html#ga63dcf477643364154405c4e4cf73ceb9</field>
    <field name="keywords">EQEP_INIT_FALLING_INDEX EQEP_INIT_FALLING_INDEX</field>
    <field name="text">On falling edge of index On falling edge of index</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setWatchdogTimerValue</field>
    <field name="args">(uint32_t base, uint16_t value)</field>
    <field name="url">group__eqep__api.html#ga684c5fa3399a102085215ed03b384178</field>
    <field name="keywords">EQEP_setWatchdogTimerValue EQEP_setWatchdogTimerValue</field>
    <field name="text">Sets the eQEP module watchdog timer value base is the base address of the eQEP module value is the value to be written to the watchdog timer This function sets the eQEP module s watchdog timer value None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setPositionCounterConfig</field>
    <field name="args">(uint32_t base, EQEP_PositionResetMode mode, uint32_t maxPosition)</field>
    <field name="url">group__eqep__api.html#ga696c6d0a7907439ddc3e1aad2b03b500</field>
    <field name="keywords">EQEP_setPositionCounterConfig EQEP_setPositionCounterConfig</field>
    <field name="text">Configures eQEP module position counter unit base is the base address of the eQEP module mode is the configuration for the eQEP module position counter maxPosition specifies the maximum position value This function configures the operation of the eQEP module position counter The mode parameter determines the event on which the position counter gets reset It should be passed one of the following values EQEP_POSITION_RESET_IDX EQEP_POSITION_RESET_MAX_POS EQEP_POSITION_RESET_1ST_IDX or EQEP_POSITION_RESET_UNIT_TIME_OUT maxPosition is the maximum value of the position counter and is the value used to reset the position capture when moving in the reverse negative direction None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INIT_DO_NOTHING</field>
    <field name="url">group__eqep__api.html#ga6a713657fcffe8371ea1866c9671414c</field>
    <field name="keywords">EQEP_INIT_DO_NOTHING EQEP_INIT_DO_NOTHING</field>
    <field name="text">Action is disabled Action is disabled</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getCaptureTimerLatch</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga70e4b9a5a768f6db2d82718fe63dc8e7</field>
    <field name="keywords">EQEP_getCaptureTimerLatch EQEP_getCaptureTimerLatch</field>
    <field name="text">Gets the encoder capture timer latch base is the base address of the eQEP module This function returns the value in the capture timer latch register The capture timer value is latched into this register either on a unit time-out event or upon the CPU reading the eQEP position counter This is configured using EQEP_setLatchMode() The edge-capture timer latch value</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_POS_COMP_READY</field>
    <field name="url">group__eqep__api.html#ga7592455507882733828681193ab17fa7</field>
    <field name="keywords">EQEP_INT_POS_COMP_READY EQEP_INT_POS_COMP_READY</field>
    <field name="text">Position-compare ready Position-compare ready</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setPosition</field>
    <field name="args">(uint32_t base, uint32_t position)</field>
    <field name="url">group__eqep__api.html#ga76afa29c083a508a2c11e9d5c4e02c39</field>
    <field name="keywords">EQEP_setPosition EQEP_setPosition</field>
    <field name="text">Sets the current encoder position base is the base address of the eQEP module position is the new position for the encoder This function sets the current position of the encoder the encoder position is then measured relative to this value None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_disableCompare</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga7db7ce7c8b2a58c2067a5459b9d90540</field>
    <field name="keywords">EQEP_disableCompare EQEP_disableCompare</field>
    <field name="text">Disables the eQEP module position-compare unit base is the base address of the eQEP module This function disables operation of the eQEP module s position-compare unit None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getCapturePeriodLatch</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga82dda6fbf8dcb3f8f97f08ce80f58934</field>
    <field name="keywords">EQEP_getCapturePeriodLatch EQEP_getCapturePeriodLatch</field>
    <field name="text">Gets the encoder capture period latch base is the base address of the eQEP module This function returns the value in the capture period latch register The capture period value is latched into this register either on a unit time-out event or upon the CPU reading the eQEP position counter This is configured using EQEP_setLatchMode() The edge-capture period latch value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setLatchMode</field>
    <field name="args">(uint32_t base, uint32_t latchMode)</field>
    <field name="url">group__eqep__api.html#ga843cfd0fa3bd6e83a26f538464667a84</field>
    <field name="keywords">EQEP_setLatchMode EQEP_setLatchMode</field>
    <field name="text">Configures the quadrature modes in which the position count can be latched base is the base address of the eQEP module latchMode is the configuration for latching of the position count and several other registers See below for a description of this parameter This function configures the events on which the position count and several other registers can be latched The latchMode parameter provides the mode as the logical OR of several values EQEP_LATCH_CNT_READ_BY_CPU or EQEP_LATCH_UNIT_TIME_OUT specify the event that latches the position counter This latch register can be read using EQEP_getPositionLatch() The capture timer and capture period are also latched based on this setting and can be read using EQEP_getCaptureTimerLatch() and EQEP_getCapturePeriodLatch() EQEP_LATCH_RISING_STROBE or EQEP_LATCH_EDGE_DIR_STROBE specify which strobe event will latch the position counter into the strobe position latch register This register can be read with EQEP_getStrobePositionLatch() EQEP_LATCH_RISING_INDEX EQEP_LATCH_FALLING_INDEX or EQEP_LATCH_SW_INDEX_MARKER specify which index event will latch the position counter into the index position latch register This register can be read with EQEP_getIndexPositionLatch() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_clearStatus</field>
    <field name="args">(uint32_t base, uint16_t statusFlags)</field>
    <field name="url">group__eqep__api.html#ga860e14bd2cc5a6f46b207388c046fce7</field>
    <field name="keywords">EQEP_clearStatus EQEP_clearStatus</field>
    <field name="text">Clears selected fields of the eQEP module status register base is the base address of the eQEP module statusFlags is the bit mask of the status flags to be cleared This function clears the status register fields indicated by statusFlags The statusFlags parameter is the logical OR of any of the following EQEP_STS_UNIT_POS_EVNT Unit position event detected EQEP_STS_CAP_OVRFLW_ERROR Overflow occurred in eQEP capture timer EQEP_STS_CAP_DIR_ERROR Direction change occurred between position capture events EQEP_STS_1ST_IDX_FLAG Set by the occurrence of the first index pulse Only the above status fields can be cleared All others are read-only non-sticky fields None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_CONFIG_DOWN_COUNT</field>
    <field name="url">group__eqep__api.html#ga87becf509624c77afa90b8c654480084</field>
    <field name="keywords">EQEP_CONFIG_DOWN_COUNT EQEP_CONFIG_DOWN_COUNT</field>
    <field name="text">Down-count mode QDIR 0 Down-count mode QDIR 0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_enableCapture</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga8ccd982069c5c42defffb6debc3adcad</field>
    <field name="keywords">EQEP_enableCapture EQEP_enableCapture</field>
    <field name="text">Enables the eQEP module edge-capture unit base is the base address of the eQEP module This function enables operation of the eQEP module s edge-capture unit None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setInitialPosition</field>
    <field name="args">(uint32_t base, uint32_t position)</field>
    <field name="url">group__eqep__api.html#ga8f73b2a57e453342ad3fb72cf59f1409</field>
    <field name="keywords">EQEP_setInitialPosition EQEP_setInitialPosition</field>
    <field name="text">Sets the init value for the encoder position counter base is the base address of the eQEP module position is the value to be written to the position counter upon initialization This function sets the init value for position of the encoder See EQEP_setPositionInitMode() to set the initialization cause or EQEP_setSWPositionInit() to cause a software initialization None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_STROBE_EVNT_LATCH</field>
    <field name="url">group__eqep__api.html#ga92a962027b2e47b8a65841c6d107428e</field>
    <field name="keywords">EQEP_INT_STROBE_EVNT_LATCH EQEP_INT_STROBE_EVNT_LATCH</field>
    <field name="text">Strobe event latch Strobe event latch</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_CONFIG_2X_RESOLUTION</field>
    <field name="url">group__eqep__api.html#ga92bf5742c11594580cf5a06b53506445</field>
    <field name="keywords">EQEP_CONFIG_2X_RESOLUTION EQEP_CONFIG_2X_RESOLUTION</field>
    <field name="text">Count rising and falling edge Count rising and falling edge</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setQMAModuleMode</field>
    <field name="args">(uint32_t base, EQEP_QMAMode qmaMode)</field>
    <field name="url">group__eqep__api.html#ga94268df1a7a24199c3b9e67a1da8144f</field>
    <field name="keywords">EQEP_setQMAModuleMode EQEP_setQMAModuleMode</field>
    <field name="text">Set the quadrature mode adapter QMA module mode base is the base address of the eQEP module qmaMode is the mode in which the QMA module will operate This function sets the quadrature mode adapter module mode The possible modes are passed to the function through the qmaMode parameter which can take the values EQEP_QMA_MODE_BYPASS EQEP_QMA_MODE_1 or EQEP_QMA_MODE_2 To use the QMA module you must first put the eQEP module into direction-count mode EQEP_CONFIG_CLOCK_DIR using EQEP_setConfig() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_enableWatchdog</field>
    <field name="args">(uint32_t base, uint16_t period)</field>
    <field name="url">group__eqep__api.html#ga95e160174d6cc1d3bc2d8f74848fd0fa</field>
    <field name="keywords">EQEP_enableWatchdog EQEP_enableWatchdog</field>
    <field name="text">Enables the eQEP module watchdog timer base is the base address of the eQEP module period is watchdog period value at which a time-out will occur if no quadrature-clock event is detected This function enables operation of the eQEP module s peripheral watchdog timer When selecting period note that the watchdog timer is clocked from SYSCLKOUT/64 None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INIT_RISING_STROBE</field>
    <field name="url">group__eqep__api.html#ga96a23478757f3f4456a72cb373f9c0f8</field>
    <field name="keywords">EQEP_INIT_RISING_STROBE EQEP_INIT_RISING_STROBE</field>
    <field name="text">On rising edge of strobe On rising edge of strobe</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setEmulationMode</field>
    <field name="args">(uint32_t base, EQEP_EmulationMode emuMode)</field>
    <field name="url">group__eqep__api.html#ga978db2221b196b54f478c553981ad442</field>
    <field name="keywords">EQEP_setEmulationMode EQEP_setEmulationMode</field>
    <field name="text">Set the emulation mode of the eQEP module base is the base address of the eQEP module emuMode is the mode operation upon an emulation suspend This function sets the eQEP module s emulation mode This mode determines how the timers are affected by an emulation suspend Valid values for the emuMode parameter are the following EQEP_EMULATIONMODE_STOPIMMEDIATELY The position counter watchdog counter unit timer and capture timer all stop immediately EQEP_EMULATIONMODE_STOPATROLLOVER The position counter watchdog counter unit timer all count until period rollover The capture timer counts until the next unit period event EQEP_EMULATIONMODE_RUNFREE The position counter watchdog counter unit timer and capture timer are all unaffected by an emulation suspend None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_enableUnitTimer</field>
    <field name="args">(uint32_t base, uint32_t period)</field>
    <field name="url">group__eqep__api.html#ga9833bd1d1984b2d23f88ad718c360a34</field>
    <field name="keywords">EQEP_enableUnitTimer EQEP_enableUnitTimer</field>
    <field name="text">Enables the eQEP module unit timer base is the base address of the eQEP module period is period value at which a unit time-out interrupt is set This function enables operation of the eQEP module s peripheral unit timer The unit timer is clocked by SYSCLKOUT and will set the unit time-out interrupt when it matches the value specified by period None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getInterruptStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga983a1a813a61375efa9f8dc25ff54c3f</field>
    <field name="keywords">EQEP_getInterruptStatus EQEP_getInterruptStatus</field>
    <field name="text">Gets the current interrupt status base is the base address of the eQEP module This function returns the interrupt status for the eQEP module module Returns the current interrupt status enumerated as a bit field of the following values EQEP_INT_GLOBAL Global interrupt flag EQEP_INT_POS_CNT_ERROR Position counter error EQEP_INT_PHASE_ERROR Quadrature phase error EQEP_INT_DIR_CHANGE Quadrature direction change EQEP_INT_WATCHDOG Watchdog time-out EQEP_INT_UNDERFLOW Position counter underflow EQEP_INT_OVERFLOW Position counter overflow EQEP_INT_POS_COMP_READY Position-compare ready EQEP_INT_POS_COMP_MATCH Position-compare match EQEP_INT_STROBE_EVNT_LATCH Strobe event latch EQEP_INT_INDEX_EVNT_LATCH Index event latch EQEP_INT_UNIT_TIME_OUT Unit time-out EQEP_INT_QMA_ERROR QMA error</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_UNIT_TIME_OUT</field>
    <field name="url">group__eqep__api.html#ga9841365ddb3ce855aeb6781e55f10d4f</field>
    <field name="keywords">EQEP_INT_UNIT_TIME_OUT EQEP_INT_UNIT_TIME_OUT</field>
    <field name="text">Unit time-out Unit time-out</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_COMPARE_LOAD_ON_ZERO</field>
    <field name="url">group__eqep__api.html#ga98a073f90226a6dbc9624bc3779471f4</field>
    <field name="keywords">EQEP_COMPARE_LOAD_ON_ZERO EQEP_COMPARE_LOAD_ON_ZERO</field>
    <field name="text">Load on QPOSCNT 0 Load on QPOSCNT 0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getIndexPositionLatch</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#ga98e98255ee71a31b9e26029a2416d326</field>
    <field name="keywords">EQEP_getIndexPositionLatch EQEP_getIndexPositionLatch</field>
    <field name="text">Gets the encoder position that was latched on an index event base is the base address of the eQEP module This function returns the value in the index position latch register The position counter is latched into this register on either a rising index edge a falling index edge or a software index marker This is configured using EQEP_setLatchMode() The position count latched on an index event</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getCaptureTimer</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#gaa046af8dc1439863456bc28d536594d8</field>
    <field name="keywords">EQEP_getCaptureTimer EQEP_getCaptureTimer</field>
    <field name="text">Gets the encoder capture timer value base is the base address of the eQEP module This function returns the time base for the edge capture unit The capture timer value</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_WATCHDOG</field>
    <field name="url">group__eqep__api.html#gaa282d346aa69480bbd99cbeec2909467</field>
    <field name="keywords">EQEP_INT_WATCHDOG EQEP_INT_WATCHDOG</field>
    <field name="text">Watchdog time-out Watchdog time-out</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setDecoderConfig</field>
    <field name="args">(uint32_t base, uint16_t config)</field>
    <field name="url">group__eqep__api.html#gaa5c19b56cbafcd5e37006a015168370e</field>
    <field name="keywords">EQEP_setDecoderConfig EQEP_setDecoderConfig</field>
    <field name="text">Configures eQEP module s quadrature decoder unit base is the base address of the eQEP module config is the configuration for the eQEP module decoder unit This function configures the operation of the eQEP module s quadrature decoder unit The config parameter provides the configuration of the decoder and is the logical OR of several values EQEP_CONFIG_2X_RESOLUTION or EQEP_CONFIG_1X_RESOLUTION specify if both rising and falling edges should be counted or just rising edges EQEP_CONFIG_QUADRATURE EQEP_CONFIG_CLOCK_DIR EQEP_CONFIG_UP_COUNT or EQEP_CONFIG_DOWN_COUNT specify if quadrature signals are being provided on QEPA and QEPB if a direction signal and a clock are being provided or if the direction should be hard-wired for a single direction with QEPA used for input EQEP_CONFIG_NO_SWAP or EQEP_CONFIG_SWAP to specify if the signals provided on QEPA and QEPB should be swapped before being processed EQEP_CONFIG_IGATE_DISABLE or EQEP_CONFIG_IGATE_ENABLE to specify if the gating of the index pulse should be enabled or disabled None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INIT_RISING_INDEX</field>
    <field name="url">group__eqep__api.html#gaa5c8be8d304e87d24b3b6b656d39e5a5</field>
    <field name="keywords">EQEP_INIT_RISING_INDEX EQEP_INIT_RISING_INDEX</field>
    <field name="text">On rising edge of index On rising edge of index</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setCompareConfig</field>
    <field name="args">(uint32_t base, uint16_t config, uint32_t compareValue, uint16_t cycles)</field>
    <field name="url">group__eqep__api.html#gaa8787d771e69ad29d74734ebe438d1d3</field>
    <field name="keywords">EQEP_setCompareConfig EQEP_setCompareConfig</field>
    <field name="text">Configures eQEP module position-compare unit base is the base address of the eQEP module config is the configuration for the eQEP module position-compare unit See below for a description of this parameter compareValue is the value to which the position count value is compared for a position-compare event cycles is the width of the pulse that can be generated on a position-compare event It is in units of 4 SYSCLKOUT cycles This function configures the operation of the eQEP module position-compare unit The config parameter provides the configuration of the position-compare unit and is the logical OR of several values EQEP_COMPARE_NO_SYNC_OUT EQEP_COMPARE_IDX_SYNC_OUT or EQEP_COMPARE_STROBE_SYNC_OUT specify if there is a sync output pulse and which pin should be used EQEP_COMPARE_NO_SHADOW EQEP_COMPARE_LOAD_ON_ZERO or EQEP_COMPARE_LOAD_ON_MATCH specify if a shadow is enabled and when should the load should occur QPOSCNT 0 or QPOSCNT QPOSCOMP The cycles is used to select the width of the sync output pulse The width of the resulting pulse will be cycles 4 the width of a SYSCLKOUT cycle The maximum width is 4 0 9 6 4 SYSCLKOUT cycles You can set the sync pulse width independently using the EQEP_setComparePulseWidth() function None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_CONFIG_IGATE_ENABLE</field>
    <field name="url">group__eqep__api.html#gaa93612db69a97bf404913dfedb6f5397</field>
    <field name="keywords">EQEP_CONFIG_IGATE_ENABLE EQEP_CONFIG_IGATE_ENABLE</field>
    <field name="text">Gate the index pin with strobe Gate the index pin with strobe</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setPositionInitMode</field>
    <field name="args">(uint32_t base, uint16_t initMode)</field>
    <field name="url">group__eqep__api.html#gaab233867516087ab014506d70e5b2a77</field>
    <field name="keywords">EQEP_setPositionInitMode EQEP_setPositionInitMode</field>
    <field name="text">Configures the mode in which the position counter is initialized base is the base address of the eQEP module initMode is the configuration for initializing the position count See below for a description of this parameter This function configures the events on which the position count can be initialized The initMode parameter provides the mode as either EQEP_INIT_DO_NOTHING no action configured or one of the following strobe events index events or a logical OR of both a strobe event and an index event EQEP_INIT_RISING_STROBE or EQEP_INIT_EDGE_DIR_STROBE specify which strobe event will initialize the position counter EQEP_INIT_RISING_INDEX or EQEP_INIT_FALLING_INDEX specify which index event will initialize the position counter Use EQEP_setSWPositionInit() to cause a software initialization and EQEP_setInitialPosition() to set the value that gets loaded into the position counter upon initialization None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_CONFIG_CLOCK_DIR</field>
    <field name="url">group__eqep__api.html#gaac74d64ff17154c73829fe8063d71760</field>
    <field name="keywords">EQEP_CONFIG_CLOCK_DIR EQEP_CONFIG_CLOCK_DIR</field>
    <field name="text">Direction-count mode Direction-count mode</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_LATCH_UNIT_TIME_OUT</field>
    <field name="url">group__eqep__api.html#gaae2720e92123830a97d15f50da10af2b</field>
    <field name="keywords">EQEP_LATCH_UNIT_TIME_OUT EQEP_LATCH_UNIT_TIME_OUT</field>
    <field name="text">On unit time-out event On unit time-out event</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_STS_CAP_DIR_ERROR</field>
    <field name="url">group__eqep__api.html#gaae4ae137605354b7b528f686f9e9ca0b</field>
    <field name="keywords">EQEP_STS_CAP_DIR_ERROR EQEP_STS_CAP_DIR_ERROR</field>
    <field name="text">Direction changed between position capture events Direction changed between position capture events</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setCaptureConfig</field>
    <field name="args">(uint32_t base, EQEP_CAPCLKPrescale capPrescale, EQEP_UPEVNTPrescale evntPrescale)</field>
    <field name="url">group__eqep__api.html#gab2b1786f80bfe40d31b6c7c126e88a86</field>
    <field name="keywords">EQEP_setCaptureConfig EQEP_setCaptureConfig</field>
    <field name="text">Configures eQEP module edge-capture unit base is the base address of the eQEP module capPrescale is the prescaler setting of the eQEP capture timer clk evntPrescale is the prescaler setting of the unit position event frequency This function configures the operation of the eQEP module edge-capture unit The capPrescale parameter provides the configuration of the eQEP capture timer clock rate It determines by which power of 2 between 1 and 1 2 8 inclusive SYSCLKOUT is divided The macros for this parameter are in the format of EQEP_CAPTURE_CLK_DIV_X where X is the divide value For example EQEP_CAPTURE_CLK_DIV_32 will give a capture timer clock frequency that is SYSCLKOUT/32 The evntPrescale parameter determines how frequently a unit position event occurs The macro that can be passed this parameter is in the format EQEP_UNIT_POS_EVNT_DIV_X where X is the number of quadrature clock periods between unit position events For example EQEP_UNIT_POS_EVNT_DIV_16 will result in a unit position event frequency of QCLK/16 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getPosition</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#gab36917fc64ac73f3d82915393a01dcf0</field>
    <field name="keywords">EQEP_getPosition EQEP_getPosition</field>
    <field name="text">Gets the current encoder position base is the base address of the eQEP module This function returns the current position of the encoder Depending upon the configuration of the encoder and the incident of an index pulse this value may or may not contain the expected data that is if in reset on index mode if an index pulse has not been encountered the position counter is not yet aligned with the index pulse The current position of the encoder</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_COMPARE_NO_SHADOW</field>
    <field name="url">group__eqep__api.html#gab7a264ea0011fc79cfdab47e29050cab</field>
    <field name="keywords">EQEP_COMPARE_NO_SHADOW EQEP_COMPARE_NO_SHADOW</field>
    <field name="text">Disable shadow of QPOSCMP Disable shadow of QPOSCMP</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getPositionLatch</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#gab9661724135f749f9180e3b623dc2368</field>
    <field name="keywords">EQEP_getPositionLatch EQEP_getPositionLatch</field>
    <field name="text">Gets the encoder position that was latched on a unit time-out event base is the base address of the eQEP module This function returns the value in the position latch register The position counter is latched into this register either on a unit time-out event The position count latch register value</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_LATCH_FALLING_INDEX</field>
    <field name="url">group__eqep__api.html#gab9dbd9374a6a41602e8d0fafd5dba128</field>
    <field name="keywords">EQEP_LATCH_FALLING_INDEX EQEP_LATCH_FALLING_INDEX</field>
    <field name="text">On falling edge of index On falling edge of index</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_LATCH_SW_INDEX_MARKER</field>
    <field name="url">group__eqep__api.html#gabccb6ba1f58783f68b6a02323700a804</field>
    <field name="keywords">EQEP_LATCH_SW_INDEX_MARKER EQEP_LATCH_SW_INDEX_MARKER</field>
    <field name="text">On software index marker On software index marker</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">EQEP_UPEVNTPrescale</field>
    <field name="url">group__eqep__api.html#gac389cd58696ad8a131ac771c05c2ce41</field>
    <field name="keywords">EQEP_UPEVNTPrescale EQEP_UPEVNTPrescale</field>
    <field name="text">Values that can be passed to EQEP_setCaptureConfig() as the evntPrescale parameter UPEVNT is the unit position event frequency</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_STS_POS_CNT_ERROR</field>
    <field name="url">group__eqep__api.html#gac3fb4dcfa5768a317caf53caa90c8795</field>
    <field name="keywords">EQEP_STS_POS_CNT_ERROR EQEP_STS_POS_CNT_ERROR</field>
    <field name="text">Position counter error Position counter error</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_STS_CAP_OVRFLW_ERROR</field>
    <field name="url">group__eqep__api.html#gac7346cc47f343f0717517b3bffbedc17</field>
    <field name="keywords">EQEP_STS_CAP_OVRFLW_ERROR EQEP_STS_CAP_OVRFLW_ERROR</field>
    <field name="text">Capture timer overflow Capture timer overflow</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_OVERFLOW</field>
    <field name="url">group__eqep__api.html#gac9b1f1a3e68938688dfe473a7efd33b3</field>
    <field name="keywords">EQEP_INT_OVERFLOW EQEP_INT_OVERFLOW</field>
    <field name="text">Position counter overflow Position counter overflow</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getWatchdogTimerValue</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#gaca28a097caedd9e5623d2404888cc9ca</field>
    <field name="keywords">EQEP_getWatchdogTimerValue EQEP_getWatchdogTimerValue</field>
    <field name="text">Gets the eQEP module watchdog timer value base is the base address of the eQEP module Returns the current watchdog timer value</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_COMPARE_LOAD_ON_MATCH</field>
    <field name="url">group__eqep__api.html#gacbc6eb43dbd510c35636155744a8b2f0</field>
    <field name="keywords">EQEP_COMPARE_LOAD_ON_MATCH EQEP_COMPARE_LOAD_ON_MATCH</field>
    <field name="text">Load on QPOSCNT QPOSCMP Load on QPOSCNT QPOSCMP</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_DIR_CHANGE</field>
    <field name="url">group__eqep__api.html#gacc660346f799ebae82fcf2186ed48cef</field>
    <field name="keywords">EQEP_INT_DIR_CHANGE EQEP_INT_DIR_CHANGE</field>
    <field name="text">Quadrature direction change Quadrature direction change</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_CONFIG_1X_RESOLUTION</field>
    <field name="url">group__eqep__api.html#gace6eacaf8731c212937269360c20de07</field>
    <field name="keywords">EQEP_CONFIG_1X_RESOLUTION EQEP_CONFIG_1X_RESOLUTION</field>
    <field name="text">Count rising edge only Count rising edge only</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_CONFIG_IGATE_DISABLE</field>
    <field name="url">group__eqep__api.html#gad05604cf5d479a42b0914b6163c5ee33</field>
    <field name="keywords">EQEP_CONFIG_IGATE_DISABLE EQEP_CONFIG_IGATE_DISABLE</field>
    <field name="text">Disable gating of Index pulse Disable gating of Index pulse</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_CONFIG_SWAP</field>
    <field name="url">group__eqep__api.html#gad36204dbbb3ba201f122f1e741deafbb</field>
    <field name="keywords">EQEP_CONFIG_SWAP EQEP_CONFIG_SWAP</field>
    <field name="text">Swap QEPA and QEPB Swap QEPA and QEPB</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_CONFIG_UP_COUNT</field>
    <field name="url">group__eqep__api.html#gad3b2ab72eae292bddeb1a31cd50aebd4</field>
    <field name="keywords">EQEP_CONFIG_UP_COUNT EQEP_CONFIG_UP_COUNT</field>
    <field name="text">Up-count mode QDIR 1 Up-count mode QDIR 1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#gad5ab2bce7ba238f47e2cb488080e2d81</field>
    <field name="keywords">EQEP_getStatus EQEP_getStatus</field>
    <field name="text">Returns content of the eQEP module status register base is the base address of the eQEP module This function returns the contents of the status register The value it returns is an OR of the following values EQEP_STS_UNIT_POS_EVNT Unit position event detected EQEP_STS_DIR_ON_1ST_IDX If set clockwise rotation forward movement occurred on the first index event EQEP_STS_DIR_FLAG If set movement is clockwise rotation EQEP_STS_DIR_LATCH If set clockwise rotation occurred on last index event marker EQEP_STS_CAP_OVRFLW_ERROR Overflow occurred in eQEP capture timer EQEP_STS_CAP_DIR_ERROR Direction change occurred between position capture events EQEP_STS_1ST_IDX_FLAG Set by the occurrence of the first index pulse EQEP_STS_POS_CNT_ERROR Position counter error occurred Returns the value of the QEP status register</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_LATCH_RISING_STROBE</field>
    <field name="url">group__eqep__api.html#gad7de34d73c83b353e0d13fad1c3610a0</field>
    <field name="keywords">EQEP_LATCH_RISING_STROBE EQEP_LATCH_RISING_STROBE</field>
    <field name="text">On rising edge of strobe On rising edge of strobe</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_POS_COMP_MATCH</field>
    <field name="url">group__eqep__api.html#gad91945dfa5dd3a26fd0fb7d6f36de435</field>
    <field name="keywords">EQEP_INT_POS_COMP_MATCH EQEP_INT_POS_COMP_MATCH</field>
    <field name="text">Position-compare match Position-compare match</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_loadUnitTimer</field>
    <field name="args">(uint32_t base, uint32_t period)</field>
    <field name="url">group__eqep__api.html#gadc650c7570cc1d3b8e24f9006e878b54</field>
    <field name="keywords">EQEP_loadUnitTimer EQEP_loadUnitTimer</field>
    <field name="text">Loads the eQEP module unit timer period as number of SYSCLK cycles base is the base address of the eQEP module period is period value at which a unit time-out interrupt is set This function sets the unit time-out interrupt when it matches the value specified by period The unit timer is clocked by SYSCLKOUT None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_COMPARE_IDX_SYNC_OUT</field>
    <field name="url">group__eqep__api.html#gadec3038f4d3b85abec37fa41764a81a8</field>
    <field name="keywords">EQEP_COMPARE_IDX_SYNC_OUT EQEP_COMPARE_IDX_SYNC_OUT</field>
    <field name="text">Sync output on index pin Sync output on index pin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getError</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#gae0868da515272abb10cb06c720d719e8</field>
    <field name="keywords">EQEP_getError EQEP_getError</field>
    <field name="text">Gets the encoder error indicator base is the base address of the eQEP module This function returns the error indicator for the eQEP module It is an error for both of the signals of the quadrature input to change at the same time Returns true if an error has occurred and false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_disableCapture</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#gae12141021250bf146f6dca9ef8d952f4</field>
    <field name="keywords">EQEP_disableCapture EQEP_disableCapture</field>
    <field name="text">Disables the eQEP module edge-capture unit base is the base address of the eQEP module This function disables operation of the eQEP module s edge-capture unit None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_POS_CNT_ERROR</field>
    <field name="url">group__eqep__api.html#gae2241ac024d06818885714b3665ec067</field>
    <field name="keywords">EQEP_INT_POS_CNT_ERROR EQEP_INT_POS_CNT_ERROR</field>
    <field name="text">Position counter error Position counter error</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_LATCH_CNT_READ_BY_CPU</field>
    <field name="url">group__eqep__api.html#gae4d172d03e542618f6eb83e63a3f5e0a</field>
    <field name="keywords">EQEP_LATCH_CNT_READ_BY_CPU EQEP_LATCH_CNT_READ_BY_CPU</field>
    <field name="text">On position counter read On position counter read</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_getDirection</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#gae65f4dd3398764726a377e9181aa92cf</field>
    <field name="keywords">EQEP_getDirection EQEP_getDirection</field>
    <field name="text">Gets the current direction of rotation base is the base address of the eQEP module This function returns the current direction of rotation In this case current means the most recently detected direction of the encoder it may not be presently moving but this is the direction it last moved before it stopped Returns 1 if moving in the forward direction or 1 if moving in the reverse direction</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_CONFIG_NO_SWAP</field>
    <field name="url">group__eqep__api.html#gae6e8b01df1b88620e0ba79b9be751682</field>
    <field name="keywords">EQEP_CONFIG_NO_SWAP EQEP_CONFIG_NO_SWAP</field>
    <field name="text">Do not swap QEPA and QEPB Do not swap QEPA and QEPB</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_enableCompare</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__eqep__api.html#gaee38258a4d9717164569e88b1bc2c0ce</field>
    <field name="keywords">EQEP_enableCompare EQEP_enableCompare</field>
    <field name="text">Enables the eQEP module position-compare unit base is the base address of the eQEP module This function enables operation of the eQEP module s position-compare unit None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">EQEP_PositionResetMode</field>
    <field name="url">group__eqep__api.html#gaf3573c2969413508df1a45272dcd299a</field>
    <field name="keywords">EQEP_PositionResetMode EQEP_PositionResetMode</field>
    <field name="text">Values that can be passed to EQEP_setPositionCounterConfig() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_LATCH_EDGE_DIR_STROBE</field>
    <field name="url">group__eqep__api.html#gaf396c8b64e253363ac4778d05d287fd1</field>
    <field name="keywords">EQEP_LATCH_EDGE_DIR_STROBE EQEP_LATCH_EDGE_DIR_STROBE</field>
    <field name="text">On rising edge when clockwise on falling when counter clockwise On rising edge when clockwise on falling when counter clockwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">EQEP_setComparePulseWidth</field>
    <field name="args">(uint32_t base, uint16_t cycles)</field>
    <field name="url">group__eqep__api.html#gafa98354bc7fb6edeeaafe09d158b8417</field>
    <field name="keywords">EQEP_setComparePulseWidth EQEP_setComparePulseWidth</field>
    <field name="text">Configures the position-compare unit s sync output pulse width base is the base address of the eQEP module cycles is the width of the pulse that can be generated on a position-compare event It is in units of 4 SYSCLKOUT cycles This function configures the width of the sync output pulse The width of the pulse will be cycles 4 the width of a SYSCLKOUT cycle The maximum width is 4 0 9 6 4 SYSCLKOUT cycles None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">EQEP_INT_GLOBAL</field>
    <field name="url">group__eqep__api.html#gafb4d72a593351ce58f4c502509517c77</field>
    <field name="keywords">EQEP_INT_GLOBAL EQEP_INT_GLOBAL</field>
    <field name="text">Global interrupt flag Global interrupt flag</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">EQEP_StrobeSource</field>
    <field name="url">group__eqep__api.html#gafe83b942b7f9884e57c685be472a4635</field>
    <field name="keywords">EQEP_StrobeSource EQEP_StrobeSource</field>
    <field name="text">Values that can be passed to EQEP_setStrobeSource() as the strobeSrc parameter</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_EMULATIONMODE_STOPIMMEDIATELY</field>
    <field name="url">group__eqep__api.html#gga1a29cdf5b9ee72eeb0befcb3b1255842a1816971ae42ef1163a87b57c0a7fa530</field>
    <field name="keywords">EQEP_EMULATIONMODE_STOPIMMEDIATELY EQEP_EMULATIONMODE_STOPIMMEDIATELY</field>
    <field name="text">Counters stop immediately</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_EMULATIONMODE_RUNFREE</field>
    <field name="url">group__eqep__api.html#gga1a29cdf5b9ee72eeb0befcb3b1255842a210fb7c32be207b01e6aa5ee403790e7</field>
    <field name="keywords">EQEP_EMULATIONMODE_RUNFREE EQEP_EMULATIONMODE_RUNFREE</field>
    <field name="text">Counter unaffected by suspend</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_EMULATIONMODE_STOPATROLLOVER</field>
    <field name="url">group__eqep__api.html#gga1a29cdf5b9ee72eeb0befcb3b1255842ac7fa4c3373dd5f1429fbd72c209052cb</field>
    <field name="keywords">EQEP_EMULATIONMODE_STOPATROLLOVER EQEP_EMULATIONMODE_STOPATROLLOVER</field>
    <field name="text">Counters stop at period rollover</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_CAPTURE_CLK_DIV_4</field>
    <field name="url">group__eqep__api.html#gga2e04c0498d140cf387ec6ae8faa75bc1a0b9e9febfe566db25b3f689906bafcfd</field>
    <field name="keywords">EQEP_CAPTURE_CLK_DIV_4 EQEP_CAPTURE_CLK_DIV_4</field>
    <field name="text">CAPCLK SYSCLKOUT/4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_CAPTURE_CLK_DIV_2</field>
    <field name="url">group__eqep__api.html#gga2e04c0498d140cf387ec6ae8faa75bc1a1d303dc00e63dc7d52e62665c54c703d</field>
    <field name="keywords">EQEP_CAPTURE_CLK_DIV_2 EQEP_CAPTURE_CLK_DIV_2</field>
    <field name="text">CAPCLK SYSCLKOUT/2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_CAPTURE_CLK_DIV_128</field>
    <field name="url">group__eqep__api.html#gga2e04c0498d140cf387ec6ae8faa75bc1a1d901bc10ebf684609bd5395f92e0257</field>
    <field name="keywords">EQEP_CAPTURE_CLK_DIV_128 EQEP_CAPTURE_CLK_DIV_128</field>
    <field name="text">CAPCLK SYSCLKOUT/128</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_CAPTURE_CLK_DIV_16</field>
    <field name="url">group__eqep__api.html#gga2e04c0498d140cf387ec6ae8faa75bc1a5e7b558655786e5eb5094ba76878a0b4</field>
    <field name="keywords">EQEP_CAPTURE_CLK_DIV_16 EQEP_CAPTURE_CLK_DIV_16</field>
    <field name="text">CAPCLK SYSCLKOUT/16</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_CAPTURE_CLK_DIV_32</field>
    <field name="url">group__eqep__api.html#gga2e04c0498d140cf387ec6ae8faa75bc1a7ac6ae576c80c960574ac3f896d406b5</field>
    <field name="keywords">EQEP_CAPTURE_CLK_DIV_32 EQEP_CAPTURE_CLK_DIV_32</field>
    <field name="text">CAPCLK SYSCLKOUT/32</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_CAPTURE_CLK_DIV_1</field>
    <field name="url">group__eqep__api.html#gga2e04c0498d140cf387ec6ae8faa75bc1aa081a90e2a97906dd653e7f6f3af6aff</field>
    <field name="keywords">EQEP_CAPTURE_CLK_DIV_1 EQEP_CAPTURE_CLK_DIV_1</field>
    <field name="text">CAPCLK SYSCLKOUT/1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_CAPTURE_CLK_DIV_64</field>
    <field name="url">group__eqep__api.html#gga2e04c0498d140cf387ec6ae8faa75bc1ac2218dfd4b41be308f2447536712b7fc</field>
    <field name="keywords">EQEP_CAPTURE_CLK_DIV_64 EQEP_CAPTURE_CLK_DIV_64</field>
    <field name="text">CAPCLK SYSCLKOUT/64</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_CAPTURE_CLK_DIV_8</field>
    <field name="url">group__eqep__api.html#gga2e04c0498d140cf387ec6ae8faa75bc1ac399eee146c48306ae0920eac0f2cf12</field>
    <field name="keywords">EQEP_CAPTURE_CLK_DIV_8 EQEP_CAPTURE_CLK_DIV_8</field>
    <field name="text">CAPCLK SYSCLKOUT/8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_CMPSS4</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105ea0cb8c94382d4e4df3cb63a374e1bfac0</field>
    <field name="keywords">EQEP_SOURCE_CMPSS4 EQEP_SOURCE_CMPSS4</field>
    <field name="text">signal comes from CMPSS3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_MCPWMXBAR4</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105ea11fba636202a673891acc5cd0a360c56</field>
    <field name="keywords">EQEP_SOURCE_MCPWMXBAR4 EQEP_SOURCE_MCPWMXBAR4</field>
    <field name="text">signal comes from MCPWMXBAR3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_MCPWMXBAR2</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105ea151233244aeada1c35b680ec814d10be</field>
    <field name="keywords">EQEP_SOURCE_MCPWMXBAR2 EQEP_SOURCE_MCPWMXBAR2</field>
    <field name="text">signal comes from MCPWMXBAR1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_MCPWMXBAR3</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105ea1bcc3acbfb9a178ad869467002e3a864</field>
    <field name="keywords">EQEP_SOURCE_MCPWMXBAR3 EQEP_SOURCE_MCPWMXBAR3</field>
    <field name="text">signal comes from MCPWMXBAR2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_DEVICE_PIN</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105ea1cfc5ab0cd726f0442bf911b9aae5adc</field>
    <field name="keywords">EQEP_SOURCE_DEVICE_PIN EQEP_SOURCE_DEVICE_PIN</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_CMPSS2</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105ea5977a2f5a24f189cd102e600547b4cf6</field>
    <field name="keywords">EQEP_SOURCE_CMPSS2 EQEP_SOURCE_CMPSS2</field>
    <field name="text">signal comes from CMPSS1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_MCPWMXBAR8</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105ea5bd1816635bfcbedcfa3574cdb617674</field>
    <field name="keywords">EQEP_SOURCE_MCPWMXBAR8 EQEP_SOURCE_MCPWMXBAR8</field>
    <field name="text">signal comes from MCPWMXBAR7</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_MCPWMXBAR5</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105ea70836cb2100c6d0f06ff7e712db1af4d</field>
    <field name="keywords">EQEP_SOURCE_MCPWMXBAR5 EQEP_SOURCE_MCPWMXBAR5</field>
    <field name="text">signal comes from MCPWMXBAR4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_CMPSS3</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105ea903e39926085799715817fc2a2343fdd</field>
    <field name="keywords">EQEP_SOURCE_CMPSS3 EQEP_SOURCE_CMPSS3</field>
    <field name="text">signal comes from CMPSS2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_CMPSS1</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105eaa149cf3b7d247d713c4b426d295d3da1</field>
    <field name="keywords">EQEP_SOURCE_CMPSS1 EQEP_SOURCE_CMPSS1</field>
    <field name="text">signal comes from Device Pin</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_MCPWMXBAR6</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105eab32c4ac87a07d7abc47556f9530d898a</field>
    <field name="keywords">EQEP_SOURCE_MCPWMXBAR6 EQEP_SOURCE_MCPWMXBAR6</field>
    <field name="text">signal comes from MCPWMXBAR5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_ZERO</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105eadeda8ad9ce7d5329a8e33ef04ddb238e</field>
    <field name="keywords">EQEP_SOURCE_ZERO EQEP_SOURCE_ZERO</field>
    <field name="text">signal comes from CMPSS4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_MCPWMXBAR7</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105eafa79d54f308398b798854b30bbe55340</field>
    <field name="keywords">EQEP_SOURCE_MCPWMXBAR7 EQEP_SOURCE_MCPWMXBAR7</field>
    <field name="text">signal comes from MCPWMXBAR6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_SOURCE_MCPWMXBAR1</field>
    <field name="url">group__eqep__api.html#gga59786493454a1c244de2cc2d0888105eafbe3d13d96266fa6a40cb7cf1e6720ee</field>
    <field name="keywords">EQEP_SOURCE_MCPWMXBAR1 EQEP_SOURCE_MCPWMXBAR1</field>
    <field name="text">signal tied to zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_QMA_MODE_1</field>
    <field name="url">group__eqep__api.html#gga5fd6d19c4fd26f29f840751cb931b993a138609d77b3039c3cf3ac201b0728b39</field>
    <field name="keywords">EQEP_QMA_MODE_1 EQEP_QMA_MODE_1</field>
    <field name="text">QMA mode-1 operation</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_QMA_MODE_BYPASS</field>
    <field name="url">group__eqep__api.html#gga5fd6d19c4fd26f29f840751cb931b993aad345d06c7d1acbdfda1db4291e893a0</field>
    <field name="keywords">EQEP_QMA_MODE_BYPASS EQEP_QMA_MODE_BYPASS</field>
    <field name="text">QMA module is bypassed</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_QMA_MODE_2</field>
    <field name="url">group__eqep__api.html#gga5fd6d19c4fd26f29f840751cb931b993abd8ad763fd67786f6d38165d9fe002f7</field>
    <field name="keywords">EQEP_QMA_MODE_2 EQEP_QMA_MODE_2</field>
    <field name="text">QMA mode-2 operation</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_UNIT_POS_EVNT_DIV_2048</field>
    <field name="url">group__eqep__api.html#ggac389cd58696ad8a131ac771c05c2ce41a27c5cee51ab363aef1ddb535b03db197</field>
    <field name="keywords">EQEP_UNIT_POS_EVNT_DIV_2048 EQEP_UNIT_POS_EVNT_DIV_2048</field>
    <field name="text">UPEVNT QCLK/2048</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_UNIT_POS_EVNT_DIV_32</field>
    <field name="url">group__eqep__api.html#ggac389cd58696ad8a131ac771c05c2ce41a2b1192a1635b593258557ffbe670a654</field>
    <field name="keywords">EQEP_UNIT_POS_EVNT_DIV_32 EQEP_UNIT_POS_EVNT_DIV_32</field>
    <field name="text">UPEVNT QCLK/32</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_UNIT_POS_EVNT_DIV_1</field>
    <field name="url">group__eqep__api.html#ggac389cd58696ad8a131ac771c05c2ce41a33a2e6fa6be68da99feaf242d885d7a5</field>
    <field name="keywords">EQEP_UNIT_POS_EVNT_DIV_1 EQEP_UNIT_POS_EVNT_DIV_1</field>
    <field name="text">UPEVNT QCLK/1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_UNIT_POS_EVNT_DIV_8</field>
    <field name="url">group__eqep__api.html#ggac389cd58696ad8a131ac771c05c2ce41a56cc134d5ef7336d498dbe0ceecd5e6d</field>
    <field name="keywords">EQEP_UNIT_POS_EVNT_DIV_8 EQEP_UNIT_POS_EVNT_DIV_8</field>
    <field name="text">UPEVNT QCLK/8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_UNIT_POS_EVNT_DIV_1024</field>
    <field name="url">group__eqep__api.html#ggac389cd58696ad8a131ac771c05c2ce41a5a466d7e06fdd017532b97c06373d5d2</field>
    <field name="keywords">EQEP_UNIT_POS_EVNT_DIV_1024 EQEP_UNIT_POS_EVNT_DIV_1024</field>
    <field name="text">UPEVNT QCLK/1024</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_UNIT_POS_EVNT_DIV_512</field>
    <field name="url">group__eqep__api.html#ggac389cd58696ad8a131ac771c05c2ce41a90f439d9fa67eb69947b6036d8dbc9b2</field>
    <field name="keywords">EQEP_UNIT_POS_EVNT_DIV_512 EQEP_UNIT_POS_EVNT_DIV_512</field>
    <field name="text">UPEVNT QCLK/512</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_UNIT_POS_EVNT_DIV_4</field>
    <field name="url">group__eqep__api.html#ggac389cd58696ad8a131ac771c05c2ce41a93129f19d3b2c3672514632f14f07ecf</field>
    <field name="keywords">EQEP_UNIT_POS_EVNT_DIV_4 EQEP_UNIT_POS_EVNT_DIV_4</field>
    <field name="text">UPEVNT QCLK/4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_UNIT_POS_EVNT_DIV_128</field>
    <field name="url">group__eqep__api.html#ggac389cd58696ad8a131ac771c05c2ce41aa108063ed31464b77fb9a323cdfb55e3</field>
    <field name="keywords">EQEP_UNIT_POS_EVNT_DIV_128 EQEP_UNIT_POS_EVNT_DIV_128</field>
    <field name="text">UPEVNT QCLK/128</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_UNIT_POS_EVNT_DIV_64</field>
    <field name="url">group__eqep__api.html#ggac389cd58696ad8a131ac771c05c2ce41aa47daf7f8ba1ecf9a191ba219833f0d0</field>
    <field name="keywords">EQEP_UNIT_POS_EVNT_DIV_64 EQEP_UNIT_POS_EVNT_DIV_64</field>
    <field name="text">UPEVNT QCLK/64</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_UNIT_POS_EVNT_DIV_2</field>
    <field name="url">group__eqep__api.html#ggac389cd58696ad8a131ac771c05c2ce41ab201900100ebdc69cdf236c596b5b371</field>
    <field name="keywords">EQEP_UNIT_POS_EVNT_DIV_2 EQEP_UNIT_POS_EVNT_DIV_2</field>
    <field name="text">UPEVNT QCLK/2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_UNIT_POS_EVNT_DIV_16</field>
    <field name="url">group__eqep__api.html#ggac389cd58696ad8a131ac771c05c2ce41ab4430e043dd293b5f0e0e45caa68874d</field>
    <field name="keywords">EQEP_UNIT_POS_EVNT_DIV_16 EQEP_UNIT_POS_EVNT_DIV_16</field>
    <field name="text">UPEVNT QCLK/16</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_UNIT_POS_EVNT_DIV_256</field>
    <field name="url">group__eqep__api.html#ggac389cd58696ad8a131ac771c05c2ce41ac879545a7ae1cf81d9a1b5bedf856289</field>
    <field name="keywords">EQEP_UNIT_POS_EVNT_DIV_256 EQEP_UNIT_POS_EVNT_DIV_256</field>
    <field name="text">UPEVNT QCLK/256</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_POSITION_RESET_UNIT_TIME_OUT</field>
    <field name="url">group__eqep__api.html#ggaf3573c2969413508df1a45272dcd299aa8be01fb4e6743e0e15387176949acf90</field>
    <field name="keywords">EQEP_POSITION_RESET_UNIT_TIME_OUT EQEP_POSITION_RESET_UNIT_TIME_OUT</field>
    <field name="text">Reset position on a unit time event</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_POSITION_RESET_1ST_IDX</field>
    <field name="url">group__eqep__api.html#ggaf3573c2969413508df1a45272dcd299aa9a0a40da5ec8f2d567fdcd669f17f4b8</field>
    <field name="keywords">EQEP_POSITION_RESET_1ST_IDX EQEP_POSITION_RESET_1ST_IDX</field>
    <field name="text">Reset position on the first index pulse</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_POSITION_RESET_MAX_POS</field>
    <field name="url">group__eqep__api.html#ggaf3573c2969413508df1a45272dcd299aacca54610aa18978dab825649c37df40c</field>
    <field name="keywords">EQEP_POSITION_RESET_MAX_POS EQEP_POSITION_RESET_MAX_POS</field>
    <field name="text">Reset position on maximum position</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_POSITION_RESET_IDX</field>
    <field name="url">group__eqep__api.html#ggaf3573c2969413508df1a45272dcd299aaec22ce0da25fced042f227a7842a0975</field>
    <field name="keywords">EQEP_POSITION_RESET_IDX EQEP_POSITION_RESET_IDX</field>
    <field name="text">Reset position on index pulse</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_STROBE_OR_ADCSOCB</field>
    <field name="url">group__eqep__api.html#ggafe83b942b7f9884e57c685be472a4635a0bd8082d204267bf5d2f0d9d35c40361</field>
    <field name="keywords">EQEP_STROBE_OR_ADCSOCB EQEP_STROBE_OR_ADCSOCB</field>
    <field name="text">Strobe signal OR d with ADCSOCB</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_STROBE_FROM_GPIO</field>
    <field name="url">group__eqep__api.html#ggafe83b942b7f9884e57c685be472a4635a33d0ff3323ce8c4ff6a3bd57839fc105</field>
    <field name="keywords">EQEP_STROBE_FROM_GPIO EQEP_STROBE_FROM_GPIO</field>
    <field name="text">GPIO</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">EQEP_STROBE_OR_ADCSOCA</field>
    <field name="url">group__eqep__api.html#ggafe83b942b7f9884e57c685be472a4635a4c734889686d029ea212983f33355f57</field>
    <field name="keywords">EQEP_STROBE_OR_ADCSOCA EQEP_STROBE_OR_ADCSOCA</field>
    <field name="text">Strobe signal OR d with ADCSOCA</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">flash_api</field>
    <field name="url">group__flash__api.html</field>
    <field name="keywords">Flash</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASH_TRIMCTL_ENABLE_S</field>
    <field name="url">group__flash__api.html#ga13d9afa2e6b6c36b08784c15948aef1e</field>
    <field name="keywords">FLASH_TRIMCTL_ENABLE_S FLASH_TRIMCTL_ENABLE_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_disableCache</field>
    <field name="args">(uint32_t ctrlBase)</field>
    <field name="url">group__flash__api.html#ga17d66dc40412fe0565719d9f29c4f140</field>
    <field name="keywords">Flash_disableCache Flash_disableCache</field>
    <field name="text">Disables data cache ctrlBase is the base address of the flash wrapper control registers None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASH_O_TRIMCOMMIT</field>
    <field name="url">group__flash__api.html#ga194650ba7770e3c0d1398a4b075a2ffc</field>
    <field name="keywords">FLASH_O_TRIMCOMMIT FLASH_O_TRIMCOMMIT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASH_DELAY_CONFIG</field>
    <field name="url">group__flash__api.html#ga1b984f8cbcb88236e6f28911516dca7c</field>
    <field name="keywords">FLASH_DELAY_CONFIG FLASH_DELAY_CONFIG</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_initModule</field>
    <field name="args">(uint32_t ctrlBase, uint32_t eccBase, uint16_t waitstates)</field>
    <field name="url">group__flash__api.html#ga26ce567e2daf0410ce349629b70599df</field>
    <field name="keywords">Flash_initModule Flash_initModule</field>
    <field name="text">Initializes the flash control registers ctrlBase is the base address of the flash wrapper control registers eccBase is the base address of the flash wrapper ECC registers waitstates is the wait-state value This function initializes the flash control registers At reset bank and pump are in sleep A flash access will power up the bank and pump automatically This function will power up Flash bank and pump and set the fallback mode of flash and pump as active This function also sets the number of wait-states for a flash access see Flash_setWaitstates() for more details and enables cache the prefetch mechanism and ECC None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASHCONFIG_BASE</field>
    <field name="url">group__flash__api.html#ga276efbf257505771d8cb5be4b391465b</field>
    <field name="keywords">FLASHCONFIG_BASE FLASHCONFIG_BASE</field>
    <field name="text">Flash Trim Defines Flash Trim Defines</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASH_TRIMLOCK_TRIMLOCKREAD_TRIMLOCKOTHER_M</field>
    <field name="url">group__flash__api.html#ga47bdf104f035ec41bbc908261e4dcfd8</field>
    <field name="keywords">FLASH_TRIMLOCK_TRIMLOCKREAD_TRIMLOCKOTHER_M FLASH_TRIMLOCK_TRIMLOCKREAD_TRIMLOCKOTHER_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_enableECC</field>
    <field name="args">(uint32_t eccBase)</field>
    <field name="url">group__flash__api.html#ga4d08064a46bbd2440d8878308e740924</field>
    <field name="keywords">Flash_enableECC Flash_enableECC</field>
    <field name="text">Enables flash error correction code ECC protection eccBase is the base address of the flash wrapper ECC registers None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASH_O_TRIMCTL</field>
    <field name="url">group__flash__api.html#ga669ee40363b47a7aaaf886ca0bda7ff9</field>
    <field name="keywords">FLASH_O_TRIMCTL FLASH_O_TRIMCTL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_enableDoubleBitECCTestMode</field>
    <field name="args">(uint32_t eccBase)</field>
    <field name="url">group__flash__api.html#ga68a75f861d747b300499ae4622e52436</field>
    <field name="keywords">Flash_enableDoubleBitECCTestMode Flash_enableDoubleBitECCTestMode</field>
    <field name="text">Enables Double Bit ECC Test mode eccBase is the base address of the flash wrapper ECC registers None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_disableDoubleBitECCTestMode</field>
    <field name="args">(uint32_t eccBase)</field>
    <field name="url">group__flash__api.html#ga745320bf4ab87f1e31c70221b79aaa93</field>
    <field name="keywords">Flash_disableDoubleBitECCTestMode Flash_disableDoubleBitECCTestMode</field>
    <field name="text">Disables Double Bit ECC Test mode eccBase is the base address of the flash wrapper ECC registers None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_disableECC</field>
    <field name="args">(uint32_t eccBase)</field>
    <field name="url">group__flash__api.html#ga75fd98a9d0e4e584572353fd834f6ee8</field>
    <field name="keywords">Flash_disableECC Flash_disableECC</field>
    <field name="text">Disables flash error correction code ECC protection eccBase is the base address of the flash wrapper ECC registers None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_enableCache</field>
    <field name="args">(uint32_t ctrlBase)</field>
    <field name="url">group__flash__api.html#ga86d568ad7789cac51856e72f3dc715cf</field>
    <field name="keywords">Flash_enableCache Flash_enableCache</field>
    <field name="text">Enables data cache ctrlBase is the base address of the flash wrapper control registers None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_disablePrefetch</field>
    <field name="args">(uint32_t ctrlBase)</field>
    <field name="url">group__flash__api.html#ga8cb5785a86006f11ee84883f0a417e3b</field>
    <field name="keywords">Flash_disablePrefetch Flash_disablePrefetch</field>
    <field name="text">Disables prefetch mechanism ctrlBase is the base address of the flash wrapper control registers None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASH_DOUBLE_BIT_ECC_TEST_EN</field>
    <field name="url">group__flash__api.html#ga8f1ca203684131e9f45084164f8df083</field>
    <field name="keywords">FLASH_DOUBLE_BIT_ECC_TEST_EN FLASH_DOUBLE_BIT_ECC_TEST_EN</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_disableSingleBitECCTestMode</field>
    <field name="args">(uint32_t eccBase)</field>
    <field name="url">group__flash__api.html#ga8f49b9ab79d8573bf52c544f39421189</field>
    <field name="keywords">Flash_disableSingleBitECCTestMode Flash_disableSingleBitECCTestMode</field>
    <field name="text">Disables Single Bit ECC Test mode eccBase is the base address of the flash wrapper ECC registers None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_writeTrims</field>
    <field name="args">(uint32_t reg_offset, uint32_t mask, uint32_t shift, uint32_t value)</field>
    <field name="url">group__flash__api.html#ga91c808f852b3ffff3460f869647b9345</field>
    <field name="keywords">Flash_writeTrims Flash_writeTrims</field>
    <field name="text">Initializes the flash trim registers None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_enableSingleBitECCTestMode</field>
    <field name="args">(uint32_t eccBase)</field>
    <field name="url">group__flash__api.html#ga9b0624bfabb2c54c46e80fb8cb060da2</field>
    <field name="keywords">Flash_enableSingleBitECCTestMode Flash_enableSingleBitECCTestMode</field>
    <field name="text">Enables Single Bit ECC Test mode eccBase is the base address of the flash wrapper ECC registers None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_setFLWEPROT</field>
    <field name="args">(uint32_t ctrlBase)</field>
    <field name="url">group__flash__api.html#gab26b064b16eacd0e6dc6c52610c6002c</field>
    <field name="keywords">Flash_setFLWEPROT Flash_setFLWEPROT</field>
    <field name="text">Sets the FLWEPROT value of the FLPROT register ctrlBase is the base address of the flash wrapper control registers None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_enablePrefetch</field>
    <field name="args">(uint32_t ctrlBase)</field>
    <field name="url">group__flash__api.html#gabbdf2cfb303a5b4cef08301ba7ad1bda</field>
    <field name="keywords">Flash_enablePrefetch Flash_enablePrefetch</field>
    <field name="text">Enables prefetch mechanism ctrlBase is the base address of the flash wrapper control registers None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASH_SINGLE_BIT_ECC_TEST_EN</field>
    <field name="url">group__flash__api.html#gac431ec71921c91888807bcdac8c2697b</field>
    <field name="keywords">FLASH_SINGLE_BIT_ECC_TEST_EN FLASH_SINGLE_BIT_ECC_TEST_EN</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASH_TRIMLOCK_TRIMLOCKREAD_TRIMLOCKOTHER_S</field>
    <field name="url">group__flash__api.html#gacdc4966dbc393a2d7f20ac560131dd64</field>
    <field name="keywords">FLASH_TRIMLOCK_TRIMLOCKREAD_TRIMLOCKOTHER_S FLASH_TRIMLOCK_TRIMLOCKREAD_TRIMLOCKOTHER_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASH_TRIMCOMMIT_TRIMCOMMITREAD_TRIMCOMMITOTHER_M</field>
    <field name="url">group__flash__api.html#gacf5c6ef278c6661a24a891eaab991694</field>
    <field name="keywords">FLASH_TRIMCOMMIT_TRIMCOMMITREAD_TRIMCOMMITOTHER_M FLASH_TRIMCOMMIT_TRIMCOMMITREAD_TRIMCOMMITOTHER_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASH_O_TRIMLOCK</field>
    <field name="url">group__flash__api.html#gad0f5c305e1406602eefa53fa29d91597</field>
    <field name="keywords">FLASH_O_TRIMLOCK FLASH_O_TRIMLOCK</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASH_TRIMCOMMIT_TRIMCOMMITREAD_TRIMCOMMITOTHER_S</field>
    <field name="url">group__flash__api.html#gad1302024ee3b8947b92b36cf3aa0e266</field>
    <field name="keywords">FLASH_TRIMCOMMIT_TRIMCOMMITREAD_TRIMCOMMITOTHER_S FLASH_TRIMCOMMIT_TRIMCOMMITREAD_TRIMCOMMITOTHER_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">FLASH_TRIMCTL_ENABLE_M</field>
    <field name="url">group__flash__api.html#gad48aed0ad6848704480a5fcf1b3996b6</field>
    <field name="keywords">FLASH_TRIMCTL_ENABLE_M FLASH_TRIMCTL_ENABLE_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Flash_setWaitstates</field>
    <field name="args">(uint32_t ctrlBase, uint16_t waitstates)</field>
    <field name="url">group__flash__api.html#gaeaf8c1707632e8d3e3c51e2b6f72ee05</field>
    <field name="keywords">Flash_setWaitstates Flash_setWaitstates</field>
    <field name="text">Sets the random read wait state amount ctrlBase is the base address of the flash wrapper control registers waitstates is the wait-state value This function sets the number of wait states for a flash read access The waitstates parameter is a number between 0 and 1 5 It is important to look at your device s datasheet for information about what the required minimum flash wait-state is for your selected SYSCLK frequency By default the wait state amount is configured to the maximum 1 5 None</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">gpio_api</field>
    <field name="url">group__gpio__api.html</field>
    <field name="keywords">GPIO</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxCSEL_INDEX</field>
    <field name="url">group__gpio__api.html#ga04ab6e6b8a503adcf626ef7578d960e6</field>
    <field name="keywords">GPIO_GPxCSEL_INDEX GPIO_GPxCSEL_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_commitPortConfig</field>
    <field name="args">(GPIO_Port port, uint32_t pinMask)</field>
    <field name="url">group__gpio__api.html#ga0a7b820d93275fd2d2059dd08c9f6688</field>
    <field name="keywords">GPIO_commitPortConfig GPIO_commitPortConfig</field>
    <field name="text">Commits the lock configuration of the specified pins on the specified port port is the GPIO port being accessed pinMask is a mask of which of the 3 2 pins on the port are affected This function commits the lock configuration registers of the pins specified by the pinMask parameter on the port specified by the port parameter which takes a value in the form of GPIO_PORT_X where X is the port letter For example use GPIO_PORT_A to affect port A GPIOs 0 3 1 The pinMask is a bit-packed value where each bit that is set identifies the pin to be locked Bit 0 represents GPIO port pin 0 bit 1 represents GPIO port pin 1 0 xFFFFFFFF represents all pins on that port and so on Note that once this function is called GPIO_lockPortConfig() and GPIO_unlockPortConfig() will no longer have any effect on the specified pins None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">GPIO_Direction</field>
    <field name="url">group__gpio__api.html#ga0c1bff6c02d7155b78f07abd8c31722f</field>
    <field name="keywords">GPIO_Direction GPIO_Direction</field>
    <field name="text">Values that can be passed to GPIO_setDirectionMode() as the pinIO parameter and returned from GPIO_getDirectionMode()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_setQualificationPeriod</field>
    <field name="args">(uint32_t pin, uint32_t divider)</field>
    <field name="url">group__gpio__api.html#ga10fb74569da5b5c14ed7b0e04af1514b</field>
    <field name="keywords">GPIO_setQualificationPeriod GPIO_setQualificationPeriod</field>
    <field name="text">Sets the qualification period for a set of pins pin is the identifying GPIO number of the pin divider specifies the output drive strength This function sets the qualification period for a set of 8 pins specified by the pin parameter For instance passing in 3 as the value of pin will set the qualification period for GPIO0 through GPIO7 and a value of 9 8 will set the qualification period for GPIO96 through GPIO103 This is because the register field that configures the divider is shared To think of this in terms of an equation configuring pin as n will configure GPIO n 7 through GPIO n 7 7 divider is the value by which the frequency of SYSCLKOUT is divided It can be 1 or an even value between 2 and 5 1 0 inclusive None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_PIN_TYPE_INVERT</field>
    <field name="url">group__gpio__api.html#ga19e485baf2db852c7bbf06054fb9975d</field>
    <field name="keywords">GPIO_PIN_TYPE_INVERT GPIO_PIN_TYPE_INVERT</field>
    <field name="text">Invert polarity on input Invert polarity on input</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_setQualificationMode</field>
    <field name="args">(uint32_t pin, GPIO_QualificationMode qualification)</field>
    <field name="url">group__gpio__api.html#ga1e9b26b531df3ab6a0bc874318b98a98</field>
    <field name="keywords">GPIO_setQualificationMode GPIO_setQualificationMode</field>
    <field name="text">Sets the qualification mode for the specified pin pin is the identifying GPIO number of the pin qualification specifies the qualification mode of the pin This function sets the qualification mode for the specified pin The parameter qualification can be one of the following values GPIO_QUAL_SYNC GPIO_QUAL_3SAMPLE GPIO_QUAL_6SAMPLE GPIO_QUAL_ASYNC To set the qualification sampling period use GPIO_setQualificationPeriod() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_disableInterrupt</field>
    <field name="args">(GPIO_ExternalIntNum extIntNum)</field>
    <field name="url">group__gpio__api.html#ga1f0b54ca259de950f23a795bb15e8794</field>
    <field name="keywords">GPIO_disableInterrupt GPIO_disableInterrupt</field>
    <field name="text">Disables the specified external interrupt extIntNum specifies the external interrupt This function disables the indicated external interrupt sources Only the sources that are enabled can be reflected to the processor interrupt Disabled sources have no effect on the processor The following defines can be used to specify the external interrupt for the extIntNum parameter GPIO_INT_XINT1 GPIO_INT_XINT2 GPIO_INT_XINT3 GPIO_INT_XINT4 GPIO_INT_XINT5 None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_DATA_READ_REGS_STEP</field>
    <field name="url">group__gpio__api.html#ga1f82df22e7fda61515b9deb0dbb2093a</field>
    <field name="keywords">GPIO_DATA_READ_REGS_STEP GPIO_DATA_READ_REGS_STEP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_MUX_TO_GMUX</field>
    <field name="url">group__gpio__api.html#ga20da6278f667cd2d6737c17f49cad908</field>
    <field name="keywords">GPIO_MUX_TO_GMUX GPIO_MUX_TO_GMUX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxMUX_INDEX</field>
    <field name="url">group__gpio__api.html#ga222a5f21b25a6665055c5389dff12e9e</field>
    <field name="keywords">GPIO_GPxMUX_INDEX GPIO_GPxMUX_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_readPortData</field>
    <field name="args">(GPIO_Port port)</field>
    <field name="url">group__gpio__api.html#ga248b8f6bbaabb86f8626817bb8d892e7</field>
    <field name="keywords">GPIO_readPortData GPIO_readPortData</field>
    <field name="text">Reads the data on the specified port port is the GPIO port being accessed in the form of GPIO_PORT_X where X is the port letter Returns the value available on pin for the specified port Each bit of the the return value represents a pin on the port where bit 0 represents GPIO port pin 0 bit 1 represents GPIO port pin 1 and so on</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxCR_INDEX</field>
    <field name="url">group__gpio__api.html#ga2afc3226395bd4e92195edc43a1c8c98</field>
    <field name="keywords">GPIO_GPxCR_INDEX GPIO_GPxCR_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_readPin</field>
    <field name="args">(uint32_t pin)</field>
    <field name="url">group__gpio__api.html#ga34589426d39e585686fcb1b793b4fb18</field>
    <field name="keywords">GPIO_readPin GPIO_readPin</field>
    <field name="text">Reads the value present on the specified pin pin is the identifying GPIO number of the pin The value at the specified pin are read as specified by pin The value is returned for both input and output pins The pin is specified by its numerical value For example GPIO34 is specified by passing 3 4 as pin Returns the value in the data register for the specified pin</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxQSEL_INDEX</field>
    <field name="url">group__gpio__api.html#ga35cb5ea30528967b469f120422d8cc4f</field>
    <field name="keywords">GPIO_GPxQSEL_INDEX GPIO_GPxQSEL_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_setAnalogMode</field>
    <field name="args">(uint32_t pin, GPIO_AnalogMode mode)</field>
    <field name="url">group__gpio__api.html#ga36ff18f0a994cee136c665f72c324b5c</field>
    <field name="keywords">GPIO_setAnalogMode GPIO_setAnalogMode</field>
    <field name="text">Sets the analog mode of the specified pin pin is the identifying GPIO number of the pin mode is the selected analog mode This function configures the specified pin for either analog or digital mode Not all GPIO pins have the ability to be switched to analog mode so refer to the technical reference manual for details This setting should be thought of as another level of muxing The parameter mode is an enumerated data type that can be one of the following values GPIO_ANALOG_DISABLED Pin is in digital mode GPIO_ANALOG_ENABLED Pin is in analog mode The pin is specified by its numerical value For example GPIO34 is specified by passing 3 4 as pin Note The pin parameter is applicable for both AIO and GPIO because the GPAxMSEL.GPIOy register configures for both None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_PIN_TYPE_PULLUP</field>
    <field name="url">group__gpio__api.html#ga38350dd6366b1642062208bcaf8e133a</field>
    <field name="keywords">GPIO_PIN_TYPE_PULLUP GPIO_PIN_TYPE_PULLUP</field>
    <field name="text">Pull-up enable for input Pull-up enable for input</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxGMUX_INDEX</field>
    <field name="url">group__gpio__api.html#ga38b3d1779067ec955fc0182571a5d867</field>
    <field name="keywords">GPIO_GPxGMUX_INDEX GPIO_GPxGMUX_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxAMSEL_INDEX</field>
    <field name="url">group__gpio__api.html#ga39a2d8a8f4303ff86eeb9ffe1a98d719</field>
    <field name="keywords">GPIO_GPxAMSEL_INDEX GPIO_GPxAMSEL_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_getDirectionMode</field>
    <field name="args">(uint32_t pin)</field>
    <field name="url">group__gpio__api.html#ga4bb8da3c129d7df873d871b1b0e6512d</field>
    <field name="keywords">GPIO_getDirectionMode GPIO_getDirectionMode</field>
    <field name="text">Gets the direction mode of a pin pin is the identifying GPIO number of the pin This function gets the direction mode for a specified pin The pin can be configured as either an input or output The type of direction is returned as an enumerated data type Returns one of the enumerated data types described for GPIO_setDirectionMode()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_readPortDataRegister</field>
    <field name="args">(GPIO_Port port)</field>
    <field name="url">group__gpio__api.html#ga4c5df600aff832b90a0ae3855c631ae0</field>
    <field name="keywords">GPIO_readPortDataRegister GPIO_readPortDataRegister</field>
    <field name="text">Reads the data written in GPIO Data Register port is the GPIO port being accessed in the form of GPIO_PORT_X where X is the port letter Reads the data written in GPIO Data Register for the specified port In previous devices read of GPIO data registers resulted in read of corespoinding pins The function GPIO_readPortData() returns the value on pin GPIO_readPortData() Returns the value in the data register for the specified port Each bit of the the return value represents a pin on the port where bit 0 represents GPIO port pin 0 bit 1 represents GPIO port pin 1 and so on</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_CTRL_REGS_STEP</field>
    <field name="url">group__gpio__api.html#ga554fffee9cfc1e0f88037897a34a06e0</field>
    <field name="keywords">GPIO_CTRL_REGS_STEP GPIO_CTRL_REGS_STEP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_setInterruptType</field>
    <field name="args">(GPIO_ExternalIntNum extIntNum, GPIO_IntType intType)</field>
    <field name="url">group__gpio__api.html#ga5964d467bf85d71bfd833205e492a4ad</field>
    <field name="keywords">GPIO_setInterruptType GPIO_setInterruptType</field>
    <field name="text">Sets the interrupt type for the specified pin extIntNum specifies the external interrupt intType specifies the type of interrupt trigger mechanism This function sets up the various interrupt trigger mechanisms for the specified pin on the selected GPIO port The following defines can be used to specify the external interrupt for the extIntNum parameter GPIO_INT_XINT1 GPIO_INT_XINT2 GPIO_INT_XINT3 GPIO_INT_XINT4 GPIO_INT_XINT5 One of the following flags can be used to define the intType parameter GPIO_INT_TYPE_FALLING_EDGE sets detection to edge and trigger to falling GPIO_INT_TYPE_RISING_EDGE sets detection to edge and trigger to rising GPIO_INT_TYPE_BOTH_EDGES sets detection to both edges None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">GPIO_AnalogMode</field>
    <field name="url">group__gpio__api.html#ga5b59951f90496177d794c53ac93d26cb</field>
    <field name="keywords">GPIO_AnalogMode GPIO_AnalogMode</field>
    <field name="text">Values that can be passed to GPIO_setAnalogMode() as the mode parameter Values that can be passed to GPIO_setAnalogMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_setPinConfig</field>
    <field name="args">(uint32_t pinConfig)</field>
    <field name="url">group__gpio__api.html#ga639af291a607ed7694228fe0c4f2760e</field>
    <field name="keywords">GPIO_setPinConfig GPIO_setPinConfig</field>
    <field name="text">Configures the alternate function of a GPIO pin pinConfig is the pin configuration value specified as only one of the GPIO_::_ values This function configures the pin mux that selects the peripheral function associated with a particular GPIO pin Only one peripheral function at a time can be associated with a GPIO pin and each peripheral function should only be associated with a single GPIO pin at a time despite the fact that many of them can be associated with more than one GPIO pin The available mappings are supplied in pin_map.h None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxLOCK_INDEX</field>
    <field name="url">group__gpio__api.html#ga65bb48b0336f4f8982e0d30e1278c016</field>
    <field name="keywords">GPIO_GPxLOCK_INDEX GPIO_GPxLOCK_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_setInterruptPin</field>
    <field name="args">(uint32_t pin, GPIO_ExternalIntNum extIntNum)</field>
    <field name="url">group__gpio__api.html#ga6af2e62018ca55a51bbd2d652f117c11</field>
    <field name="keywords">GPIO_setInterruptPin GPIO_setInterruptPin</field>
    <field name="text">Sets the pin for the specified external interrupt pin is the identifying GPIO number of the pin extIntNum specifies the external interrupt This function sets which pin triggers the selected external interrupt The following defines can be used to specify the external interrupt for the extIntNum parameter GPIO_INT_XINT1 GPIO_INT_XINT2 GPIO_INT_XINT3 GPIO_INT_XINT4 GPIO_INT_XINT5 The pin is specified by its numerical value For example GPIO34 is specified by passing 3 4 as pin XBAR_setInputPin() None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxCLEAR_INDEX</field>
    <field name="url">group__gpio__api.html#ga6c300ad8c789c81a018d415a8b386877</field>
    <field name="keywords">GPIO_GPxCLEAR_INDEX GPIO_GPxCLEAR_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_getQualificationMode</field>
    <field name="args">(uint32_t pin)</field>
    <field name="url">group__gpio__api.html#ga70b8cdc542a84a7ebb68e3ebf7a9304a</field>
    <field name="keywords">GPIO_getQualificationMode GPIO_getQualificationMode</field>
    <field name="text">Gets the qualification type for the specified pin pin is the identifying GPIO number of the pin Returns the qualification mode in the form of one of the values GPIO_QUAL_SYNC GPIO_QUAL_3SAMPLE GPIO_QUAL_6SAMPLE or GPIO_QUAL_ASYNC</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_getInterruptType</field>
    <field name="args">(GPIO_ExternalIntNum extIntNum)</field>
    <field name="url">group__gpio__api.html#ga73e5e0d4323656fb058141f14c43dae4</field>
    <field name="keywords">GPIO_getInterruptType GPIO_getInterruptType</field>
    <field name="text">Gets the interrupt type for a pin extIntNum specifies the external interrupt This function gets the interrupt type for a interrupt The interrupt can be configured as a falling-edge rising-edge or both-edges detected interrupt The following defines can be used to specify the external interrupt for the extIntNum parameter GPIO_INT_XINT1 GPIO_INT_XINT2 GPIO_INT_XINT3 GPIO_INT_XINT4 GPIO_INT_XINT5 Returns one of the flags described for GPIO_setInterruptType()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_togglePortPins</field>
    <field name="args">(GPIO_Port port, uint32_t pinMask)</field>
    <field name="url">group__gpio__api.html#ga7d1b922486278b297bc6041b6fadf628</field>
    <field name="keywords">GPIO_togglePortPins GPIO_togglePortPins</field>
    <field name="text">Toggles all of the specified pins on the specified port port is the GPIO port being accessed pinMask is a mask of which of the 3 2 pins on the port are affected This function toggles all of the pins specified by the pinMask parameter on the port specified by the port parameter which takes a value in the form of GPIO_PORT_X where X is the port letter For example use GPIO_PORT_A to affect port A GPIOs 0 3 1 The pinMask is a bit-packed value where each bit that is set identifies the pin to be toggled Bit 0 represents GPIO port pin 0 bit 1 represents GPIO port pin 1 and so on None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxTOGGLE_INDEX</field>
    <field name="url">group__gpio__api.html#ga90935cc23e2e0707c46d04cc6867733a</field>
    <field name="keywords">GPIO_GPxTOGGLE_INDEX GPIO_GPxTOGGLE_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_writeODPin</field>
    <field name="args">(uint32_t pin, uint32_t outVal)</field>
    <field name="url">group__gpio__api.html#ga9645bbc53c1dfe8616cabd34488f8b4f</field>
    <field name="keywords">GPIO_writeODPin GPIO_writeODPin</field>
    <field name="text">Set a direction for the specified pin for Open Drain configuration pin is the identifying GPIO number of the pin outVal is the direction of the pin Sets the direction of the output pin specified by pin Writing to a pin configured as an input pin has no effect The pin is specified by its numerical value For example GPIO34 is specified by passing 3 4 as pin Note A high output is obtained when the DIR register is written with a value 0 This function is to be called if the pin type is to be configured in Open Drain Mode Please refer to TRM for more details None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_getPadConfig</field>
    <field name="args">(uint32_t pin)</field>
    <field name="url">group__gpio__api.html#ga984c91d94a8eb638f14a9f7a33f40575</field>
    <field name="keywords">GPIO_getPadConfig GPIO_getPadConfig</field>
    <field name="text">Gets the pad configuration for a pin pin is the identifying GPIO number of the pin This function returns the pin type for the specified pin The value returned corresponds to the values used in GPIO_setPadConfig() Returns a bit field of the values GPIO_PIN_TYPE_STD GPIO_PIN_TYPE_PULLUP and GPIO_PIN_TYPE_INVERT</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_writePortData</field>
    <field name="args">(GPIO_Port port, uint32_t outVal)</field>
    <field name="url">group__gpio__api.html#ga9ad3626ced10620acc6663792c1317be</field>
    <field name="keywords">GPIO_writePortData GPIO_writePortData</field>
    <field name="text">Writes a value to the specified port port is the GPIO port being accessed outVal is the value to write to the port This function writes the value outVal to the port specified by the port parameter which takes a value in the form of GPIO_PORT_X where X is the port letter For example use GPIO_PORT_A to affect port A GPIOs 0 3 1 The outVal is a bit-packed value where each bit represents a bit on a GPIO port Bit 0 represents GPIO port pin 0 bit 1 represents GPIO port pin 1 and so on None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_setPortPins</field>
    <field name="args">(GPIO_Port port, uint32_t pinMask)</field>
    <field name="url">group__gpio__api.html#ga9cb784265bd06b7cf62d3847e39b3eee</field>
    <field name="keywords">GPIO_setPortPins GPIO_setPortPins</field>
    <field name="text">Sets all of the specified pins on the specified port port is the GPIO port being accessed pinMask is a mask of which of the 3 2 pins on the port are affected This function sets all of the pins specified by the pinMask parameter on the port specified by the port parameter which takes a value in the form of GPIO_PORT_X where X is the port letter For example use GPIO_PORT_A to affect port A GPIOs 0 3 1 The pinMask is a bit-packed value where each bit that is set identifies the pin to be set Bit 0 represents GPIO port pin 0 bit 1 represents GPIO port pin 1 and so on None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxDIR_INDEX</field>
    <field name="url">group__gpio__api.html#ga9cd85854664d951727121f943b606310</field>
    <field name="keywords">GPIO_GPxDIR_INDEX GPIO_GPxDIR_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_readPinDataRegister</field>
    <field name="args">(uint32_t pin)</field>
    <field name="url">group__gpio__api.html#ga9ee82ba44c3f17c8fde9b2d42c6f11a4</field>
    <field name="keywords">GPIO_readPinDataRegister GPIO_readPinDataRegister</field>
    <field name="text">Reads the data register value for specified pin pin is the identifying GPIO number of the pin The value available at the data register for the specified pin is read as specified by pin The value is returned for both input and output pins The pin is specified by its numerical value For example GPIO34 is specified by passing 3 4 as pin GPIO_readPin() Returns the value in the data register for the specified pin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_writePin</field>
    <field name="args">(uint32_t pin, uint32_t outVal)</field>
    <field name="url">group__gpio__api.html#gab10f7a152de476c22496e94b6f80c6c3</field>
    <field name="keywords">GPIO_writePin GPIO_writePin</field>
    <field name="text">Writes a value to the specified pin pin is the identifying GPIO number of the pin outVal is the value to write to the pin Writes the corresponding bit values to the output pin specified by pin Writing to a pin configured as an input pin has no effect The pin is specified by its numerical value For example GPIO34 is specified by passing 3 4 as pin None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_setDirectionMode</field>
    <field name="args">(uint32_t pin, GPIO_Direction pinIO)</field>
    <field name="url">group__gpio__api.html#gab50248ff19d73a592046deac995d88fb</field>
    <field name="keywords">GPIO_setDirectionMode GPIO_setDirectionMode</field>
    <field name="text">Sets the direction and mode of the specified pin pin is the identifying GPIO number of the pin pinIO is the pin direction mode This function configures the specified pin on the selected GPIO port as either input or output The parameter pinIO is an enumerated data type that can be one of the following values GPIO_DIR_MODE_IN GPIO_DIR_MODE_OUT where GPIO_DIR_MODE_IN specifies that the pin is programmed as an input and GPIO_DIR_MODE_OUT specifies that the pin is programmed as an output The pin is specified by its numerical value For example GPIO34 is specified by passing 3 4 as pin None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxCTRL_INDEX</field>
    <field name="url">group__gpio__api.html#gabe3a9469628e8b747b4bf39468646ba3</field>
    <field name="keywords">GPIO_GPxCTRL_INDEX GPIO_GPxCTRL_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">GPIO_IntType</field>
    <field name="url">group__gpio__api.html#gabf424f4c82447febc105783bb24d66b0</field>
    <field name="keywords">GPIO_IntType GPIO_IntType</field>
    <field name="text">Values that can be passed to GPIO_setInterruptType() as the intType parameter and returned from GPIO_getInterruptType()</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">GPIO_QualificationMode</field>
    <field name="url">group__gpio__api.html#gac70c13a371270f023e57973be7cbd526</field>
    <field name="keywords">GPIO_QualificationMode GPIO_QualificationMode</field>
    <field name="text">Values that can be passed to GPIO_setQualificationMode() as the qualification parameter and returned by GPIO_getQualificationMode()</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxDAT_R_INDEX</field>
    <field name="url">group__gpio__api.html#gacf8520c037e5d725bd8a06162b13e1ca</field>
    <field name="keywords">GPIO_GPxDAT_R_INDEX GPIO_GPxDAT_R_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxDAT_INDEX</field>
    <field name="url">group__gpio__api.html#gad5ad64e243ae4833ad830efad4022181</field>
    <field name="keywords">GPIO_GPxDAT_INDEX GPIO_GPxDAT_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxSET_INDEX</field>
    <field name="url">group__gpio__api.html#gad82d17aebb8d5a9ede5552605b61094f</field>
    <field name="keywords">GPIO_GPxSET_INDEX GPIO_GPxSET_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_setPadConfig</field>
    <field name="args">(uint32_t pin, uint32_t pinType)</field>
    <field name="url">group__gpio__api.html#gad853021cf15a9a1d644abf83a589117d</field>
    <field name="keywords">GPIO_setPadConfig GPIO_setPadConfig</field>
    <field name="text">Sets the pad configuration for the specified pin pin is the identifying GPIO number of the pin pinType specifies the pin type This function sets the pin type for the specified pin The parameter pinType can be the following values GPIO_PIN_TYPE_STD specifies a push-pull output or a floating input GPIO_PIN_TYPE_PULLUP specifies the pull-up is enabled for an input GPIO_PIN_TYPE_INVERT specifies inverted polarity on an input GPIO_PIN_TYPE_INVERT may be OR-ed with GPIO_PIN_TYPE_STD or GPIO_PIN_TYPE_PULLUP The pin is specified by its numerical value For example GPIO34 is specified by passing 3 4 as pin None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">GPIO_ExternalIntNum</field>
    <field name="url">group__gpio__api.html#gae7173ddc75484cf212af78426e76882a</field>
    <field name="keywords">GPIO_ExternalIntNum GPIO_ExternalIntNum</field>
    <field name="text">Values that can be passed to GPIO_setInterruptPin() GPIO_setInterruptType() GPIO_getInterruptType() GPIO_enableInterrupt() GPIO_disableInterrupt() as the extIntNum parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_DATA_REGS_STEP</field>
    <field name="url">group__gpio__api.html#gae902efec17fb8858cbcd574ca2992ad1</field>
    <field name="keywords">GPIO_DATA_REGS_STEP GPIO_DATA_REGS_STEP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_togglePin</field>
    <field name="args">(uint32_t pin)</field>
    <field name="url">group__gpio__api.html#gae9a250b29dd561eb14c8448b446572a0</field>
    <field name="keywords">GPIO_togglePin GPIO_togglePin</field>
    <field name="text">Toggles the specified pin pin is the identifying GPIO number of the pin Writes the corresponding bit values to the output pin specified by pin Writing to a pin configured as an input pin has no effect The pin is specified by its numerical value For example GPIO34 is specified by passing 3 4 as pin None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxPUD_INDEX</field>
    <field name="url">group__gpio__api.html#gaebd15a9f9d746eb7df981daef6a1d36f</field>
    <field name="keywords">GPIO_GPxPUD_INDEX GPIO_GPxPUD_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_unlockPortConfig</field>
    <field name="args">(GPIO_Port port, uint32_t pinMask)</field>
    <field name="url">group__gpio__api.html#gaee90c22498ce3399f5d53105748fd387</field>
    <field name="keywords">GPIO_unlockPortConfig GPIO_unlockPortConfig</field>
    <field name="text">Unlocks the configuration of the specified pins on the specified port port is the GPIO port being accessed pinMask is a mask of which of the 3 2 pins on the port are affected This function unlocks the configuration registers of the pins specified by the pinMask parameter on the port specified by the port parameter which takes a value in the form of GPIO_PORT_X where X is the port letter For example use GPIO_PORT_A to affect port A GPIOs 0 3 1 The pinMask is a bit-packed value where each bit that is set identifies the pin to be unlocked Bit 0 represents GPIO port pin 0 bit 1 represents GPIO port pin 1 0 xFFFFFFFF represents all pins on that port and so on None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_getInterruptCounter</field>
    <field name="args">(GPIO_ExternalIntNum extIntNum)</field>
    <field name="url">group__gpio__api.html#gaef27047e923d4a3c1df1a2b50fad8383</field>
    <field name="keywords">GPIO_getInterruptCounter GPIO_getInterruptCounter</field>
    <field name="text">Gets the value of the external interrupt counter extIntNum specifies the external interrupt The following defines can be used to specify the external interrupt for the extIntNum parameter GPIO_INT_XINT1 GPIO_INT_XINT2 GPIO_INT_XINT3 Note The counter is clocked at the SYSCLKOUT rate Returns external interrupt counter value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_lockPortConfig</field>
    <field name="args">(GPIO_Port port, uint32_t pinMask)</field>
    <field name="url">group__gpio__api.html#gaef620fad94e137d0306b29e3dac98c6b</field>
    <field name="keywords">GPIO_lockPortConfig GPIO_lockPortConfig</field>
    <field name="text">Locks the configuration of the specified pins on the specified port port is the GPIO port being accessed pinMask is a mask of which of the 3 2 pins on the port are affected This function locks the configuration registers of the pins specified by the pinMask parameter on the port specified by the port parameter which takes a value in the form of GPIO_PORT_X where X is the port letter For example use GPIO_PORT_A to affect port A GPIOs 0 3 1 The pinMask is a bit-packed value where each bit that is set identifies the pin to be locked Bit 0 represents GPIO port pin 0 bit 1 represents GPIO port pin 1 0 xFFFFFFFF represents all pins on that port and so on Note that this function is for locking the configuration of a pin such as the pin muxing direction open drain mode and other settings It does not affect the ability to change the value of the pin None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">GPIO_Port</field>
    <field name="url">group__gpio__api.html#gaf164c756418dde00ac07fd47d0962150</field>
    <field name="keywords">GPIO_Port GPIO_Port</field>
    <field name="text">Values that can be passed to GPIO_readPortData() GPIO_setPortPins() GPIO_clearPortPins() and GPIO_togglePortPins() as the port parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_GPxINV_INDEX</field>
    <field name="url">group__gpio__api.html#gaf627cdc23da0c9b3f478d2214ec0dde5</field>
    <field name="keywords">GPIO_GPxINV_INDEX GPIO_GPxINV_INDEX</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_clearPortPins</field>
    <field name="args">(GPIO_Port port, uint32_t pinMask)</field>
    <field name="url">group__gpio__api.html#gafa45dea38012153b735c99bce4f8c53d</field>
    <field name="keywords">GPIO_clearPortPins GPIO_clearPortPins</field>
    <field name="text">Clears all of the specified pins on the specified port port is the GPIO port being accessed pinMask is a mask of which of the 3 2 pins on the port are affected This function clears all of the pins specified by the pinMask parameter on the port specified by the port parameter which takes a value in the form of GPIO_PORT_X where X is the port letter For example use GPIO_PORT_A to affect port A GPIOs 0 3 1 The pinMask is a bit-packed value where each bit that is set identifies the pin to be cleared Bit 0 represents GPIO port pin 0 bit 1 represents GPIO port pin 1 and so on None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">GPIO_PIN_TYPE_STD</field>
    <field name="url">group__gpio__api.html#gafa6d2e3683888ad9a64a8a6ce8e2ccf6</field>
    <field name="keywords">GPIO_PIN_TYPE_STD GPIO_PIN_TYPE_STD</field>
    <field name="text">Push-pull output or floating input Push-pull output or floating input</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GPIO_enableInterrupt</field>
    <field name="args">(GPIO_ExternalIntNum extIntNum)</field>
    <field name="url">group__gpio__api.html#gaffcc404a7f92a27af55d98b7b618c0c8</field>
    <field name="keywords">GPIO_enableInterrupt GPIO_enableInterrupt</field>
    <field name="text">Enables the specified external interrupt extIntNum specifies the external interrupt This function enables the indicated external interrupt sources Only the sources that are enabled can be reflected to the processor interrupt Disabled sources have no effect on the processor The following defines can be used to specify the external interrupt for the extIntNum parameter GPIO_INT_XINT1 GPIO_INT_XINT2 GPIO_INT_XINT3 GPIO_INT_XINT4 GPIO_INT_XINT5 None</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_DIR_MODE_OUT</field>
    <field name="url">group__gpio__api.html#gga0c1bff6c02d7155b78f07abd8c31722fa16caaeef81e7e217565060c7afd56637</field>
    <field name="keywords">GPIO_DIR_MODE_OUT GPIO_DIR_MODE_OUT</field>
    <field name="text">Pin is a GPIO output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_DIR_MODE_IN</field>
    <field name="url">group__gpio__api.html#gga0c1bff6c02d7155b78f07abd8c31722fa93737545fe00b579eba10ba1b839663e</field>
    <field name="keywords">GPIO_DIR_MODE_IN GPIO_DIR_MODE_IN</field>
    <field name="text">Pin is a GPIO input</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_ANALOG_ENABLED</field>
    <field name="url">group__gpio__api.html#gga5b59951f90496177d794c53ac93d26cba1610da71c29b40e337abdba8cbbf00fd</field>
    <field name="keywords">GPIO_ANALOG_ENABLED GPIO_ANALOG_ENABLED</field>
    <field name="text">Pin is in analog mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_ANALOG_DISABLED</field>
    <field name="url">group__gpio__api.html#gga5b59951f90496177d794c53ac93d26cba8d75f5dc91feb501f6089eff628d0f3d</field>
    <field name="keywords">GPIO_ANALOG_DISABLED GPIO_ANALOG_DISABLED</field>
    <field name="text">Pin is in digital mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_INT_TYPE_RISING_EDGE</field>
    <field name="url">group__gpio__api.html#ggabf424f4c82447febc105783bb24d66b0a31cf1779b81a7f736adee3daaa94c7dd</field>
    <field name="keywords">GPIO_INT_TYPE_RISING_EDGE GPIO_INT_TYPE_RISING_EDGE</field>
    <field name="text">Interrupt on rising edge</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_INT_TYPE_FALLING_EDGE</field>
    <field name="url">group__gpio__api.html#ggabf424f4c82447febc105783bb24d66b0a48c1a6e890564f67616f67617a9ad03d</field>
    <field name="keywords">GPIO_INT_TYPE_FALLING_EDGE GPIO_INT_TYPE_FALLING_EDGE</field>
    <field name="text">Interrupt on falling edge</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_INT_TYPE_BOTH_EDGES</field>
    <field name="url">group__gpio__api.html#ggabf424f4c82447febc105783bb24d66b0a4eea0c8e3fcb89bc9ad6bafd5bf3c392</field>
    <field name="keywords">GPIO_INT_TYPE_BOTH_EDGES GPIO_INT_TYPE_BOTH_EDGES</field>
    <field name="text">Interrupt on both edges</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_QUAL_3SAMPLE</field>
    <field name="url">group__gpio__api.html#ggac70c13a371270f023e57973be7cbd526a0e5c4a16f7e501a2b60f72dbe04d02dc</field>
    <field name="keywords">GPIO_QUAL_3SAMPLE GPIO_QUAL_3SAMPLE</field>
    <field name="text">Qualified with 3 samples</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_QUAL_6SAMPLE</field>
    <field name="url">group__gpio__api.html#ggac70c13a371270f023e57973be7cbd526a6a3d48683038db1040312ae96f2e5753</field>
    <field name="keywords">GPIO_QUAL_6SAMPLE GPIO_QUAL_6SAMPLE</field>
    <field name="text">Qualified with 6 samples</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_QUAL_SYNC</field>
    <field name="url">group__gpio__api.html#ggac70c13a371270f023e57973be7cbd526af31e732bc72c41d31506490cee606cd4</field>
    <field name="keywords">GPIO_QUAL_SYNC GPIO_QUAL_SYNC</field>
    <field name="text">Synchronization to SYSCLK</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_QUAL_ASYNC</field>
    <field name="url">group__gpio__api.html#ggac70c13a371270f023e57973be7cbd526afa8031d15a5c29eb4a76004acb7acc1c</field>
    <field name="keywords">GPIO_QUAL_ASYNC GPIO_QUAL_ASYNC</field>
    <field name="text">No synchronization</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_INT_XINT1</field>
    <field name="url">group__gpio__api.html#ggae7173ddc75484cf212af78426e76882aa6b4f42314076872fcbf20082d0ca3c32</field>
    <field name="keywords">GPIO_INT_XINT1 GPIO_INT_XINT1</field>
    <field name="text">External Interrupt 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_INT_XINT4</field>
    <field name="url">group__gpio__api.html#ggae7173ddc75484cf212af78426e76882aa7fc96912b8fd7fb56b015f7ad6f4544f</field>
    <field name="keywords">GPIO_INT_XINT4 GPIO_INT_XINT4</field>
    <field name="text">External Interrupt 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_INT_XINT2</field>
    <field name="url">group__gpio__api.html#ggae7173ddc75484cf212af78426e76882aa8b8f2e00108d603156582ce899906169</field>
    <field name="keywords">GPIO_INT_XINT2 GPIO_INT_XINT2</field>
    <field name="text">External Interrupt 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_INT_XINT5</field>
    <field name="url">group__gpio__api.html#ggae7173ddc75484cf212af78426e76882aaad558745f66c7d1fd24bb27670f2f807</field>
    <field name="keywords">GPIO_INT_XINT5 GPIO_INT_XINT5</field>
    <field name="text">External Interrupt 5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_INT_XINT3</field>
    <field name="url">group__gpio__api.html#ggae7173ddc75484cf212af78426e76882aad93fa0871f3a5649485496e1497a469b</field>
    <field name="keywords">GPIO_INT_XINT3 GPIO_INT_XINT3</field>
    <field name="text">External Interrupt 3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_PORT_H</field>
    <field name="url">group__gpio__api.html#ggaf164c756418dde00ac07fd47d0962150a160734b9f43544c741c11fb095716646</field>
    <field name="keywords">GPIO_PORT_H GPIO_PORT_H</field>
    <field name="text">GPIO port H</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_PORT_A</field>
    <field name="url">group__gpio__api.html#ggaf164c756418dde00ac07fd47d0962150a8b07bc36836f09ea3bf685aa40bb2a1c</field>
    <field name="keywords">GPIO_PORT_A GPIO_PORT_A</field>
    <field name="text">GPIO port A</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">GPIO_PORT_B</field>
    <field name="url">group__gpio__api.html#ggaf164c756418dde00ac07fd47d0962150af5a83964a6998f346c504ea8a14aa420</field>
    <field name="keywords">GPIO_PORT_B GPIO_PORT_B</field>
    <field name="text">GPIO port B</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">i2c_api</field>
    <field name="url">group__i2c__api.html</field>
    <field name="keywords">I2C</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_disableNACKCompatibilityMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga04b05e31ea9f4aaa10bc2608e6c9c29a</field>
    <field name="keywords">I2C_disableNACKCompatibilityMode I2C_disableNACKCompatibilityMode</field>
    <field name="text">Disable the NACK compatibility mode base is the base address of the I2C instance used This function configures the I2C module to disable NACK compatibility mode None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_enableManualClkStretchingMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga07412fdd036f5044260c4ddcb8e60676</field>
    <field name="keywords">I2C_enableManualClkStretchingMode I2C_enableManualClkStretchingMode</field>
    <field name="text">Enable the manual clock stretching mode base is the base address of the I2C instance used This function configures the I2C module to enable manual clock stretching mode None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_TX_EMPTY</field>
    <field name="url">group__i2c__api.html#ga0f7aaeee2c236581c7f91d4076aa11a7</field>
    <field name="keywords">I2C_STS_TX_EMPTY I2C_STS_TX_EMPTY</field>
    <field name="text">Transmit shift register empty Transmit shift register empty</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_INT_TX_DATA_RDY</field>
    <field name="url">group__i2c__api.html#ga11ebc44ec9769890863828b99aab0e93</field>
    <field name="keywords">I2C_INT_TX_DATA_RDY I2C_INT_TX_DATA_RDY</field>
    <field name="text">Transmit-data-ready interrupt Transmit-data-ready interrupt</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_ADDR_ZERO</field>
    <field name="url">group__i2c__api.html#ga16542756be9c1ce0bdf06b8fd1d53fcf</field>
    <field name="keywords">I2C_STS_ADDR_ZERO I2C_STS_ADDR_ZERO</field>
    <field name="text">Address of all zeros detected Address of all zeros detected</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_getStopConditionStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga1a89d9c39a2a5f9d510e95cc7112209a</field>
    <field name="keywords">I2C_getStopConditionStatus I2C_getStopConditionStatus</field>
    <field name="text">Get stop condition status base is the base address of the I2C instance used This function reads and returns the stop condition bit status Returns true if the STP bit has been set by the device to generate a stop condition when the internal data counter of the I2C module has reached 0 Returns false when the STP bit is zero This bit is automatically cleared after the stop condition has been generated</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_initControllerModuleFrequency</field>
    <field name="args">(uint32_t base, uint32_t sysclkHz, uint32_t bitRate, I2C_DutyCycle dutyCycle, uint32_t moduleFrequency)</field>
    <field name="url">group__i2c__api.html#ga1ad35e96b493acaeac50fb7a232bbd70</field>
    <field name="keywords">I2C_initControllerModuleFrequency I2C_initControllerModuleFrequency</field>
    <field name="text">Initializes the I2C Controller base is the base address of the I2C instance used sysclkHz is the rate of the clock supplied to the I2C module SYSCLK in Hz bitRate is the rate of the controller clock signal SCL dutyCycle is duty cycle of the SCL signal moduleFrequency is the module clock used by I2C module This function initializes operation of the I2C Controller by configuring the bus speed for the controller Note that the I2C module must be put into reset before calling this function You can do this with the function I2C_disableModule() A programmable prescaler in the I2C module divides down the input clock rate specified by sysclkHz to produce the module clock calculated to be around 1 0 MHz in this function That clock is then divided down further to configure the SCL signal to run at the rate specified by bitRate The dutyCycle parameter determines the percentage of time high and time low on the clock signal The valid values are I2C_DUTYCYCLE_33 for 3 3 and I2C_DUTYCYCLE_50 for 5 0 The peripheral clock is the system clock This value is returned by SysCtl_getClock() or it can be explicitly hard coded if it is constant and known to save the code/execution overhead of a call to SysCtl_getClock() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_enableLoopback</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga1bde75fdc6b2fbf9d3b8dbcca1a02263</field>
    <field name="keywords">I2C_enableLoopback I2C_enableLoopback</field>
    <field name="text">Enables I2C loopback mode base is the base address of the I2C instance used This function enables loopback mode This mode is only valid during controller mode and is helpful during device testing as it causes data transmitted out of the data transmit register to be received in data receive register None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_getData</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga1f356850f7959da08bb3a9c2c62cc051</field>
    <field name="keywords">I2C_getData I2C_getData</field>
    <field name="text">Receives a byte that has been sent to the I2C base is the base address of the I2C instance used This function reads a byte of data from the I2C Data Receive Register Returns the byte received from by the I2C cast as an uint16_t</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_INT_TXFF</field>
    <field name="url">group__i2c__api.html#ga235557bdd3c41df310bb62c82443e3c8</field>
    <field name="keywords">I2C_INT_TXFF I2C_INT_TXFF</field>
    <field name="text">TX FIFO level interrupt TX FIFO level interrupt</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_EMDR_SCLKEY_ENABLE</field>
    <field name="url">group__i2c__api.html#ga2f7dfe65de4c4a51922b9a9be744a396</field>
    <field name="keywords">I2C_EMDR_SCLKEY_ENABLE I2C_EMDR_SCLKEY_ENABLE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_FREE_DATA_FORMAT</field>
    <field name="url">group__i2c__api.html#ga323e83cd6a7ea27e9bd19d8ae2e91027</field>
    <field name="keywords">I2C_FREE_DATA_FORMAT I2C_FREE_DATA_FORMAT</field>
    <field name="text">Enable free data no addr format Enable free data no addr format</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_clearStatus</field>
    <field name="args">(uint32_t base, uint16_t stsFlags)</field>
    <field name="url">group__i2c__api.html#ga36ecb589e4db0de1e513a4e31f875985</field>
    <field name="keywords">I2C_clearStatus I2C_clearStatus</field>
    <field name="text">Clears I2C status flags base is the base address of the I2C instance used stsFlags is a bit mask of the status flags to be cleared This function clears the specified I2C status flags The stsFlags parameter is the logical OR of the following values I2C_STS_ARB_LOST I2C_STS_NO_ACK I2C_STS_REG_ACCESS_RDY I2C_STS_RX_DATA_RDY I2C_STS_STOP_CONDITION I2C_STS_BYTE_SENT I2C_STS_NACK_SENT I2C_STS_TARGET_DIR I2C_STS_SCL_ECS Note that some of the status flags returned by I2C_getStatus() cannot be cleared by this function Some may only be cleared by hardware or a reset of the I2C module None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_REG_ACCESS_RDY</field>
    <field name="url">group__i2c__api.html#ga3bba24b82830d317354b762fbd0755e0</field>
    <field name="keywords">I2C_STS_REG_ACCESS_RDY I2C_STS_REG_ACCESS_RDY</field>
    <field name="text">Register-access-ready ARDY Register-access-ready ARDY</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_disableManualClkStretchingMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga3c3d95f8444eb352f10741a6420b1cf6</field>
    <field name="keywords">I2C_disableManualClkStretchingMode I2C_disableManualClkStretchingMode</field>
    <field name="text">Disable the manual clock stretching mode base is the base address of the I2C instance used This function configures the I2C module to disable manual clock stretching mode None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_INT_NO_ACK</field>
    <field name="url">group__i2c__api.html#ga3d380029b61a2bd7a3c5688f18b9145e</field>
    <field name="keywords">I2C_INT_NO_ACK I2C_INT_NO_ACK</field>
    <field name="text">NACK interrupt NACK interrupt</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_BYTE_SENT</field>
    <field name="url">group__i2c__api.html#ga40d0e5d9d741bc5f52d31de22fde450c</field>
    <field name="keywords">I2C_STS_BYTE_SENT I2C_STS_BYTE_SENT</field>
    <field name="text">Byte transmit complete Byte transmit complete</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_setBitCount</field>
    <field name="args">(uint32_t base, I2C_BitCount size)</field>
    <field name="url">group__i2c__api.html#ga42c49c1834809c94bef986db6b1ef5c7</field>
    <field name="keywords">I2C_setBitCount I2C_setBitCount</field>
    <field name="text">Sets the data byte bit count the I2C module base is the base address of the I2C instance used size is the number of bits per data byte The size parameter is a value I2C_BITCOUNT_x where x is the number of bits per data byte The default and maximum size is 8 bits None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_SCL_ECS</field>
    <field name="url">group__i2c__api.html#ga46783e1b6034c17e74e24af55291fb06</field>
    <field name="keywords">I2C_STS_SCL_ECS I2C_STS_SCL_ECS</field>
    <field name="text">SCL Auto Clock Stretch Status SCL Auto Clock Stretch Status</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_putData</field>
    <field name="args">(uint32_t base, uint16_t data)</field>
    <field name="url">group__i2c__api.html#ga468035fec26fe217bbdacab04f9e7209</field>
    <field name="keywords">I2C_putData I2C_putData</field>
    <field name="text">Transmits a byte from the I2C base is the base address of the I2C instance used data is the data to be transmitted from the I2C Controller This function places the supplied data into I2C Data Transmit Register None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_enableNACKCompatibilityMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga486e742ddda1f5e336af0be60de234fd</field>
    <field name="keywords">I2C_enableNACKCompatibilityMode I2C_enableNACKCompatibilityMode</field>
    <field name="text">Enable the NACK compatibility mode base is the base address of the I2C instance used This function configures the I2C module to enable NACK compatibility mode None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_isBusBusy</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga4876ef53e8db70bff18317df267b15de</field>
    <field name="keywords">I2C_isBusBusy I2C_isBusBusy</field>
    <field name="text">Indicates whether or not the I2C bus is busy base is the base address of the I2C instance used This function returns an indication of whether or not the I2C bus is busy This function can be used in a multi-controller environment to determine if the bus is free for another data transfer Returns true if the I2C bus is busy otherwise returns false</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_INT_RX_DATA_RDY</field>
    <field name="url">group__i2c__api.html#ga621dfbf1c8f69c67e52aeb061f96c3b3</field>
    <field name="keywords">I2C_INT_RX_DATA_RDY I2C_INT_RX_DATA_RDY</field>
    <field name="text">Receive-data-ready interrupt Receive-data-ready interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_setDataCount</field>
    <field name="args">(uint32_t base, uint16_t count)</field>
    <field name="url">group__i2c__api.html#ga633c6394ccf7ead95fdd7709f1fe9447</field>
    <field name="keywords">I2C_setDataCount I2C_setDataCount</field>
    <field name="text">Set number of bytes to be to transfer or receive when repeat mode is off base is the base address of the I2C instance used count is the value to be put in the I2C data count register This function sets the number of bytes to transfer or receive when repeat mode is off None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_disableModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga63c72dcf216280a84725a8c2d538a20a</field>
    <field name="keywords">I2C_disableModule I2C_disableModule</field>
    <field name="text">Disables the I2C module base is the base address of the I2C instance used This function disables operation of the I2C module None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">I2C_InterruptSource</field>
    <field name="url">group__i2c__api.html#ga65d4d1522b504625b64522aecc7efc23</field>
    <field name="keywords">I2C_InterruptSource I2C_InterruptSource</field>
    <field name="text">I2C interrupts to be returned by I2C_getInterruptSource() I2C interrupts to be returned by I2C_getInterruptSource()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_setTargetAddress</field>
    <field name="args">(uint32_t base, uint16_t targetAddr)</field>
    <field name="url">group__i2c__api.html#ga6a547f7c1f57f0174ba34692e2f7910f</field>
    <field name="keywords">I2C_setTargetAddress I2C_setTargetAddress</field>
    <field name="text">Sets the address that the I2C Controller places on the bus base is the base address of the I2C instance used targetAddr 7 bit or 1 0 bit target address This function configures the address that the I2C Controller places on the bus when initiating a transaction None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_ADDR_TARGET</field>
    <field name="url">group__i2c__api.html#ga6b1ce046a2d181cf85fbaf2b9019a427</field>
    <field name="keywords">I2C_STS_ADDR_TARGET I2C_STS_ADDR_TARGET</field>
    <field name="text">Addressed as target Addressed as target</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_disableExtendedAutomaticClkStretchingMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga6b605a874c2613f1f1881f7c22226f53</field>
    <field name="keywords">I2C_disableExtendedAutomaticClkStretchingMode I2C_disableExtendedAutomaticClkStretchingMode</field>
    <field name="text">Disable the Extended automatic clock stretching mode base is the base address of the I2C instance used This function configures the I2C module to disable extended automatic clock stretching mode None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_clearInterruptStatus</field>
    <field name="args">(uint32_t base, uint32_t intFlags)</field>
    <field name="url">group__i2c__api.html#ga6c9a8f30211288d8251ffa870ba067ac</field>
    <field name="keywords">I2C_clearInterruptStatus I2C_clearInterruptStatus</field>
    <field name="text">Clears I2C interrupt sources base is the base address of the I2C instance used intFlags is a bit mask of the interrupt sources to be cleared The specified I2C interrupt sources are cleared so that they no longer assert This function must be called in the interrupt handler to keep the interrupt from being triggered again immediately upon exit The intFlags parameter has the same definition as the intFlags parameter to I2C_enableInterrupt() I2C_INT_RXFF and I2C_INT_TXFF are associated with the I2C FIFO interrupt vector All others are associated with the I2C basic interrupt Also note that some of the status flags returned by I2C_getInterruptStatus() cannot be cleared by this function Some may only be cleared by hardware or a reset of the I2C module None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_INT_RXFF</field>
    <field name="url">group__i2c__api.html#ga6ffee3aa530633b42ab95ead199fe01c</field>
    <field name="keywords">I2C_INT_RXFF I2C_INT_RXFF</field>
    <field name="text">RX FIFO level interrupt RX FIFO level interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_enableFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga70e7ce0a3c6ec888bf52b83bc702124d</field>
    <field name="keywords">I2C_enableFIFO I2C_enableFIFO</field>
    <field name="text">Enables the transmit and receive FIFOs base is the base address of the I2C instance used This functions enables the transmit and receive FIFOs in the I2C None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_INT_STOP_CONDITION</field>
    <field name="url">group__i2c__api.html#ga72c1d12497392f4dd5ec4ce6400c5200</field>
    <field name="keywords">I2C_INT_STOP_CONDITION I2C_INT_STOP_CONDITION</field>
    <field name="text">Stop condition detected Stop condition detected</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_CONTROLLER_RECEIVE_MODE</field>
    <field name="url">group__i2c__api.html#ga79bf7fe1f915689010d678b9d7e3bdbc</field>
    <field name="keywords">I2C_CONTROLLER_RECEIVE_MODE I2C_CONTROLLER_RECEIVE_MODE</field>
    <field name="text">Controller-receiver mode Controller-receiver mode</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_REPEAT_MODE</field>
    <field name="url">group__i2c__api.html#ga7cab1f030b534fc5e02fc1f99ea93ec7</field>
    <field name="keywords">I2C_REPEAT_MODE I2C_REPEAT_MODE</field>
    <field name="text">Only applies to Controller mode Only applies to Controller mode</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_INT_REG_ACCESS_RDY</field>
    <field name="url">group__i2c__api.html#ga7e3dffb53e27dedc62b62a28ed3165d9</field>
    <field name="keywords">I2C_INT_REG_ACCESS_RDY I2C_INT_REG_ACCESS_RDY</field>
    <field name="text">Register-access-ready interrupt Register-access-ready interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_setFIFOInterruptLevel</field>
    <field name="args">(uint32_t base, I2C_TxFIFOLevel txLevel, I2C_RxFIFOLevel rxLevel)</field>
    <field name="url">group__i2c__api.html#ga7e8653da179b6eda33232210343a7ac7</field>
    <field name="keywords">I2C_setFIFOInterruptLevel I2C_setFIFOInterruptLevel</field>
    <field name="text">Sets the FIFO level at which interrupts are generated base is the base address of the I2C instance used txLevel is the transmit FIFO interrupt level specified as I2C_FIFO_TX0 I2C_FIFO_TX1 I2C_FIFO_TX2 or I2C_FIFO_TX16 rxLevel is the receive FIFO interrupt level specified as I2C_FIFO_RX0 I2C_FIFO_RX1 I2C_FIFO_RX2 or I2C_FIFO_RX16 This function sets the FIFO level at which transmit and receive interrupts are generated The transmit FIFO interrupt flag will be set when the FIFO reaches a value less than or equal to txLevel The receive FIFO flag will be set when the FIFO reaches a value greater than or equal to rxLevel None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_sendStopCondition</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga818e3e39311a901da8c5b3d4f7317c7a</field>
    <field name="keywords">I2C_sendStopCondition I2C_sendStopCondition</field>
    <field name="text">Issues an I2C STOP condition base is the base address of the I2C instance used This function causes the I2C module to generate a stop condition This function is only valid when the I2C module specified by the base parameter is a controller To check on the status of the STOP condition I2C_getStopConditionStatus() can be used None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_getTxFIFOStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga821fb6efe4075ec8bc55829c0a1bd0c3</field>
    <field name="keywords">I2C_getTxFIFOStatus I2C_getTxFIFOStatus</field>
    <field name="text">Get the transmit FIFO status base is the base address of the I2C instance used This function gets the current number of words in the transmit FIFO Returns the current number of words in the transmit FIFO specified as one of the following I2C_FIFO_TX0 I2C_FIFO_TX1 I2C_FIFO_TX2 I2C_FIFO_TX3 or I2C_FIFO_TX16</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_setAddressMode</field>
    <field name="args">(uint32_t base, I2C_AddressMode mode)</field>
    <field name="url">group__i2c__api.html#ga8678a6c753b0ece0626654021159cc95</field>
    <field name="keywords">I2C_setAddressMode I2C_setAddressMode</field>
    <field name="text">Sets the addressing mode to either 7 bit or 1 0 bit base is the base address of the I2C instance used mode is the address mode 7 bit or 1 0 bit This function configures the I2C module for either a 7 bit address default or a 1 0 bit address The mode parameter configures the address length to 1 0 bits when its value is I2C_ADDR_MODE_10BITS and 7 bits when I2C_ADDR_MODE_7BITS None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STR_INTMASK</field>
    <field name="url">group__i2c__api.html#ga88a5a24584a66f85253ac840134b6bff</field>
    <field name="keywords">I2C_STR_INTMASK I2C_STR_INTMASK</field>
    <field name="text">uint16_t I2C_INT_ARB_LOST uint16_t I2C_INT_NO_ACK uint16_t I2C_INT_REG_ACCESS_RDY uint16_t I2C_INT_RX_DATA_RDY uint16_t I2C_INT_TX_DATA_RDY uint16_t I2C_INT_STOP_CONDITION uint16_t I2C_INT_ADDR_TARGET uint16_t I2C_INT_SCL_ECS</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">I2C_RxFIFOLevel</field>
    <field name="url">group__i2c__api.html#ga91f4122cb0d0dfd2cf7f3f465352c1ea</field>
    <field name="keywords">I2C_RxFIFOLevel I2C_RxFIFOLevel</field>
    <field name="text">Values that can be passed to I2C_setFIFOInterruptLevel() as the rxLevel parameter returned by I2C_getFIFOInterruptLevel() in the rxLevel parameter and returned by I2C_getRxFIFOStatus()</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">I2C_DutyCycle</field>
    <field name="url">group__i2c__api.html#ga93eefc059d0a3c81e61d4c3c4816d4e0</field>
    <field name="keywords">I2C_DutyCycle I2C_DutyCycle</field>
    <field name="text">Values that can be passed to I2C_initController() as the dutyCycle parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_NACK_SENT</field>
    <field name="url">group__i2c__api.html#ga943493cac1c4caba7152b6f5c0fd047f</field>
    <field name="keywords">I2C_STS_NACK_SENT I2C_STS_NACK_SENT</field>
    <field name="text">NACK was sent NACK was sent</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_EMDR_SCLKEY_DISABLE</field>
    <field name="url">group__i2c__api.html#ga97501386f0f5d02be99bb2711903ac16</field>
    <field name="keywords">I2C_EMDR_SCLKEY_DISABLE I2C_EMDR_SCLKEY_DISABLE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_getPreScaler</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#ga975f588e76d76ea2140036bede79425a</field>
    <field name="keywords">I2C_getPreScaler I2C_getPreScaler</field>
    <field name="text">Reads I2C Module clock prescaler value base is the base address of the I2C instance used This function reads the I2C prescaler value which configures the I2C module clock by dividing down the SYSCLK I2C_MODULE_CLK SYSCLK I2CPSC Returns the I2C prescaler(I2CPSC) cast as an uint16_t</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">I2C_TxFIFOLevel</field>
    <field name="url">group__i2c__api.html#ga9886cb94314bb81524b57ddc23a0af4b</field>
    <field name="keywords">I2C_TxFIFOLevel I2C_TxFIFOLevel</field>
    <field name="text">Values that can be passed to I2C_setFIFOInterruptLevel() as the txLevel parameter returned by I2C_getFIFOInterruptLevel() in the txLevel parameter and returned by I2C_getTxFIFOStatus()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_setEmulationMode</field>
    <field name="args">(uint32_t base, I2C_EmulationMode mode)</field>
    <field name="url">group__i2c__api.html#ga9ed74089cfd4d0d7c0faec977269a331</field>
    <field name="keywords">I2C_setEmulationMode I2C_setEmulationMode</field>
    <field name="text">Sets I2C emulation mode base is the base address of the I2C instance used mode is the emulation mode This function sets the behavior of the I2C operation when an emulation suspend occurs The mode parameter can be one of the following I2C_EMULATION_STOP_SCL_LOW If SCL is low when the breakpoint occurs the I2C module stops immediately If SCL is high the I2C module waits until SCL becomes low and then stops I2C_EMULATION_FREE_RUN I2C operation continues regardless of a the suspend None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_NO_ACK</field>
    <field name="url">group__i2c__api.html#gaa422e52c9c358e76b56e73b7562c5d7d</field>
    <field name="keywords">I2C_STS_NO_ACK I2C_STS_NO_ACK</field>
    <field name="text">No-acknowledgment NACK No-acknowledgment NACK</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_configureModuleClockFrequency</field>
    <field name="args">(uint32_t base, uint32_t sysclkHz, uint32_t moduleFrequency)</field>
    <field name="url">group__i2c__api.html#gaa702dcb68cb9572b92a2df66415d40df</field>
    <field name="keywords">I2C_configureModuleClockFrequency I2C_configureModuleClockFrequency</field>
    <field name="text">Configures I2C Module Clock Frequency with a given module clock base is the base address of the I2C instance used sysclkHz is the rate of the clock supplied to the I2C module SYSCLK in Hz moduleFrequency is the rate of the module clock used by I2C module This function configures I2C module clock frequency by initializing prescale register based on SYSCLK frequency Note that the I2C module must be put into reset before calling this function You can do this with the function I2C_disableModule() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_setOwnAddress</field>
    <field name="args">(uint32_t base, uint16_t Addr)</field>
    <field name="url">group__i2c__api.html#gaa72d9ecaaf726cbdb07973ce4bf0dcfd</field>
    <field name="keywords">I2C_setOwnAddress I2C_setOwnAddress</field>
    <field name="text">Sets the own address for this I2C module base is the base address of the I2C Target module Addr is the 7 bit or 1 0 bit address This function writes the specified address The parameter Addr is the value that is compared against the target address sent by an I2C controller None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_sendStartCondition</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#gaa7e1e5f0ed8de7d718ba3d03a2845d4e</field>
    <field name="keywords">I2C_sendStartCondition I2C_sendStartCondition</field>
    <field name="text">Issues an I2C START condition base is the base address of the I2C instance used This function causes the I2C module to generate a start condition This function is only valid when the I2C module specified by the base parameter is a controller None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">I2C_AddressMode</field>
    <field name="url">group__i2c__api.html#gaa86181c7a2da2635a9b5fb3cb51432b2</field>
    <field name="keywords">I2C_AddressMode I2C_AddressMode</field>
    <field name="text">Values that can be passed to I2C_setAddressMode() as the mode parameter Values that can be passed to I2C_setAddressMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_TX_DATA_RDY</field>
    <field name="url">group__i2c__api.html#gaaab80b411c917af993f72bf614dd5024</field>
    <field name="keywords">I2C_STS_TX_DATA_RDY I2C_STS_TX_DATA_RDY</field>
    <field name="text">Transmit-data-ready Transmit-data-ready</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_getFIFOInterruptLevel</field>
    <field name="args">(uint32_t base, I2C_TxFIFOLevel *txLevel, I2C_RxFIFOLevel *rxLevel)</field>
    <field name="url">group__i2c__api.html#gaacd8193078f81914c8d71aebe7698569</field>
    <field name="keywords">I2C_getFIFOInterruptLevel I2C_getFIFOInterruptLevel</field>
    <field name="text">Gets the FIFO level at which interrupts are generated base is the base address of the I2C instance used txLevel is a pointer to storage for the transmit FIFO level returned as one of I2C_FIFO_TX0 I2C_FIFO_TX1 I2C_FIFO_TX2 or I2C_FIFO_TX16 rxLevel is a pointer to storage for the receive FIFO level returned as one of I2C_FIFO_RX0 I2C_FIFO_RX1 I2C_FIFO_RX2 or I2C_FIFO_RX16 This function gets the FIFO level at which transmit and receive interrupts are generated The transmit FIFO interrupt flag will be set when the FIFO reaches a value less than or equal to txLevel The receive FIFO flag will be set when the FIFO reaches a value greater than or equal to rxLevel None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_RX_DATA_RDY</field>
    <field name="url">group__i2c__api.html#gaadcd3f8c1a68fcf99daefd361b81c615</field>
    <field name="keywords">I2C_STS_RX_DATA_RDY I2C_STS_RX_DATA_RDY</field>
    <field name="text">Receive-data-ready Receive-data-ready</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_disableLoopback</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#gaae96d6307d42090ce2c9d2fc6f843bbb</field>
    <field name="keywords">I2C_disableLoopback I2C_disableLoopback</field>
    <field name="text">Disables I2C loopback mode base is the base address of the I2C instance used This function disables loopback mode Loopback mode is disabled by default after reset None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_setExtendedMode</field>
    <field name="args">(uint32_t base, I2C_ExtendedMode mode)</field>
    <field name="url">group__i2c__api.html#gab28311193e5c8fe97c6cac0c39e2071e</field>
    <field name="keywords">I2C_setExtendedMode I2C_setExtendedMode</field>
    <field name="text">Sets the compatibility mode to support I2C Extended Mode base is the base address of the I2C instance used mode is the compatibility modes This function configures the I2C module for either a Forward or Backward compatibilty The mode parameter configures the compatibility to Forward when its value is I2C_EADDR_MODE_FWD and Backward when I2C_EADDR_MODE_BC None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_STOP_CONDITION</field>
    <field name="url">group__i2c__api.html#gab686e707d373e804d4d0dbf2b1018361</field>
    <field name="keywords">I2C_STS_STOP_CONDITION I2C_STS_STOP_CONDITION</field>
    <field name="text">Stop condition detected Stop condition detected</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_configureModuleFrequency</field>
    <field name="args">(uint32_t base, uint32_t sysclkHz)</field>
    <field name="url">group__i2c__api.html#gab8ff4bb9f1fd81eb5bb66afde942f234</field>
    <field name="keywords">I2C_configureModuleFrequency I2C_configureModuleFrequency</field>
    <field name="text">Configures I2C Module Clock Frequency base is the base address of the I2C instance used sysclkHz is the rate of the clock supplied to the I2C module SYSCLK in Hz This function configures I2C module clock frequency by initializing prescale register based on SYSCLK frequency Note that the I2C module must be put into reset before calling this function You can do this with the function I2C_disableModule() None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">I2C_ExtendedMode</field>
    <field name="url">group__i2c__api.html#gabd5e674dc12c10eb264f48c78fac064f</field>
    <field name="keywords">I2C_ExtendedMode I2C_ExtendedMode</field>
    <field name="text">Values that can be passed to I2C_setExtendedMode() as the mode parameter Values that can be passed to I2C_setExtendedMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_enableModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#gabe5c7fa12c0e3ea599d219bff7f966ef</field>
    <field name="keywords">I2C_enableModule I2C_enableModule</field>
    <field name="text">Enables the I2C module base is the base address of the I2C instance used This function enables operation of the I2C module None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_getInterruptSource</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#gac2570e1d0d0fd5eb1f9759903bd58a26</field>
    <field name="keywords">I2C_getInterruptSource I2C_getInterruptSource</field>
    <field name="text">Returns the current I2C interrupt source base is the base address of the I2C instance used This function returns the event that generated an I2C basic non-FIFO interrupt The possible sources are the following I2C_INTSRC_NONE I2C_INTSRC_ARB_LOST I2C_INTSRC_NO_ACK I2C_INTSRC_REG_ACCESS_RDY I2C_INTSRC_RX_DATA_RDY I2C_INTSRC_TX_DATA_RDY I2C_INTSRC_STOP_CONDITION I2C_INTSRC_ADDR_TARGET Calling this function will result in hardware automatically clearing the current interrupt code and if ready loading the next pending enabled interrupt It will also clear the corresponding interrupt flag if the source is I2C_INTSRC_ARB_LOST I2C_INTSRC_NO_ACK or I2C_INTSRC_STOP_CONDITION Note that this function differs from I2C_getInterruptStatus() in that it returns a single interrupt source I2C_getInterruptSource() will return the status of all interrupt flags possible including the flags that aren t necessarily enabled to generate interrupts None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_enableInterrupt</field>
    <field name="args">(uint32_t base, uint32_t intFlags)</field>
    <field name="url">group__i2c__api.html#gac67a172bbf516ee43eaf963c42bcbebf</field>
    <field name="keywords">I2C_enableInterrupt I2C_enableInterrupt</field>
    <field name="text">Enables I2C interrupt sources base is the base address of the I2C instance used intFlags is the bit mask of the interrupt sources to be enabled This function enables the indicated I2C Controller interrupt sources Only the sources that are enabled can be reflected to the processor interrupt Disabled sources have no effect on the processor The intFlags parameter is the logical OR of any of the following I2C_INT_ARB_LOST Arbitration-lost interrupt I2C_INT_NO_ACK No-acknowledgment NACK interrupt I2C_INT_REG_ACCESS_RDY Register-access-ready interrupt I2C_INT_RX_DATA_RDY Receive-data-ready interrupt I2C_INT_TX_DATA_RDY Transmit-data-ready interrupt I2C_INT_STOP_CONDITION Stop condition detected I2C_INT_ADDR_TARGET Addressed as target interrupt I2C_INT_RXFF RX FIFO level interrupt I2C_INT_TXFF TX FIFO level interrupt I2C_INT_RXFF and I2C_INT_TXFF are associated with the I2C FIFO interrupt vector All others are associated with the I2C basic interrupt None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_RX_FULL</field>
    <field name="url">group__i2c__api.html#gac753d254bb0a54cf37837d3324e688ab</field>
    <field name="keywords">I2C_STS_RX_FULL I2C_STS_RX_FULL</field>
    <field name="text">Receive shift register full Receive shift register full</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_initController</field>
    <field name="args">(uint32_t base, uint32_t sysclkHz, uint32_t bitRate, I2C_DutyCycle dutyCycle)</field>
    <field name="url">group__i2c__api.html#gacb9dc5a590289a658a707ae1df19f2f1</field>
    <field name="keywords">I2C_initController I2C_initController</field>
    <field name="text">Initializes the I2C Controller base is the base address of the I2C instance used sysclkHz is the rate of the clock supplied to the I2C module SYSCLK in Hz bitRate is the rate of the controller clock signal SCL dutyCycle is duty cycle of the SCL signal This function initializes operation of the I2C Controller by configuring the bus speed for the controller Note that the I2C module must be put into reset before calling this function You can do this with the function I2C_disableModule() A programmable prescaler in the I2C module divides down the input clock rate specified by sysclkHz to produce the module clock calculated to be around 1 0 MHz in this function That clock is then divided down further to configure the SCL signal to run at the rate specified by bitRate The dutyCycle parameter determines the percentage of time high and time low on the clock signal The valid values are I2C_DUTYCYCLE_33 for 3 3 and I2C_DUTYCYCLE_50 for 5 0 The peripheral clock is the system clock This value is returned by SysCtl_getClock() or it can be explicitly hard coded if it is constant and known to save the code/execution overhead of a call to SysCtl_getClock() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_setConfig</field>
    <field name="args">(uint32_t base, uint16_t config)</field>
    <field name="url">group__i2c__api.html#gacba4b03079f610c7142b1ff6d7d00ce3</field>
    <field name="keywords">I2C_setConfig I2C_setConfig</field>
    <field name="text">Controls the state of the I2C module base is the base address of the I2C instance used config is the command to be issued to the I2C module This function is used to control the state of the controller and target send and receive operations The config is a logical OR of the following options One of the following four options I2C_CONTROLLER_SEND_MODE Controller-transmitter mode I2C_CONTROLLER_RECEIVE_MODE Controller-receiver mode I2C_TARGET_SEND_MODE Target-transmitter mode I2C_TARGET_RECEIVE_MODE Target-receiver mode Any of the following I2C_REPEAT_MODE Sends data until stop bit is set ignores data count I2C_START_BYTE_MODE Use start byte mode I2C_FREE_DATA_FORMAT Use free data format transfers have no address None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_START_BYTE_MODE</field>
    <field name="url">group__i2c__api.html#gacebb4eb691d980a44f5c139bde42bbf3</field>
    <field name="keywords">I2C_START_BYTE_MODE I2C_START_BYTE_MODE</field>
    <field name="text">Enable start byte mode Enable start byte mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_disableInterrupt</field>
    <field name="args">(uint32_t base, uint32_t intFlags)</field>
    <field name="url">group__i2c__api.html#gacfcd1315b13f4119593859ac74eee756</field>
    <field name="keywords">I2C_disableInterrupt I2C_disableInterrupt</field>
    <field name="text">Disables I2C interrupt sources base is the base address of the I2C instance used intFlags is the bit mask of the interrupt sources to be disabled This function disables the indicated I2C Target interrupt sources Only the sources that are enabled can be reflected to the processor interrupt Disabled sources have no effect on the processor The intFlags parameter has the same definition as the intFlags parameter to I2C_enableInterrupt() None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_TARGET_RECEIVE_MODE</field>
    <field name="url">group__i2c__api.html#gacfd923a0b2a61f80702f43b8765841d4</field>
    <field name="keywords">I2C_TARGET_RECEIVE_MODE I2C_TARGET_RECEIVE_MODE</field>
    <field name="text">Target-receiver mode Target-receiver mode</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_INT_ARB_LOST</field>
    <field name="url">group__i2c__api.html#gad316a1d9ab0507c8d3d1bfff1f30f7bd</field>
    <field name="keywords">I2C_INT_ARB_LOST I2C_INT_ARB_LOST</field>
    <field name="text">Arbitration-lost interrupt Arbitration-lost interrupt</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">I2C_BitCount</field>
    <field name="url">group__i2c__api.html#gad3ea8baaa89dce43e667db5213add11e</field>
    <field name="keywords">I2C_BitCount I2C_BitCount</field>
    <field name="text">Values that can be passed to I2C_setBitCount() as the size parameter Values that can be passed to I2C_setBitCount() as the size parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_CONTROLLER_SEND_MODE</field>
    <field name="url">group__i2c__api.html#gad5730e33dbfb817bbb3032027cb70ef9</field>
    <field name="keywords">I2C_CONTROLLER_SEND_MODE I2C_CONTROLLER_SEND_MODE</field>
    <field name="text">Controller-transmitter mode Controller-transmitter mode</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_TARGET_SEND_MODE</field>
    <field name="url">group__i2c__api.html#gad8a4853d0ec1ebc51335d68dd8256c1c</field>
    <field name="keywords">I2C_TARGET_SEND_MODE I2C_TARGET_SEND_MODE</field>
    <field name="text">Target-transmitter mode Target-transmitter mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_getStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#gad8d13078f426783c23c53959dab992ad</field>
    <field name="keywords">I2C_getStatus I2C_getStatus</field>
    <field name="text">Gets the current I2C module status base is the base address of the I2C instance used This function returns the status for the I2C module The current module status enumerated as a bit field of I2C_STS_ARB_LOST Arbitration-lost I2C_STS_NO_ACK No-acknowledgment NACK I2C_STS_REG_ACCESS_RDY Register-access-ready ARDY I2C_STS_RX_DATA_RDY Receive-data-ready I2C_STS_TX_DATA_RDY Transmit-data-ready I2C_STS_STOP_CONDITION Stop condition detected I2C_STS_BYTE_SENT Byte transmit complete I2C_STS_ADDR_ZERO Address of all zeros detected I2C_STS_ADDR_TARGET Addressed as Target I2C_STS_TX_EMPTY Transmit shift register empty I2C_STS_RX_FULL Receive shift register full I2C_STS_BUS_BUSY Bus busy wait for STOP or reset I2C_STS_NACK_SENT NACK was sent I2C_STS_TARGET_DIR- Addressed as Target transmitter I2C_STS_SCL_ECS SCL Auto Clock Stretch Status</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">I2C_EmulationMode</field>
    <field name="url">group__i2c__api.html#gadd1b6e17d8814775499653000061c434</field>
    <field name="keywords">I2C_EmulationMode I2C_EmulationMode</field>
    <field name="text">Values that can be passed to I2C_setEmulationMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_TARGET_DIR</field>
    <field name="url">group__i2c__api.html#gaddd0ff4e70f3a5fa83aa5e5e4bb1abe6</field>
    <field name="keywords">I2C_STS_TARGET_DIR I2C_STS_TARGET_DIR</field>
    <field name="text">Addressed as target transmitter Addressed as target transmitter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_INT_SCL_ECS</field>
    <field name="url">group__i2c__api.html#gae18a2a4e7c290bb497ffe5b9da3d8e2f</field>
    <field name="keywords">I2C_INT_SCL_ECS I2C_INT_SCL_ECS</field>
    <field name="text">SCL Extended Automatic Clock Stretch Interrupt SCL Extended Automatic Clock Stretch Interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_getInterruptStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#gae2121679de766a4e914b1304f1f4be65</field>
    <field name="keywords">I2C_getInterruptStatus I2C_getInterruptStatus</field>
    <field name="text">Gets the current I2C interrupt status base is the base address of the I2C instance used This function returns the interrupt status for the I2C module The current interrupt status enumerated as a bit field of I2C_INT_ARB_LOST I2C_INT_NO_ACK I2C_INT_REG_ACCESS_RDY I2C_INT_RX_DATA_RDY I2C_INT_TX_DATA_RDY I2C_INT_STOP_CONDITION I2C_INT_ADDR_TARGET I2C_INT_RXFF I2C_INT_TXFF This function will only return the status flags associated with interrupts However a flag may be set even if its corresponding interrupt is disabled</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_getRxFIFOStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#gae2606f92eb85b32ba767a7665aec89a3</field>
    <field name="keywords">I2C_getRxFIFOStatus I2C_getRxFIFOStatus</field>
    <field name="text">Get the receive FIFO status base is the base address of the I2C instance used This function gets the current number of words in the receive FIFO Returns the current number of words in the receive FIFO specified as one of the following I2C_FIFO_RX0 I2C_FIFO_RX1 I2C_FIFO_RX2 I2C_FIFO_RX3 or I2C_FIFO_RX16</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_disableFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#gae4486b5f38330bcba0e5b4d43db5ef09</field>
    <field name="keywords">I2C_disableFIFO I2C_disableFIFO</field>
    <field name="text">Disables the transmit and receive FIFOs base is the base address of the I2C instance used This functions disables the transmit and receive FIFOs in the I2C None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_sendNACK</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#gae9e416d2cd6f991e2ea0756b9d4bc1bd</field>
    <field name="keywords">I2C_sendNACK I2C_sendNACK</field>
    <field name="text">Issues a no-acknowledge NACK bit base is the base address of the I2C instance used This function causes the I2C module to generate a NACK bit This is only applicable when the I2C module is acting as a receiver None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">I2C_enableExtendedAutomaticClkStretchingMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__i2c__api.html#gaead628804e759db595f4c9ac655ce80c</field>
    <field name="keywords">I2C_enableExtendedAutomaticClkStretchingMode I2C_enableExtendedAutomaticClkStretchingMode</field>
    <field name="text">Enable the Extended automatic clock stretching mode base is the base address of the I2C instance used This function configures the I2C module to enable extended automatic clock stretching mode None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_BUS_BUSY</field>
    <field name="url">group__i2c__api.html#gaf2b15aa7355b8a942cb9a94d585658fc</field>
    <field name="keywords">I2C_STS_BUS_BUSY I2C_STS_BUS_BUSY</field>
    <field name="text">Bus busy wait for STOP or reset Bus busy wait for STOP or reset</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_STS_ARB_LOST</field>
    <field name="url">group__i2c__api.html#gaf635c42441ba4463cb01dd386db2d0cd</field>
    <field name="keywords">I2C_STS_ARB_LOST I2C_STS_ARB_LOST</field>
    <field name="text">Arbitration-lost Arbitration-lost</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">I2C_INT_ADDR_TARGET</field>
    <field name="url">group__i2c__api.html#gafa8e3883a44c19c24eb5e5901d1f6e06</field>
    <field name="keywords">I2C_INT_ADDR_TARGET I2C_INT_ADDR_TARGET</field>
    <field name="text">Addressed as target interrupt Addressed as target interrupt</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_INTSRC_ARB_LOST</field>
    <field name="url">group__i2c__api.html#gga65d4d1522b504625b64522aecc7efc23a4e272de8158ee1c0b5e68ed66db20685</field>
    <field name="keywords">I2C_INTSRC_ARB_LOST I2C_INTSRC_ARB_LOST</field>
    <field name="text">Arbitration-lost interrupt</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_INTSRC_ADDR_TARGET</field>
    <field name="url">group__i2c__api.html#gga65d4d1522b504625b64522aecc7efc23a7deec3e2b484ef1e6ba6cdc350ddcc6a</field>
    <field name="keywords">I2C_INTSRC_ADDR_TARGET I2C_INTSRC_ADDR_TARGET</field>
    <field name="text">Addressed as target interrupt</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_INTSRC_TX_DATA_RDY</field>
    <field name="url">group__i2c__api.html#gga65d4d1522b504625b64522aecc7efc23a8ea44624ef3fd760a98e383ecbf09e3b</field>
    <field name="keywords">I2C_INTSRC_TX_DATA_RDY I2C_INTSRC_TX_DATA_RDY</field>
    <field name="text">Transmit-data-ready interrupt</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_INTSRC_REG_ACCESS_RDY</field>
    <field name="url">group__i2c__api.html#gga65d4d1522b504625b64522aecc7efc23a94b099d4458f1a599c3e734854efbd1b</field>
    <field name="keywords">I2C_INTSRC_REG_ACCESS_RDY I2C_INTSRC_REG_ACCESS_RDY</field>
    <field name="text">Register-access-ready interrupt</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_INTSRC_RX_DATA_RDY</field>
    <field name="url">group__i2c__api.html#gga65d4d1522b504625b64522aecc7efc23a95f4478796e86baffb72d19507e0c008</field>
    <field name="keywords">I2C_INTSRC_RX_DATA_RDY I2C_INTSRC_RX_DATA_RDY</field>
    <field name="text">Receive-data-ready interrupt</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_INTSRC_STOP_CONDITION</field>
    <field name="url">group__i2c__api.html#gga65d4d1522b504625b64522aecc7efc23aa4724ed869d30ef07bec08e0f113ca55</field>
    <field name="keywords">I2C_INTSRC_STOP_CONDITION I2C_INTSRC_STOP_CONDITION</field>
    <field name="text">Stop condition detected</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_INTSRC_SCL_ECS</field>
    <field name="url">group__i2c__api.html#gga65d4d1522b504625b64522aecc7efc23ace3ca48be1fb244a0bbf2a36d6bce3ef</field>
    <field name="keywords">I2C_INTSRC_SCL_ECS I2C_INTSRC_SCL_ECS</field>
    <field name="text">Extended Clock Streching interrupt</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_INTSRC_NO_ACK</field>
    <field name="url">group__i2c__api.html#gga65d4d1522b504625b64522aecc7efc23ae4e3795b32686aec89c90835a191c109</field>
    <field name="keywords">I2C_INTSRC_NO_ACK I2C_INTSRC_NO_ACK</field>
    <field name="text">NACK interrupt</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_INTSRC_NONE</field>
    <field name="url">group__i2c__api.html#gga65d4d1522b504625b64522aecc7efc23af893f88c61c51a8dc32f6da46d4f2b79</field>
    <field name="keywords">I2C_INTSRC_NONE I2C_INTSRC_NONE</field>
    <field name="text">No interrupt pending</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX1</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaa00f0939b8d62c729ee7566528b0ad905</field>
    <field name="keywords">I2C_FIFO_RX1 I2C_FIFO_RX1</field>
    <field name="text">Receive FIFO 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX13</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaa05bc4f4c833afc308d3afc0662d8f809</field>
    <field name="keywords">I2C_FIFO_RX13 I2C_FIFO_RX13</field>
    <field name="text">Receive FIFO 1 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX15</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaa0b0b0283b387a1505a9b1940c3e981d7</field>
    <field name="keywords">I2C_FIFO_RX15 I2C_FIFO_RX15</field>
    <field name="text">Receive FIFO 1 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX4</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaa0d9e21188ce12f0b41983d8a30022dcf</field>
    <field name="keywords">I2C_FIFO_RX4 I2C_FIFO_RX4</field>
    <field name="text">Receive FIFO 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX6</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaa1ef434d7ec871ece1d740a57fc93b777</field>
    <field name="keywords">I2C_FIFO_RX6 I2C_FIFO_RX6</field>
    <field name="text">Receive FIFO 6 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX8</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaa2e7a603c950b73069b9781e818fddced</field>
    <field name="keywords">I2C_FIFO_RX8 I2C_FIFO_RX8</field>
    <field name="text">Receive FIFO 8 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX5</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaa3520923e6ab55b9ddb7fe1f36ba09542</field>
    <field name="keywords">I2C_FIFO_RX5 I2C_FIFO_RX5</field>
    <field name="text">Receive FIFO 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX11</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaa693e44d7c37783c88f959b37d07a1d40</field>
    <field name="keywords">I2C_FIFO_RX11 I2C_FIFO_RX11</field>
    <field name="text">Receive FIFO 1 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX2</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaa6d371f65c8dd485ab871111abe0cca49</field>
    <field name="keywords">I2C_FIFO_RX2 I2C_FIFO_RX2</field>
    <field name="text">Receive FIFO 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX10</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaa7b7b08149114d6638a618106ff925e83</field>
    <field name="keywords">I2C_FIFO_RX10 I2C_FIFO_RX10</field>
    <field name="text">Receive FIFO 1 0 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RXEMPTY</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaa827dad7b60151a556e8f8971172c75d7</field>
    <field name="keywords">I2C_FIFO_RXEMPTY I2C_FIFO_RXEMPTY</field>
    <field name="text">Receive FIFO empty</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX3</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaa9d3c4b177ca70a42d123b47dc2df7ee4</field>
    <field name="keywords">I2C_FIFO_RX3 I2C_FIFO_RX3</field>
    <field name="text">Receive FIFO 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX7</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaab5577527b203487fe67a2a8f65814d9d</field>
    <field name="keywords">I2C_FIFO_RX7 I2C_FIFO_RX7</field>
    <field name="text">Receive FIFO 7 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX12</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaab96e8f8d1446d6956b0fae4a57d5d59d</field>
    <field name="keywords">I2C_FIFO_RX12 I2C_FIFO_RX12</field>
    <field name="text">Receive FIFO 1 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RXFULL</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaac723a89b5337bcd146e35efd3ab8e9d2</field>
    <field name="keywords">I2C_FIFO_RXFULL I2C_FIFO_RXFULL</field>
    <field name="text">Receive FIFO full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX0</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaad31b588a7767b6adb279f6f7793655d8</field>
    <field name="keywords">I2C_FIFO_RX0 I2C_FIFO_RX0</field>
    <field name="text">Receive FIFO empty</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX9</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaaf6fefeb8b4ec6a7f271dcaa2e7877c50</field>
    <field name="keywords">I2C_FIFO_RX9 I2C_FIFO_RX9</field>
    <field name="text">Receive FIFO 9 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX16</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaaf780aab1e6ade1f855cb2ceb15b99f9a</field>
    <field name="keywords">I2C_FIFO_RX16 I2C_FIFO_RX16</field>
    <field name="text">Receive FIFO full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_RX14</field>
    <field name="url">group__i2c__api.html#gga91f4122cb0d0dfd2cf7f3f465352c1eaafa270cf8008fd1edc44d488e4bfa01bb</field>
    <field name="keywords">I2C_FIFO_RX14 I2C_FIFO_RX14</field>
    <field name="text">Receive FIFO 1 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_DUTYCYCLE_50</field>
    <field name="url">group__i2c__api.html#gga93eefc059d0a3c81e61d4c3c4816d4e0a7d5ff14e54f33ac1e4d4ef29d1d69acb</field>
    <field name="keywords">I2C_DUTYCYCLE_50 I2C_DUTYCYCLE_50</field>
    <field name="text">Clock duty cycle is 5 5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_DUTYCYCLE_33</field>
    <field name="url">group__i2c__api.html#gga93eefc059d0a3c81e61d4c3c4816d4e0ab0d8b5d917719bcc4d9f5ecec4f588de</field>
    <field name="keywords">I2C_DUTYCYCLE_33 I2C_DUTYCYCLE_33</field>
    <field name="text">Clock duty cycle is 3 3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX11</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4ba045c04961e3223171235c09fbbfcd813</field>
    <field name="keywords">I2C_FIFO_TX11 I2C_FIFO_TX11</field>
    <field name="text">Transmit FIFO 1 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX0</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4ba05e3f38d9c922609a58f9eeabd279a8a</field>
    <field name="keywords">I2C_FIFO_TX0 I2C_FIFO_TX0</field>
    <field name="text">Transmit FIFO empty</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX13</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4ba0ea94067e8235ef09443c463658b858f</field>
    <field name="keywords">I2C_FIFO_TX13 I2C_FIFO_TX13</field>
    <field name="text">Transmit FIFO 1 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX3</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4ba15419fe549daa0342f43b40c52d6a818</field>
    <field name="keywords">I2C_FIFO_TX3 I2C_FIFO_TX3</field>
    <field name="text">Transmit FIFO 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX2</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4ba2131767267f0ab0ba4a6b933e4322399</field>
    <field name="keywords">I2C_FIFO_TX2 I2C_FIFO_TX2</field>
    <field name="text">Transmit FIFO 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX15</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4ba26fefa7d1b420322ac95b3aed6254a49</field>
    <field name="keywords">I2C_FIFO_TX15 I2C_FIFO_TX15</field>
    <field name="text">Transmit FIFO 1 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TXEMPTY</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4ba2de6c23d460dbf6dab798b3cbd2559e6</field>
    <field name="keywords">I2C_FIFO_TXEMPTY I2C_FIFO_TXEMPTY</field>
    <field name="text">Transmit FIFO empty</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX6</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4ba48bf90b465ed0a9da9f914021359f517</field>
    <field name="keywords">I2C_FIFO_TX6 I2C_FIFO_TX6</field>
    <field name="text">Transmit FIFO 6 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX5</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4ba4a7cb7511b5f71a53a2974093f2722d3</field>
    <field name="keywords">I2C_FIFO_TX5 I2C_FIFO_TX5</field>
    <field name="text">Transmit FIFO 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX14</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4ba53ba5a5caa41cb80266c0cbd7cc57298</field>
    <field name="keywords">I2C_FIFO_TX14 I2C_FIFO_TX14</field>
    <field name="text">Transmit FIFO 1 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX1</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4ba61d5ff763b9e071a6f616349e51cf661</field>
    <field name="keywords">I2C_FIFO_TX1 I2C_FIFO_TX1</field>
    <field name="text">Transmit FIFO 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX7</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4ba6f56e0a720285f8d8e6ba701609564cc</field>
    <field name="keywords">I2C_FIFO_TX7 I2C_FIFO_TX7</field>
    <field name="text">Transmit FIFO 7 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX12</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4baa3e3518b86cf70c0b1ecba332040b888</field>
    <field name="keywords">I2C_FIFO_TX12 I2C_FIFO_TX12</field>
    <field name="text">Transmit FIFO 1 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX16</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4bab4cbba4d063e715f93d6732654eb6d66</field>
    <field name="keywords">I2C_FIFO_TX16 I2C_FIFO_TX16</field>
    <field name="text">Transmit FIFO full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX8</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4bacaee79deecf526a222b1750991ae1d40</field>
    <field name="keywords">I2C_FIFO_TX8 I2C_FIFO_TX8</field>
    <field name="text">Transmit FIFO 8 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX10</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4bad3d400bcacfd5bbb7b3afc44d8f7df07</field>
    <field name="keywords">I2C_FIFO_TX10 I2C_FIFO_TX10</field>
    <field name="text">Transmit FIFO 1 0 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX4</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4bad84d56c31d1d73ddb6742a05aec5c220</field>
    <field name="keywords">I2C_FIFO_TX4 I2C_FIFO_TX4</field>
    <field name="text">Transmit FIFO 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TX9</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4baf1c9e34375926be849734bea7d4c84aa</field>
    <field name="keywords">I2C_FIFO_TX9 I2C_FIFO_TX9</field>
    <field name="text">Transmit FIFO 9 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_FIFO_TXFULL</field>
    <field name="url">group__i2c__api.html#gga9886cb94314bb81524b57ddc23a0af4baf528fceff4efb6a8f83f9816e235c077</field>
    <field name="keywords">I2C_FIFO_TXFULL I2C_FIFO_TXFULL</field>
    <field name="text">Transmit FIFO full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_ADDR_MODE_10BITS</field>
    <field name="url">group__i2c__api.html#ggaa86181c7a2da2635a9b5fb3cb51432b2a39ab6f5090c45e0a2dbae3674a5f2931</field>
    <field name="keywords">I2C_ADDR_MODE_10BITS I2C_ADDR_MODE_10BITS</field>
    <field name="text">1 0 bit address</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_ADDR_MODE_7BITS</field>
    <field name="url">group__i2c__api.html#ggaa86181c7a2da2635a9b5fb3cb51432b2a71c3825c7b9f3d051b210bc02d6d7323</field>
    <field name="keywords">I2C_ADDR_MODE_7BITS I2C_ADDR_MODE_7BITS</field>
    <field name="text">7 bit address</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_EADDR_MODE_BC</field>
    <field name="url">group__i2c__api.html#ggabd5e674dc12c10eb264f48c78fac064fab43f548bcd36f09e49c8d366d2fff345</field>
    <field name="keywords">I2C_EADDR_MODE_BC I2C_EADDR_MODE_BC</field>
    <field name="text">Backward compatibility</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_EADDR_MODE_FWD</field>
    <field name="url">group__i2c__api.html#ggabd5e674dc12c10eb264f48c78fac064fadf1db4ea14906aa619e82b9ce424647f</field>
    <field name="keywords">I2C_EADDR_MODE_FWD I2C_EADDR_MODE_FWD</field>
    <field name="text">Forward compatibility</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_BITCOUNT_7</field>
    <field name="url">group__i2c__api.html#ggad3ea8baaa89dce43e667db5213add11ea0aeb480fe72f7a8a2cf80f38adf4ea15</field>
    <field name="keywords">I2C_BITCOUNT_7 I2C_BITCOUNT_7</field>
    <field name="text">7 bits per data byte</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_BITCOUNT_5</field>
    <field name="url">group__i2c__api.html#ggad3ea8baaa89dce43e667db5213add11ea2e74b6940893d70cc227bb55cf502942</field>
    <field name="keywords">I2C_BITCOUNT_5 I2C_BITCOUNT_5</field>
    <field name="text">5 bits per data byte</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_BITCOUNT_3</field>
    <field name="url">group__i2c__api.html#ggad3ea8baaa89dce43e667db5213add11ea78e202c9a47315228bac0ddf1b9e233e</field>
    <field name="keywords">I2C_BITCOUNT_3 I2C_BITCOUNT_3</field>
    <field name="text">3 bits per data byte</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_BITCOUNT_4</field>
    <field name="url">group__i2c__api.html#ggad3ea8baaa89dce43e667db5213add11ea8d5d8ac900206dc028733119c8591085</field>
    <field name="keywords">I2C_BITCOUNT_4 I2C_BITCOUNT_4</field>
    <field name="text">4 bits per data byte</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_BITCOUNT_6</field>
    <field name="url">group__i2c__api.html#ggad3ea8baaa89dce43e667db5213add11ea9665039b2c7f07615add03706bdfd90b</field>
    <field name="keywords">I2C_BITCOUNT_6 I2C_BITCOUNT_6</field>
    <field name="text">6 bits per data byte</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_BITCOUNT_8</field>
    <field name="url">group__i2c__api.html#ggad3ea8baaa89dce43e667db5213add11eaa3961a560cb841ff7d572b7a3886c16d</field>
    <field name="keywords">I2C_BITCOUNT_8 I2C_BITCOUNT_8</field>
    <field name="text">8 bits per data byte</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_BITCOUNT_2</field>
    <field name="url">group__i2c__api.html#ggad3ea8baaa89dce43e667db5213add11eac36340a536bee8ea7e6cc5c8c09b7509</field>
    <field name="keywords">I2C_BITCOUNT_2 I2C_BITCOUNT_2</field>
    <field name="text">2 bits per data byte</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_BITCOUNT_1</field>
    <field name="url">group__i2c__api.html#ggad3ea8baaa89dce43e667db5213add11eacb67798936a589f27f3fc684a66b787e</field>
    <field name="keywords">I2C_BITCOUNT_1 I2C_BITCOUNT_1</field>
    <field name="text">1 bit per data byte</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_EMULATION_STOP_SCL_LOW</field>
    <field name="url">group__i2c__api.html#ggadd1b6e17d8814775499653000061c434a4907c1bd2639317bd7a1a83e00aadb7c</field>
    <field name="keywords">I2C_EMULATION_STOP_SCL_LOW I2C_EMULATION_STOP_SCL_LOW</field>
    <field name="text">If SCL is low keep it low If high stop when it goes low again</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">I2C_EMULATION_FREE_RUN</field>
    <field name="url">group__i2c__api.html#ggadd1b6e17d8814775499653000061c434adcfd3b2adb8984b18451dddb0f0707d8</field>
    <field name="keywords">I2C_EMULATION_FREE_RUN I2C_EMULATION_FREE_RUN</field>
    <field name="text">Continue I2C operation regardless</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">interrupt_api</field>
    <field name="url">group__interrupt__api.html</field>
    <field name="keywords">Interrupt</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_register</field>
    <field name="args">(uint32_t interruptNumber, void(*handler)(void))</field>
    <field name="url">group__interrupt__api.html#ga041a6f6f75c6679e0656245cab334eef</field>
    <field name="keywords">Interrupt_register Interrupt_register</field>
    <field name="text">Registers a function to be called when an interrupt occurs interruptNumber specifies the interrupt in question handler is a pointer to the function to be called This function is used to specify the handler function to be called when the given interrupt is asserted to the processor When the interrupt occurs if it is enabled via Interrupt_enable() the handler function will be called in interrupt context Since the handler function can preempt other code care must be taken to protect memory or peripherals that are accessed by the handler and other non-handler code The available interruptNumber values are supplied in inc/hw_ints.h This function assumes that the PIE has been enabled See Interrupt_initModule() None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT12</field>
    <field name="url">group__interrupt__api.html#ga143945e992aee6fc6cc0ef9b22dc2e97</field>
    <field name="keywords">INTERRUPT_CPU_INT12 INTERRUPT_CPU_INT12</field>
    <field name="text">CPU Interrupt Number 1 2 CPU Interrupt Number 1 2</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT14</field>
    <field name="url">group__interrupt__api.html#ga1aa0d093b717bcd83f9f0724dbcdaefa</field>
    <field name="keywords">INTERRUPT_CPU_INT14 INTERRUPT_CPU_INT14</field>
    <field name="text">CPU Interrupt Number 1 4 CPU Interrupt Number 1 4</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_ACK_GROUP9</field>
    <field name="url">group__interrupt__api.html#ga1b4f2ff7331374ca8bf1f6e4c0d32a13</field>
    <field name="keywords">INTERRUPT_ACK_GROUP9 INTERRUPT_ACK_GROUP9</field>
    <field name="text">Acknowledge PIE Interrupt Group 9 Acknowledge PIE Interrupt Group 9</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_DLOGINT</field>
    <field name="url">group__interrupt__api.html#ga1e1af7febdf51017adaa9ccb8c485614</field>
    <field name="keywords">INTERRUPT_CPU_DLOGINT INTERRUPT_CPU_DLOGINT</field>
    <field name="text">CPU Data Log Interrupt CPU Data Log Interrupt</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT3</field>
    <field name="url">group__interrupt__api.html#ga1f9dbd6822b5d5858f78e4b17a25be13</field>
    <field name="keywords">INTERRUPT_CPU_INT3 INTERRUPT_CPU_INT3</field>
    <field name="text">CPU Interrupt Number 3 CPU Interrupt Number 3</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_ACK_GROUP3</field>
    <field name="url">group__interrupt__api.html#ga25d8adda011ed4249eea06c370337632</field>
    <field name="keywords">INTERRUPT_ACK_GROUP3 INTERRUPT_ACK_GROUP3</field>
    <field name="text">Acknowledge PIE Interrupt Group 3 Acknowledge PIE Interrupt Group 3</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT9</field>
    <field name="url">group__interrupt__api.html#ga2736f869049254b837d191297c5657cd</field>
    <field name="keywords">INTERRUPT_CPU_INT9 INTERRUPT_CPU_INT9</field>
    <field name="text">CPU Interrupt Number 9 CPU Interrupt Number 9</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT1</field>
    <field name="url">group__interrupt__api.html#ga2f5d7e0f3bbae25c205dddb635b7229f</field>
    <field name="keywords">INTERRUPT_CPU_INT1 INTERRUPT_CPU_INT1</field>
    <field name="text">CPU Interrupt Number 1 CPU Interrupt Number 1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_clearACKGroup</field>
    <field name="args">(uint16_t group)</field>
    <field name="url">group__interrupt__api.html#ga3820c5be880c89f133d7be99b14a4856</field>
    <field name="keywords">Interrupt_clearACKGroup Interrupt_clearACKGroup</field>
    <field name="text">Acknowledges PIE Interrupt Group group specifies the interrupt group to be acknowledged The specified interrupt group is acknowledged and clears any interrupt flag within that respective group The group parameter must be a logical OR of the following INTERRUPT_ACK_GROUP1 INTERRUPT_ACK_GROUP2 INTERRUPT_ACK_GROUP3 INTERRUPT_ACK_GROUP4 INTERRUPT_ACK_GROUP5 INTERRUPT_ACK_GROUP6 INTERRUPT_ACK_GROUP7 INTERRUPT_ACK_GROUP8 INTERRUPT_ACK_GROUP9 INTERRUPT_ACK_GROUP10 INTERRUPT_ACK_GROUP11 INTERRUPT_ACK_GROUP12 None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_ACK_GROUP6</field>
    <field name="url">group__interrupt__api.html#ga39126afd4d5187c6de1158491d68e2a6</field>
    <field name="keywords">INTERRUPT_ACK_GROUP6 INTERRUPT_ACK_GROUP6</field>
    <field name="text">Acknowledge PIE Interrupt Group 6 Acknowledge PIE Interrupt Group 6</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_ACK_GROUP5</field>
    <field name="url">group__interrupt__api.html#ga398e78625fb3444a26c4de63d23190dc</field>
    <field name="keywords">INTERRUPT_ACK_GROUP5 INTERRUPT_ACK_GROUP5</field>
    <field name="text">Acknowledge PIE Interrupt Group 5 Acknowledge PIE Interrupt Group 5</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT6</field>
    <field name="url">group__interrupt__api.html#ga431eac16737c6690150572ece3140f2a</field>
    <field name="keywords">INTERRUPT_CPU_INT6 INTERRUPT_CPU_INT6</field>
    <field name="text">CPU Interrupt Number 6 CPU Interrupt Number 6</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_disableInCPU</field>
    <field name="args">(uint16_t cpuInterrupt)</field>
    <field name="url">group__interrupt__api.html#ga4729a241eacf0af098294ee31ba50389</field>
    <field name="keywords">Interrupt_disableInCPU Interrupt_disableInCPU</field>
    <field name="text">Disables CPU interrupt channels cpuInterrupt specifies the CPU interrupts to be disabled This function disables the specified interrupts in the CPU The cpuInterrupt parameter is a logical OR of the values INTERRUPT_CPU_INTx where x is the interrupt number between 1 and 1 4 INTERRUPT_CPU_DLOGINT and INTERRUPT_CPU_RTOSINT Note that interrupts 1 1 2 correspond to the PIE groups with those same numbers None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_illegalOperationHandler</field>
    <field name="args">(void)</field>
    <field name="url">group__interrupt__api.html#ga48c5ed9e350b06e16c3186df4b0de83d</field>
    <field name="keywords">Interrupt_illegalOperationHandler Interrupt_illegalOperationHandler</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_enableInCPU</field>
    <field name="args">(uint16_t cpuInterrupt)</field>
    <field name="url">group__interrupt__api.html#ga4a84b5e72c8f0a7be405592931ebf9f1</field>
    <field name="keywords">Interrupt_enableInCPU Interrupt_enableInCPU</field>
    <field name="text">Enables CPU interrupt channels cpuInterrupt specifies the CPU interrupts to be enabled This function enables the specified interrupts in the CPU The cpuInterrupt parameter is a logical OR of the values INTERRUPT_CPU_INTx where x is the interrupt number between 1 and 1 4 INTERRUPT_CPU_DLOGINT and INTERRUPT_CPU_RTOSINT Note that interrupts 1 1 2 correspond to the PIE groups with those same numbers None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_enableGlobal</field>
    <field name="args">(void)</field>
    <field name="url">group__interrupt__api.html#ga4f67f455d71a7e2adfdbc2efe1dc044e</field>
    <field name="keywords">Interrupt_enableGlobal Interrupt_enableGlobal</field>
    <field name="text">Allows the CPU to process interrupts This function clears the global interrupt mask bit INTM in the CPU allowing the processor to respond to interrupts Returns true if interrupts were disabled when the function was called or false if they were initially enabled</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_ACK_GROUP7</field>
    <field name="url">group__interrupt__api.html#ga549723acabddaf74ddae6c6526adf0b9</field>
    <field name="keywords">INTERRUPT_ACK_GROUP7 INTERRUPT_ACK_GROUP7</field>
    <field name="text">Acknowledge PIE Interrupt Group 7 Acknowledge PIE Interrupt Group 7</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT4</field>
    <field name="url">group__interrupt__api.html#ga596dcdbb3f5fd4c23a2d71808ff890df</field>
    <field name="keywords">INTERRUPT_CPU_INT4 INTERRUPT_CPU_INT4</field>
    <field name="text">CPU Interrupt Number 4 CPU Interrupt Number 4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_disablePIE</field>
    <field name="args">(void)</field>
    <field name="url">group__interrupt__api.html#ga598eb67dc3e7a4e8690631d1e4d6c05f</field>
    <field name="keywords">Interrupt_disablePIE Interrupt_disablePIE</field>
    <field name="text">Disables the PIE block This function disables the vector fetching for the peripheral interrupts by disabling the PIE block PIEACK PIEIFR and PIEIER registers can be accessed even when the PIE block is disabled None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_initModule</field>
    <field name="args">(void)</field>
    <field name="url">group__interrupt__api.html#ga5ed592e5db2f93ce1e3f049b92740d82</field>
    <field name="keywords">Interrupt_initModule Interrupt_initModule</field>
    <field name="text">Initializes the PIE control registers by setting them to a known state This function initializes the PIE control registers After globally disabling interrupts and enabling the PIE it clears all of the PIE interrupt enable bits and interrupt flags None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_ACK_GROUP8</field>
    <field name="url">group__interrupt__api.html#ga6f8c5feba0fffbbd4087cc46b4b17601</field>
    <field name="keywords">INTERRUPT_ACK_GROUP8 INTERRUPT_ACK_GROUP8</field>
    <field name="text">Acknowledge PIE Interrupt Group 8 Acknowledge PIE Interrupt Group 8</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT2</field>
    <field name="url">group__interrupt__api.html#ga7c11517c14c60d08b5491df973b192a2</field>
    <field name="keywords">INTERRUPT_CPU_INT2 INTERRUPT_CPU_INT2</field>
    <field name="text">CPU Interrupt Number 2 CPU Interrupt Number 2</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_RTOSINT</field>
    <field name="url">group__interrupt__api.html#ga7eafd53ada889004fd20bd1094a11327</field>
    <field name="keywords">INTERRUPT_CPU_RTOSINT INTERRUPT_CPU_RTOSINT</field>
    <field name="text">CPU RTOS Interrupt CPU RTOS Interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_disableGlobal</field>
    <field name="args">(void)</field>
    <field name="url">group__interrupt__api.html#ga92072c2302cf6440e6e24b2188ddaf4c</field>
    <field name="keywords">Interrupt_disableGlobal Interrupt_disableGlobal</field>
    <field name="text">Stops the CPU from processing interrupts This function sets the global interrupt mask bit INTM in the CPU preventing the processor from receiving maskable interrupts Returns true if interrupts were already disabled when the function was called or false if they were initially enabled</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT7</field>
    <field name="url">group__interrupt__api.html#ga95e2d15b35f128f68c3aa5cafdaba79a</field>
    <field name="keywords">INTERRUPT_CPU_INT7 INTERRUPT_CPU_INT7</field>
    <field name="text">CPU Interrupt Number 7 CPU Interrupt Number 7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_disable</field>
    <field name="args">(uint32_t interruptNumber)</field>
    <field name="url">group__interrupt__api.html#ga9a3a8f11adc85d5e3669f9332c7fd3f9</field>
    <field name="keywords">Interrupt_disable Interrupt_disable</field>
    <field name="text">Disables an interrupt interruptNumber specifies the interrupt to be disabled The specified interrupt is disabled in the interrupt controller Other enables for the interrupt such as at the peripheral level are unaffected by this function The available interruptNumber values are supplied in inc/hw_ints.h None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_enable</field>
    <field name="args">(uint32_t interruptNumber)</field>
    <field name="url">group__interrupt__api.html#ga9d2e78b67270f64253ed520cc74a9064</field>
    <field name="keywords">Interrupt_enable Interrupt_enable</field>
    <field name="text">Enables an interrupt interruptNumber specifies the interrupt to be enabled The specified interrupt is enabled in the interrupt controller Other enables for the interrupt such as at the peripheral level are unaffected by this function The available interruptNumber values are supplied in inc/hw_ints.h None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT11</field>
    <field name="url">group__interrupt__api.html#ga9e8ace05d287c51b915e79a5f81ecf02</field>
    <field name="keywords">INTERRUPT_CPU_INT11 INTERRUPT_CPU_INT11</field>
    <field name="text">CPU Interrupt Number 1 1 CPU Interrupt Number 1 1</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT8</field>
    <field name="url">group__interrupt__api.html#ga9eba8b624382b0fc68c851ecec63a9e7</field>
    <field name="keywords">INTERRUPT_CPU_INT8 INTERRUPT_CPU_INT8</field>
    <field name="text">CPU Interrupt Number 8 CPU Interrupt Number 8</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_ACK_GROUP11</field>
    <field name="url">group__interrupt__api.html#ga9fd2f7406cc9768f6d1a3242d156e747</field>
    <field name="keywords">INTERRUPT_ACK_GROUP11 INTERRUPT_ACK_GROUP11</field>
    <field name="text">Acknowledge PIE Interrupt Group 1 1 Acknowledge PIE Interrupt Group 1 1</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_ACK_GROUP2</field>
    <field name="url">group__interrupt__api.html#gaa0f3f1548cab907a6e07bfd3044b72e8</field>
    <field name="keywords">INTERRUPT_ACK_GROUP2 INTERRUPT_ACK_GROUP2</field>
    <field name="text">Acknowledge PIE Interrupt Group 2 Acknowledge PIE Interrupt Group 2</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_ACK_GROUP4</field>
    <field name="url">group__interrupt__api.html#gaa79b675e01b90f52d872695fdd35226d</field>
    <field name="keywords">INTERRUPT_ACK_GROUP4 INTERRUPT_ACK_GROUP4</field>
    <field name="text">Acknowledge PIE Interrupt Group 4 Acknowledge PIE Interrupt Group 4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_nmiHandler</field>
    <field name="args">(void)</field>
    <field name="url">group__interrupt__api.html#gaadc214138b9d50e3883b8683fc3e0a11</field>
    <field name="keywords">Interrupt_nmiHandler Interrupt_nmiHandler</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">__enable_interrupts</field>
    <field name="args">(void)</field>
    <field name="url">group__interrupt__api.html#gaae1cc466889260d958fa2d68d4541ce1</field>
    <field name="keywords">__enable_interrupts __enable_interrupts</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_initVectorTable</field>
    <field name="args">(void)</field>
    <field name="url">group__interrupt__api.html#gab36687326952b2131939a7ccae276cda</field>
    <field name="keywords">Interrupt_initVectorTable Interrupt_initVectorTable</field>
    <field name="text">Initializes the PIE vector table by setting all vectors to a default handler function None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT5</field>
    <field name="url">group__interrupt__api.html#gab681b3536b981a71e44b327a82936e67</field>
    <field name="keywords">INTERRUPT_CPU_INT5 INTERRUPT_CPU_INT5</field>
    <field name="text">CPU Interrupt Number 5 CPU Interrupt Number 5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_unregister</field>
    <field name="args">(uint32_t interruptNumber)</field>
    <field name="url">group__interrupt__api.html#gac5472e8d75b447a2ceda1c560bd3cbc0</field>
    <field name="keywords">Interrupt_unregister Interrupt_unregister</field>
    <field name="text">Unregisters the function to be called when an interrupt occurs interruptNumber specifies the interrupt in question This function is used to indicate that a default handler Interrupt_defaultHandler() should be called when the given interrupt is asserted to the processor Call Interrupt_disable() to disable the interrupt before calling this function The available interruptNumber values are supplied in inc/hw_ints.h Interrupt_register() for important information about registering interrupt handlers None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_ACK_GROUP1</field>
    <field name="url">group__interrupt__api.html#gac5ad1b400787746162446b606d2f1408</field>
    <field name="keywords">INTERRUPT_ACK_GROUP1 INTERRUPT_ACK_GROUP1</field>
    <field name="text">Acknowledge PIE Interrupt Group 1 Acknowledge PIE Interrupt Group 1</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT13</field>
    <field name="url">group__interrupt__api.html#gad4a268d4b3b7cd4a90aa508b9be04fe1</field>
    <field name="keywords">INTERRUPT_CPU_INT13 INTERRUPT_CPU_INT13</field>
    <field name="text">CPU Interrupt Number 1 3 CPU Interrupt Number 1 3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_defaultHandler</field>
    <field name="args">(void)</field>
    <field name="url">group__interrupt__api.html#gadf3aff8684ae85c08be45499c9414dc5</field>
    <field name="keywords">Interrupt_defaultHandler Interrupt_defaultHandler</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_ACK_GROUP10</field>
    <field name="url">group__interrupt__api.html#gae86790a7a7c921643a62dee4da30589e</field>
    <field name="keywords">INTERRUPT_ACK_GROUP10 INTERRUPT_ACK_GROUP10</field>
    <field name="text">Acknowledge PIE Interrupt Group 1 0 Acknowledge PIE Interrupt Group 1 0</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_CPU_INT10</field>
    <field name="url">group__interrupt__api.html#gae8dd4258645a3bac777d22ab995bbb37</field>
    <field name="keywords">INTERRUPT_CPU_INT10 INTERRUPT_CPU_INT10</field>
    <field name="text">CPU Interrupt Number 1 0 CPU Interrupt Number 1 0</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">INTERRUPT_ACK_GROUP12</field>
    <field name="url">group__interrupt__api.html#gaed3265ef2901198d25f0f356688a92ba</field>
    <field name="keywords">INTERRUPT_ACK_GROUP12 INTERRUPT_ACK_GROUP12</field>
    <field name="text">Acknowledge PIE Interrupt Group 1 2 Acknowledge PIE Interrupt Group 1 2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Interrupt_enablePIE</field>
    <field name="args">(void)</field>
    <field name="url">group__interrupt__api.html#gaefe2e9af5e200370e827e6c5b2d2e163</field>
    <field name="keywords">Interrupt_enablePIE Interrupt_enablePIE</field>
    <field name="text">Enables the PIE block This function enables the vector fetching for the peripheral interrupts by enabling the PIE block None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">__disable_interrupts</field>
    <field name="args">(void)</field>
    <field name="url">group__interrupt__api.html#gaf3a05ab9f4821ba02bb7c942869cedfc</field>
    <field name="keywords">__disable_interrupts __disable_interrupts</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">mcpwm_api</field>
    <field name="url">group__mcpwm__api.html</field>
    <field name="keywords">MCPWM</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setGlobalLoadTrigger</field>
    <field name="args">(uint32_t base, MCPWM_GlobalLoadTrigger loadTrigger)</field>
    <field name="url">group__mcpwm__api.html#ga00890af8b530814127fc3e48f772aca8</field>
    <field name="keywords">MCPWM_setGlobalLoadTrigger MCPWM_setGlobalLoadTrigger</field>
    <field name="text">Set the Global shadow load pulse base is the base address of the MCPWM module loadTrigger is the pulse that causes global shadow load This function sets the pulse that causes Global shadow to active load Valid values for the loadTrigger parameter are MCPWM_GL_LOAD_PULSE_CNTR_ZERO load when counter is equal to zero MCPWM_GL_LOAD_PULSE_CNTR_PERIOD load when counter is equal to period MCPWM_GL_LOAD_PULSE_CNTR_ZERO_PERIOD load when counter is equal to zero or period MCPWM_GL_LOAD_PULSE_GLOBAL_FORCE load on global force None This selection is only active once the Global shadow load mode is enabled i.e MCPWM_enableGlobalLoad() is called Also this pulse is called global load strobe and overwrites any local load strobe causing active registers to load from shadow ones Notice the APIs with Active and Shadow names</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_clearSyncStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga01765d1d1e238b69d763ed414a36d251</field>
    <field name="keywords">MCPWM_clearSyncStatus MCPWM_clearSyncStatus</field>
    <field name="text">Clear external sync signal event base is the base address of the MCPWM module This function clears the external sync signal latch event None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setTimeBasePeriodActive</field>
    <field name="args">(uint32_t base, uint16_t periodCount)</field>
    <field name="url">group__mcpwm__api.html#ga019f672ac99b2f03c55f086610968060</field>
    <field name="keywords">MCPWM_setTimeBasePeriodActive MCPWM_setTimeBasePeriodActive</field>
    <field name="text">Sets the PWM period count in its Active Register base is the base address of the MCPWM module periodCount is period count value This function sets the period of the PWM count in its Active period register The value of periodCount is the value written to the register User should map the desired period or frequency of the waveform into the correct periodCount Invoke the function MCPWM_setPeriodLoadMode() with the appropriate parameter to set the load mode of the Period count periodCount has a maximum valid value of 0 xFFFF None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_DeadBandPolarity</field>
    <field name="url">group__mcpwm__api.html#ga024a5eda14531344554136881d263a88</field>
    <field name="keywords">MCPWM_DeadBandPolarity MCPWM_DeadBandPolarity</field>
    <field name="text">Values that can be passed to MCPWM_setDeadBandDelayPolarity as the polarity parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setEmulationMode</field>
    <field name="args">(uint32_t base, MCPWM_EmulationMode emulationMode)</field>
    <field name="url">group__mcpwm__api.html#ga02c18fd02e09339b36d8fe90ceebf8d5</field>
    <field name="keywords">MCPWM_setEmulationMode MCPWM_setEmulationMode</field>
    <field name="text">Set emulation mode base is the base address of the MCPWM module emulationMode is the emulation mode This function sets the emulation behaviours of the time base counter Valid values for emulationMode are MCPWM_EMULATION_STOP_AFTER_NEXT_TB Stop after next Time Base counter increment or decrement MCPWM_EMULATION_STOP_AFTER_FULL_CYCLE Stop when counter completes whole cycle MCPWM_EMULATION_FREE_RUN Free run None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setEventTriggerSource</field>
    <field name="args">(uint32_t base, MCPWM_EventTriggerType evtTrigType, MCPWM_EventTriggerSource evtTrigSource)</field>
    <field name="url">group__mcpwm__api.html#ga089bcae967575b2a575446324a8950f4</field>
    <field name="keywords">MCPWM_setEventTriggerSource MCPWM_setEventTriggerSource</field>
    <field name="text">Sets the MCPWM Event Trigger source base is the base address of the MCPWM module evtTrigType is the Event Trigger type evtTrigSource is the EVT source This function sets the MCPWM Event Trigger source Valid values for evtSource are evtTrigType MCPWM_ET_1 EVT 1 MCPWM_ET_2 EVT 2 evtTrigSource MCPWM_EVT_DISABLED Event is Disabled MCPWM_EVT_TBCTR_ZERO Time-base counter equal to zero MCPWM_EVT_TBCTR_PERIOD Time-base counter equal to period MCPWM_EVT_TBCTR_ZERO_PERIOD Time-base counter equal to zero or period MCPWM_EVT_TBCTR_U_CMPC Time-base counter equal to CMPC when the timer is incrementing MCPWM_EVT_TBCTR_U_CMPD Time-base counter equal to CMPD when the timer is incrementing MCPWM_EVT_TBCTR_U_CMP1A Time-base counter equal to CMP1A when the timer is incrementing MCPWM_EVT_TBCTR_U_CMP1B Time-base counter equal to CMP1B when the timer is incrementing MCPWM_EVT_TBCTR_U_CMP2A Time-base counter equal to CMP2A when the timer is incrementing MCPWM_EVT_TBCTR_U_CMP2B Time-base counter equal to CMP2B when the timer is incrementing MCPWM_EVT_TBCTR_U_CMP3A Time-base counter equal to CMP3A when the timer is incrementing MCPWM_EVT_TBCTR_U_CMP3B Time-base counter equal to CMP3B when the timer is incrementing MCPWM_EVT_TBCTR_D_CMPC Time-base counter equal to CMPC when the timer is Decrementing MCPWM_EVT_TBCTR_D_CMPD Time-base counter equal to CMPD when the timer is Decrementing MCPWM_EVT_TBCTR_D_CMP1A Time-base counter equal to CMP1A when the timer is Decrementing MCPWM_EVT_TBCTR_D_CMP1B Time-base counter equal to CMP1B when the timer is Decrementing MCPWM_EVT_TBCTR_D_CMP2A Time-base counter equal to CMP2A when the timer is Decrementing MCPWM_EVT_TBCTR_D_CMP2B Time-base counter equal to CMP2B when the timer is Decrementing MCPWM_EVT_TBCTR_D_CMP3A Time-base counter equal to CMP3A when the timer is Decrementing MCPWM_EVT_TBCTR_D_CMP3B Time-base counter equal to CMP3B when the timer is Decrementing None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setTripZoneAction</field>
    <field name="args">(uint32_t base, MCPWM_TripZoneEvent tzEvent, MCPWM_TripZoneAction tzAction)</field>
    <field name="url">group__mcpwm__api.html#ga098160590486a5b396ce984cde8a6cf6</field>
    <field name="keywords">MCPWM_setTripZoneAction MCPWM_setTripZoneAction</field>
    <field name="text">Set Trip Zone Action base is the base address of the MCPWM module tzEvent is the Trip Zone event type tzAction is the Trip zone Action This function sets the Trip Zone Action to be taken when a Trip Zone event occurs Valid values for the parameters are tzEvent MCPWM_TZ_ACTION_EVENT_TZB TZ1 TZ8 MCPWM_TZ_ACTION_EVENT_TZA TZ1 TZ8 tzAction MCPWM_TZ_ACTION_HIGH_Z high impedance output MCPWM_TZ_ACTION_HIGH high output MCPWM_TZ_ACTION_LOW low low MCPWM_TZ_ACTION_DISABLE disable action This function operates on both MCPWMxA and MCPWMxB depending on the tzEvent parameter None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_CBC2</field>
    <field name="url">group__mcpwm__api.html#ga0a5135521a92cead2f07c7ef7b095ca5</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_CBC2 MCPWM_TZ_SIGNAL_CBC2</field>
    <field name="text">TZ2 Cycle By Cycle</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getCounterCompareShadowValue</field>
    <field name="args">(uint32_t base, MCPWM_CounterCompareModule compModule)</field>
    <field name="url">group__mcpwm__api.html#ga0c98c514014fbfca8d973e3df9ff2bd3</field>
    <field name="keywords">MCPWM_getCounterCompareShadowValue MCPWM_getCounterCompareShadowValue</field>
    <field name="text">Get counter compare values base is the base address of the MCPWM module compModule is the Counter Compare value module compCount is the counter compare count value This function gets the value for shadow counter compare registers Valid values for compModule are MCPWM_COUNTER_COMPARE_1A Counter compare 1 A MCPWM_COUNTER_COMPARE_1B Counter compare 1 B MCPWM_COUNTER_COMPARE_2A Counter compare 2 A MCPWM_COUNTER_COMPARE_2B Counter compare 2 B MCPWM_COUNTER_COMPARE_3A Counter compare 3 A MCPWM_COUNTER_COMPARE_3B Counter compare 3 B MCPWM_COUNTER_COMPARE_C Counter compare C MCPWM_COUNTER_COMPARE_D Counter compare D The counter compare count value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_enableGlobalLoadOneShotMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga11166de298f9667711901b7a28c6cda1</field>
    <field name="keywords">MCPWM_enableGlobalLoadOneShotMode MCPWM_enableGlobalLoadOneShotMode</field>
    <field name="text">Enable One shot global shadow to active load base is the base address of the MCPWM module This function enables a one time global shadow to active load Register load happens every time the event set by the MCPWM_setGlobalLoadTrigger() occurs None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_CBC4</field>
    <field name="url">group__mcpwm__api.html#ga1185b4bcd95f5a657a666d8e849cbf0b</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_CBC4 MCPWM_TZ_SIGNAL_CBC4</field>
    <field name="text">TZ4 Cycle By Cycle</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_CBC3</field>
    <field name="url">group__mcpwm__api.html#ga12612f712e908b1451554d7b0a05a22d</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_CBC3 MCPWM_TZ_SIGNAL_CBC3</field>
    <field name="text">TZ3 Cycle By Cycle</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_OST_TZ5</field>
    <field name="url">group__mcpwm__api.html#ga128410427664badaafa4f5c1384538af</field>
    <field name="keywords">MCPWM_TZ_FLAG_OST_TZ5 MCPWM_TZ_FLAG_OST_TZ5</field>
    <field name="text">OST flag 5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setActionQualifierActionCompleteShadow</field>
    <field name="args">(uint32_t base, MCPWM_ActionQualifierOutputModule mcpwmOutput, uint16_t action)</field>
    <field name="url">group__mcpwm__api.html#ga132271e86a88442ce3cbbd95c31c3be4</field>
    <field name="keywords">MCPWM_setActionQualifierActionCompleteShadow MCPWM_setActionQualifierActionCompleteShadow</field>
    <field name="text">Set up Action qualifier action for all events in one go in shadow register base is the base address of the MCPWM module mcpwmOutput is the MCPWM pin type action is the desired action when the specified event occurs This function sets up the Action Qualifier output on MCPWMA or MCPWMB depending on the value of mcpwmOutput to a value specified by action Valid action param values from different time base counter scenarios should be OR d together to configure complete action for a pwm output The following are valid values for the parameters mcpwmOutput MCPWM_AQ_OUTPUT_1A MCPWMx1A output MCPWM_AQ_OUTPUT_1B MCPWMx1B output MCPWM_AQ_OUTPUT_2A MCPWMx2A output MCPWM_AQ_OUTPUT_2B MCPWMx2B output MCPWM_AQ_OUTPUT_3A MCPWMx3A output MCPWM_AQ_OUTPUT_3B MCPWMx3B output action When time base counter equals zero MCPWM_AQ_OUTPUT_NO_CHANGE_ZERO Time base counter equals zero and no change in output pins MCPWM_AQ_OUTPUT_LOW_ZERO Time base counter equals zero and set output pins to low MCPWM_AQ_OUTPUT_HIGH_ZERO Time base counter equals zero and set output pins to high MCPWM_AQ_OUTPUT_TOGGLE_ZERO Time base counter equals zero and toggle the output pins When time base counter equals period MCPWM_AQ_OUTPUT_NO_CHANGE_PERIOD Time base counter equals period and no change in output pins MCPWM_AQ_OUTPUT_LOW_PERIOD Time base counter equals period and set output pins to low MCPWM_AQ_OUTPUT_HIGH_PERIOD Time base counter equals period and set output pins to high MCPWM_AQ_OUTPUT_TOGGLE_PERIOD Time base counter equals period and toggle the output pins When time base counter equals CMPA during up-count MCPWM_AQ_OUTPUT_NO_CHANGE_UP_CMPA Time base counter up equals CMPA and no change in the output pins MCPWM_AQ_OUTPUT_LOW_UP_CMPA Time base counter up equals CMPA and set output pins low MCPWM_AQ_OUTPUT_HIGH_UP_CMPA Time base counter up equals CMPA and set output pins high MCPWM_AQ_OUTPUT_TOGGLE_UP_CMPA Time base counter up equals CMPA and toggle output pins When time base counter equals CMPA during down-count MCPWM_AQ_OUTPUT_NO_CHANGE_DOWN_CMPA Time base counter down equals CMPA and no change in the output pins MCPWM_AQ_OUTPUT_LOW_DOWN_CMPA Time base counter down equals CMPA and set output pins low MCPWM_AQ_OUTPUT_HIGH_DOWN_CMPA Time base counter down equals CMPA and set output pins high MCPWM_AQ_OUTPUT_TOGGLE_DOWN_CMPA Time base counter down equals CMPA and toggle output pins When time base counter equals CMPB during up-count MCPWM_AQ_OUTPUT_NO_CHANGE_UP_CMPB Time base counter up equals CMPB and no change in the output pins MCPWM_AQ_OUTPUT_LOW_UP_CMPB Time base counter up equals CMPB and set output pins low MCPWM_AQ_OUTPUT_HIGH_UP_CMPB Time base counter up equals CMPB and set output pins high MCPWM_AQ_OUTPUT_TOGGLE_UP_CMPB Time base counter up equals CMPB and toggle output pins When time base counter equals CMPB during down-count MCPWM_AQ_OUTPUT_NO_CHANGE_DOWN_CMPB- Time base counter down equals CMPB and no change in the output pins MCPWM_AQ_OUTPUT_LOW_DOWN_CMPB Time base counter down equals CMPB and set output pins low MCPWM_AQ_OUTPUT_HIGH_DOWN_CMPB Time base counter down equals CMPB and set output pins high MCPWM_AQ_OUTPUT_TOGGLE_DOWN_CMPB Time base counter down equals CMPB and toggle output pins note A logical OR of the valid values should be passed as the action parameter Single action should be configured for each time base counter scenario None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getCounterCompareActiveValue</field>
    <field name="args">(uint32_t base, MCPWM_CounterCompareModule compModule)</field>
    <field name="url">group__mcpwm__api.html#ga16a864a769708806865f4bfbdbffb519</field>
    <field name="keywords">MCPWM_getCounterCompareActiveValue MCPWM_getCounterCompareActiveValue</field>
    <field name="text">Get counter compare values base is the base address of the MCPWM module compModule is the Counter Compare value module compCount is the counter compare count value This function gets the value for active counter compare registers Valid values for compModule are MCPWM_COUNTER_COMPARE_1A Counter compare 1 A MCPWM_COUNTER_COMPARE_1B Counter compare 1 B MCPWM_COUNTER_COMPARE_2A Counter compare 2 A MCPWM_COUNTER_COMPARE_2B Counter compare 2 B MCPWM_COUNTER_COMPARE_3A Counter compare 3 A MCPWM_COUNTER_COMPARE_3B Counter compare 3 B MCPWM_COUNTER_COMPARE_C Counter compare C MCPWM_COUNTER_COMPARE_D Counter compare D The counter compare count value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_clearADCTriggerFlag</field>
    <field name="args">(uint32_t base, MCPWM_ADCStartOfConversionType adcSOCType)</field>
    <field name="url">group__mcpwm__api.html#ga1a2812176df5ce510ca9d12b03ed774c</field>
    <field name="keywords">MCPWM_clearADCTriggerFlag MCPWM_clearADCTriggerFlag</field>
    <field name="text">Clear SOC flag base is the base address of the MCPWM module adcSOCType is the ADC SOC type This function clears the MCPWM SOC flag Valid values for adcSOCType are MCPWM_SOC_A SOC A MCPWM_SOC_B SOC B MCPWM_SOC_C SOC C MCPWM_SOC_D SOC D None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getADCTriggerFlagStatus</field>
    <field name="args">(uint32_t base, MCPWM_ADCStartOfConversionType adcSOCType)</field>
    <field name="url">group__mcpwm__api.html#ga2349077100c762a88b3504e303fa36d3</field>
    <field name="keywords">MCPWM_getADCTriggerFlagStatus MCPWM_getADCTriggerFlagStatus</field>
    <field name="text">Return the SOC event status base is the base address of the MCPWM module adcSOCType is the ADC SOC type This function returns the MCPWM SOC status Valid values for adcSOCType are MCPWM_SOC_A SOC A MCPWM_SOC_B SOC B MCPWM_SOC_C SOC C MCPWM_SOC_D SOC D Returns TRUE if the selected adcSOCType SOC was generated Returns FALSE if the selected adcSOCType SOC was not generated</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_CounterCompareLoadMode</field>
    <field name="url">group__mcpwm__api.html#ga25acba54c17d6011215204a8ec987f06</field>
    <field name="keywords">MCPWM_CounterCompareLoadMode MCPWM_CounterCompareLoadMode</field>
    <field name="text">Values that can be passed to MCPWM_setCounterCompareShadowLoadMode() as the loadMode parameter If the load mode is set to any value other than MCPWM_COMP_LOAD_FREEZE the shadow register value set by MCPWM_setCounterCompareShadowValue() will be loaded overwritten to active register set by MCPWM_setCounterCompareActiveValue() when the event is generated The global load trigger if enabled overrides the local load mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_clearGlobalInterrupt</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga2623d378bff8d79b7affe21ba7e0a8ca</field>
    <field name="keywords">MCPWM_clearGlobalInterrupt MCPWM_clearGlobalInterrupt</field>
    <field name="text">Clears global interrupt flag base is the base address of the MCPWM module This function clears the global interrupt bit None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_ClockDivider</field>
    <field name="url">group__mcpwm__api.html#ga2c71ec7170a9b17b271db2229fffdc24</field>
    <field name="keywords">MCPWM_ClockDivider MCPWM_ClockDivider</field>
    <field name="text">Values that can be passed to MCPWM_setClockPrescaler() as the prescaler parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_CBC_TZ7</field>
    <field name="url">group__mcpwm__api.html#ga2e359a8de20f75ea76593ca05ff59599</field>
    <field name="keywords">MCPWM_TZ_FLAG_CBC_TZ7 MCPWM_TZ_FLAG_CBC_TZ7</field>
    <field name="text">CBC flag 7</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_OST_TZ8</field>
    <field name="url">group__mcpwm__api.html#ga3293f960a56cdbe5e03a0b9dc2faa982</field>
    <field name="keywords">MCPWM_TZ_FLAG_OST_TZ8 MCPWM_TZ_FLAG_OST_TZ8</field>
    <field name="text">OST flag 8</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setCounterCompareActiveValue</field>
    <field name="args">(uint32_t base, MCPWM_CounterCompareModule compModule, uint16_t compCount)</field>
    <field name="url">group__mcpwm__api.html#ga32b1019d66a914b5ac32e54a5404427e</field>
    <field name="keywords">MCPWM_setCounterCompareActiveValue MCPWM_setCounterCompareActiveValue</field>
    <field name="text">Set counter compare values base is the base address of the MCPWM module compModule is the Counter Compare value module compCount is the counter compare count value This function sets the active counter compare value for counter compare registers The maximum value for compCount is 0 xFFFF Valid values for compModule are MCPWM_COUNTER_COMPARE_1A Counter compare 1 A MCPWM_COUNTER_COMPARE_1B Counter compare 1 B MCPWM_COUNTER_COMPARE_2A Counter compare 2 A MCPWM_COUNTER_COMPARE_2B Counter compare 2 B MCPWM_COUNTER_COMPARE_3A Counter compare 3 A MCPWM_COUNTER_COMPARE_3B Counter compare 3 B MCPWM_COUNTER_COMPARE_C Counter compare C MCPWM_COUNTER_COMPARE_D Counter compare D None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_EventTriggerType</field>
    <field name="url">group__mcpwm__api.html#ga35951e85c7073611d882f81f4cf7be3a</field>
    <field name="keywords">MCPWM_EventTriggerType MCPWM_EventTriggerType</field>
    <field name="text">Values that can be passed to MCPWM_enableADCTrigger() MCPWM_disableADCTrigger() MCPWM_setADCTriggerSource() MCPWM_setADCTriggerEventPrescale() MCPWM_getADCTriggerFlagStatus() MCPWM_clearADCTriggerFlag() MCPWM_enableADCTriggerEventCountInit() MCPWM_disableADCTriggerEventCountInit() MCPWM_forceADCTriggerEventCountInit() MCPWM_setADCTriggerEventCountInitValue() MCPWM_getADCTriggerEventCount() MCPWM_forceADCTrigger() as the evtTrigType parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setCounterCompareShadowLoadMode</field>
    <field name="args">(uint32_t base, MCPWM_CounterCompareModule compModule, MCPWM_CounterCompareLoadMode loadMode)</field>
    <field name="url">group__mcpwm__api.html#ga363b445825530b3b9aace615979e194c</field>
    <field name="keywords">MCPWM_setCounterCompareShadowLoadMode MCPWM_setCounterCompareShadowLoadMode</field>
    <field name="text">Sets up the Counter Compare shadow load mode base is the base address of the MCPWM module compModule is the counter compare module loadMode is the shadow to active load mode This function enables and sets up the counter compare shadow load mode Valid values for the variables are compModule MCPWM_COUNTER_COMPARE_1A Counter compare 1 A MCPWM_COUNTER_COMPARE_1B Counter compare 1 B MCPWM_COUNTER_COMPARE_2A Counter compare 2 A MCPWM_COUNTER_COMPARE_2B Counter compare 2 B MCPWM_COUNTER_COMPARE_3A Counter compare 3 A MCPWM_COUNTER_COMPARE_3B Counter compare 3 B MCPWM_COUNTER_COMPARE_C Counter compare C MCPWM_COUNTER_COMPARE_D Counter compare D loadMode MCPWM_COMP_LOAD_ON_CNTR_ZERO load when counter equals zero MCPWM_COMP_LOAD_ON_CNTR_PERIOD load when counter equals period MCPWM_COMP_LOAD_ON_CNTR_ZERO_PERIOD load when counter equals zero or period MCPWM_COMP_LOAD_FREEZE freeze/disable Shadow to active load None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setPeriodLoadMode</field>
    <field name="args">(uint32_t base, MCPWM_PeriodLoadMode loadMode)</field>
    <field name="url">group__mcpwm__api.html#ga394380b5c94cdeeb133514fbc68083d7</field>
    <field name="keywords">MCPWM_setPeriodLoadMode MCPWM_setPeriodLoadMode</field>
    <field name="text">Set PWM period load mode base is the base address of the MCPWM module loadMode is the PWM period load mode This function sets the load mode for the PWM period If loadMode is set to MCPWM_PERIOD_SHADOW_LOAD_ENABLE Shadow register will be loaded to Active register at TBCTR 0 If loadMode is set to MCPWM_PERIOD_SHADOW_LOAD_DISABLE load from Shadow register mode disabled None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_INT_SOURCE_ALL</field>
    <field name="url">group__mcpwm__api.html#ga39f74b07e301bb5b78ce7ecc5aeae831</field>
    <field name="keywords">MCPWM_INT_SOURCE_ALL MCPWM_INT_SOURCE_ALL</field>
    <field name="text">MCPWM_INT_TZ_CBC All Interrupt Sources</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_OSHT8</field>
    <field name="url">group__mcpwm__api.html#ga3ea8c1a1bfb706eb624b29a25ca5e952</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_OSHT8 MCPWM_TZ_SIGNAL_OSHT8</field>
    <field name="text">One-shot TZ8</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setFallingEdgeDelayCountActive</field>
    <field name="args">(uint32_t base, uint16_t fedCount)</field>
    <field name="url">group__mcpwm__api.html#ga4191babd68b1ea3ef53ef377e99123c4</field>
    <field name="keywords">MCPWM_setFallingEdgeDelayCountActive MCPWM_setFallingEdgeDelayCountActive</field>
    <field name="text">Set MCPWM FED count base is the base address of the MCPWM module fedCount is the FED(Falling Edge Delay) count This function sets the FED Falling Edge Delay count value in the active register The value of fedCount should be less than 0 x4000U None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_EmulationMode</field>
    <field name="url">group__mcpwm__api.html#ga41da4acf9b49f75527ca850a2038fb1c</field>
    <field name="keywords">MCPWM_EmulationMode MCPWM_EmulationMode</field>
    <field name="text">Values that can be passed to MCPWM_setEmulationMode() as the emulationMode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setTimeBaseCounterMode</field>
    <field name="args">(uint32_t base, MCPWM_TimeBaseCountMode counterMode)</field>
    <field name="url">group__mcpwm__api.html#ga426e44048607922a8f18b70c8b61cb79</field>
    <field name="keywords">MCPWM_setTimeBaseCounterMode MCPWM_setTimeBaseCounterMode</field>
    <field name="text">Set time base counter mode base is the base address of the MCPWM module counterMode is the time base counter mode This function sets up the time base counter mode Valid values for counterMode are MCPWM_COUNTER_MODE_UP Up count mode MCPWM_COUNTER_MODE_UP_DOWN Up down count mode MCPWM_COUNTER_MODE_STOP_FREEZE Stop Freeze counter None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_ActionQualifierLoadMode</field>
    <field name="url">group__mcpwm__api.html#ga445749ee6923d711eeaa638fa86ab84b</field>
    <field name="keywords">MCPWM_ActionQualifierLoadMode MCPWM_ActionQualifierLoadMode</field>
    <field name="text">Values that can be passed to MCPWM_setActionQualifierShadowLoadMode() as the loadMode parameter If the load mode is set to any value other than MCPWM_AQ_LOAD_FREEZE the shadow register value set by a MCPWM_setActionQualifierActionShadow() or b MCPWM_setActionQualifierActionCompleteShadow() will be loaded overwritten to active register set by a MCPWM_setActionQualifierActionActive() or b MCPWM_setActionQualifierActionCompleteActive() when the event is generated The global load trigger if enabled overrides the local load mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getInterruptSource</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga4ac0093a0d2625bbaa0404bbb702d556</field>
    <field name="keywords">MCPWM_getInterruptSource MCPWM_getInterruptSource</field>
    <field name="text">Returns the interrupt flag base is the base address of the MCPWM module This function returns the MCPWM interrupt flag The following are valid interrupt sources corresponding to the MCPWM interrupt flag Returns the MCPWM interrupt that has occurred The following are valid return values MCPWM_INT_TZ_CBC Interrupt Source is Trip Zone CBC signal MCPWM_INT_TZ_OST Interrupt Source is Trip Zone OST signal MCPWM_INT_ET_1 Interrupt Source is Event Trigger 1 signal MCPWM_INT_ET_2 Interrupt Source is Event Trigger 2 signal MCPWM_INT_TBCTR_OVF Counter overflow generates interrupt MCPWM_INT_SOURCE_ALL All Interrupt Sources User can check if a combination of various interrupts have occurred by ORing the above return values</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setFallingEdgeDeadBandDelayInput</field>
    <field name="args">(uint32_t base, uint16_t input)</field>
    <field name="url">group__mcpwm__api.html#ga4eb3751a8bb2b6f301cf0116f5fcf406</field>
    <field name="keywords">MCPWM_setFallingEdgeDeadBandDelayInput MCPWM_setFallingEdgeDeadBandDelayInput</field>
    <field name="text">Sets Dead Band delay input base is the base address of the MCPWM module input is the input signal to the dead band This function sets up the rising Edge delay input signal Valid values for input are MCPWM_DB_INPUT_MCPWMA Input signal is MCPWMA Valid for both Falling Edge and Rising Edge MCPWM_DB_INPUT_MCPWMB Input signal is MCPWMB Valid for both Falling Edge and Rising Edge MCPWM_DB_INPUT_DB_RED Input signal is the output of Rising Edge delay Valid only for Falling Edge delay None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_forceActionQualifierSWAction</field>
    <field name="args">(uint32_t base, MCPWM_ActionQualifierOutputModule mcpwmOutput)</field>
    <field name="url">group__mcpwm__api.html#ga4ebf0ee5f9ddb10322f46db70d27ec60</field>
    <field name="keywords">MCPWM_forceActionQualifierSWAction MCPWM_forceActionQualifierSWAction</field>
    <field name="text">Triggers a one time software forced event on Action qualifier base is the base address of the MCPWM module mcpwmOutput is the MCPWM pin type This function triggers a one time software forced Action Qualifier event on MCPWM A or B based on the value of mcpwmOutput Valid values for mcpwmOutput are MCPWM_AQ_OUTPUT_1A MCPWMx1A output MCPWM_AQ_OUTPUT_1B MCPWMx1B output MCPWM_AQ_OUTPUT_2A MCPWMx2A output MCPWM_AQ_OUTPUT_2B MCPWMx2B output MCPWM_AQ_OUTPUT_3A MCPWMx3A output MCPWM_AQ_OUTPUT_3B MCPWMx3B output None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TIME_BASE_STATUS_COUNT_UP</field>
    <field name="url">group__mcpwm__api.html#ga50235c06637dd903533659e0386b4d83</field>
    <field name="keywords">MCPWM_TIME_BASE_STATUS_COUNT_UP MCPWM_TIME_BASE_STATUS_COUNT_UP</field>
    <field name="text">Time base counter is counting up</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_INT_TZ_OST</field>
    <field name="url">group__mcpwm__api.html#ga50336852e1dbdc7f76458c65806a3e3b</field>
    <field name="keywords">MCPWM_INT_TZ_OST MCPWM_INT_TZ_OST</field>
    <field name="text">Interrupt Source is Trip Zone OST signal</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_DeadBandOutput</field>
    <field name="url">group__mcpwm__api.html#ga504724f0d46bebb435925f316b73fd38</field>
    <field name="keywords">MCPWM_DeadBandOutput MCPWM_DeadBandOutput</field>
    <field name="text">Values that can be passed to MCPWM_setDeadBandOutputSwapMode() as the output parameter</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_SyncCountMode</field>
    <field name="url">group__mcpwm__api.html#ga53e0f5fc8e7d0126e41abbf199aea067</field>
    <field name="keywords">MCPWM_SyncCountMode MCPWM_SyncCountMode</field>
    <field name="text">Values that can be passed to MCPWM_setCountModeAfterSync() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_CBC_TZ8</field>
    <field name="url">group__mcpwm__api.html#ga582d217b830a36852de7278e0bf5693f</field>
    <field name="keywords">MCPWM_TZ_FLAG_CBC_TZ8 MCPWM_TZ_FLAG_CBC_TZ8</field>
    <field name="text">CBC flag 8</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_CBC_TZ2</field>
    <field name="url">group__mcpwm__api.html#ga5a4581eb4d98602a0402d92535582226</field>
    <field name="keywords">MCPWM_TZ_FLAG_CBC_TZ2 MCPWM_TZ_FLAG_CBC_TZ2</field>
    <field name="text">CBC flag 2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getEventTriggerEventCount</field>
    <field name="args">(uint32_t base, MCPWM_EventTriggerType evtTrigType)</field>
    <field name="url">group__mcpwm__api.html#ga5e80fe5c8b6760d5a1721910a47d1edc</field>
    <field name="keywords">MCPWM_getEventTriggerEventCount MCPWM_getEventTriggerEventCount</field>
    <field name="text">Get the Event Trigger event count base is the base address of the MCPWM module evtTrigType is the Event Trigger type This function returns the MCPWM Event trigger event count Valid values for evtTrigType are evtTrigType MCPWM_ET_1 EVT 1 MCPWM_ET_2 EVT 2 The Event Trigger event counts that have occurred</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setDeadBandDelayMode</field>
    <field name="args">(uint32_t base, MCPWM_DeadBandDelayMode delayMode, bool enableDelayMode)</field>
    <field name="url">group__mcpwm__api.html#ga5ebee88af12563866fac31264b020043</field>
    <field name="keywords">MCPWM_setDeadBandDelayMode MCPWM_setDeadBandDelayMode</field>
    <field name="text">Sets Dead Band signal output mode base is the base address of the MCPWM module delayMode is the Dead Band delay type enableDelayMode is the dead band delay mode This function sets up the dead band delay mode The delayMode variable determines if the applied delay is Rising Edge or Falling Edge The enableDelayMode determines if a dead band delay should be applied Valid values for the variables are delayMode MCPWM_DB_RED Rising Edge delay MCPWM_DB_FED Falling Edge delay enableDelayMode TRUE Falling edge or Rising edge delay is applied FALSE Dead Band delay is bypassed None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_ActionQualifierOutputModule</field>
    <field name="url">group__mcpwm__api.html#ga6222a286bdb61e9e6c4e1c7f892d16bd</field>
    <field name="keywords">MCPWM_ActionQualifierOutputModule MCPWM_ActionQualifierOutputModule</field>
    <field name="text">Values that can be passed to MCPWM_setActionQualifierSWOneShotTrigger() MCPWM_setActionQualifierSWAction() MCPWM_setActionQualifierActionActive() MCPWM_setActionQualifierActionShadow() MCPWM_setActionQualifierContSWForceAction() as the MCpwmOutput parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_OSHT3</field>
    <field name="url">group__mcpwm__api.html#ga63b921ca1f2025b0ccdf5180a9b72c72</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_OSHT3 MCPWM_TZ_SIGNAL_OSHT3</field>
    <field name="text">One-shot TZ3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setDeadBandOutputSwapMode</field>
    <field name="args">(uint32_t base, MCPWM_DeadBandOutput output, bool enableSwapMode)</field>
    <field name="url">group__mcpwm__api.html#ga6465d4dc27a456ab38237dd924b9d347</field>
    <field name="keywords">MCPWM_setDeadBandOutputSwapMode MCPWM_setDeadBandOutputSwapMode</field>
    <field name="text">Sets Dead Band signal output swap mode base is the base address of the MCPWM module output is the MCPWM Dead Band output enableSwapMode is the output swap mode This function sets up the output signal swap mode For example if the output variable is set to MCPWM_DB_OUTPUT_A and enableSwapMode is TRUE then the MCPWM A output gets its signal from the MCPWM B signal path Valid values for the input variables are output MCPWM_DB_OUTPUT_A MCPWM output A MCPWM_DB_OUTPUT_B MCPWM output B enableSwapMode TRUE the output is swapped FALSE the output and the signal path are the same None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getTimeBaseCounterDirection</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga64fb97fd28d92468afbcf577304c57ab</field>
    <field name="keywords">MCPWM_getTimeBaseCounterDirection MCPWM_getTimeBaseCounterDirection</field>
    <field name="text">Return time base counter direction base is the base address of the MCPWM module This function returns the direction of the time base counter returns MCPWM_TIME_BASE_STATUS_COUNT_UP if the counter is counting up or MCPWM_TIME_BASE_STATUS_COUNT_DOWN if the counter is counting down</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setRisingEdgeDeadBandDelayInput</field>
    <field name="args">(uint32_t base, uint16_t input)</field>
    <field name="url">group__mcpwm__api.html#ga65d715659c6ad21c533960ac48c7c5e8</field>
    <field name="keywords">MCPWM_setRisingEdgeDeadBandDelayInput MCPWM_setRisingEdgeDeadBandDelayInput</field>
    <field name="text">Sets Rising Edge Dead Band delay input base is the base address of the MCPWM module input is the input signal to the dead band This function sets up the rising Edge delay input signal Valid values for input are MCPWM_DB_INPUT_MCPWMA Input signal is MCPWMA Valid for both Falling Edge and Rising Edge MCPWM_DB_INPUT_MCPWMB Input signal is MCPWMB Valid for both Falling Edge and Rising Edge None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_forceSyncPulse</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga666eb9145e5575a8e71b25b6ecdcd837</field>
    <field name="keywords">MCPWM_forceSyncPulse MCPWM_forceSyncPulse</field>
    <field name="text">Force a software sync pulse base is the base address of the MCPWM module This function causes a single software initiated sync pulse None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setPhaseShift</field>
    <field name="args">(uint32_t base, uint16_t phaseCount)</field>
    <field name="url">group__mcpwm__api.html#ga67c3313d1c70eed14f8fc8b973d931b4</field>
    <field name="keywords">MCPWM_setPhaseShift MCPWM_setPhaseShift</field>
    <field name="text">Sets the phase shift offset counter value base is the base address of the MCPWM module phaseCount is the phase shift count value This function sets the 1 6 bit time-base counter phase of the MCPWM relative to the time-base that is supplying the synchronization input signal Call the MCPWM_enablePhaseShiftLoad() function to enable loading of the phaseCount phase shift value when a sync event occurs None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setSyncPulseSource</field>
    <field name="args">(uint32_t base, MCPWM_SyncPulseSource syncPulseSource)</field>
    <field name="url">group__mcpwm__api.html#ga6a1d13d87a01f5adde080301c49506ca</field>
    <field name="keywords">MCPWM_setSyncPulseSource MCPWM_setSyncPulseSource</field>
    <field name="text">Set SYNCPER source also known as PWMSYNC in earlier versions base is the base address of the MCPWM module syncPulseSource is the SYNCPERSEL source This function sets the SYNCPERSEL pulse source Valid values for syncPulseSource are MCPWM_SYNCPERSEL_SOURCE_PERIOD Counter equals Period MCPWM_SYNCPERSEL_SOURCE_ZERO Counter equals zero MCPWM_SYNCPERSEL_SOURCE_CMPC_UP Counter equals CMPC when counting up MCPWM_SYNCPERSEL_SOURCE_CMPC_DOWN Counter equals CMPC when counting down MCPWM_SYNCPERSEL_SOURCE_CMPD_UP Counter equals CMPD when counting up MCPWM_SYNCPERSEL_SOURCE_CMPD_DOWN Counter equals CMPD when counting down None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getTimeBaseCounterValue</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga6b26bdc707fcdf0ae6194afd38ea593d</field>
    <field name="keywords">MCPWM_getTimeBaseCounterValue MCPWM_getTimeBaseCounterValue</field>
    <field name="text">Returns time base counter value base is the base address of the MCPWM module This function returns the current value of the time base counter returns time base counter value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setADCTriggerEventPrescale</field>
    <field name="args">(uint32_t base, MCPWM_ADCStartOfConversionType adcSOCType, uint16_t preScaleCount)</field>
    <field name="url">group__mcpwm__api.html#ga6d4fd3866d346ebddb93b80a410b50be</field>
    <field name="keywords">MCPWM_setADCTriggerEventPrescale MCPWM_setADCTriggerEventPrescale</field>
    <field name="text">Sets the MCPWM SOC event counts base is the base address of the MCPWM module adcSOCType is the ADC SOC type preScaleCount is the event count number This function sets the SOC event count that determines the number of events that have to occur before an SOC is issued Valid values for the parameters are adcSOCType MCPWM_SOC_A SOC A MCPWM_SOC_B SOC B MCPWM_SOC_C SOC C MCPWM_SOC_D SOC D preScaleCount 1 7 Generate SOC pulse every preScaleCount up to 8 events A preScaleCount value of 0 disables the prescale None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_disableInterrupt</field>
    <field name="args">(uint32_t base, uint16_t intFlags)</field>
    <field name="url">group__mcpwm__api.html#ga6ec487baf6471d70c702565f5c208e55</field>
    <field name="keywords">MCPWM_disableInterrupt MCPWM_disableInterrupt</field>
    <field name="text">Disables interrupt source base is the base address of the MCPWM module intFlags is the interrupt source to be disabled This function clears and disables MCPWM interrupt source The following are valid interrupt sources MCPWM_INT_TZ_CBC Interrupt Source is Trip Zone CBC signal MCPWM_INT_TZ_OST Interrupt Source is Trip Zone OST signal MCPWM_INT_ET_1 Interrupt Source is Event Trigger 1 signal MCPWM_INT_ET_2 Interrupt Source is Event Trigger 2 signal MCPWM_INT_TBCTR_OVF Counter overflow generates interrupt MCPWM_INT_SOURCE_ALL All Interrupt Sources None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_ADCStartOfConversionType</field>
    <field name="url">group__mcpwm__api.html#ga71166afcbf4d8333a8ee528f8f14fbaf</field>
    <field name="keywords">MCPWM_ADCStartOfConversionType MCPWM_ADCStartOfConversionType</field>
    <field name="text">Values that can be passed to MCPWM_enableADCTrigger() MCPWM_disableADCTrigger() MCPWM_setADCTriggerSource() MCPWM_setADCTriggerEventPrescale() MCPWM_getADCTriggerFlagStatus() MCPWM_clearADCTriggerFlag() MCPWM_enableADCTriggerEventCountInit() MCPWM_disableADCTriggerEventCountInit() MCPWM_forceADCTriggerEventCountInit() MCPWM_setADCTriggerEventCountInitValue() MCPWM_getADCTriggerEventCount() MCPWM_forceADCTrigger() as the adcSOCType parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setEventTriggerEventPrescale</field>
    <field name="args">(uint32_t base, MCPWM_EventTriggerType evtTrigType, uint16_t preScaleCount)</field>
    <field name="url">group__mcpwm__api.html#ga71b860a4d908d1740361579faf71ce51</field>
    <field name="keywords">MCPWM_setEventTriggerEventPrescale MCPWM_setEventTriggerEventPrescale</field>
    <field name="text">Sets the MCPWM Event Trigger event counts base is the base address of the MCPWM module evtTrigType is the Event Trigger type preScaleCount is the event count number This function sets the event trigger count that determines the number of events that have to occur before an event trigger is issued Valid values for the parameters are evtTrigType MCPWM_ET_1 EVT 1 MCPWM_ET_2 EVT 2 preScaleCount 1 7 Generate Event Trigger pulse every preScaleCount up to 8 events A preScaleCount value of 0 disables the prescale None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_DB_INPUT_DB_RED</field>
    <field name="url">group__mcpwm__api.html#ga724c80975baecd2ca1f545af91583891</field>
    <field name="keywords">MCPWM_DB_INPUT_DB_RED MCPWM_DB_INPUT_DB_RED</field>
    <field name="text">Input signal is the output of Rising Edge delay</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_PeriodLoadMode</field>
    <field name="url">group__mcpwm__api.html#ga727a28b937de74f0626dc93a441245f8</field>
    <field name="keywords">MCPWM_PeriodLoadMode MCPWM_PeriodLoadMode</field>
    <field name="text">Values that can be passed to MCPWM_setPeriodLoadMode() as the loadMode parameter If the period load mode is set to MCPWM_PERIOD_SHADOW_LOAD_ENABLE the shadow register will be loaded to active register at TBCTR 0 So the value set by MCPWM_setTimebasePeriodActive() will be overwritten by the value set by MCPWM_setTimebasePeriodShadow() if not set the reset default of shadow register 0 The global load trigger if enabled overrides the local load mode</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_RisingEdgeDelayLoadMode</field>
    <field name="url">group__mcpwm__api.html#ga72b3567f9ec22b3380138ef7002ce0f2</field>
    <field name="keywords">MCPWM_RisingEdgeDelayLoadMode MCPWM_RisingEdgeDelayLoadMode</field>
    <field name="text">Values that can be passed to MCPWM_setRisingEdgeDelayCountShadowLoadMode() as the loadMode parameter</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_ActionQualifierOutputEvent</field>
    <field name="url">group__mcpwm__api.html#ga79b807b59bba40147f977710b4ce5d26</field>
    <field name="keywords">MCPWM_ActionQualifierOutputEvent MCPWM_ActionQualifierOutputEvent</field>
    <field name="text">Values that can be passed to MCPWM_setActionQualifierActionActive() and MCPWM_setActionQualifierActionShadow() as the event parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_enableInterrupt</field>
    <field name="args">(uint32_t base, uint16_t intFlags)</field>
    <field name="url">group__mcpwm__api.html#ga7dc97c558f7b51ce50636ac5e7e4b3c7</field>
    <field name="keywords">MCPWM_enableInterrupt MCPWM_enableInterrupt</field>
    <field name="text">Enables interrupt source base is the base address of the MCPWM module intFlags is the interrupt source to be enabled This function sets and enables MCPWM interrupt source The following are valid interrupt sources MCPWM_INT_TZ_CBC Interrupt Source is Trip Zone CBC signal MCPWM_INT_TZ_OST Interrupt Source is Trip Zone OST signal MCPWM_INT_ET_1 Interrupt Source is Event Trigger 1 signal MCPWM_INT_ET_2 Interrupt Source is Event Trigger 2 signal MCPWM_INT_TBCTR_OVF Counter overflow generates interrupt MCPWM_INT_SOURCE_ALL All Interrupt Sources None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_CBC_TZ6</field>
    <field name="url">group__mcpwm__api.html#ga7dfbf8f95e2c43d30dce53273dc9c853</field>
    <field name="keywords">MCPWM_TZ_FLAG_CBC_TZ6 MCPWM_TZ_FLAG_CBC_TZ6</field>
    <field name="text">CBC flag 6</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_enablePhaseShiftLoad</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga7f995960d6d152e4a4286ddb0b59ef5a</field>
    <field name="keywords">MCPWM_enablePhaseShiftLoad MCPWM_enablePhaseShiftLoad</field>
    <field name="text">Enable phase shift load base is the base address of the MCPWM module This function enables loading of phase shift when the appropriate sync event occurs None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setTimeBasePeriodShadow</field>
    <field name="args">(uint32_t base, uint16_t periodCount)</field>
    <field name="url">group__mcpwm__api.html#ga7faecc80a29f7f348ea256d635e1c494</field>
    <field name="keywords">MCPWM_setTimeBasePeriodShadow MCPWM_setTimeBasePeriodShadow</field>
    <field name="text">Sets the PWM period count in shadow register base is the base address of the MCPWM module periodCount is period count value This function sets the period of the PWM count in its Shadow period register The value of periodCount is the value written to the register User should map the desired period or frequency of the waveform into the correct periodCount Invoke the function MCPWM_setPeriodLoadMode() with the appropriate parameter to set the load mode of the Period count periodCount has a maximum valid value of 0 xFFFF None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_CBC_TZ5</field>
    <field name="url">group__mcpwm__api.html#ga832737994995a17169dccf4f731b8ccd</field>
    <field name="keywords">MCPWM_TZ_FLAG_CBC_TZ5 MCPWM_TZ_FLAG_CBC_TZ5</field>
    <field name="text">CBC flag 5</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_CounterCompareModule</field>
    <field name="url">group__mcpwm__api.html#ga8542e1b7278ec549f839948a80373c7c</field>
    <field name="keywords">MCPWM_CounterCompareModule MCPWM_CounterCompareModule</field>
    <field name="text">Values that can be passed to the MCPWM_setCounterCompareActiveValue() MCPWM_setCounterCompareShadowValue() MCPWM_getCounterCompareActiveValue() MCPWM_getCounterCompareShadowValue() MCPWM_setCounterCompareShadowLoadMode() MCPWM_disableCounterCompareShadowLoadMode() as the compModule parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getTripZoneFlagStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga86ea6126801259fba3c65fbeb4c18e61</field>
    <field name="keywords">MCPWM_getTripZoneFlagStatus MCPWM_getTripZoneFlagStatus</field>
    <field name="text">Gets the Trip Zone flag status base is the base address of the MCPWM module This function returns the specific Trip Zone flag status The function returns the following values MCPWM_TZ_FLAG_CBC_TZ1 CBC 1 status flag MCPWM_TZ_FLAG_CBC_TZ2 CBC 2 status flag MCPWM_TZ_FLAG_CBC_TZ3 CBC 3 status flag MCPWM_TZ_FLAG_CBC_TZ4 CBC 4 status flag MCPWM_TZ_FLAG_CBC_TZ5 CBC 5 status flag MCPWM_TZ_FLAG_CBC_TZ6 CBC 6 status flag MCPWM_TZ_FLAG_CBC_TZ7 CBC 7 status flag MCPWM_TZ_FLAG_CBC_TZ8 CBC 8 status flag MCPWM_TZ_FLAG_OST_TZ1 OST 1 status flag MCPWM_TZ_FLAG_OST_TZ2 OST 2 status flag MCPWM_TZ_FLAG_OST_TZ3 OST 3 status flag MCPWM_TZ_FLAG_OST_TZ4 OST 4 status flag MCPWM_TZ_FLAG_OST_TZ5 OST 5 status flag MCPWM_TZ_FLAG_OST_TZ6 OST 6 status flag MCPWM_TZ_FLAG_OST_TZ7 OST 7 status flag MCPWM_TZ_FLAG_OST_TZ8 OST 8 status flag</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setGlobalLoadOneShotLatch</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga880adfd2d6d1e6b86fb033915cbb1bcc</field>
    <field name="keywords">MCPWM_setGlobalLoadOneShotLatch MCPWM_setGlobalLoadOneShotLatch</field>
    <field name="text">Set One shot global shadow to active load pulse base is the base address of the MCPWM module This function sets a one time global shadow to active load pulse The pulse propagates to generate a load signal if any of the events set by MCPWM_setGlobalLoadTrigger() occur None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_CBC5</field>
    <field name="url">group__mcpwm__api.html#ga88df431563fc62b5a379e0944b620dab</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_CBC5 MCPWM_TZ_SIGNAL_CBC5</field>
    <field name="text">TZ5 Cycle By Cycle</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_disableGlobalLoadOneShotMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga8967719932fcdc0ad5330f8ed8dbe4ea</field>
    <field name="keywords">MCPWM_disableGlobalLoadOneShotMode MCPWM_disableGlobalLoadOneShotMode</field>
    <field name="text">Enable continuous global shadow to active load base is the base address of the MCPWM module This function enables global continuous shadow to active load Register load happens every time the event set by the MCPWM_setGlobalLoadTrigger() occurs None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_CBC_TZ1</field>
    <field name="url">group__mcpwm__api.html#ga8b6fccf4e55102dfcbe9b0b4714baf99</field>
    <field name="keywords">MCPWM_TZ_FLAG_CBC_TZ1 MCPWM_TZ_FLAG_CBC_TZ1</field>
    <field name="text">CBC flag 1</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_CBC1</field>
    <field name="url">group__mcpwm__api.html#ga8c993afd913243afdb9fbe04bd6e29fa</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_CBC1 MCPWM_TZ_SIGNAL_CBC1</field>
    <field name="text">TZ1 Cycle By Cycle</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_CBC_TZ4</field>
    <field name="url">group__mcpwm__api.html#ga8f00586c7e51b0420332685014944f2f</field>
    <field name="keywords">MCPWM_TZ_FLAG_CBC_TZ4 MCPWM_TZ_FLAG_CBC_TZ4</field>
    <field name="text">CBC flag 4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setRisingEdgeDelayCountActive</field>
    <field name="args">(uint32_t base, uint16_t redCount)</field>
    <field name="url">group__mcpwm__api.html#ga94205485bfa3399a995f5473cb6e20c8</field>
    <field name="keywords">MCPWM_setRisingEdgeDelayCountActive MCPWM_setRisingEdgeDelayCountActive</field>
    <field name="text">Set MCPWM RED count base is the base address of the MCPWM module redCount is the RED(Rising Edge Delay) count This function sets the RED Rising Edge Delay count value in the active register The value of redCount should be less than 0 x4000U None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setActionQualifierSWAction</field>
    <field name="args">(uint32_t base, MCPWM_ActionQualifierOutputModule mcpwmOutput, MCPWM_ActionQualifierSWForceOutput output)</field>
    <field name="url">group__mcpwm__api.html#ga95c339b0f828575f8462855161032bd6</field>
    <field name="keywords">MCPWM_setActionQualifierSWAction MCPWM_setActionQualifierSWAction</field>
    <field name="text">Set up one time software forced Action qualifier outputs base is the base address of the MCPWM module MCpwmOutput is the MCPWM pin type output is the Action Qualifier output This function sets up the one time software forced Action Qualifier output on MCPWM A or MCPWMB depending on the value of mcpwmOutput to a value specified by outPut The following are valid values for the parameters mcpwmOutput MCPWM_AQ_OUTPUT_1A MCPWMx1A output MCPWM_AQ_OUTPUT_1B MCPWMx1B output MCPWM_AQ_OUTPUT_2A MCPWMx2A output MCPWM_AQ_OUTPUT_2B MCPWMx2B output MCPWM_AQ_OUTPUT_3A MCPWMx3A output MCPWM_AQ_OUTPUT_3B MCPWMx3B output output MCPWM_AQ_SW_FORCE_DISABLED SW force Action is disabled MCPWM_AQ_SW_CONTINUOUS_LOW Set output pins to continuos low MCPWM_AQ_SW_CONTINUOUS_HIGH Set output pins to continuos High MCPWM_AQ_SW_ONE_SHOT_LOW Set output to low when one shot is triggered MCPWM_AQ_SW_ONE_SHOT_HIGH Set output to high when one shot is triggered MCPWM_AQ_SW_ONE_SHOT_TOGGLE Toggle output when one shot is triggered None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_enableGlobalLoad</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga9639cbfe441bc402639e0d6f1191e547</field>
    <field name="keywords">MCPWM_enableGlobalLoad MCPWM_enableGlobalLoad</field>
    <field name="text">Enable Global shadow load mode base is the base address of the MCPWM module This function enables Global shadow to active load mode of registers The trigger source for loading shadow to active is determined by MCPWM_setGlobalLoadTrigger() function When enabled the Global Load will overwrite the local load strobes None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_forceGlobalLoadOneShotEvent</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#ga971fb93cc81624394628e404d6a27b27</field>
    <field name="keywords">MCPWM_forceGlobalLoadOneShotEvent MCPWM_forceGlobalLoadOneShotEvent</field>
    <field name="text">Force a software One shot global shadow to active load pulse base is the base address of the MCPWM module This function forces a software a one time global shadow to active load pulse None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setRisingEdgeDelayCountShadow</field>
    <field name="args">(uint32_t base, uint16_t redCount)</field>
    <field name="url">group__mcpwm__api.html#ga98a2071ace09b66595d53d92085e266e</field>
    <field name="keywords">MCPWM_setRisingEdgeDelayCountShadow MCPWM_setRisingEdgeDelayCountShadow</field>
    <field name="text">Set MCPWM RED count in shadow register base is the base address of the MCPWM module redCount is the RED(Rising Edge Delay) count This function sets the RED Rising Edge Delay count value in the shadow register The value of redCount should be less than 0 x4000U None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_OSHT6</field>
    <field name="url">group__mcpwm__api.html#ga996d083f840bd8a9c1166fca33031744</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_OSHT6 MCPWM_TZ_SIGNAL_OSHT6</field>
    <field name="text">One-shot TZ6</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_GlobalLoadTrigger</field>
    <field name="url">group__mcpwm__api.html#ga9bdeceacddd5448ab6f9ad3f7a0427c9</field>
    <field name="keywords">MCPWM_GlobalLoadTrigger MCPWM_GlobalLoadTrigger</field>
    <field name="text">Values that can be passed to MCPWM_setGlobalLoadTrigger() as the loadTrigger parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_selectTripZoneCBCEvent</field>
    <field name="args">(uint32_t base, MCPWM_TripZoneCBCMode clearEvent)</field>
    <field name="url">group__mcpwm__api.html#ga9d315a611d4c6ef4fc515f73b078690c</field>
    <field name="keywords">MCPWM_selectTripZoneCBCEvent MCPWM_selectTripZoneCBCEvent</field>
    <field name="text">Set the Trip Zone CBC pulse clear event base is the base address of the MCPWM module clearEvent is the CBC trip zone clear event This function set the event which automatically clears the CBC Cycle by Cycle latch Valid values for clearEvent are MCPWM_TZ_CBC_PULSE_CLR_NONE Disable CBC pulse Clear MCPWM_TZ_CBC_PULSE_CLR_CNTR_ZERO Clear CBC pulse when counter equals zero MCPWM_TZ_CBC_PULSE_CLR_CNTR_PERIOD Clear CBC pulse when counter equals period MCPWM_TZ_CBC_PULSE_CLR_CNTR_ZERO_PERIOD Clear CBC pulse when counter equals zero or period None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_OST_TZ3</field>
    <field name="url">group__mcpwm__api.html#gaa1260090734821947539d8bd0de0a7a5</field>
    <field name="keywords">MCPWM_TZ_FLAG_OST_TZ3 MCPWM_TZ_FLAG_OST_TZ3</field>
    <field name="text">OST flag 3</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_SyncPulseSource</field>
    <field name="url">group__mcpwm__api.html#gaa1ce0e54c7f53a6da4e1257ab7751580</field>
    <field name="keywords">MCPWM_SyncPulseSource MCPWM_SyncPulseSource</field>
    <field name="text">Values that can be passed to MCPWM_setSyncPulseSource() as the syncPulseSource parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getGlobalLoadOneShotLatchStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#gaa32111efa136e528e435fdf58f9e6ffd</field>
    <field name="keywords">MCPWM_getGlobalLoadOneShotLatchStatus MCPWM_getGlobalLoadOneShotLatchStatus</field>
    <field name="text">Get One shot global shadow to active load pulse Status base is the base address of the MCPWM module One shot global load strobe status</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_INT_ET_2</field>
    <field name="url">group__mcpwm__api.html#gaa38e1f0e7c949afdd25b4160f63778fe</field>
    <field name="keywords">MCPWM_INT_ET_2 MCPWM_INT_ET_2</field>
    <field name="text">Interrupt Source is Event Trigger 2 signal</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_configureSignal</field>
    <field name="args">(uint32_t base, const MCPWM_SignalParams *signalParams)</field>
    <field name="url">group__mcpwm__api.html#gaa4577ff4d2146face490f0b98689dbf5</field>
    <field name="keywords">MCPWM_configureSignal MCPWM_configureSignal</field>
    <field name="text">Configures MCPWM signal with desired frequency duty base is the base address of the MCPWM module signalParams is the desired signal parameters This function configures the MCPWM module to generate a signal with desired frequency duty None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_ActionQualifierModule</field>
    <field name="url">group__mcpwm__api.html#gaa543b5fd4207c623601c760e1cbd363b</field>
    <field name="keywords">MCPWM_ActionQualifierModule MCPWM_ActionQualifierModule</field>
    <field name="text">Values that can be passed to MCPWM_setActionQualifierShadowLoadMode() as the aqModule parameter</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_DeadBandDelayMode</field>
    <field name="url">group__mcpwm__api.html#gaa79fdd9cd682dc9b1706890a70ca99e8</field>
    <field name="keywords">MCPWM_DeadBandDelayMode MCPWM_DeadBandDelayMode</field>
    <field name="text">Values that can be passed to MCPWM_setDeadBandDelayPolarity() MCPWM_setDeadBandDelayMode() as the delayMode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getTimeBasePeriodShadow</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#gaa9195f5d283d9966c636d3145476d20e</field>
    <field name="keywords">MCPWM_getTimeBasePeriodShadow MCPWM_getTimeBasePeriodShadow</field>
    <field name="text">Gets the PWM period count base is the base address of the MCPWM module This function gets the period of the PWM count in its shadow register The period count value</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_SyncInPulseSource</field>
    <field name="url">group__mcpwm__api.html#gaa92a0e27b775005188d820cf5751ca83</field>
    <field name="keywords">MCPWM_SyncInPulseSource MCPWM_SyncInPulseSource</field>
    <field name="text">Values that can be passed to MCPWM_setSyncInPulseSource() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setActionQualifierShadowLoadMode</field>
    <field name="args">(uint32_t base, MCPWM_ActionQualifierModule aqModule, MCPWM_ActionQualifierLoadMode loadMode)</field>
    <field name="url">group__mcpwm__api.html#gaa9cbf2fccb0a38ed7f484d49bf7be5a4</field>
    <field name="keywords">MCPWM_setActionQualifierShadowLoadMode MCPWM_setActionQualifierShadowLoadMode</field>
    <field name="text">Sets the Action Qualifier shadow load mode base is the base address of the MCPWM module aqModule is the Action Qualifier module value loadMode is the shadow to active load mode This function enables and sets the Action Qualifier shadow load mode Valid values for the variables are aqModule MCPWM_ACTION_QUALIFIER_1A Action Qualifier A for PWM 1 MCPWM_ACTION_QUALIFIER_1B Action Qualifier B for PWM 1 MCPWM_ACTION_QUALIFIER_2A Action Qualifier A for PWM 2 MCPWM_ACTION_QUALIFIER_2B Action Qualifier B for PWM 2 MCPWM_ACTION_QUALIFIER_3A Action Qualifier A for PWM 3 MCPWM_ACTION_QUALIFIER_3B Action Qualifier B for PWM 3 loadMode MCPWM_AQ_LOAD_ON_CNTR_ZERO load when counter equals zero MCPWM_AQ_LOAD_ON_CNTR_PERIOD load when counter equals period MCPWM_AQ_LOAD_ON_CNTR_ZERO_PERIOD load when counter equals zero or period MCPWM_AQ_LOAD_FREEZE Freeze shadow to active load MCPWM_AQ_LOAD_ON_SYNC_CNTR_ZERO load on sync or when counter equals zero MCPWM_AQ_LOAD_ON_SYNC_CNTR_PERIOD load on sync or when counter equals period MCPWM_AQ_LOAD_ON_SYNC_CNTR_ZERO_PERIOD load on sync or when counter equals zero or period MCPWM_AQ_LOAD_ON_SYNC_ONLY load on sync only None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_CBC_TZ3</field>
    <field name="url">group__mcpwm__api.html#gaaa0124aa6b05120f130ef15db9423f96</field>
    <field name="keywords">MCPWM_TZ_FLAG_CBC_TZ3 MCPWM_TZ_FLAG_CBC_TZ3</field>
    <field name="text">CBC flag 3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setActionQualifierActionCompleteActive</field>
    <field name="args">(uint32_t base, MCPWM_ActionQualifierOutputModule mcpwmOutput, uint16_t action)</field>
    <field name="url">group__mcpwm__api.html#gaabfb0cabdba3a597a3122c8685b76dde</field>
    <field name="keywords">MCPWM_setActionQualifierActionCompleteActive MCPWM_setActionQualifierActionCompleteActive</field>
    <field name="text">Set up Action qualifier action for all events in one go base is the base address of the MCPWM module mcpwmOutput is the MCPWM pin type action is the desired action when the specified event occurs This function sets up the Action Qualifier output on MCPWMA or MCPWMB depending on the value of mcpwmOutput to a value specified by action Valid action param values from different time base counter scenarios should be OR d together to configure complete action for a pwm output The following are valid values for the parameters mcpwmOutput MCPWM_AQ_OUTPUT_1A MCPWMx1A output MCPWM_AQ_OUTPUT_1B MCPWMx1B output MCPWM_AQ_OUTPUT_2A MCPWMx2A output MCPWM_AQ_OUTPUT_2B MCPWMx2B output MCPWM_AQ_OUTPUT_3A MCPWMx3A output MCPWM_AQ_OUTPUT_3B MCPWMx3B output action When time base counter equals zero MCPWM_AQ_OUTPUT_NO_CHANGE_ZERO Time base counter equals zero and no change in output pins MCPWM_AQ_OUTPUT_LOW_ZERO Time base counter equals zero and set output pins to low MCPWM_AQ_OUTPUT_HIGH_ZERO Time base counter equals zero and set output pins to high MCPWM_AQ_OUTPUT_TOGGLE_ZERO Time base counter equals zero and toggle the output pins When time base counter equals period MCPWM_AQ_OUTPUT_NO_CHANGE_PERIOD Time base counter equals period and no change in output pins MCPWM_AQ_OUTPUT_LOW_PERIOD Time base counter equals period and set output pins to low MCPWM_AQ_OUTPUT_HIGH_PERIOD Time base counter equals period and set output pins to high MCPWM_AQ_OUTPUT_TOGGLE_PERIOD Time base counter equals period and toggle the output pins When time base counter equals CMPA during up-count MCPWM_AQ_OUTPUT_NO_CHANGE_UP_CMPA Time base counter up equals CMPA and no change in the output pins MCPWM_AQ_OUTPUT_LOW_UP_CMPA Time base counter up equals CMPA and set output pins low MCPWM_AQ_OUTPUT_HIGH_UP_CMPA Time base counter up equals CMPA and set output pins high MCPWM_AQ_OUTPUT_TOGGLE_UP_CMPA Time base counter up equals CMPA and toggle output pins When time base counter equals CMPA during down-count MCPWM_AQ_OUTPUT_NO_CHANGE_DOWN_CMPA Time base counter down equals CMPA and no change in the output pins MCPWM_AQ_OUTPUT_LOW_DOWN_CMPA Time base counter down equals CMPA and set output pins low MCPWM_AQ_OUTPUT_HIGH_DOWN_CMPA Time base counter down equals CMPA and set output pins high MCPWM_AQ_OUTPUT_TOGGLE_DOWN_CMPA Time base counter down equals CMPA and toggle output pins When time base counter equals CMPB during up-count MCPWM_AQ_OUTPUT_NO_CHANGE_UP_CMPB Time base counter up equals CMPB and no change in the output pins MCPWM_AQ_OUTPUT_LOW_UP_CMPB Time base counter up equals CMPB and set output pins low MCPWM_AQ_OUTPUT_HIGH_UP_CMPB Time base counter up equals CMPB and set output pins high MCPWM_AQ_OUTPUT_TOGGLE_UP_CMPB Time base counter up equals CMPB and toggle output pins When time base counter equals CMPB during down-count MCPWM_AQ_OUTPUT_NO_CHANGE_DOWN_CMPB- Time base counter down equals CMPB and no change in the output pins MCPWM_AQ_OUTPUT_LOW_DOWN_CMPB Time base counter down equals CMPB and set output pins low MCPWM_AQ_OUTPUT_HIGH_DOWN_CMPB Time base counter down equals CMPB and set output pins high MCPWM_AQ_OUTPUT_TOGGLE_DOWN_CMPB Time base counter down equals CMPB and toggle output pins note A logical OR of the valid values should be passed as the action parameter Single action should be configured for each time base counter scenario None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getTimeBasePeriodActive</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#gaac8cfa85e5303250b4b6260ea541822f</field>
    <field name="keywords">MCPWM_getTimeBasePeriodActive MCPWM_getTimeBasePeriodActive</field>
    <field name="text">Gets the PWM period count base is the base address of the MCPWM module This function gets the period of the PWM count in its active register The period count value</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_OSHT4</field>
    <field name="url">group__mcpwm__api.html#gaafcf9500102e7e42607abe9230b18a06</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_OSHT4 MCPWM_TZ_SIGNAL_OSHT4</field>
    <field name="text">One-shot TZ4</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_OSHT2</field>
    <field name="url">group__mcpwm__api.html#gab0fa62f429b2a94b54b165bb7ba8da16</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_OSHT2 MCPWM_TZ_SIGNAL_OSHT2</field>
    <field name="text">One-shot TZ2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setActionQualifierActionActive</field>
    <field name="args">(uint32_t base, MCPWM_ActionQualifierOutputModule mcpwmOutput, MCPWM_ActionQualifierOutput output, MCPWM_ActionQualifierOutputEvent event)</field>
    <field name="url">group__mcpwm__api.html#gab19fad052af2ea8473ce0c862f28c03e</field>
    <field name="keywords">MCPWM_setActionQualifierActionActive MCPWM_setActionQualifierActionActive</field>
    <field name="text">Set up Action qualifier outputs base is the base address of the MCPWM module mcpwmOutput is the MCPWM pin type output is the Active Action Qualifier output event is the event that causes a change in output This function sets up the Action Qualifier output on MCPWM A or MCPWMB depending on the value of mcpwmOutput to a value specified by outPut based on the input events specified by event The following are valid values for the parameters mcpwmOutput MCPWM_AQ_OUTPUT_1A MCPWMx1A output MCPWM_AQ_OUTPUT_1B MCPWMx1B output MCPWM_AQ_OUTPUT_2A MCPWMx2A output MCPWM_AQ_OUTPUT_2B MCPWMx2B output MCPWM_AQ_OUTPUT_3A MCPWMx3A output MCPWM_AQ_OUTPUT_3B MCPWMx3B output output MCPWM_AQ_OUTPUT_NO_CHANGE No change in the output pins MCPWM_AQ_OUTPUT_LOW Set output pins to low MCPWM_AQ_OUTPUT_HIGH Set output pins to High MCPWM_AQ_OUTPUT_TOGGLE Toggle the output pins event MCPWM_AQ_OUTPUT_ON_TIMEBASE_ZERO Time base counter equals zero MCPWM_AQ_OUTPUT_ON_TIMEBASE_PERIOD Time base counter equals period MCPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPA Time base counter up equals CMPA MCPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPA Time base counter down equals CMPA MCPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPB Time base counter up equals CMPB MCPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPB Time base counter down equals CMPB None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_TripZoneEvent</field>
    <field name="url">group__mcpwm__api.html#gab21f3d0ec6d87212a0cddf21778a5227</field>
    <field name="keywords">MCPWM_TripZoneEvent MCPWM_TripZoneEvent</field>
    <field name="text">Values that can be passed to MCPWM_setTripZoneAction() as the tzEvent parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setSyncInPulseSource</field>
    <field name="args">(uint32_t base, MCPWM_SyncInPulseSource source)</field>
    <field name="url">group__mcpwm__api.html#gab29bc913704dba2ac9d708e30f973a52</field>
    <field name="keywords">MCPWM_setSyncInPulseSource MCPWM_setSyncInPulseSource</field>
    <field name="text">Set up the source for sync-in pulse base is the base address of the MCPWM module source is the sync-in pulse source This function set the sync out pulse mode Valid values for mode are MCPWM_SYNC_IN_PULSE_SRC_DISABLE Disable Sync-in MCPWM_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT5 Sync-in source is Input XBAR out5 signal MCPWM_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT6 Sync-in source is Input XBAR out6 signal MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_ECAP1 Sync-in source is ECAP1 sync-out signal MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM1 Sync-in source is MCPWM1 sync-out signal MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM3 Sync-in source is MCPWM3 sync-out signal None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_OSHT5</field>
    <field name="url">group__mcpwm__api.html#gab33bb692d9f1b9d872b8b3b161bcd3aa</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_OSHT5 MCPWM_TZ_SIGNAL_OSHT5</field>
    <field name="text">One-shot TZ5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getSyncStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#gab520dcd10adeed6862a0dd106892886e</field>
    <field name="keywords">MCPWM_getSyncStatus MCPWM_getSyncStatus</field>
    <field name="text">Return external sync signal status base is the base address of the MCPWM module This function returns the external sync signal status Returns TRUE if if an external sync signal event Returns FALSE if there is no event</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setClockPrescaler</field>
    <field name="args">(uint32_t base, MCPWM_ClockDivider prescaler)</field>
    <field name="url">group__mcpwm__api.html#gab5324680311d3025d09f0e0ba75dce2a</field>
    <field name="keywords">MCPWM_setClockPrescaler MCPWM_setClockPrescaler</field>
    <field name="text">Set the time base clock and the high speed time base clock count pre-scaler base is the base address of the MCPWM module prescaler is the time base count pre scale value This function sets the pre scaler(divider) value for the time base clock counter and the high speed time base clock counter Valid values for pre-scaler and highSpeedPrescaler are MCPWM_CLOCK_DIVIDER_X where X is 1 2 4 8 1 6 3 2 6 4 1 2 8 2 5 6 5 1 2 1 0 2 4 2 0 4 8 4 0 9 6 8 1 9 2 1 6 3 8 4 or 3 2 7 6 8 The actual numerical values for these macros represent values 0 1 1 5 The equation for the output clock is TBCLK MCPWMCLK/ pre-scaler Note MCPWMCLK is a scaled version of SYSCLK None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setCountModeAfterSync</field>
    <field name="args">(uint32_t base, MCPWM_SyncCountMode mode)</field>
    <field name="url">group__mcpwm__api.html#gab6274c8743a785e8ae02ce46b990733c</field>
    <field name="keywords">MCPWM_setCountModeAfterSync MCPWM_setCountModeAfterSync</field>
    <field name="text">Set count mode after phase shift sync base is the base address of the MCPWM module mode is the count mode This function sets the time base count to count up or down after a new phase value set by the MCPWM_setPhaseShift() The count direction is determined by the variable mode Valid inputs for mode are MCPWM_COUNT_MODE_UP_AFTER_SYNC Count up after sync MCPWM_COUNT_MODE_DOWN_AFTER_SYNC Count down after sync None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_OST_TZ6</field>
    <field name="url">group__mcpwm__api.html#gab7e1e7267bac7d18ec245ebfe7b21ff2</field>
    <field name="keywords">MCPWM_TZ_FLAG_OST_TZ6 MCPWM_TZ_FLAG_OST_TZ6</field>
    <field name="text">OST flag 6</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_clearInterrupt</field>
    <field name="args">(uint32_t base, uint16_t intFlags)</field>
    <field name="url">group__mcpwm__api.html#gab7f2f1ced84726c77e846318305686b2</field>
    <field name="keywords">MCPWM_clearInterrupt MCPWM_clearInterrupt</field>
    <field name="text">Clears interrupt flag base is the base address of the MCPWM module intFlags is the interrupt source This function clears MCPWM interrupt flags The following are valid interrupt sources MCPWM_INT_TZ_CBC Interrupt Source is Trip Zone CBC signal MCPWM_INT_TZ_OST Interrupt Source is Trip Zone OST signal MCPWM_INT_ET_1 Interrupt Source is Event Trigger 1 signal MCPWM_INT_ET_2 Interrupt Source is Event Trigger 2 signal MCPWM_INT_TBCTR_OVF Counter overflow generates interrupt MCPWM_INT_SOURCE_ALL All Interrupt Sources- MCPWM_INT_TZ_OST this flag has to be passed into the MCPWM_clearInterrupt API for the Trip Zone One Shot to be cleared and the MCPWMs to return to normal state None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_ActionQualifierEventAction</field>
    <field name="url">group__mcpwm__api.html#gab8b5bc354774ca3ebed0473c24f378de</field>
    <field name="keywords">MCPWM_ActionQualifierEventAction MCPWM_ActionQualifierEventAction</field>
    <field name="text">Values that can be passed to MCPWM_setActionQualifierActionCompleteActive() MCPWM_setActionQualifierActionCompleteShadow() as the action parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setSyncOutPulseMode</field>
    <field name="args">(uint32_t base, MCPWM_SyncOutPulseMode mode)</field>
    <field name="url">group__mcpwm__api.html#gab9dd51b67be129058031e1e4d8e16af7</field>
    <field name="keywords">MCPWM_setSyncOutPulseMode MCPWM_setSyncOutPulseMode</field>
    <field name="text">Set up the sync out pulse event base is the base address of the MCPWM module mode is the sync out mode This function set the sync out pulse mode Valid values for mode are MCPWM_SYNC_OUT_PULSE_ON_SOFTWARE sync pulse is generated by software when MCPWM_forceSyncPulse() function is called or by MCPWMxSYNCI signal MCPWM_SYNC_OUT_PULSE_ON_COUNTER_ZERO sync pulse is generated when time base counter equals zero MCPWM_SYNC_OUT_PULSE_ON_COUNTER_COMPARE_C sync pulse is generated when time base counter equals compare C value MCPWM_SYNC_OUT_PULSE_ON_COUNTER_COMPARE_D sync pulse is generated when time base counter equals compare D value MCPWM_SYNC_OUT_PULSE_DISABLED sync pulse is disabled None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_FallingEdgeDelayLoadMode</field>
    <field name="url">group__mcpwm__api.html#gabc47274ca01462062d86b38a37289baa</field>
    <field name="keywords">MCPWM_FallingEdgeDelayLoadMode MCPWM_FallingEdgeDelayLoadMode</field>
    <field name="text">Values that can be passed to MCPWM_setFallingEdgeDelayCountShadowLoadMode() as the loadMode parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_CBC6</field>
    <field name="url">group__mcpwm__api.html#gabdbda70ac3c6c2b466f74654aba8791a</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_CBC6 MCPWM_TZ_SIGNAL_CBC6</field>
    <field name="text">TZ6 Cycle By Cycle</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_DB_INPUT_MCPWMB</field>
    <field name="url">group__mcpwm__api.html#gabe456dff73b741a65135c541d93ff2cc</field>
    <field name="keywords">MCPWM_DB_INPUT_MCPWMB MCPWM_DB_INPUT_MCPWMB</field>
    <field name="text">Input signal is MCPWMB</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_TimeBaseCountMode</field>
    <field name="url">group__mcpwm__api.html#gac184f172844e12b972c5f65002584112</field>
    <field name="keywords">MCPWM_TimeBaseCountMode MCPWM_TimeBaseCountMode</field>
    <field name="text">Values that can be passed to MCPWM_setTimeBaseCounterMode() as the counterMode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_clearGlobalLoadOneShotLatch</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#gac1b22ec0a0a3000d4ea3a6b784a0f828</field>
    <field name="keywords">MCPWM_clearGlobalLoadOneShotLatch MCPWM_clearGlobalLoadOneShotLatch</field>
    <field name="text">Clears One shot global shadow to active load pulse base is the base address of the MCPWM module This function sets a one time global shadow to active load pulse The pulse propagates to generate a load signal if any of the events set by MCPWM_setGlobalLoadTrigger() occur None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_EventTriggerSource</field>
    <field name="url">group__mcpwm__api.html#gac23e0a22d2bf77b8e3096969a4250de0</field>
    <field name="keywords">MCPWM_EventTriggerSource MCPWM_EventTriggerSource</field>
    <field name="text">Values that can be passed to MCPWM_setEventTriggerSource() as the evtTrigSource parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getGlobalInterruptStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#gac3f4a1c6206a659e7335a6de2ef5b614</field>
    <field name="keywords">MCPWM_getGlobalInterruptStatus MCPWM_getGlobalInterruptStatus</field>
    <field name="text">Returns the Global interrupt flag base is the base address of the MCPWM module This function returns the MCPWM Global interrupt flag Returns TRUE if there is a global MCPWM interrupt FALSE otherwise</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_TripZoneAction</field>
    <field name="url">group__mcpwm__api.html#gac4609709d9d85f3fd9909d6cb916f760</field>
    <field name="keywords">MCPWM_TripZoneAction MCPWM_TripZoneAction</field>
    <field name="text">Values that can be passed to MCPWM_setTripZoneAction() as the tzAction parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_enableTripZoneSignals</field>
    <field name="args">(uint32_t base, uint32_t tzSignal)</field>
    <field name="url">group__mcpwm__api.html#gac4c2f057d80112ac3daf9c6e9a719a63</field>
    <field name="keywords">MCPWM_enableTripZoneSignals MCPWM_enableTripZoneSignals</field>
    <field name="text">Enables Trip Zone signal base is the base address of the MCPWM module tzSignal is the Trip Zone signal This function enables the Trip Zone signals specified by tzSignal as a source for the Trip Zone module Valid values for tzSignal are MCPWM_TZ_SIGNAL_CBC1 TZ1 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC2 TZ2 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC3 TZ3 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC4 TZ4 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC5 TZ5 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC6 TZ6 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC7 TZ7 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC8 TZ8 Cycle By Cycle MCPWM_TZ_SIGNAL_OSHT1 One-shot TZ1 MCPWM_TZ_SIGNAL_OSHT2 One-shot TZ2 MCPWM_TZ_SIGNAL_OSHT3 One-shot TZ3 MCPWM_TZ_SIGNAL_OSHT4 One-shot TZ4 MCPWM_TZ_SIGNAL_OSHT5 One-shot TZ5 MCPWM_TZ_SIGNAL_OSHT6 One-shot TZ6 MCPWM_TZ_SIGNAL_OSHT7 One-shot TZ7 MCPWM_TZ_SIGNAL_OSHT8 One-shot TZ8 note A logical OR of the valid values can be passed as the tzSignal parameter None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setADCTriggerSource</field>
    <field name="args">(uint32_t base, MCPWM_ADCStartOfConversionType adcSOCType, MCPWM_ADCStartOfConversionSource socSource)</field>
    <field name="url">group__mcpwm__api.html#gac5749e81ee3ec858c963b268c143cc58</field>
    <field name="keywords">MCPWM_setADCTriggerSource MCPWM_setADCTriggerSource</field>
    <field name="text">Sets the MCPWM SOC source base is the base address of the MCPWM module adcSOCType is the ADC SOC type socSource is the SOC source This function sets the MCPWM ADC SOC source Valid values for socSource are adcSOCType MCPWM_SOC_A SOC A MCPWM_SOC_B SOC B MCPWM_SOC_C SOC C MCPWM_SOC_D SOC D socSource MCPWM_SOC_DISABLED Event is Disabled MCPWM_SOC_TBCTR_ZERO Time-base counter equal to zero MCPWM_SOC_TBCTR_PERIOD Time-base counter equal to period MCPWM_SOC_TBCTR_ZERO_PERIOD Time-base counter equal to zero or period MCPWM_SOC_TBCTR_U_CMPC Time-base counter equal to CMPC when the timer is incrementing MCPWM_SOC_TBCTR_U_CMPD Time-base counter equal to CMPD when the timer is incrementing MCPWM_SOC_TBCTR_U_CMP1A Time-base counter equal to CMP1A when the timer is incrementing MCPWM_SOC_TBCTR_U_CMP1B Time-base counter equal to CMP1B when the timer is incrementing MCPWM_SOC_TBCTR_U_CMP2A Time-base counter equal to CMP2A when the timer is incrementing MCPWM_SOC_TBCTR_U_CMP2B Time-base counter equal to CMP2B when the timer is incrementing MCPWM_SOC_TBCTR_U_CMP3A Time-base counter equal to CMP3A when the timer is incrementing MCPWM_SOC_TBCTR_U_CMP3B Time-base counter equal to CMP3B when the timer is incrementing MCPWM_SOC_TBCTR_D_CMPC Time-base counter equal to CMPC when the timer is Decrementing MCPWM_SOC_TBCTR_D_CMPD Time-base counter equal to CMPD when the timer is Decrementing MCPWM_SOC_TBCTR_D_CMP1A Time-base counter equal to CMP1A when the timer is Decrementing MCPWM_SOC_TBCTR_D_CMP1B Time-base counter equal to CMP1B when the timer is Decrementing MCPWM_SOC_TBCTR_D_CMP2A Time-base counter equal to CMP2A when the timer is Decrementing MCPWM_SOC_TBCTR_D_CMP2B Time-base counter equal to CMP2B when the timer is Decrementing MCPWM_SOC_TBCTR_D_CMP3A Time-base counter equal to CMP3A when the timer is Decrementing MCPWM_SOC_TBCTR_D_CMP3B Time-base counter equal to CMP3B when the timer is Decrementing None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_disablePhaseShiftLoad</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#gac73d27a744e5d9d6fba029715ccbb2e3</field>
    <field name="keywords">MCPWM_disablePhaseShiftLoad MCPWM_disablePhaseShiftLoad</field>
    <field name="text">Disable phase shift load base is the base address of the MCPWM module This function disables loading of phase shift when the appropriate sync event occurs None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_OST_TZ2</field>
    <field name="url">group__mcpwm__api.html#gaca4463e7b01a041449ef8433736c0819</field>
    <field name="keywords">MCPWM_TZ_FLAG_OST_TZ2 MCPWM_TZ_FLAG_OST_TZ2</field>
    <field name="text">OST flag 2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_disableADCTrigger</field>
    <field name="args">(uint32_t base, MCPWM_ADCStartOfConversionType adcSOCType)</field>
    <field name="url">group__mcpwm__api.html#gacbc9219b6ec47f399b7dfd85ab0fa4b1</field>
    <field name="keywords">MCPWM_disableADCTrigger MCPWM_disableADCTrigger</field>
    <field name="text">Disable ADC SOC event base is the base address of the MCPWM module adcSOCType is the ADC SOC type This function disables the MCPWM module to trigger an ADC SOC event Valid values for adcSOCType are MCPWM_SOC_A SOC A MCPWM_SOC_B SOC B MCPWM_SOC_C SOC C MCPWM_SOC_D SOC D None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_disableGlobalLoad</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#gacd783d079fccce2070b0f8c64906a826</field>
    <field name="keywords">MCPWM_disableGlobalLoad MCPWM_disableGlobalLoad</field>
    <field name="text">Disable Global shadow load mode base is the base address of the MCPWM module This function disables Global shadow to active load mode of registers Loading shadow to active is determined individually None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_OSHT7</field>
    <field name="url">group__mcpwm__api.html#gad068e6646a0a0418c9fe15a641bd41a1</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_OSHT7 MCPWM_TZ_SIGNAL_OSHT7</field>
    <field name="text">One-shot TZ7</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_INT_TBCTR_OVF</field>
    <field name="url">group__mcpwm__api.html#gad213db8efade65269253d808e34b7cdf</field>
    <field name="keywords">MCPWM_INT_TBCTR_OVF MCPWM_INT_TBCTR_OVF</field>
    <field name="text">Interrupt Source is Counter Overflow signal</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setDeadBandDelayPolarity</field>
    <field name="args">(uint32_t base, MCPWM_DeadBandDelayMode delayMode, MCPWM_DeadBandPolarity polarity)</field>
    <field name="url">group__mcpwm__api.html#gad3a5fb447a18296cbe549a13b3dd19e0</field>
    <field name="keywords">MCPWM_setDeadBandDelayPolarity MCPWM_setDeadBandDelayPolarity</field>
    <field name="text">Sets Dead Band delay polarity base is the base address of the MCPWM module delayMode is the Dead Band delay type polarity is the polarity of the delayed signal This function sets up the polarity as determined by the variable polarity of the Falling Edge or Rising Edge delay depending on the value of delayMode Valid values for the variables are delayMode MCPWM_DB_RED Rising Edge delay MCPWM_DB_FED Falling Edge delay polarity MCPWM_DB_POLARITY_ACTIVE_HIGH polarity is not inverted MCPWM_DB_POLARITY_ACTIVE_LOW polarity is inverted None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_clearTripZoneFlagStatus</field>
    <field name="args">(uint32_t base, uint32_t tzFlags)</field>
    <field name="url">group__mcpwm__api.html#gad5d6f77ed6674fc28a19b4a24711a895</field>
    <field name="keywords">MCPWM_clearTripZoneFlagStatus MCPWM_clearTripZoneFlagStatus</field>
    <field name="text">Clear the Trip Zone flag base is the base address of the MCPWM module tzFlags is the CBC flag to be cleared This function only clears the TripZone flags For OneShot Trips enabled use MCPWM_clearInterrupt() API to clear the OneShot Trip This function clears the specific Cycle by Cycle Trip Zone flag The following are valid values for tzFlags MCPWM_TZ_FLAG_CBC_TZ1 CBC 1 status flag MCPWM_TZ_FLAG_CBC_TZ2 CBC 2 status flag MCPWM_TZ_FLAG_CBC_TZ3 CBC 3 status flag MCPWM_TZ_FLAG_CBC_TZ4 CBC 4 status flag MCPWM_TZ_FLAG_CBC_TZ5 CBC 5 status flag MCPWM_TZ_FLAG_CBC_TZ6 CBC 6 status flag MCPWM_TZ_FLAG_CBC_TZ7 CBC 7 status flag MCPWM_TZ_FLAG_CBC_TZ8 CBC 8 status flag MCPWM_TZ_FLAG_OST_TZ1 OST 1 status flag MCPWM_TZ_FLAG_OST_TZ2 OST 2 status flag MCPWM_TZ_FLAG_OST_TZ3 OST 3 status flag MCPWM_TZ_FLAG_OST_TZ4 OST 4 status flag MCPWM_TZ_FLAG_OST_TZ5 OST 5 status flag MCPWM_TZ_FLAG_OST_TZ6 OST 6 status flag MCPWM_TZ_FLAG_OST_TZ7 OST 7 status flag MCPWM_TZ_FLAG_OST_TZ8 OST 8 status flag MCPWM_TZ_FLAG_ALL All Trip Zone Flags None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_OST_TZ7</field>
    <field name="url">group__mcpwm__api.html#gad7b98d18a325f189f6f2195c3f3c5e89</field>
    <field name="keywords">MCPWM_TZ_FLAG_OST_TZ7 MCPWM_TZ_FLAG_OST_TZ7</field>
    <field name="text">OST flag 7</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_INT_TZ_CBC</field>
    <field name="url">group__mcpwm__api.html#gada72ee97968d7604b4ca5254e8c45a0c</field>
    <field name="keywords">MCPWM_INT_TZ_CBC MCPWM_INT_TZ_CBC</field>
    <field name="text">Interrupt Source is Trip Zone CBC signal</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_ALL</field>
    <field name="url">group__mcpwm__api.html#gadb51a70de077607263d2326951bfb469</field>
    <field name="keywords">MCPWM_TZ_FLAG_ALL MCPWM_TZ_FLAG_ALL</field>
    <field name="text">MCPWM_TZ_FLAG_CBC_TZ1 All Trip Zone Flags</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_ActionQualifierOutput</field>
    <field name="url">group__mcpwm__api.html#gadbb40e738e86443eda97f128b946b304</field>
    <field name="keywords">MCPWM_ActionQualifierOutput MCPWM_ActionQualifierOutput</field>
    <field name="text">Values that can be passed to MCPWM_setActionQualifierSWAction() MCPWM_setActionQualifierActionActive() MCPWM_setActionQualifierActionShadow() as the outPut parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_OST_TZ1</field>
    <field name="url">group__mcpwm__api.html#gadc3444880f6980a3f3bdd004679bed40</field>
    <field name="keywords">MCPWM_TZ_FLAG_OST_TZ1 MCPWM_TZ_FLAG_OST_TZ1</field>
    <field name="text">OST flag 1</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_DB_INPUT_MCPWMA</field>
    <field name="url">group__mcpwm__api.html#gadd0799d3dab5014b6af3c96d665cd601</field>
    <field name="keywords">MCPWM_DB_INPUT_MCPWMA MCPWM_DB_INPUT_MCPWMA</field>
    <field name="text">Input signal is MCPWMA</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_TripZoneCBCMode</field>
    <field name="url">group__mcpwm__api.html#gadd52c502232a5b6eccd78c9141f2d6a1</field>
    <field name="keywords">MCPWM_TripZoneCBCMode MCPWM_TripZoneCBCMode</field>
    <field name="text">Values that can be passed to MCPWM_selectTripZoneCBCEvent() as the clearMode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setCounterCompareShadowValue</field>
    <field name="args">(uint32_t base, MCPWM_CounterCompareModule compModule, uint16_t compCount)</field>
    <field name="url">group__mcpwm__api.html#gadf95a399c92fb901ef5b4d6b7a07a809</field>
    <field name="keywords">MCPWM_setCounterCompareShadowValue MCPWM_setCounterCompareShadowValue</field>
    <field name="text">Set counter compare values base is the base address of the MCPWM module compModule is the Counter Compare value module compCount is the counter compare count value This function sets the shadow counter compare value for counter compare registers The maximum value for compCount is 0 xFFFF Valid values for compModule are MCPWM_COUNTER_COMPARE_1A Counter compare 1 A MCPWM_COUNTER_COMPARE_1B Counter compare 1 B MCPWM_COUNTER_COMPARE_2A Counter compare 2 A MCPWM_COUNTER_COMPARE_2B Counter compare 2 B MCPWM_COUNTER_COMPARE_3A Counter compare 3 A MCPWM_COUNTER_COMPARE_3B Counter compare 3 B MCPWM_COUNTER_COMPARE_C Counter compare C MCPWM_COUNTER_COMPARE_D Counter compare D None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_disableTripZoneSignals</field>
    <field name="args">(uint32_t base, uint32_t tzSignal)</field>
    <field name="url">group__mcpwm__api.html#gae1770b2ad9296d8fca27ada9f2b62196</field>
    <field name="keywords">MCPWM_disableTripZoneSignals MCPWM_disableTripZoneSignals</field>
    <field name="text">Disables Trip Zone signal base is the base address of the MCPWM module tzSignal is the Trip Zone signal This function disables the Trip Zone signals specified by tzSignal as a source for the Trip Zone module Valid values for tzSignal are MCPWM_TZ_SIGNAL_CBC1 TZ1 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC2 TZ2 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC3 TZ3 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC4 TZ4 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC5 TZ5 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC6 TZ6 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC7 TZ7 Cycle By Cycle MCPWM_TZ_SIGNAL_CBC8 TZ8 Cycle By Cycle MCPWM_TZ_SIGNAL_OSHT1 One-shot TZ1 MCPWM_TZ_SIGNAL_OSHT2 One-shot TZ2 MCPWM_TZ_SIGNAL_OSHT3 One-shot TZ3 MCPWM_TZ_SIGNAL_OSHT4 One-shot TZ4 MCPWM_TZ_SIGNAL_OSHT5 One-shot TZ5 MCPWM_TZ_SIGNAL_OSHT6 One-shot TZ6 MCPWM_TZ_SIGNAL_OSHT7 One-shot TZ7 MCPWM_TZ_SIGNAL_OSHT8 One-shot TZ8 note A logical OR of the valid values can be passed as the tzSignal parameter None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_forceInterrupt</field>
    <field name="args">(uint32_t base, uint16_t intFlags)</field>
    <field name="url">group__mcpwm__api.html#gae27533dfd0023ebe718d0fa1aceb726b</field>
    <field name="keywords">MCPWM_forceInterrupt MCPWM_forceInterrupt</field>
    <field name="text">Forces interrupt source base is the base address of the MCPWM module intFlags is the interrupt source This function forces and enables MCPWM interrupt source The following are valid interrupt sources MCPWM_INT_TZ_CBC Interrupt Source is Trip Zone CBC signal MCPWM_INT_TZ_OST Interrupt Source is Trip Zone OST signal MCPWM_INT_ET_1 Interrupt Source is Event Trigger 1 signal MCPWM_INT_ET_2 Interrupt Source is Event Trigger 2 signal MCPWM_INT_TBCTR_OVF Counter overflow generates interrupt MCPWM_INT_SOURCE_ALL All Interrupt Sources- MCPWM_INT_TZ_OST this flag can be passed into the MCPWM_forceInterrupt API for the Trip Zone One Shot to be forced and the MCPWMs to be to set to tripped state as configured in MCPWM_setTripZoneAction() API None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setFallingEdgeDelayCountShadowLoadMode</field>
    <field name="args">(uint32_t base, MCPWM_FallingEdgeDelayLoadMode loadMode)</field>
    <field name="url">group__mcpwm__api.html#gae3c636444dbf650355a68cf63b3b8163</field>
    <field name="keywords">MCPWM_setFallingEdgeDelayCountShadowLoadMode MCPWM_setFallingEdgeDelayCountShadowLoadMode</field>
    <field name="text">Set the FED Falling Edge Delay shadow load mode base is the base address of the MCPWM module loadMode is the shadow to active load event This function enables and sets the Falling Edge Delay register shadow load mode Valid values for the loadMode parameters are MCPWM_FED_LOAD_ON_CNTR_ZERO load when counter equals zero MCPWM_FED_LOAD_ON_CNTR_PERIOD load when counter equals period MCPWM_FED_LOAD_ON_CNTR_ZERO_PERIOD load when counter equals zero or period MCPWM_FED_LOAD_FREEZE Freeze shadow to active load None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_enableADCTrigger</field>
    <field name="args">(uint32_t base, MCPWM_ADCStartOfConversionType adcSOCType)</field>
    <field name="url">group__mcpwm__api.html#gae40da5bbe607409e96e23cee8af146a5</field>
    <field name="keywords">MCPWM_enableADCTrigger MCPWM_enableADCTrigger</field>
    <field name="text">Enable ADC SOC event base is the base address of the MCPWM module adcSOCType is the ADC SOC type This function enables the MCPWM module to trigger an ADC SOC event Valid values for adcSOCType are MCPWM_SOC_A SOC A MCPWM_SOC_B SOC B MCPWM_SOC_C SOC C MCPWM_SOC_D SOC D None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TIME_BASE_STATUS_COUNT_DOWN</field>
    <field name="url">group__mcpwm__api.html#gae5f51fb35dea96ce5cb4a2f7292de6cf</field>
    <field name="keywords">MCPWM_TIME_BASE_STATUS_COUNT_DOWN MCPWM_TIME_BASE_STATUS_COUNT_DOWN</field>
    <field name="text">Time base counter is counting down</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getADCTriggerEventCount</field>
    <field name="args">(uint32_t base, MCPWM_ADCStartOfConversionType adcSOCType)</field>
    <field name="url">group__mcpwm__api.html#gae66abe76c27ce8899444dc033eeea228</field>
    <field name="keywords">MCPWM_getADCTriggerEventCount MCPWM_getADCTriggerEventCount</field>
    <field name="text">Get the SOC event count base is the base address of the MCPWM module adcSOCType is the ADC SOC type This function returns the MCPWM SOC event count Valid values for adcSOCType are MCPWM_SOC_A SOC A MCPWM_SOC_B SOC B MCPWM_SOC_C SOC C MCPWM_SOC_D SOC D The SOC event counts that have occurred</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_OSHT1</field>
    <field name="url">group__mcpwm__api.html#gae9e4c182bc67ecbdf6298a18a5f3b87f</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_OSHT1 MCPWM_TZ_SIGNAL_OSHT1</field>
    <field name="text">One-shot TZ1</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_CBC7</field>
    <field name="url">group__mcpwm__api.html#gaeae6e53dd6429eb1aca8d6668dfacb38</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_CBC7 MCPWM_TZ_SIGNAL_CBC7</field>
    <field name="text">TZ7 Cycle By Cycle</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_FLAG_OST_TZ4</field>
    <field name="url">group__mcpwm__api.html#gaedfdba061a29efbdfcff8cfc3b47df8f</field>
    <field name="keywords">MCPWM_TZ_FLAG_OST_TZ4 MCPWM_TZ_FLAG_OST_TZ4</field>
    <field name="text">OST flag 4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_getRevision</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__mcpwm__api.html#gaf0f6d9086a3cb55c7112efca2e294e33</field>
    <field name="keywords">MCPWM_getRevision MCPWM_getRevision</field>
    <field name="text">Get the MCPWM Revision value base is the MCPWM module base address This function gets the MCPWM revision value Returns the MCPWM revision value</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_TZ_SIGNAL_CBC8</field>
    <field name="url">group__mcpwm__api.html#gaf3cbe2b2dda8253830682b59d74527cd</field>
    <field name="keywords">MCPWM_TZ_SIGNAL_CBC8 MCPWM_TZ_SIGNAL_CBC8</field>
    <field name="text">TZ8 Cycle By Cycle</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setTimeBaseCounter</field>
    <field name="args">(uint32_t base, uint16_t count)</field>
    <field name="url">group__mcpwm__api.html#gaf3ce824025e3d60e96a76df799b46a4e</field>
    <field name="keywords">MCPWM_setTimeBaseCounter MCPWM_setTimeBaseCounter</field>
    <field name="text">Set the time base count base is the base address of the MCPWM module count is the time base count value This function sets the 1 6 bit counter value of the time base counter None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MCPWM_INT_ET_1</field>
    <field name="url">group__mcpwm__api.html#gaf3cffacb52d26b38e03cd705f3ca69b0</field>
    <field name="keywords">MCPWM_INT_ET_1 MCPWM_INT_ET_1</field>
    <field name="text">Interrupt Source is Event Trigger 1 signal</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setRisingEdgeDelayCountShadowLoadMode</field>
    <field name="args">(uint32_t base, MCPWM_RisingEdgeDelayLoadMode loadMode)</field>
    <field name="url">group__mcpwm__api.html#gaf688b3aab725f0bc06c68547cd83619c</field>
    <field name="keywords">MCPWM_setRisingEdgeDelayCountShadowLoadMode MCPWM_setRisingEdgeDelayCountShadowLoadMode</field>
    <field name="text">Set the RED Rising Edge Delay shadow load mode base is the base address of the MCPWM module loadMode is the shadow to active load event This function sets the Rising Edge Delay register shadow load mode Valid values for the loadMode parameter are MCPWM_RED_LOAD_ON_CNTR_ZERO load when counter equals zero MCPWM_RED_LOAD_ON_CNTR_PERIOD load when counter equals period MCPWM_RED_LOAD_ON_CNTR_ZERO_PERIOD load when counter equals zero or period MCPWM_RED_LOAD_FREEZE Freeze shadow to active load None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setActionQualifierActionShadow</field>
    <field name="args">(uint32_t base, MCPWM_ActionQualifierOutputModule mcpwmOutput, MCPWM_ActionQualifierOutput output, MCPWM_ActionQualifierOutputEvent event)</field>
    <field name="url">group__mcpwm__api.html#gaf7230fcab455806f8f881c427fa6f9a7</field>
    <field name="keywords">MCPWM_setActionQualifierActionShadow MCPWM_setActionQualifierActionShadow</field>
    <field name="text">Set up Action qualifier outputs in Shadow register base is the base address of the MCPWM module mcpwmOutput is the MCPWM pin type output is the Shadow Action Qualifier output event is the event that causes a change in output This function sets up the Action Qualifier output on MCPWM A or MCPWMB depending on the value of mcpwmOutput to a value specified by outPut based on the input events specified by event The following are valid values for the parameters mcpwmOutput MCPWM_AQ_OUTPUT_1A MCPWMx1A output MCPWM_AQ_OUTPUT_1B MCPWMx1B output MCPWM_AQ_OUTPUT_2A MCPWMx2A output MCPWM_AQ_OUTPUT_2B MCPWMx2B output MCPWM_AQ_OUTPUT_3A MCPWMx3A output MCPWM_AQ_OUTPUT_3B MCPWMx3B output output MCPWM_AQ_OUTPUT_NO_CHANGE No change in the output pins MCPWM_AQ_OUTPUT_LOW Set output pins to low MCPWM_AQ_OUTPUT_HIGH Set output pins to High MCPWM_AQ_OUTPUT_TOGGLE Toggle the output pins event MCPWM_AQ_OUTPUT_ON_TIMEBASE_ZERO Time base counter equals zero MCPWM_AQ_OUTPUT_ON_TIMEBASE_PERIOD Time base counter equals period MCPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPA Time base counter up equals CMPA MCPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPA Time base counter down equals CMPA MCPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPB Time base counter up equals CMPB MCPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPB Time base counter down equals CMPB None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_ActionQualifierSWForceOutput</field>
    <field name="url">group__mcpwm__api.html#gaf7a4663a1dd1e60428e4b2a2806ea5b2</field>
    <field name="keywords">MCPWM_ActionQualifierSWForceOutput MCPWM_ActionQualifierSWForceOutput</field>
    <field name="text">Values that can be passed to MCPWM_setActionQualifierSWAction as output parameter</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_ADCStartOfConversionSource</field>
    <field name="url">group__mcpwm__api.html#gaf94393cfbe176ea638fa9c03ad5a322b</field>
    <field name="keywords">MCPWM_ADCStartOfConversionSource MCPWM_ADCStartOfConversionSource</field>
    <field name="text">Values that can be passed to MCPWM_setADCTriggerSource() as the socSource parameter</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MCPWM_SyncOutPulseMode</field>
    <field name="url">group__mcpwm__api.html#gafa3e001be20c36635e173513b8002b35</field>
    <field name="keywords">MCPWM_SyncOutPulseMode MCPWM_SyncOutPulseMode</field>
    <field name="text">Values that can be passed to MCPWM_setSyncOutPulseMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MCPWM_setFallingEdgeDelayCountShadow</field>
    <field name="args">(uint32_t base, uint16_t fedCount)</field>
    <field name="url">group__mcpwm__api.html#gafe3cbff4bcf86cdfb806fe57e2490631</field>
    <field name="keywords">MCPWM_setFallingEdgeDelayCountShadow MCPWM_setFallingEdgeDelayCountShadow</field>
    <field name="text">Set MCPWM FED count in shadow register base is the base address of the MCPWM module fedCount is the FED(Falling Edge Delay) count This function sets the FED Falling Edge Delay count value in the shadow register The value of fedCount should be less than 0 x4000U None</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_DB_POLARITY_ACTIVE_HIGH</field>
    <field name="url">group__mcpwm__api.html#gga024a5eda14531344554136881d263a88a76ed9f4f0077202623e8e82a386a355d</field>
    <field name="keywords">MCPWM_DB_POLARITY_ACTIVE_HIGH MCPWM_DB_POLARITY_ACTIVE_HIGH</field>
    <field name="text">DB polarity is not inverted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_DB_POLARITY_ACTIVE_LOW</field>
    <field name="url">group__mcpwm__api.html#gga024a5eda14531344554136881d263a88a8228aba5f63fc8cbc200f85656fdcdbe</field>
    <field name="keywords">MCPWM_DB_POLARITY_ACTIVE_LOW MCPWM_DB_POLARITY_ACTIVE_LOW</field>
    <field name="text">DB polarity is inverted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COMP_LOAD_FREEZE</field>
    <field name="url">group__mcpwm__api.html#gga25acba54c17d6011215204a8ec987f06a32dc9b04d7fb77647630641292e3627b</field>
    <field name="keywords">MCPWM_COMP_LOAD_FREEZE MCPWM_COMP_LOAD_FREEZE</field>
    <field name="text">Freeze shadow to active load</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COMP_LOAD_ON_CNTR_ZERO</field>
    <field name="url">group__mcpwm__api.html#gga25acba54c17d6011215204a8ec987f06a3d8e41ec2c2a4f71249e668a11568f3e</field>
    <field name="keywords">MCPWM_COMP_LOAD_ON_CNTR_ZERO MCPWM_COMP_LOAD_ON_CNTR_ZERO</field>
    <field name="text">Load when counter equals zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COMP_LOAD_ON_CNTR_ZERO_PERIOD</field>
    <field name="url">group__mcpwm__api.html#gga25acba54c17d6011215204a8ec987f06a8e63e94016339293b18f62e06017ef41</field>
    <field name="keywords">MCPWM_COMP_LOAD_ON_CNTR_ZERO_PERIOD MCPWM_COMP_LOAD_ON_CNTR_ZERO_PERIOD</field>
    <field name="text">Load when counter equals zero or period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COMP_LOAD_ON_CNTR_PERIOD</field>
    <field name="url">group__mcpwm__api.html#gga25acba54c17d6011215204a8ec987f06a9ac5ee3ae49aa7724c9f70a87089851b</field>
    <field name="keywords">MCPWM_COMP_LOAD_ON_CNTR_PERIOD MCPWM_COMP_LOAD_ON_CNTR_PERIOD</field>
    <field name="text">Load when counter equals period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_8</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a156153b4624d10b45cb65a2b3046bf8c</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_8 MCPWM_CLOCK_DIVIDER_8</field>
    <field name="text">Divide clock by 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_16</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a1f63f9ff384ba45fc70ba983fdc0ec3a</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_16 MCPWM_CLOCK_DIVIDER_16</field>
    <field name="text">Divide clock by 1 6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_4</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a2caf92133c28eda478d7825625bc0dc9</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_4 MCPWM_CLOCK_DIVIDER_4</field>
    <field name="text">Divide clock by 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_1024</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a2e979bb3d7fd556c38e450195c87446d</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_1024 MCPWM_CLOCK_DIVIDER_1024</field>
    <field name="text">Divide clock by 1 0 2 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_128</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a3071a460e877538b15080ffb632857ee</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_128 MCPWM_CLOCK_DIVIDER_128</field>
    <field name="text">Divide clock by 1 2 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_16384</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a4b0a2a92f9e2a10fdaa8277e17ef37d7</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_16384 MCPWM_CLOCK_DIVIDER_16384</field>
    <field name="text">Divide clock by 1 6 3 8 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_64</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a5b3ec37f6bb30ed13caa1f99c373020d</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_64 MCPWM_CLOCK_DIVIDER_64</field>
    <field name="text">Divide clock by 6 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_32768</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a5c42f3670941f8b07c2b63197c1b114c</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_32768 MCPWM_CLOCK_DIVIDER_32768</field>
    <field name="text">Divide clock by 3 2 7 6 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_4096</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a61254bfe686c79037cebcfa42a4e7312</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_4096 MCPWM_CLOCK_DIVIDER_4096</field>
    <field name="text">Divide clock by 4 0 9 6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_2048</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a6d755288104ba12351562e85dd4533b5</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_2048 MCPWM_CLOCK_DIVIDER_2048</field>
    <field name="text">Divide clock by 2 0 4 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_8192</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a7ea85408ab36524aba0aaf8f423f25f8</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_8192 MCPWM_CLOCK_DIVIDER_8192</field>
    <field name="text">Divide clock by 8 1 9 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_32</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a84349593c1bf561bda1f2c8d80233ea3</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_32 MCPWM_CLOCK_DIVIDER_32</field>
    <field name="text">Divide clock by 3 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_512</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24a9dae9e61693a9d9e1448f7e73cbf48e9</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_512 MCPWM_CLOCK_DIVIDER_512</field>
    <field name="text">Divide clock by 5 1 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_1</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24acceaa44bf3d463f57f7036556ce38adc</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_1 MCPWM_CLOCK_DIVIDER_1</field>
    <field name="text">Divide clock by 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_2</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24ae2e77013fdc97719825f454a7312f9b7</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_2 MCPWM_CLOCK_DIVIDER_2</field>
    <field name="text">Divide clock by 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_CLOCK_DIVIDER_256</field>
    <field name="url">group__mcpwm__api.html#gga2c71ec7170a9b17b271db2229fffdc24af0ed388b02ae158216cae90f1deba0b9</field>
    <field name="keywords">MCPWM_CLOCK_DIVIDER_256 MCPWM_CLOCK_DIVIDER_256</field>
    <field name="text">Divide clock by 2 5 6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_ET_2</field>
    <field name="url">group__mcpwm__api.html#gga35951e85c7073611d882f81f4cf7be3aa766d23959a69cbb816ca00b8e4990e44</field>
    <field name="keywords">MCPWM_ET_2 MCPWM_ET_2</field>
    <field name="text">EVT 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_ET_1</field>
    <field name="url">group__mcpwm__api.html#gga35951e85c7073611d882f81f4cf7be3aaaeaa6698c838bfb765480a2a242d6981</field>
    <field name="keywords">MCPWM_ET_1 MCPWM_ET_1</field>
    <field name="text">EVT 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EMULATION_STOP_AFTER_NEXT_TB</field>
    <field name="url">group__mcpwm__api.html#gga41da4acf9b49f75527ca850a2038fb1ca792f41da6dbc1fc9d74c842c0737e835</field>
    <field name="keywords">MCPWM_EMULATION_STOP_AFTER_NEXT_TB MCPWM_EMULATION_STOP_AFTER_NEXT_TB</field>
    <field name="text">Stop after next Time Base counter increment or decrement</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EMULATION_FREE_RUN</field>
    <field name="url">group__mcpwm__api.html#gga41da4acf9b49f75527ca850a2038fb1ca923cb24c9f10c2f272eab56ea5fbccb7</field>
    <field name="keywords">MCPWM_EMULATION_FREE_RUN MCPWM_EMULATION_FREE_RUN</field>
    <field name="text">Free run</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EMULATION_STOP_AFTER_FULL_CYCLE</field>
    <field name="url">group__mcpwm__api.html#gga41da4acf9b49f75527ca850a2038fb1cab10942c6e7c059b2e7619a8a3cb20d4b</field>
    <field name="keywords">MCPWM_EMULATION_STOP_AFTER_FULL_CYCLE MCPWM_EMULATION_STOP_AFTER_FULL_CYCLE</field>
    <field name="text">Stop when counter completes whole cycle</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_LOAD_ON_CNTR_ZERO_PERIOD</field>
    <field name="url">group__mcpwm__api.html#gga445749ee6923d711eeaa638fa86ab84ba275e0e36b5fa1c223ddd54d805829657</field>
    <field name="keywords">MCPWM_AQ_LOAD_ON_CNTR_ZERO_PERIOD MCPWM_AQ_LOAD_ON_CNTR_ZERO_PERIOD</field>
    <field name="text">Load when counter equals zero or period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_LOAD_ON_CNTR_PERIOD</field>
    <field name="url">group__mcpwm__api.html#gga445749ee6923d711eeaa638fa86ab84ba3cc49d0ff1f20e4dd4750c3fcb303eb6</field>
    <field name="keywords">MCPWM_AQ_LOAD_ON_CNTR_PERIOD MCPWM_AQ_LOAD_ON_CNTR_PERIOD</field>
    <field name="text">Load when counter equals period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_LOAD_FREEZE</field>
    <field name="url">group__mcpwm__api.html#gga445749ee6923d711eeaa638fa86ab84babe5d2d38b4f8458d7fbd55acf7e5cb97</field>
    <field name="keywords">MCPWM_AQ_LOAD_FREEZE MCPWM_AQ_LOAD_FREEZE</field>
    <field name="text">Freeze shadow to active load</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_LOAD_ON_CNTR_ZERO</field>
    <field name="url">group__mcpwm__api.html#gga445749ee6923d711eeaa638fa86ab84baf55115ebc76bc6484023ac368e7f3450</field>
    <field name="keywords">MCPWM_AQ_LOAD_ON_CNTR_ZERO MCPWM_AQ_LOAD_ON_CNTR_ZERO</field>
    <field name="text">Load when counter equals zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_DB_OUTPUT_B</field>
    <field name="url">group__mcpwm__api.html#gga504724f0d46bebb435925f316b73fd38a806f9e868d403063fefee0a7dbf16233</field>
    <field name="keywords">MCPWM_DB_OUTPUT_B MCPWM_DB_OUTPUT_B</field>
    <field name="text">DB output is MCPWMB</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_DB_OUTPUT_A</field>
    <field name="url">group__mcpwm__api.html#gga504724f0d46bebb435925f316b73fd38ad0c7dfc66f92a817ac8ab5d0a0d84f7d</field>
    <field name="keywords">MCPWM_DB_OUTPUT_A MCPWM_DB_OUTPUT_A</field>
    <field name="text">DB output is MCPWMA</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNT_MODE_DOWN_AFTER_SYNC</field>
    <field name="url">group__mcpwm__api.html#gga53e0f5fc8e7d0126e41abbf199aea067a24356b3c08f83c0e90b6eedfc641e299</field>
    <field name="keywords">MCPWM_COUNT_MODE_DOWN_AFTER_SYNC MCPWM_COUNT_MODE_DOWN_AFTER_SYNC</field>
    <field name="text">Count down after sync event</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNT_MODE_UP_AFTER_SYNC</field>
    <field name="url">group__mcpwm__api.html#gga53e0f5fc8e7d0126e41abbf199aea067adafb153bd73edb702ef783e8661a0ab6</field>
    <field name="keywords">MCPWM_COUNT_MODE_UP_AFTER_SYNC MCPWM_COUNT_MODE_UP_AFTER_SYNC</field>
    <field name="text">Count up after sync event</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_1A</field>
    <field name="url">group__mcpwm__api.html#gga6222a286bdb61e9e6c4e1c7f892d16bda0b13f989eb51bec1c82c7e3cbe47ebaf</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_1A MCPWM_AQ_OUTPUT_1A</field>
    <field name="text">MCPWMx1A output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_3A</field>
    <field name="url">group__mcpwm__api.html#gga6222a286bdb61e9e6c4e1c7f892d16bda137a57493f8634a22fa943b0362e6f60</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_3A MCPWM_AQ_OUTPUT_3A</field>
    <field name="text">MCPWMx3A output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_1B</field>
    <field name="url">group__mcpwm__api.html#gga6222a286bdb61e9e6c4e1c7f892d16bda616be9ee55f2737462cee72786040b40</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_1B MCPWM_AQ_OUTPUT_1B</field>
    <field name="text">MCPWMx1B output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_3B</field>
    <field name="url">group__mcpwm__api.html#gga6222a286bdb61e9e6c4e1c7f892d16bda9a6fb04a728816e2547f66b1cc9f01b0</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_3B MCPWM_AQ_OUTPUT_3B</field>
    <field name="text">MCPWMx3B output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_2A</field>
    <field name="url">group__mcpwm__api.html#gga6222a286bdb61e9e6c4e1c7f892d16bdac80cb5d77cbfc3426d7016b899a96562</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_2A MCPWM_AQ_OUTPUT_2A</field>
    <field name="text">MCPWMx2A output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_2B</field>
    <field name="url">group__mcpwm__api.html#gga6222a286bdb61e9e6c4e1c7f892d16bdaf355da09fed4927827763eb7eefa726e</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_2B MCPWM_AQ_OUTPUT_2B</field>
    <field name="text">MCPWMx2B output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_D</field>
    <field name="url">group__mcpwm__api.html#gga71166afcbf4d8333a8ee528f8f14fbafa074f0c2260d102af76846c1b561ece05</field>
    <field name="keywords">MCPWM_SOC_D MCPWM_SOC_D</field>
    <field name="text">SOC D</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_B</field>
    <field name="url">group__mcpwm__api.html#gga71166afcbf4d8333a8ee528f8f14fbafa9bc169f08d0c4eb3a687ba94395778e7</field>
    <field name="keywords">MCPWM_SOC_B MCPWM_SOC_B</field>
    <field name="text">SOC B</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_C</field>
    <field name="url">group__mcpwm__api.html#gga71166afcbf4d8333a8ee528f8f14fbafaace49b443572d85c6bdc939ea3bd687a</field>
    <field name="keywords">MCPWM_SOC_C MCPWM_SOC_C</field>
    <field name="text">SOC C</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_A</field>
    <field name="url">group__mcpwm__api.html#gga71166afcbf4d8333a8ee528f8f14fbafae8649a65163139e4de4731ddc957dc3e</field>
    <field name="keywords">MCPWM_SOC_A MCPWM_SOC_A</field>
    <field name="text">SOC A</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_PERIOD_SHADOW_LOAD_ENABLE</field>
    <field name="url">group__mcpwm__api.html#gga727a28b937de74f0626dc93a441245f8a1a257070c0fedd267db97edfdc5ce614</field>
    <field name="keywords">MCPWM_PERIOD_SHADOW_LOAD_ENABLE MCPWM_PERIOD_SHADOW_LOAD_ENABLE</field>
    <field name="text">PWM Active Period register loads from Shadow register at TBCTR 0 event</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_PERIOD_SHADOW_LOAD_DISABLE</field>
    <field name="url">group__mcpwm__api.html#gga727a28b937de74f0626dc93a441245f8a58fe1cf3bd69d529e0805a1276b82c81</field>
    <field name="keywords">MCPWM_PERIOD_SHADOW_LOAD_DISABLE MCPWM_PERIOD_SHADOW_LOAD_DISABLE</field>
    <field name="text">PWM Period register load from Shadow register is disabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_RED_LOAD_FREEZE</field>
    <field name="url">group__mcpwm__api.html#gga72b3567f9ec22b3380138ef7002ce0f2a11225c1f7f4a94ce7c37163abaef4aaf</field>
    <field name="keywords">MCPWM_RED_LOAD_FREEZE MCPWM_RED_LOAD_FREEZE</field>
    <field name="text">Freeze shadow to active load</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_RED_LOAD_ON_CNTR_ZERO_PERIOD</field>
    <field name="url">group__mcpwm__api.html#gga72b3567f9ec22b3380138ef7002ce0f2a2e57c7b305485b46e74806636aeac27a</field>
    <field name="keywords">MCPWM_RED_LOAD_ON_CNTR_ZERO_PERIOD MCPWM_RED_LOAD_ON_CNTR_ZERO_PERIOD</field>
    <field name="text">Load when counter equals zero or period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_RED_LOAD_ON_CNTR_ZERO</field>
    <field name="url">group__mcpwm__api.html#gga72b3567f9ec22b3380138ef7002ce0f2a50248191766c51778a38a0302b324c6a</field>
    <field name="keywords">MCPWM_RED_LOAD_ON_CNTR_ZERO MCPWM_RED_LOAD_ON_CNTR_ZERO</field>
    <field name="text">Load when counter equals zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_RED_LOAD_ON_CNTR_PERIOD</field>
    <field name="url">group__mcpwm__api.html#gga72b3567f9ec22b3380138ef7002ce0f2ada17ebc09550271df3b153dd66dffc3d</field>
    <field name="keywords">MCPWM_RED_LOAD_ON_CNTR_PERIOD MCPWM_RED_LOAD_ON_CNTR_PERIOD</field>
    <field name="text">Load when counter equals period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_ON_TIMEBASE_PERIOD</field>
    <field name="url">group__mcpwm__api.html#gga79b807b59bba40147f977710b4ce5d26a1a8e32cfecd886e8a99956f7e83580ed</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_ON_TIMEBASE_PERIOD MCPWM_AQ_OUTPUT_ON_TIMEBASE_PERIOD</field>
    <field name="text">Time base counter equals period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPA</field>
    <field name="url">group__mcpwm__api.html#gga79b807b59bba40147f977710b4ce5d26a24235d689dbf8121a2b54337cce43354</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPA MCPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPA</field>
    <field name="text">Time base counter up equals CMPA</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPB</field>
    <field name="url">group__mcpwm__api.html#gga79b807b59bba40147f977710b4ce5d26a86717084953788f323fbff23d4a3b6e5</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPB MCPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPB</field>
    <field name="text">Time base counter up equals CMPB</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_ON_TIMEBASE_ZERO</field>
    <field name="url">group__mcpwm__api.html#gga79b807b59bba40147f977710b4ce5d26a96c173123f29cee6d0cda809390d162c</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_ON_TIMEBASE_ZERO MCPWM_AQ_OUTPUT_ON_TIMEBASE_ZERO</field>
    <field name="text">Time base counter equals zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPA</field>
    <field name="url">group__mcpwm__api.html#gga79b807b59bba40147f977710b4ce5d26ad49627f721143e8de5d42a98b57b5194</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPA MCPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPA</field>
    <field name="text">Time base counter down equals CMPA</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPB</field>
    <field name="url">group__mcpwm__api.html#gga79b807b59bba40147f977710b4ce5d26af251634c4d8483316d59b92bf64b5463</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPB MCPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPB</field>
    <field name="text">Time base counter down equals CMPB</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNTER_COMPARE_C</field>
    <field name="url">group__mcpwm__api.html#gga8542e1b7278ec549f839948a80373c7ca64bd561ebf9587277b057b4918e149cc</field>
    <field name="keywords">MCPWM_COUNTER_COMPARE_C MCPWM_COUNTER_COMPARE_C</field>
    <field name="text">Counter compare C</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNTER_COMPARE_1B</field>
    <field name="url">group__mcpwm__api.html#gga8542e1b7278ec549f839948a80373c7ca6d46034292d1dec1283a3c27c526d57f</field>
    <field name="keywords">MCPWM_COUNTER_COMPARE_1B MCPWM_COUNTER_COMPARE_1B</field>
    <field name="text">Counter compare 1 B</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNTER_COMPARE_2B</field>
    <field name="url">group__mcpwm__api.html#gga8542e1b7278ec549f839948a80373c7ca91a04b4b449b514f53adcb812767c76f</field>
    <field name="keywords">MCPWM_COUNTER_COMPARE_2B MCPWM_COUNTER_COMPARE_2B</field>
    <field name="text">Counter compare 2 B</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNTER_COMPARE_3B</field>
    <field name="url">group__mcpwm__api.html#gga8542e1b7278ec549f839948a80373c7ca921c723525154a9bd16f73ac72b62f2e</field>
    <field name="keywords">MCPWM_COUNTER_COMPARE_3B MCPWM_COUNTER_COMPARE_3B</field>
    <field name="text">Counter compare 3 B</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNTER_COMPARE_1A</field>
    <field name="url">group__mcpwm__api.html#gga8542e1b7278ec549f839948a80373c7caa6af5e6d645f440118e2d8f9b6bb9174</field>
    <field name="keywords">MCPWM_COUNTER_COMPARE_1A MCPWM_COUNTER_COMPARE_1A</field>
    <field name="text">Counter compare 1 A</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNTER_COMPARE_2A</field>
    <field name="url">group__mcpwm__api.html#gga8542e1b7278ec549f839948a80373c7caa8425922f99fd6983635cf3bc6082a89</field>
    <field name="keywords">MCPWM_COUNTER_COMPARE_2A MCPWM_COUNTER_COMPARE_2A</field>
    <field name="text">Counter compare 2 A</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNTER_COMPARE_D</field>
    <field name="url">group__mcpwm__api.html#gga8542e1b7278ec549f839948a80373c7cab98762658d117811cbdd11b459741b10</field>
    <field name="keywords">MCPWM_COUNTER_COMPARE_D MCPWM_COUNTER_COMPARE_D</field>
    <field name="text">Counter compare D</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNTER_COMPARE_3A</field>
    <field name="url">group__mcpwm__api.html#gga8542e1b7278ec549f839948a80373c7caf0f7684f009fe2e623e2f1c90afc2648</field>
    <field name="keywords">MCPWM_COUNTER_COMPARE_3A MCPWM_COUNTER_COMPARE_3A</field>
    <field name="text">Counter compare 3 A</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_GL_LOAD_PULSE_CNTR_ZERO_PERIOD</field>
    <field name="url">group__mcpwm__api.html#gga9bdeceacddd5448ab6f9ad3f7a0427c9a46f356df1b413fa5af302f89502b688d</field>
    <field name="keywords">MCPWM_GL_LOAD_PULSE_CNTR_ZERO_PERIOD MCPWM_GL_LOAD_PULSE_CNTR_ZERO_PERIOD</field>
    <field name="text">Load when counter is equal to zero or period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_GL_LOAD_PULSE_GLOBAL_FORCE</field>
    <field name="url">group__mcpwm__api.html#gga9bdeceacddd5448ab6f9ad3f7a0427c9a5f448a28b291f8a3145b430e254f715d</field>
    <field name="keywords">MCPWM_GL_LOAD_PULSE_GLOBAL_FORCE MCPWM_GL_LOAD_PULSE_GLOBAL_FORCE</field>
    <field name="text">Load on global force</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_GL_LOAD_PULSE_CNTR_PERIOD</field>
    <field name="url">group__mcpwm__api.html#gga9bdeceacddd5448ab6f9ad3f7a0427c9aab3c7aa4b2d348403ae9481cb78c1c05</field>
    <field name="keywords">MCPWM_GL_LOAD_PULSE_CNTR_PERIOD MCPWM_GL_LOAD_PULSE_CNTR_PERIOD</field>
    <field name="text">Load when counter is equal to period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_GL_LOAD_PULSE_CNTR_ZERO</field>
    <field name="url">group__mcpwm__api.html#gga9bdeceacddd5448ab6f9ad3f7a0427c9abfcbbbd26c61606099036cebc950b02a</field>
    <field name="keywords">MCPWM_GL_LOAD_PULSE_CNTR_ZERO MCPWM_GL_LOAD_PULSE_CNTR_ZERO</field>
    <field name="text">Load when counter is equal to zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNCPERSEL_SOURCE_CMPC_UP</field>
    <field name="url">group__mcpwm__api.html#ggaa1ce0e54c7f53a6da4e1257ab7751580a0ad0c9fb074cd4a166b7e98448f256fc</field>
    <field name="keywords">MCPWM_SYNCPERSEL_SOURCE_CMPC_UP MCPWM_SYNCPERSEL_SOURCE_CMPC_UP</field>
    <field name="text">Sync Peripheral Signal Pulse is generated when time base counter equals compare C value while counting up</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNCPERSEL_SOURCE_CMPD_UP</field>
    <field name="url">group__mcpwm__api.html#ggaa1ce0e54c7f53a6da4e1257ab7751580a82d915df9e6af6cd0e37f7eb3c8d63cf</field>
    <field name="keywords">MCPWM_SYNCPERSEL_SOURCE_CMPD_UP MCPWM_SYNCPERSEL_SOURCE_CMPD_UP</field>
    <field name="text">Sync Peripheral Signal Pulse is generated when time base counter equals compare D value while counting up</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNCPERSEL_SOURCE_ZERO</field>
    <field name="url">group__mcpwm__api.html#ggaa1ce0e54c7f53a6da4e1257ab7751580a8cae4bc362ac76fee01fecadce1bcb32</field>
    <field name="keywords">MCPWM_SYNCPERSEL_SOURCE_ZERO MCPWM_SYNCPERSEL_SOURCE_ZERO</field>
    <field name="text">Sync Peripheral Signal Pulse is generated when time base counter equals zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNCPERSEL_SOURCE_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggaa1ce0e54c7f53a6da4e1257ab7751580ad09113b612660d254e944888c8a7d190</field>
    <field name="keywords">MCPWM_SYNCPERSEL_SOURCE_PERIOD MCPWM_SYNCPERSEL_SOURCE_PERIOD</field>
    <field name="text">Sync Peripheral Signal Pulse is generated when time base counter equals Period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNCPERSEL_SOURCE_CMPD_DOWN</field>
    <field name="url">group__mcpwm__api.html#ggaa1ce0e54c7f53a6da4e1257ab7751580adf9349183544e038a935f6f6bd72b64b</field>
    <field name="keywords">MCPWM_SYNCPERSEL_SOURCE_CMPD_DOWN MCPWM_SYNCPERSEL_SOURCE_CMPD_DOWN</field>
    <field name="text">Sync Peripheral Signal Pulse is generated when time base counter equals compare D value while counting down</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNC_PULSE_DISABLED</field>
    <field name="url">group__mcpwm__api.html#ggaa1ce0e54c7f53a6da4e1257ab7751580af32fedac3253305df35176d5c4668e02</field>
    <field name="keywords">MCPWM_SYNC_PULSE_DISABLED MCPWM_SYNC_PULSE_DISABLED</field>
    <field name="text">Sync Peripheral Signal Pulse is disabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNCPERSEL_SOURCE_CMPC_DOWN</field>
    <field name="url">group__mcpwm__api.html#ggaa1ce0e54c7f53a6da4e1257ab7751580af4f3539280279c6d2497f76bc90556f4</field>
    <field name="keywords">MCPWM_SYNCPERSEL_SOURCE_CMPC_DOWN MCPWM_SYNCPERSEL_SOURCE_CMPC_DOWN</field>
    <field name="text">Sync Peripheral Signal Pulse is generated when time base counter equals compare C value while counting down</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_ACTION_QUALIFIER_2A</field>
    <field name="url">group__mcpwm__api.html#ggaa543b5fd4207c623601c760e1cbd363ba2434df245cceec6f191069f5ed71f94b</field>
    <field name="keywords">MCPWM_ACTION_QUALIFIER_2A MCPWM_ACTION_QUALIFIER_2A</field>
    <field name="text">Action Qualifier A</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_ACTION_QUALIFIER_1A</field>
    <field name="url">group__mcpwm__api.html#ggaa543b5fd4207c623601c760e1cbd363ba4f240581cc12c4314ab1ea95cd9b3dce</field>
    <field name="keywords">MCPWM_ACTION_QUALIFIER_1A MCPWM_ACTION_QUALIFIER_1A</field>
    <field name="text">Action Qualifier A</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_ACTION_QUALIFIER_1B</field>
    <field name="url">group__mcpwm__api.html#ggaa543b5fd4207c623601c760e1cbd363ba73e2feebc7844d3bdf777cfc829bf867</field>
    <field name="keywords">MCPWM_ACTION_QUALIFIER_1B MCPWM_ACTION_QUALIFIER_1B</field>
    <field name="text">Action Qualifier B</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_ACTION_QUALIFIER_2B</field>
    <field name="url">group__mcpwm__api.html#ggaa543b5fd4207c623601c760e1cbd363ba7575a2486d65a16300cf5088e350b57a</field>
    <field name="keywords">MCPWM_ACTION_QUALIFIER_2B MCPWM_ACTION_QUALIFIER_2B</field>
    <field name="text">Action Qualifier B</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_ACTION_QUALIFIER_3B</field>
    <field name="url">group__mcpwm__api.html#ggaa543b5fd4207c623601c760e1cbd363bab2a21edd599892519f9d415b7a2a262c</field>
    <field name="keywords">MCPWM_ACTION_QUALIFIER_3B MCPWM_ACTION_QUALIFIER_3B</field>
    <field name="text">Action Qualifier B</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_ACTION_QUALIFIER_3A</field>
    <field name="url">group__mcpwm__api.html#ggaa543b5fd4207c623601c760e1cbd363bae225fe24401c5042738be213dee147a9</field>
    <field name="keywords">MCPWM_ACTION_QUALIFIER_3A MCPWM_ACTION_QUALIFIER_3A</field>
    <field name="text">Action Qualifier A</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_DB_RED</field>
    <field name="url">group__mcpwm__api.html#ggaa79fdd9cd682dc9b1706890a70ca99e8a2cadd1151536b48eda015a42278d20ac</field>
    <field name="keywords">MCPWM_DB_RED MCPWM_DB_RED</field>
    <field name="text">DB RED Rising Edge Delay mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_DB_FED</field>
    <field name="url">group__mcpwm__api.html#ggaa79fdd9cd682dc9b1706890a70ca99e8ad9c4d230d1d0e1014588ff94ae074397</field>
    <field name="keywords">MCPWM_DB_FED MCPWM_DB_FED</field>
    <field name="text">DB FED Falling Edge Delay mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT6</field>
    <field name="url">group__mcpwm__api.html#ggaa92a0e27b775005188d820cf5751ca83a55ec1f31a9ffedaba1fb161e16ad1ee5</field>
    <field name="keywords">MCPWM_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT6 MCPWM_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT6</field>
    <field name="text">Sync-in source is Input XBAR out5 signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM1</field>
    <field name="url">group__mcpwm__api.html#ggaa92a0e27b775005188d820cf5751ca83a7caf937350aee99ae91efa186b98f51b</field>
    <field name="keywords">MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM1 MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM1</field>
    <field name="text">Sync-in source is ECAP1 sync-out signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_ECAP1</field>
    <field name="url">group__mcpwm__api.html#ggaa92a0e27b775005188d820cf5751ca83a7cfa000ffa01da18f915044d2eadcd1c</field>
    <field name="keywords">MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_ECAP1 MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_ECAP1</field>
    <field name="text">Sync-in source is Input XBAR out6 signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNC_IN_PULSE_SRC_DISABLE</field>
    <field name="url">group__mcpwm__api.html#ggaa92a0e27b775005188d820cf5751ca83aa8d74b2e8e17f30d6d7f509c32c39c0d</field>
    <field name="keywords">MCPWM_SYNC_IN_PULSE_SRC_DISABLE MCPWM_SYNC_IN_PULSE_SRC_DISABLE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM3</field>
    <field name="url">group__mcpwm__api.html#ggaa92a0e27b775005188d820cf5751ca83ab677326c7b1a7f3abc5a8d70ae724bb9</field>
    <field name="keywords">MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM3 MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM3</field>
    <field name="text">Sync-in source is MCPWM1 sync-out signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT5</field>
    <field name="url">group__mcpwm__api.html#ggaa92a0e27b775005188d820cf5751ca83ae26fdaba6800e760f1e2a6aa39343209</field>
    <field name="keywords">MCPWM_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT5 MCPWM_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT5</field>
    <field name="text">Disable Sync-in</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_TZ_ACTION_EVENT_TZB</field>
    <field name="url">group__mcpwm__api.html#ggab21f3d0ec6d87212a0cddf21778a5227a2f5f6c2dd7521e859df6ff7d38c92920</field>
    <field name="keywords">MCPWM_TZ_ACTION_EVENT_TZB MCPWM_TZ_ACTION_EVENT_TZB</field>
    <field name="text">TZ1 TZ8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_TZ_ACTION_EVENT_TZA</field>
    <field name="url">group__mcpwm__api.html#ggab21f3d0ec6d87212a0cddf21778a5227a7dc411d824124a779bd84cbdf844b6cb</field>
    <field name="keywords">MCPWM_TZ_ACTION_EVENT_TZA MCPWM_TZ_ACTION_EVENT_TZA</field>
    <field name="text">TZ1 TZ8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_LOW_UP_CMPB</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea013202e0092ec3bf5911c331396fc413</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_LOW_UP_CMPB MCPWM_AQ_OUTPUT_LOW_UP_CMPB</field>
    <field name="text">Time base counter up equals CMPB and set output pins to low</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_NO_CHANGE_DOWN_CMPA</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea03175dd750a872fa0d0f054f29126b2e</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_NO_CHANGE_DOWN_CMPA MCPWM_AQ_OUTPUT_NO_CHANGE_DOWN_CMPA</field>
    <field name="text">Time base counter down equals CMPA and no change in the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_LOW_DOWN_CMPA</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea1bf6463956577cbc4f93db3675efda2b</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_LOW_DOWN_CMPA MCPWM_AQ_OUTPUT_LOW_DOWN_CMPA</field>
    <field name="text">Time base counter down equals CMPA and set output pins to low</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_HIGH_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea295f8667e699b0e83cb5094d93d00c92</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_HIGH_PERIOD MCPWM_AQ_OUTPUT_HIGH_PERIOD</field>
    <field name="text">Time base counter equals period and set output pins to high</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_TOGGLE_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea33c0a951dd62d8ee108c41f040a55f72</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_TOGGLE_PERIOD MCPWM_AQ_OUTPUT_TOGGLE_PERIOD</field>
    <field name="text">Time base counter equals period and toggle the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_NO_CHANGE_ZERO</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea3f61d02c77d66d4851bcd7ffab94852d</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_NO_CHANGE_ZERO MCPWM_AQ_OUTPUT_NO_CHANGE_ZERO</field>
    <field name="text">Time base counter equals zero and no change in the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_LOW_UP_CMPA</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea42c834704cf7958d6e016c2f1e86c19c</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_LOW_UP_CMPA MCPWM_AQ_OUTPUT_LOW_UP_CMPA</field>
    <field name="text">Time base counter up equals CMPA and set output pins to low</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_TOGGLE_DOWN_CMPA</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea442ab69357121b5f9afef5fb599a80e4</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_TOGGLE_DOWN_CMPA MCPWM_AQ_OUTPUT_TOGGLE_DOWN_CMPA</field>
    <field name="text">Time base counter down equals CMPA and toggle the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_NO_CHANGE_DOWN_CMPB</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea4555e3310ea53def4e94a2ef82cd0327</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_NO_CHANGE_DOWN_CMPB MCPWM_AQ_OUTPUT_NO_CHANGE_DOWN_CMPB</field>
    <field name="text">Time base counter down equals CMPB and no change in the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_NO_CHANGE_UP_CMPA</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea49990057e0a94cdaae301c62cd49603a</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_NO_CHANGE_UP_CMPA MCPWM_AQ_OUTPUT_NO_CHANGE_UP_CMPA</field>
    <field name="text">Time base counter up equals CMPA and no change in the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_LOW_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea6c659a7d7c0535365a950c32dc79a1cb</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_LOW_PERIOD MCPWM_AQ_OUTPUT_LOW_PERIOD</field>
    <field name="text">Time base counter equals period and set output pins to low</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_TOGGLE_UP_CMPB</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea6e89dcca8c5266b7833903d0e4345fed</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_TOGGLE_UP_CMPB MCPWM_AQ_OUTPUT_TOGGLE_UP_CMPB</field>
    <field name="text">Time base counter up equals CMPB and toggle the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_NO_CHANGE_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea700345c5f09f6f23513305f6386571c4</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_NO_CHANGE_PERIOD MCPWM_AQ_OUTPUT_NO_CHANGE_PERIOD</field>
    <field name="text">Time base counter equals period and no change in the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_LOW_DOWN_CMPB</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea770fe5c32ca732ef335f9db61787e95b</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_LOW_DOWN_CMPB MCPWM_AQ_OUTPUT_LOW_DOWN_CMPB</field>
    <field name="text">Time base counter down equals CMPB and set output pins to low</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_HIGH_DOWN_CMPA</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea7ebc4db703107a6781407534cdf00ac5</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_HIGH_DOWN_CMPA MCPWM_AQ_OUTPUT_HIGH_DOWN_CMPA</field>
    <field name="text">Time base counter down equals CMPA and set output pins to high</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_HIGH_UP_CMPB</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea8af1fb867fd661169275127d9c555e87</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_HIGH_UP_CMPB MCPWM_AQ_OUTPUT_HIGH_UP_CMPB</field>
    <field name="text">Time base counter up equals CMPB and set output pins to high</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_TOGGLE_UP_CMPA</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea8f355286bfdb750042452a08a89781d3</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_TOGGLE_UP_CMPA MCPWM_AQ_OUTPUT_TOGGLE_UP_CMPA</field>
    <field name="text">Time base counter up equals CMPA and toggle the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_HIGH_ZERO</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378dea9b334ddf752758ba6474eedac611288b</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_HIGH_ZERO MCPWM_AQ_OUTPUT_HIGH_ZERO</field>
    <field name="text">Time base counter equals zero and set output pins to high</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_HIGH_UP_CMPA</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378deacbe4e5faea35a873fda4cd16a7abbf99</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_HIGH_UP_CMPA MCPWM_AQ_OUTPUT_HIGH_UP_CMPA</field>
    <field name="text">Time base counter up equals CMPA and set output pins to high</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_TOGGLE_ZERO</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378deadbe1f04065f4e2d3d73ba45ddec0d867</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_TOGGLE_ZERO MCPWM_AQ_OUTPUT_TOGGLE_ZERO</field>
    <field name="text">Time base counter equals zero and toggle the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_NO_CHANGE_UP_CMPB</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378deaebe6ab09aa0b6e2aeddae0d0dbff37a5</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_NO_CHANGE_UP_CMPB MCPWM_AQ_OUTPUT_NO_CHANGE_UP_CMPB</field>
    <field name="text">Time base counter up equals CMPB and no change in the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_LOW_ZERO</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378deaecde7fd2d3e9cb0920bbd8c9673c9518</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_LOW_ZERO MCPWM_AQ_OUTPUT_LOW_ZERO</field>
    <field name="text">Time base counter equals zero and set output pins to low</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_HIGH_DOWN_CMPB</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378deaf843b18d973ecf5bcb6fe3df16b8054c</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_HIGH_DOWN_CMPB MCPWM_AQ_OUTPUT_HIGH_DOWN_CMPB</field>
    <field name="text">Time base counter down equals CMPB and set output pins to high</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_TOGGLE_DOWN_CMPB</field>
    <field name="url">group__mcpwm__api.html#ggab8b5bc354774ca3ebed0473c24f378deafc3d9512626c5a2fcb3d094b51c51ae9</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_TOGGLE_DOWN_CMPB MCPWM_AQ_OUTPUT_TOGGLE_DOWN_CMPB</field>
    <field name="text">Time base counter down equals CMPB and toggle the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_FED_LOAD_FREEZE</field>
    <field name="url">group__mcpwm__api.html#ggabc47274ca01462062d86b38a37289baaa16f9bd2554efefa75057670b65c47b2f</field>
    <field name="keywords">MCPWM_FED_LOAD_FREEZE MCPWM_FED_LOAD_FREEZE</field>
    <field name="text">Freeze shadow to active load</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_FED_LOAD_ON_CNTR_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggabc47274ca01462062d86b38a37289baaa48e6081bc2740bde397ed01e9db2cd00</field>
    <field name="keywords">MCPWM_FED_LOAD_ON_CNTR_PERIOD MCPWM_FED_LOAD_ON_CNTR_PERIOD</field>
    <field name="text">Load when counter equals period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_FED_LOAD_ON_CNTR_ZERO_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggabc47274ca01462062d86b38a37289baaaa9d70aa06f0d28800593302d0e42cdf0</field>
    <field name="keywords">MCPWM_FED_LOAD_ON_CNTR_ZERO_PERIOD MCPWM_FED_LOAD_ON_CNTR_ZERO_PERIOD</field>
    <field name="text">Load when counter equals zero or period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_FED_LOAD_ON_CNTR_ZERO</field>
    <field name="url">group__mcpwm__api.html#ggabc47274ca01462062d86b38a37289baaaef148865619271c7538573d29ebd3029</field>
    <field name="keywords">MCPWM_FED_LOAD_ON_CNTR_ZERO MCPWM_FED_LOAD_ON_CNTR_ZERO</field>
    <field name="text">Load when counter equals zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNTER_MODE_UP</field>
    <field name="url">group__mcpwm__api.html#ggac184f172844e12b972c5f65002584112a31225836c03b4c1292bc2e9c8952179f</field>
    <field name="keywords">MCPWM_COUNTER_MODE_UP MCPWM_COUNTER_MODE_UP</field>
    <field name="text">Up count mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNTER_MODE_STOP_FREEZE</field>
    <field name="url">group__mcpwm__api.html#ggac184f172844e12b972c5f65002584112a6a7a7b0577320c93cb169d087321289c</field>
    <field name="keywords">MCPWM_COUNTER_MODE_STOP_FREEZE MCPWM_COUNTER_MODE_STOP_FREEZE</field>
    <field name="text">Stop Freeze counter</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_COUNTER_MODE_UP_DOWN</field>
    <field name="url">group__mcpwm__api.html#ggac184f172844e12b972c5f65002584112ab99a95feee510d4389a5bcd49178c124</field>
    <field name="keywords">MCPWM_COUNTER_MODE_UP_DOWN MCPWM_COUNTER_MODE_UP_DOWN</field>
    <field name="text">Up down count mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_D_CMPC</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a1959922dc06d6966c752b89a8b745596</field>
    <field name="keywords">MCPWM_EVT_TBCTR_D_CMPC MCPWM_EVT_TBCTR_D_CMPC</field>
    <field name="text">Time-base counter equal to CMPC when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_U_CMP3B</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a259df901f30440ab4201d397c553295a</field>
    <field name="keywords">MCPWM_EVT_TBCTR_U_CMP3B MCPWM_EVT_TBCTR_U_CMP3B</field>
    <field name="text">Time-base counter equal to CMP3B when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_U_CMPD</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a26181b1a8db481a069c76a514f191665</field>
    <field name="keywords">MCPWM_EVT_TBCTR_U_CMPD MCPWM_EVT_TBCTR_U_CMPD</field>
    <field name="text">Time-base counter equal to CMPD when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_D_CMP2A</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a2afa3a80c094c4333c5c12615f053a3d</field>
    <field name="keywords">MCPWM_EVT_TBCTR_D_CMP2A MCPWM_EVT_TBCTR_D_CMP2A</field>
    <field name="text">Time-base counter equal to CMP2A when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_D_CMP2B</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a2ef58da522e164b07b86da738a797ffe</field>
    <field name="keywords">MCPWM_EVT_TBCTR_D_CMP2B MCPWM_EVT_TBCTR_D_CMP2B</field>
    <field name="text">Time-base counter equal to CMP2B when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_D_CMP3A</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a46f3d3c7da62c1fe204bb3779067eaed</field>
    <field name="keywords">MCPWM_EVT_TBCTR_D_CMP3A MCPWM_EVT_TBCTR_D_CMP3A</field>
    <field name="text">Time-base counter equal to CMP3A when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_U_CMP3A</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a493474468686c7b7e29155c8b6f92bea</field>
    <field name="keywords">MCPWM_EVT_TBCTR_U_CMP3A MCPWM_EVT_TBCTR_U_CMP3A</field>
    <field name="text">Time-base counter equal to CMP3A when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_U_CMPC</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a50920b5513c975bf6e76bccf2f8d4cf2</field>
    <field name="keywords">MCPWM_EVT_TBCTR_U_CMPC MCPWM_EVT_TBCTR_U_CMPC</field>
    <field name="text">Time-base counter equal to CMPC when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_U_CMP1B</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a519b81e6bba4ef563143d3b8ea13ab0a</field>
    <field name="keywords">MCPWM_EVT_TBCTR_U_CMP1B MCPWM_EVT_TBCTR_U_CMP1B</field>
    <field name="text">Time-base counter equal to CMP1B when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_D_CMPD</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a5428a168cc434aa31e825c7bd649ebeb</field>
    <field name="keywords">MCPWM_EVT_TBCTR_D_CMPD MCPWM_EVT_TBCTR_D_CMPD</field>
    <field name="text">Time-base counter equal to CMPD when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_D_CMP1B</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a56c5f0007ab326584f274aaf3911fc9c</field>
    <field name="keywords">MCPWM_EVT_TBCTR_D_CMP1B MCPWM_EVT_TBCTR_D_CMP1B</field>
    <field name="text">Time-base counter equal to CMP1B when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_U_CMP2A</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a7c088f998da74d90099d652a05a1f55a</field>
    <field name="keywords">MCPWM_EVT_TBCTR_U_CMP2A MCPWM_EVT_TBCTR_U_CMP2A</field>
    <field name="text">Time-base counter equal to CMP2A when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_U_CMP2B</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0a87a5bc2ac84e19664b9f4550a4193fc5</field>
    <field name="keywords">MCPWM_EVT_TBCTR_U_CMP2B MCPWM_EVT_TBCTR_U_CMP2B</field>
    <field name="text">Time-base counter equal to CMP2B when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_DISABLED</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0aa4fb7d2327c9f70efb5c7dd60fa4157e</field>
    <field name="keywords">MCPWM_EVT_DISABLED MCPWM_EVT_DISABLED</field>
    <field name="text">Event is Disabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_U_CMP1A</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0aabc27a111321b448cf9009fcb3230e48</field>
    <field name="keywords">MCPWM_EVT_TBCTR_U_CMP1A MCPWM_EVT_TBCTR_U_CMP1A</field>
    <field name="text">Time-base counter equal to CMP1A when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_ZERO_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0ab20303e6fa0f9982fe1e77fe55fc6947</field>
    <field name="keywords">MCPWM_EVT_TBCTR_ZERO_PERIOD MCPWM_EVT_TBCTR_ZERO_PERIOD</field>
    <field name="text">Time-base counter equal to zero or period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_D_CMP3B</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0ac84355736a57fec1b361171af2028dc0</field>
    <field name="keywords">MCPWM_EVT_TBCTR_D_CMP3B MCPWM_EVT_TBCTR_D_CMP3B</field>
    <field name="text">Time-base counter equal to CMP3B when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_ZERO</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0ac8455605b37e82346c460ade6fa31902</field>
    <field name="keywords">MCPWM_EVT_TBCTR_ZERO MCPWM_EVT_TBCTR_ZERO</field>
    <field name="text">Time-base counter equal to zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0ae7d9cbb8ffe2c0fc4b601e962c9917ab</field>
    <field name="keywords">MCPWM_EVT_TBCTR_PERIOD MCPWM_EVT_TBCTR_PERIOD</field>
    <field name="text">Time-base counter equal to period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_EVT_TBCTR_D_CMP1A</field>
    <field name="url">group__mcpwm__api.html#ggac23e0a22d2bf77b8e3096969a4250de0afc16a1a11b695f5938a1366dd87c5aa2</field>
    <field name="keywords">MCPWM_EVT_TBCTR_D_CMP1A MCPWM_EVT_TBCTR_D_CMP1A</field>
    <field name="text">Time-base counter equal to CMP1A when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_TZ_ACTION_DISABLE</field>
    <field name="url">group__mcpwm__api.html#ggac4609709d9d85f3fd9909d6cb916f760a221f2aad406fb2e604b59c01db8ae9ee</field>
    <field name="keywords">MCPWM_TZ_ACTION_DISABLE MCPWM_TZ_ACTION_DISABLE</field>
    <field name="text">Disable action</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_TZ_ACTION_HIGH</field>
    <field name="url">group__mcpwm__api.html#ggac4609709d9d85f3fd9909d6cb916f760a789e8eee232caeb0cd42e8dfe2b6d38a</field>
    <field name="keywords">MCPWM_TZ_ACTION_HIGH MCPWM_TZ_ACTION_HIGH</field>
    <field name="text">High voltage state</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_TZ_ACTION_LOW</field>
    <field name="url">group__mcpwm__api.html#ggac4609709d9d85f3fd9909d6cb916f760aae792796a4943f0394bdf1e98dea8564</field>
    <field name="keywords">MCPWM_TZ_ACTION_LOW MCPWM_TZ_ACTION_LOW</field>
    <field name="text">Low voltage state</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_TZ_ACTION_HIGH_Z</field>
    <field name="url">group__mcpwm__api.html#ggac4609709d9d85f3fd9909d6cb916f760ab42eab5bc0190399c18878e0e17d20ef</field>
    <field name="keywords">MCPWM_TZ_ACTION_HIGH_Z MCPWM_TZ_ACTION_HIGH_Z</field>
    <field name="text">High impedance output</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_NO_CHANGE</field>
    <field name="url">group__mcpwm__api.html#ggadbb40e738e86443eda97f128b946b304a5017f43487187ee2763058524a29df48</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_NO_CHANGE MCPWM_AQ_OUTPUT_NO_CHANGE</field>
    <field name="text">No change in the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_LOW</field>
    <field name="url">group__mcpwm__api.html#ggadbb40e738e86443eda97f128b946b304ab18da83d6b5354d57969611cca4dc608</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_LOW MCPWM_AQ_OUTPUT_LOW</field>
    <field name="text">Set output pins to low</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_HIGH</field>
    <field name="url">group__mcpwm__api.html#ggadbb40e738e86443eda97f128b946b304ae2671800b9e33aa70c2f7241a2b2947a</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_HIGH MCPWM_AQ_OUTPUT_HIGH</field>
    <field name="text">Set output pins to High</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_OUTPUT_TOGGLE</field>
    <field name="url">group__mcpwm__api.html#ggadbb40e738e86443eda97f128b946b304af13d71965991c1372416dda1fb9f943b</field>
    <field name="keywords">MCPWM_AQ_OUTPUT_TOGGLE MCPWM_AQ_OUTPUT_TOGGLE</field>
    <field name="text">Toggle the output pins</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_TZ_CBC_PULSE_CLR_NONE</field>
    <field name="url">group__mcpwm__api.html#ggadd52c502232a5b6eccd78c9141f2d6a1a151c2a468f7293e509088af99be81469</field>
    <field name="keywords">MCPWM_TZ_CBC_PULSE_CLR_NONE MCPWM_TZ_CBC_PULSE_CLR_NONE</field>
    <field name="text">Disable CBC pulse Clear</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_TZ_CBC_PULSE_CLR_CNTR_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggadd52c502232a5b6eccd78c9141f2d6a1aaae5e3f83c61a3865636962a2ddcf27e</field>
    <field name="keywords">MCPWM_TZ_CBC_PULSE_CLR_CNTR_PERIOD MCPWM_TZ_CBC_PULSE_CLR_CNTR_PERIOD</field>
    <field name="text">Clear CBC pulse when counter equals period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_TZ_CBC_PULSE_CLR_CNTR_ZERO_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggadd52c502232a5b6eccd78c9141f2d6a1ab0e605f94438b53a3924453337100bb0</field>
    <field name="keywords">MCPWM_TZ_CBC_PULSE_CLR_CNTR_ZERO_PERIOD MCPWM_TZ_CBC_PULSE_CLR_CNTR_ZERO_PERIOD</field>
    <field name="text">Clear CBC pulse when counter equals zero or period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_TZ_CBC_PULSE_CLR_CNTR_ZERO</field>
    <field name="url">group__mcpwm__api.html#ggadd52c502232a5b6eccd78c9141f2d6a1ae38c4b327f052d222e44aa6ffe7a7ff7</field>
    <field name="keywords">MCPWM_TZ_CBC_PULSE_CLR_CNTR_ZERO MCPWM_TZ_CBC_PULSE_CLR_CNTR_ZERO</field>
    <field name="text">Clear CBC pulse when counter equals zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_SW_ONE_SHOT_HIGH</field>
    <field name="url">group__mcpwm__api.html#ggaf7a4663a1dd1e60428e4b2a2806ea5b2a36d68ec60dac32d08cafc76d10088a3c</field>
    <field name="keywords">MCPWM_AQ_SW_ONE_SHOT_HIGH MCPWM_AQ_SW_ONE_SHOT_HIGH</field>
    <field name="text">Set output to high when one shot is triggered</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_SW_CONTINUOUS_LOW</field>
    <field name="url">group__mcpwm__api.html#ggaf7a4663a1dd1e60428e4b2a2806ea5b2a5ab20c5b1b04ab950210d614aef80da0</field>
    <field name="keywords">MCPWM_AQ_SW_CONTINUOUS_LOW MCPWM_AQ_SW_CONTINUOUS_LOW</field>
    <field name="text">Set output pins to continuos low</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_SW_CONTINUOUS_HIGH</field>
    <field name="url">group__mcpwm__api.html#ggaf7a4663a1dd1e60428e4b2a2806ea5b2a5f9247532862781fa9af8f81b132fbf0</field>
    <field name="keywords">MCPWM_AQ_SW_CONTINUOUS_HIGH MCPWM_AQ_SW_CONTINUOUS_HIGH</field>
    <field name="text">Set output pins to continuos High</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_SW_ONE_SHOT_LOW</field>
    <field name="url">group__mcpwm__api.html#ggaf7a4663a1dd1e60428e4b2a2806ea5b2abc243abf3a027b062a9ee34141c650bf</field>
    <field name="keywords">MCPWM_AQ_SW_ONE_SHOT_LOW MCPWM_AQ_SW_ONE_SHOT_LOW</field>
    <field name="text">Set output to low when one shot is triggered</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_SW_ONE_SHOT_TOGGLE</field>
    <field name="url">group__mcpwm__api.html#ggaf7a4663a1dd1e60428e4b2a2806ea5b2af4186a5ff18a506513d4583d315d18c8</field>
    <field name="keywords">MCPWM_AQ_SW_ONE_SHOT_TOGGLE MCPWM_AQ_SW_ONE_SHOT_TOGGLE</field>
    <field name="text">Toggle output when one shot is triggered</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_AQ_SW_FORCE_DISABLED</field>
    <field name="url">group__mcpwm__api.html#ggaf7a4663a1dd1e60428e4b2a2806ea5b2af862f707ea4c5fca74ce253c38d86ac1</field>
    <field name="keywords">MCPWM_AQ_SW_FORCE_DISABLED MCPWM_AQ_SW_FORCE_DISABLED</field>
    <field name="text">SW force Action is disabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_U_CMP3B</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba136a858c8e7e0cdb440a38f9654dbb15</field>
    <field name="keywords">MCPWM_SOC_TBCTR_U_CMP3B MCPWM_SOC_TBCTR_U_CMP3B</field>
    <field name="text">Time-base counter equal to CMP3B when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba20e12c4e4e1361a9c328f4908d6e0b20</field>
    <field name="keywords">MCPWM_SOC_TBCTR_PERIOD MCPWM_SOC_TBCTR_PERIOD</field>
    <field name="text">Time-base counter equal to period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_U_CMP3A</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba285187f7ef69630efe5c3e3b42d18df1</field>
    <field name="keywords">MCPWM_SOC_TBCTR_U_CMP3A MCPWM_SOC_TBCTR_U_CMP3A</field>
    <field name="text">Time-base counter equal to CMP3A when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_U_CMPD</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba346b03f66a158d3b91cd896801e719f8</field>
    <field name="keywords">MCPWM_SOC_TBCTR_U_CMPD MCPWM_SOC_TBCTR_U_CMPD</field>
    <field name="text">Time-base counter equal to CMPD when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_U_CMP1B</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba39a6ab04630dfd044f566a5bf1a29f47</field>
    <field name="keywords">MCPWM_SOC_TBCTR_U_CMP1B MCPWM_SOC_TBCTR_U_CMP1B</field>
    <field name="text">Time-base counter equal to CMP1B when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_U_CMP2B</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba3a5993bc8a4a7d4a899e471e50f6f45d</field>
    <field name="keywords">MCPWM_SOC_TBCTR_U_CMP2B MCPWM_SOC_TBCTR_U_CMP2B</field>
    <field name="text">Time-base counter equal to CMP2B when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_D_CMP2A</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba3f29c5fd4341b220fc1e4f3db9ea2782</field>
    <field name="keywords">MCPWM_SOC_TBCTR_D_CMP2A MCPWM_SOC_TBCTR_D_CMP2A</field>
    <field name="text">Time-base counter equal to CMP2A when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_D_CMPC</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba44682b8812194fd0a68a5261b6b0086b</field>
    <field name="keywords">MCPWM_SOC_TBCTR_D_CMPC MCPWM_SOC_TBCTR_D_CMPC</field>
    <field name="text">Time-base counter equal to CMPC when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_D_CMP3A</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba45fcfdd1aabbe5dd0d41cc00936afdc6</field>
    <field name="keywords">MCPWM_SOC_TBCTR_D_CMP3A MCPWM_SOC_TBCTR_D_CMP3A</field>
    <field name="text">Time-base counter equal to CMP3A when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_DISABLED</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba4baf8eaa69ecc994afe581be03be9c93</field>
    <field name="keywords">MCPWM_SOC_DISABLED MCPWM_SOC_DISABLED</field>
    <field name="text">Event is Disabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_D_CMPD</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba4f04ba65b3e8e930bb0a09aaeba51ebe</field>
    <field name="keywords">MCPWM_SOC_TBCTR_D_CMPD MCPWM_SOC_TBCTR_D_CMPD</field>
    <field name="text">Time-base counter equal to CMPD when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_U_CMP2A</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba60fe26ef128869e0ad296d99eab3044e</field>
    <field name="keywords">MCPWM_SOC_TBCTR_U_CMP2A MCPWM_SOC_TBCTR_U_CMP2A</field>
    <field name="text">Time-base counter equal to CMP2A when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_D_CMP1A</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba79906318347d3f7a712f67258786d2bc</field>
    <field name="keywords">MCPWM_SOC_TBCTR_D_CMP1A MCPWM_SOC_TBCTR_D_CMP1A</field>
    <field name="text">Time-base counter equal to CMP1A when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_ZERO_PERIOD</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322ba7a0fbec803d99babe4226073f565004b</field>
    <field name="keywords">MCPWM_SOC_TBCTR_ZERO_PERIOD MCPWM_SOC_TBCTR_ZERO_PERIOD</field>
    <field name="text">Time-base counter equal to zero or period</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_ZERO</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322baa7f0a97ea78839a732e83b31472d1604</field>
    <field name="keywords">MCPWM_SOC_TBCTR_ZERO MCPWM_SOC_TBCTR_ZERO</field>
    <field name="text">Time-base counter equal to zero</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_U_CMPC</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322baa923232a402df3560bea5b1154b6087a</field>
    <field name="keywords">MCPWM_SOC_TBCTR_U_CMPC MCPWM_SOC_TBCTR_U_CMPC</field>
    <field name="text">Time-base counter equal to CMPC when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_D_CMP1B</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322bab7c14ac685450ea699eb2926586fb75f</field>
    <field name="keywords">MCPWM_SOC_TBCTR_D_CMP1B MCPWM_SOC_TBCTR_D_CMP1B</field>
    <field name="text">Time-base counter equal to CMP1B when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_U_CMP1A</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322babd078c7306a537714bb41356c8fa876b</field>
    <field name="keywords">MCPWM_SOC_TBCTR_U_CMP1A MCPWM_SOC_TBCTR_U_CMP1A</field>
    <field name="text">Time-base counter equal to CMP1A when the timer is incrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_D_CMP2B</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322bacf63dd057969bfa047384bd55d94f574</field>
    <field name="keywords">MCPWM_SOC_TBCTR_D_CMP2B MCPWM_SOC_TBCTR_D_CMP2B</field>
    <field name="text">Time-base counter equal to CMP2B when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SOC_TBCTR_D_CMP3B</field>
    <field name="url">group__mcpwm__api.html#ggaf94393cfbe176ea638fa9c03ad5a322bad31f991f31786eb7298fb1e0365dbda4</field>
    <field name="keywords">MCPWM_SOC_TBCTR_D_CMP3B MCPWM_SOC_TBCTR_D_CMP3B</field>
    <field name="text">Time-base counter equal to CMP3B when the timer is Decrementing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNC_OUT_PULSE_ON_COUNTER_COMPARE_D</field>
    <field name="url">group__mcpwm__api.html#ggafa3e001be20c36635e173513b8002b35a8176d767e4bb052e982c5fd480215f76</field>
    <field name="keywords">MCPWM_SYNC_OUT_PULSE_ON_COUNTER_COMPARE_D MCPWM_SYNC_OUT_PULSE_ON_COUNTER_COMPARE_D</field>
    <field name="text">Sync pulse is generated when time base counter equals compare D value</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNC_OUT_PULSE_DISABLED</field>
    <field name="url">group__mcpwm__api.html#ggafa3e001be20c36635e173513b8002b35a932dfa29c40edd222eccfb0bc6ab4392</field>
    <field name="keywords">MCPWM_SYNC_OUT_PULSE_DISABLED MCPWM_SYNC_OUT_PULSE_DISABLED</field>
    <field name="text">Sync pulse is disabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNC_OUT_PULSE_ON_COUNTER_COMPARE_C</field>
    <field name="url">group__mcpwm__api.html#ggafa3e001be20c36635e173513b8002b35a95d6424e240c6b5a096b079cde3ebc27</field>
    <field name="keywords">MCPWM_SYNC_OUT_PULSE_ON_COUNTER_COMPARE_C MCPWM_SYNC_OUT_PULSE_ON_COUNTER_COMPARE_C</field>
    <field name="text">Sync pulse is generated when time base counter equals compare C value</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNC_OUT_PULSE_ON_SOFTWARE</field>
    <field name="url">group__mcpwm__api.html#ggafa3e001be20c36635e173513b8002b35aa0103065a8f3e3da88bcef4d5b78e104</field>
    <field name="keywords">MCPWM_SYNC_OUT_PULSE_ON_SOFTWARE MCPWM_SYNC_OUT_PULSE_ON_SOFTWARE</field>
    <field name="text">Sync pulse is generated by software</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MCPWM_SYNC_OUT_PULSE_ON_COUNTER_ZERO</field>
    <field name="url">group__mcpwm__api.html#ggafa3e001be20c36635e173513b8002b35aba79f61400b02e20ee615bd2b691b841</field>
    <field name="keywords">MCPWM_SYNC_OUT_PULSE_ON_COUNTER_ZERO MCPWM_SYNC_OUT_PULSE_ON_COUNTER_ZERO</field>
    <field name="text">Sync pulse is generated when time base counter equals zero</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">memcfg_api</field>
    <field name="url">group__memcfg__api.html</field>
    <field name="keywords">MemCfg</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_GSX_ALL</field>
    <field name="url">group__memcfg__api.html#ga04dfeecebd5f6230c6f910bc50852957</field>
    <field name="keywords">MEMCFG_SECT_GSX_ALL MEMCFG_SECT_GSX_ALL</field>
    <field name="text">All GS RAM All GS RAM</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_PIEVECT</field>
    <field name="url">group__memcfg__api.html#ga0ef56c682c4636e6b7413883b48cf231</field>
    <field name="keywords">MEMCFG_SECT_PIEVECT MEMCFG_SECT_PIEVECT</field>
    <field name="text">PIEVECT RAM PIEVECT RAM</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_DIAGERR_CORR</field>
    <field name="url">group__memcfg__api.html#ga1416ebab4103eb40512988982242f929</field>
    <field name="keywords">MEMCFG_DIAGERR_CORR MEMCFG_DIAGERR_CORR</field>
    <field name="text">Corr error in diag/test mode Corr error in diag/test mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_getInitStatus</field>
    <field name="args">(uint32_t ramSections)</field>
    <field name="url">group__memcfg__api.html#ga15681f6f2648448cdf1d1c3c0669439d</field>
    <field name="keywords">MemCfg_getInitStatus MemCfg_getInitStatus</field>
    <field name="text">Get the status of initialized RAM sections ramSections is the logical OR of the sections to be checked This function gets the initialization status of the RAM sections specified by the ramSections parameter The ramSections parameter is an OR of one of the following sets of indicators MEMCFG_SECT_M0 MEMCFG_SECT_M1 or use MEMCFG_SECT_DX_ALL MEMCFG_SECT_GS0 through MEMCFG_SECT_GSx or use MEMCFG_SECT_GSX_ALL to configure all possible GSRAM sections OR use MEMCFG_SECT_ALL to get status of all possible sections Use MemCfg_initSections() to start the initialization Returns true if all the sections specified by ramSections have been initialized and false if not</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_getCorrErrorAddress</field>
    <field name="args">(uint32_t stsFlag)</field>
    <field name="url">group__memcfg__api.html#ga1c95e96bfc682c53446ead21b649ef1e</field>
    <field name="keywords">MemCfg_getCorrErrorAddress MemCfg_getCorrErrorAddress</field>
    <field name="text">Get the correctable error address associated with a stsFlag stsFlag is the type of error to which the returned address will correspond It can take following values MEMCFG_CERR_CPUREAD MEMCFG_CERR_DMAREAD Returns the error address associated with the stsFlag</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_DIAGERR_UNCORR</field>
    <field name="url">group__memcfg__api.html#ga1ff86256f0f472441b65b808ca2124f9</field>
    <field name="keywords">MEMCFG_DIAGERR_UNCORR MEMCFG_DIAGERR_UNCORR</field>
    <field name="text">Uncorr error in diag/test mode Uncorr error in diag/test mode</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_CERR_DMAREAD</field>
    <field name="url">group__memcfg__api.html#ga215937a7f7195b799bc8b8d9911b23ad</field>
    <field name="keywords">MEMCFG_CERR_DMAREAD MEMCFG_CERR_DMAREAD</field>
    <field name="text">Correctable DMA read error Correctable DMA read error</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_ROMBOOT_ROMSECURE</field>
    <field name="url">group__memcfg__api.html#ga22333bb2a50e67f21f008abd53137f59</field>
    <field name="keywords">MEMCFG_SECT_ROMBOOT_ROMSECURE MEMCFG_SECT_ROMBOOT_ROMSECURE</field>
    <field name="text">BOOT ROM and Secure ROM BOOT ROM and Secure ROM</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_DX_ALL</field>
    <field name="url">group__memcfg__api.html#ga2c476e3d90e342091cedfe5e3f152b50</field>
    <field name="keywords">MEMCFG_SECT_DX_ALL MEMCFG_SECT_DX_ALL</field>
    <field name="text">All M and D RAM All M and D RAM</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_UCERR_CPUREAD</field>
    <field name="url">group__memcfg__api.html#ga2db35aad553ee59a5c51fd80b04df0dc</field>
    <field name="keywords">MEMCFG_UCERR_CPUREAD MEMCFG_UCERR_CPUREAD</field>
    <field name="text">Uncorrectable CPU read error Uncorrectable CPU read error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_disableCorrErrorInterrupt</field>
    <field name="args">(uint32_t intFlags)</field>
    <field name="url">group__memcfg__api.html#ga343ccaed79b3c6108111591e2f33a7f3</field>
    <field name="keywords">MemCfg_disableCorrErrorInterrupt MemCfg_disableCorrErrorInterrupt</field>
    <field name="text">Disables individual RAM correctable error interrupt sources intFlags is a bit mask of the interrupt sources to be disabled Can take the value MEMCFG_CERR_CPUREAD only Other values are reserved This function disables the indicated RAM correctable error interrupt sources Only the sources that are enabled can be reflected to the processor interrupt disabled sources have no effect on the processor Note that only correctable errors may generate interrupts None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_TYPE_GS</field>
    <field name="url">group__memcfg__api.html#ga3572c6832b1ed76d76479a18e652df98</field>
    <field name="keywords">MEMCFG_SECT_TYPE_GS MEMCFG_SECT_TYPE_GS</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_unlockTestConfig</field>
    <field name="args">(uint32_t memSections)</field>
    <field name="url">group__memcfg__api.html#ga42c09112740a862e774ec0a227fb6608</field>
    <field name="keywords">MemCfg_unlockTestConfig MemCfg_unlockTestConfig</field>
    <field name="text">Unlocks the writes to the test mode configuration of specified memory sections memSections is the logical OR of the sections to be configured This function unlocks writes to the test mode configuration of a RAM section that has been locked using MemCfg_lockTestConfig() The memSections parameter is an OR of one of the following sets of indicators MEMCFG_SECT_M0 MEMCFG_SECT_M1 or use MEMCFG_SECT_DX_ALL MEMCFG_SECT_GS0 through MEMCFG_SECT_GSx or use MEMCFG_SECT_GSX_ALL to configure all possible GSRAM sections MEMCFG_SECT_ROMBOOT_ROMSECURE MEMCFG_SECT_ROM_ALL to configure all possible ROM sections OR use MEMCFG_SECT_ALL to configure all possible sections None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_clearDiagErrorStatus</field>
    <field name="args">(uint32_t stsFlags)</field>
    <field name="url">group__memcfg__api.html#ga430b33da686953bfb97cc7356b92fa3b</field>
    <field name="keywords">MemCfg_clearDiagErrorStatus MemCfg_clearDiagErrorStatus</field>
    <field name="text">Clears the diagnostics corr/uncorr memory error status stsFlags is a bit mask of the status flags to be cleared This function clears the specified diagnostics corr/uncorr RAM/ROM memory error flags in test mode The param stsFlags can be any of the following values MEMCFG_DIAGERR_UNCORR and/or MEMCFG_DIAGERR_CORR None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_forceCorrErrorInterrupt</field>
    <field name="args">(uint32_t intFlags)</field>
    <field name="url">group__memcfg__api.html#ga441298d10f7dab155471f0433b06fcb4</field>
    <field name="keywords">MemCfg_forceCorrErrorInterrupt MemCfg_forceCorrErrorInterrupt</field>
    <field name="text">Sets the RAM correctable error interrupt status intFlags is a bit mask of the interrupt sources to be set Can take the value MEMCFG_CERR_CPUREAD only Other values are reserved This function sets the correctable error interrupt flag Note that only correctable errors may generate interrupts None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_disableROMWaitState</field>
    <field name="args">(void)</field>
    <field name="url">group__memcfg__api.html#ga45c0cdfa37a61be2dfcd5119a114e80d</field>
    <field name="keywords">MemCfg_disableROMWaitState MemCfg_disableROMWaitState</field>
    <field name="text">Disables ROM wait state This function enables the ROM wait state This mean CPU accesses to ROM are 0 wait None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_clearCorrErrorStatus</field>
    <field name="args">(uint32_t stsFlags)</field>
    <field name="url">group__memcfg__api.html#ga4d9bb807f3601ca5e9fd57c0ef719cf1</field>
    <field name="keywords">MemCfg_clearCorrErrorStatus MemCfg_clearCorrErrorStatus</field>
    <field name="text">Clears correctable RAM error flags stsFlags is a bit mask of the status flags to be cleared This parameter can be any of the following MEMCFG_CERR_CPUREAD MEMCFG_CERR_DMAREAD This function clears the specified correctable RAM error flags None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_TYPE_ROM</field>
    <field name="url">group__memcfg__api.html#ga51c05949ea26833e37eee070a4af719c</field>
    <field name="keywords">MEMCFG_SECT_TYPE_ROM MEMCFG_SECT_TYPE_ROM</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_TYPE_MASK</field>
    <field name="url">group__memcfg__api.html#ga57516d4b825e111820133a57e235a699</field>
    <field name="keywords">MEMCFG_SECT_TYPE_MASK MEMCFG_SECT_TYPE_MASK</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_getDiagErrorAddress</field>
    <field name="args">(void)</field>
    <field name="url">group__memcfg__api.html#ga5930d78abf61a4d6ad3bc756e1f167e5</field>
    <field name="keywords">MemCfg_getDiagErrorAddress MemCfg_getDiagErrorAddress</field>
    <field name="text">Gets address location of diagnostics corr/uncorr memory read/write error Return address location of diagnostics corr/uncorr memory error error in test mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_getUncorrErrorAddress</field>
    <field name="args">(uint32_t stsFlag)</field>
    <field name="url">group__memcfg__api.html#ga59361b035c46cc0c2847ff663806f95b</field>
    <field name="keywords">MemCfg_getUncorrErrorAddress MemCfg_getUncorrErrorAddress</field>
    <field name="text">Get the uncorrectable error address associated with a stsFlag stsFlag is the type of error to which the returned address will correspond It may be passed one of these values MEMCFG_UCERR_CPUREAD or MEMCFG_UCERR_DMAREAD values Returns the error address associated with the stsFlag</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_NUM_MASK</field>
    <field name="url">group__memcfg__api.html#ga5bf0eaad7546a507e379b3f06d3883b7</field>
    <field name="keywords">MEMCFG_SECT_NUM_MASK MEMCFG_SECT_NUM_MASK</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_XTEST_M</field>
    <field name="url">group__memcfg__api.html#ga6069681be70b43c9aced0f5c7029d8b5</field>
    <field name="keywords">MEMCFG_XTEST_M MEMCFG_XTEST_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_getDiagErrorStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__memcfg__api.html#ga6140a8a07683dd6b8ecd178fb9bf3a37</field>
    <field name="keywords">MemCfg_getDiagErrorStatus MemCfg_getDiagErrorStatus</field>
    <field name="text">Gets the diagnostics corr/uncorr memory error status in test mode Returns the diagnostics error status in test mode It can return following values MEMCFG_DIAGERR_UNCORR and/or MEMCFG_DIAGERR_CORR</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_forceUncorrErrorStatus</field>
    <field name="args">(uint32_t stsFlags)</field>
    <field name="url">group__memcfg__api.html#ga632cd6426b4c9496a26aec3751c9b80a</field>
    <field name="keywords">MemCfg_forceUncorrErrorStatus MemCfg_forceUncorrErrorStatus</field>
    <field name="text">Sets the specified uncorrectable RAM error status flag stsFlags is a bit mask of the error sources This parameter can be any of the following values MEMCFG_UCERR_CPUREAD MEMCFG_UCERR_DMAREAD This function sets the specified uncorrectable RAM error status flag None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_TYPE_D</field>
    <field name="url">group__memcfg__api.html#ga69faeeb155b957ad139e3f11608bd2f4</field>
    <field name="keywords">MEMCFG_SECT_TYPE_D MEMCFG_SECT_TYPE_D</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_M1</field>
    <field name="url">group__memcfg__api.html#ga6f9c175e77727a6cf2eb7e9cfdc40ec7</field>
    <field name="keywords">MEMCFG_SECT_M1 MEMCFG_SECT_M1</field>
    <field name="text">M1 RAM M1 RAM</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_GS0</field>
    <field name="url">group__memcfg__api.html#ga7110897de3bf5f933931cfd17cdfe944</field>
    <field name="keywords">MEMCFG_SECT_GS0 MEMCFG_SECT_GS0</field>
    <field name="text">GS0 RAM GS0 RAM</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_forceMemError</field>
    <field name="args">(uint32_t memSections)</field>
    <field name="url">group__memcfg__api.html#ga7122fb5acadd685cc275cc40a067b26f</field>
    <field name="keywords">MemCfg_forceMemError MemCfg_forceMemError</field>
    <field name="text">Forces parity error in the selected memory memSections is the logical OR of the sections to be tested This function forces the parity error in the memories specified by the memSections parameter The memSections parameter is an OR of one of the following sets of indicators MEMCFG_SECT_ROMBOOT_ROMSECURE MEMCFG_SECT_ROM_ALL OR use MEMCFG_SECT_ALL to force parity error in all possible memory sections None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_setTestMode</field>
    <field name="args">(uint32_t memSection, MemCfg_TestMode testMode)</field>
    <field name="url">group__memcfg__api.html#ga7635d170151ecaa29d551df8b7a57eca</field>
    <field name="keywords">MemCfg_setTestMode MemCfg_setTestMode</field>
    <field name="text">Sets the test mode of the specified memory section memSection is the memory section to be configured testMode is the test mode selected This function sets the test mode configuration of the RAM section The testMode parameter can take one of the following values MEMCFG_TEST_FUNCTIONAL MEMCFG_TEST_WRITE_DATA MEMCFG_TEST_WRITE_ECC MEMCFG_TEST_FUNC_DIAG The memSection parameter is one of the following indicators MEMCFG_SECT_M0 MEMCFG_SECT_M1 or use MEMCFG_SECT_DX_ALL MEMCFG_SECT_GS0 through MEMCFG_SECT_GSx or use MEMCFG_SECT_GSX_ALL to configure all possible GSRAM sections MEMCFG_SECT_ROMBOOT_ROMSECURE MEMCFG_SECT_ROM_ALL to configure all possible ROM sections None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_getUncorrErrorStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__memcfg__api.html#ga7a9728223107a0fd68e2e8c11f6969be</field>
    <field name="keywords">MemCfg_getUncorrErrorStatus MemCfg_getUncorrErrorStatus</field>
    <field name="text">Gets the current uncorrectable RAM error status Returns the current error status enumerated as a bit field of MEMCFG_UCERR_CPUREAD MEMCFG_UCERR_DMAREAD</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_ALL</field>
    <field name="url">group__memcfg__api.html#ga7d5705d05c74a6942e33ae3842b85f28</field>
    <field name="keywords">MEMCFG_SECT_ALL MEMCFG_SECT_ALL</field>
    <field name="text">All configurable RAM All configurable RAM</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_clearUncorrErrorStatus</field>
    <field name="args">(uint32_t stsFlags)</field>
    <field name="url">group__memcfg__api.html#ga8333448d0a35332ecef988849b8b01f7</field>
    <field name="keywords">MemCfg_clearUncorrErrorStatus MemCfg_clearUncorrErrorStatus</field>
    <field name="text">Clears uncorrectable RAM error flags stsFlags is a bit mask of the status flags to be cleared This parameter can be any of the following MEMCFG_UCERR_CPUREAD MEMCFG_UCERR_DMAREAD This function clears the specified uncorrectable RAM error flags None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_lockTestConfig</field>
    <field name="args">(uint32_t memSections)</field>
    <field name="url">group__memcfg__api.html#ga837a62c78f5e3dc7b204d7173e83c7b3</field>
    <field name="keywords">MemCfg_lockTestConfig MemCfg_lockTestConfig</field>
    <field name="text">Locks the writes to the test mode configuration of specified memory sections memSections is the logical OR of the sections to be configured This function locks writes to the test mode configuration of a RAM section That means calling MemCfg_setTestMode() for a locked RAM section will have no effect until MemCfg_unlockTestConfig() is called The memSections parameter is an OR of one of the following sets of indicators MEMCFG_SECT_M0 MEMCFG_SECT_M1 or use MEMCFG_SECT_DX_ALL MEMCFG_SECT_GS0 through MEMCFG_SECT_GSx or use MEMCFG_SECT_GSX_ALL to configure all possible GSRAM sections MEMCFG_SECT_ROMBOOT_ROMSECURE MEMCFG_SECT_ROM_ALL to configure all possible ROM sections OR use MEMCFG_SECT_ALL to configure all possible sections None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_setCorrErrorThreshold</field>
    <field name="args">(uint32_t threshold)</field>
    <field name="url">group__memcfg__api.html#ga8496e659e6df1b5d8320b96726251ef0</field>
    <field name="keywords">MemCfg_setCorrErrorThreshold MemCfg_setCorrErrorThreshold</field>
    <field name="text">Sets the correctable error threshold value threshold is the correctable error threshold This value sets the error-count threshold at which a correctable error interrupt is generated That is when the error count register reaches the value specified by the threshold parameter an interrupt is generated if it is enabled None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_getCorrErrorInterruptStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__memcfg__api.html#ga8ba986b1428801f4a02dc47c588cf0fb</field>
    <field name="keywords">MemCfg_getCorrErrorInterruptStatus MemCfg_getCorrErrorInterruptStatus</field>
    <field name="text">Gets the current RAM correctable error interrupt status Returns the current error interrupt status Will return a value of MEMCFG_CERR_CPUREAD if an interrupt has been generated If not the function will return 0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_commitConfig</field>
    <field name="args">(uint32_t memSections)</field>
    <field name="url">group__memcfg__api.html#ga8ce8c0219db8129547acfdc304bac7eb</field>
    <field name="keywords">MemCfg_commitConfig MemCfg_commitConfig</field>
    <field name="text">Permanently locks writes to the configuration of a memory section memSections is the logical OR of the sections to be configured This function permanently locks writes to the access protection and controller select configuration of a memory section That means calling MemCfg_setProtection() or MemCfg_setLSRAMControllerSel() for a locked memory section will have no effect To lock the configuration in a nonpermanent way use MemCfg_lockConfig() The memSections parameter is an OR of one of the following sets of indicators MEMCFG_SECT_M0 and MEMCFG_SECT_M1 or MEMCFG_SECT_DX_ALL MEMCFG_SECT_GS0 through MEMCFG_SECT_GSx or MEMCFG_SECT_GSX_ALL OR use MEMCFG_SECT_ALL to configure all possible sections None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">MemCfg_TestMode</field>
    <field name="url">group__memcfg__api.html#ga962a00b98ede70d1e8edf086694cd9bc</field>
    <field name="keywords">MemCfg_TestMode MemCfg_TestMode</field>
    <field name="text">Values that can be passed to MemCfg_setTestMode() as the testMode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_lockConfig</field>
    <field name="args">(uint32_t memSections)</field>
    <field name="url">group__memcfg__api.html#ga9814daed4697abe866776e4cabb20dfc</field>
    <field name="keywords">MemCfg_lockConfig MemCfg_lockConfig</field>
    <field name="text">Locks the writes to the configuration of specified memory sections memSections is the logical OR of the sections to be configured This function locks writes to the access protection initialization control and test mode configuration of a memory section This means calling APIs like MemCfg_setProtection() or MemCfg_initSections() for a locked memory section will have no effect until MemCfg_unlockConfig() is called The memSections parameter is an OR of one of the following sets of indicators MEMCFG_SECT_M0 and MEMCFG_SECT_M1 or MEMCFG_SECT_DX_ALL MEMCFG_SECT_GS0 through MEMCFG_SECT_GSx or MEMCFG_SECT_GSX_ALL OR use MEMCFG_SECT_ALL to configure all possible sections None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_UCERR_DMAREAD</field>
    <field name="url">group__memcfg__api.html#ga992dd6471219cdfd4d28f251bb0aaf8b</field>
    <field name="keywords">MEMCFG_UCERR_DMAREAD MEMCFG_UCERR_DMAREAD</field>
    <field name="text">Uncorrectable DMA read error Uncorrectable DMA read error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_enableROMWaitState</field>
    <field name="args">(void)</field>
    <field name="url">group__memcfg__api.html#ga9d89a1f2cc5ae71a69c21eecb54e291e</field>
    <field name="keywords">MemCfg_enableROMWaitState MemCfg_enableROMWaitState</field>
    <field name="text">Enables ROM wait state This function enables the ROM wait state This mean CPU accesses to ROM are 1 wait None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_getCorrErrorStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__memcfg__api.html#ga9f3ea5c48e532a430104d3bdb975caf6</field>
    <field name="keywords">MemCfg_getCorrErrorStatus MemCfg_getCorrErrorStatus</field>
    <field name="text">Gets the current correctable RAM error status Returns the current error status enumerated as a bit field of MEMCFG_CERR_CPUREAD or MEMCFG_CERR_DMAREAD</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_clearCorrErrorInterruptStatus</field>
    <field name="args">(uint32_t intFlags)</field>
    <field name="url">group__memcfg__api.html#gabd72e2146424e8ef04679855b8bfd0b2</field>
    <field name="keywords">MemCfg_clearCorrErrorInterruptStatus MemCfg_clearCorrErrorInterruptStatus</field>
    <field name="text">Clears the RAM correctable error interrupt status intFlags is a bit mask of the interrupt sources to be cleared Can take the value MEMCFG_CERR_CPUREAD only Other values are reserved This function clears the correctable error interrupt flag Note that only correctable errors may generate interrupts None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_CERR_CPUREAD</field>
    <field name="url">group__memcfg__api.html#gac89d92f5414c77aeae3dd1a8a8bdb58d</field>
    <field name="keywords">MEMCFG_CERR_CPUREAD MEMCFG_CERR_CPUREAD</field>
    <field name="text">Correctable CPU read error Correctable CPU read error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_forceCorrErrorStatus</field>
    <field name="args">(uint32_t stsFlags)</field>
    <field name="url">group__memcfg__api.html#gad1f5e7a8c9fa8045b3f1b70e8890fdcc</field>
    <field name="keywords">MemCfg_forceCorrErrorStatus MemCfg_forceCorrErrorStatus</field>
    <field name="text">Sets the specified correctable RAM error status flag stsFlags is a bit mask of the error sources This parameter can be any of the following values MEMCFG_CERR_CPUREAD MEMCFG_CERR_DMAREAD This function sets the specified correctable RAM error status flag None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_enableCorrErrorInterrupt</field>
    <field name="args">(uint32_t intFlags)</field>
    <field name="url">group__memcfg__api.html#gad3f95d42a0af192c5b5b207788748e75</field>
    <field name="keywords">MemCfg_enableCorrErrorInterrupt MemCfg_enableCorrErrorInterrupt</field>
    <field name="text">Enables individual RAM correctable error interrupt sources intFlags is a bit mask of the interrupt sources to be enabled Can take the value MEMCFG_CERR_CPUREAD only Other values are reserved This function enables the indicated RAM correctable error interrupt sources Only the sources that are enabled can be reflected to the processor interrupt disabled sources have no effect on the processor Note that only correctable errors may generate interrupts None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_getCorrErrorCount</field>
    <field name="args">(void)</field>
    <field name="url">group__memcfg__api.html#gada23e496b1bc237b2e6acc24e7874149</field>
    <field name="keywords">MemCfg_getCorrErrorCount MemCfg_getCorrErrorCount</field>
    <field name="text">Gets the correctable error count Returns the number of correctable error have occurred</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_unlockConfig</field>
    <field name="args">(uint32_t memSections)</field>
    <field name="url">group__memcfg__api.html#gae00348f30b6d43dc012624eaef77e866</field>
    <field name="keywords">MemCfg_unlockConfig MemCfg_unlockConfig</field>
    <field name="text">Unlocks the writes to the configuration of a memory section memSections is the logical OR of the sections to be configured This function unlocks writes to the access protection and controller select configuration of a memory section that has been locked using MemCfg_lockConfig() The memSections parameter is an OR of one of the following sets of indicators MEMCFG_SECT_M0 and MEMCFG_SECT_M1 or MEMCFG_SECT_DX_ALL MEMCFG_SECT_GS0 through MEMCFG_SECT_GSx or MEMCFG_SECT_GSX_ALL OR use MEMCFG_SECT_ALL to configure all possible sections None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_ROM_ALL</field>
    <field name="url">group__memcfg__api.html#gae4687fce8a251054bbdd59347f59a2f9</field>
    <field name="keywords">MEMCFG_SECT_ROM_ALL MEMCFG_SECT_ROM_ALL</field>
    <field name="text">All ROMs All ROMs</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">MemCfg_initSections</field>
    <field name="args">(uint32_t ramSections)</field>
    <field name="url">group__memcfg__api.html#gaea9bf75bdd02de7783ea1bb22995203a</field>
    <field name="keywords">MemCfg_initSections MemCfg_initSections</field>
    <field name="text">Starts the initialization the specified RAM sections ramSections is the logical OR of the sections to be initialized This function starts the initialization of the specified RAM sections Use MemCfg_getInitStatus() to check if the initialization is done The ramSections parameter is an OR of one of the following sets of indicators MEMCFG_SECT_M0 MEMCFG_SECT_M1 or use MEMCFG_SECT_DX_ALL MEMCFG_SECT_GS0 through MEMCFG_SECT_GSx or use MEMCFG_SECT_GSX_ALL to configure all possible GSRAM sections OR use MEMCFG_SECT_ALL to configure all possible sections None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_TESTLOCK_KEY</field>
    <field name="url">group__memcfg__api.html#gaee0065f9fe9758feb32e0e31bfc31f5a</field>
    <field name="keywords">MEMCFG_TESTLOCK_KEY MEMCFG_TESTLOCK_KEY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">MEMCFG_SECT_M0</field>
    <field name="url">group__memcfg__api.html#gaf00796be7d52702a2c66caaa9a5bb478</field>
    <field name="keywords">MEMCFG_SECT_M0 MEMCFG_SECT_M0</field>
    <field name="text">M0 RAM M0 RAM</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MEMCFG_TEST_FUNC_DIAG</field>
    <field name="url">group__memcfg__api.html#gga962a00b98ede70d1e8edf086694cd9bca46f7bd0914e9a419542af3c33442d8c9</field>
    <field name="keywords">MEMCFG_TEST_FUNC_DIAG MEMCFG_TEST_FUNC_DIAG</field>
    <field name="text">Diagnostic mode similar to functional mode but NMI is not generated</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MEMCFG_TEST_FUNCTIONAL</field>
    <field name="url">group__memcfg__api.html#gga962a00b98ede70d1e8edf086694cd9bca59d9b92bce37a364e0ba336e48ac113a</field>
    <field name="keywords">MEMCFG_TEST_FUNCTIONAL MEMCFG_TEST_FUNCTIONAL</field>
    <field name="text">Functional mode Test mode is disabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MEMCFG_TEST_WRITE_DATA</field>
    <field name="url">group__memcfg__api.html#gga962a00b98ede70d1e8edf086694cd9bca703eb59f0c6bc3f6637292969a6ea31c</field>
    <field name="keywords">MEMCFG_TEST_WRITE_DATA MEMCFG_TEST_WRITE_DATA</field>
    <field name="text">Writes allowed to data only</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">MEMCFG_TEST_WRITE_ECC</field>
    <field name="url">group__memcfg__api.html#gga962a00b98ede70d1e8edf086694cd9bca79ee067642ce8beff3ce5bf3a5eee635</field>
    <field name="keywords">MEMCFG_TEST_WRITE_ECC MEMCFG_TEST_WRITE_ECC</field>
    <field name="text">Writes allowed to ECC only for DxRAM/MxRAM/PIEVECT RAM</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">pga_api</field>
    <field name="url">group__pga__api.html</field>
    <field name="keywords">PGA</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_enableInternalGainOutput</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#ga238bdc322be87aa9251b657533ddeef3</field>
    <field name="keywords">PGA_enableInternalGainOutput PGA_enableInternalGainOutput</field>
    <field name="text">Enable PGA internal gain output on the pin base is the base address of the PGA module This function send the PGA internal gain output to the pin None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_disableOutput</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#ga288bd6d2b2cf7a69aaebd552847e20aa</field>
    <field name="keywords">PGA_disableOutput PGA_disableOutput</field>
    <field name="text">Disable PGA output on the pin base is the base address of the PGA module This function prevents the PGA output to the pin None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_disable</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#ga378c56dc2f3ae636dbb925f905e9bd0e</field>
    <field name="keywords">PGA_disable PGA_disable</field>
    <field name="text">Disables PGA base is the base address of the PGA module This function disables the PGA module None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_getPGAType</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#ga380b2004773df3d72b35c728dcb411cd</field>
    <field name="keywords">PGA_getPGAType PGA_getPGAType</field>
    <field name="text">Returns the PGA Type base is the base address of the PGA module This function returns the PGA Type number Returns PGA type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_setFilterResistor</field>
    <field name="args">(uint32_t base, PGA_LowPassResistorValue resistorValue)</field>
    <field name="url">group__pga__api.html#ga38cd47e4b61250ace48cec41bf0b9415</field>
    <field name="keywords">PGA_setFilterResistor PGA_setFilterResistor</field>
    <field name="text">Sets PGA output filter resistor value base is the base address of the PGA module resistorValue is the PGA output resistor value This function sets the resistor value for the PGA output low pass RC filter The resistance for the RC low pass filter is provided within the microprocessor and is determined by the value of resistorValue The capacitor however has to be connected outside the microprocessor Note Setting a value of PGA_LOW_PASS_FILTER_RESISTOR_0_OHM will disable the internal resistance value None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_enableOutput</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#ga3ae36bf1e467d541945ab30a7da061f4</field>
    <field name="keywords">PGA_enableOutput PGA_enableOutput</field>
    <field name="text">Enable PGA output on the pin base is the base address of the PGA module This function send the PGA output to the pin None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">PGA_Chop</field>
    <field name="url">group__pga__api.html#ga51ae2596f6eec6f61eed726d9f67d7cc</field>
    <field name="keywords">PGA_Chop PGA_Chop</field>
    <field name="text">Values that can be passed to PGA_Chop() as the chop parameter Values that can be passed to PGA_Chop() as the chop parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_lockRegisters</field>
    <field name="args">(uint32_t base, uint16_t registerType)</field>
    <field name="url">group__pga__api.html#ga551ea1cea4dd63958068a7d88dce9985</field>
    <field name="keywords">PGA_lockRegisters PGA_lockRegisters</field>
    <field name="text">Locks PGA registers base is the base address of the PGA module registerType is the PGA register to be locked This function locks the PGA registers specified by registerType Valid values for registerType are PGA_REGISTER_PGACTL and PGA_REGISTER_MUXSEL None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">PGA_MMUXInput</field>
    <field name="url">group__pga__api.html#ga60a73c488a3b1791ca061ad76911be2b</field>
    <field name="keywords">PGA_MMUXInput PGA_MMUXInput</field>
    <field name="text">Values that can be passed to PGA_selectMMUXInput() as the mmuxinput parameter</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">PGA_LowPassResistorValue</field>
    <field name="url">group__pga__api.html#ga64e01690db09e9f1581993f67e470ae8</field>
    <field name="keywords">PGA_LowPassResistorValue PGA_LowPassResistorValue</field>
    <field name="text">Values that can be passed to PGA_setFilterResistor() as the resistorValue parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_disableInternalGainOutput</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#ga6c27696e695747587731e522b7a6b768</field>
    <field name="keywords">PGA_disableInternalGainOutput PGA_disableInternalGainOutput</field>
    <field name="text">Disable PGA internal gain output on the pin base is the base address of the PGA module This function prevents the PGA internal gain output to the pin None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_setOffsetTrimNMOS</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#ga7628602e396f6f4e3e49fc4ce2a921e5</field>
    <field name="keywords">PGA_setOffsetTrimNMOS PGA_setOffsetTrimNMOS</field>
    <field name="text">Configures the offset trim for NMOS pair of the desired PGA instance base is the base address of the PGA module This function loads the offset trims for NMOS pair of the desired PGA instance None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_getPGARevision</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#ga771069dcfdf9c38f170f22d65badee31</field>
    <field name="keywords">PGA_getPGARevision PGA_getPGARevision</field>
    <field name="text">Returns the PGA revision number base is the base address of the PGA module This function returns the PGA revision number Returns PGA revision</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_chop</field>
    <field name="args">(uint32_t base, PGA_Chop chop)</field>
    <field name="url">group__pga__api.html#ga77d53480733618217f30b4cbfda3166a</field>
    <field name="keywords">PGA_chop PGA_chop</field>
    <field name="text">Selects PGA chop mode base is the base address of the PGA module chop is the chop mode This function selects the chopping mode to reduce the input offset to a very small number level chop is the chop mode to be selected Valid values for this parameter can be referred from the enum PGA_Chop None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_disableExternalChop</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#ga84b84d9dd219b564883ae83e1563730c</field>
    <field name="keywords">PGA_disableExternalChop PGA_disableExternalChop</field>
    <field name="text">Disable external Chopping signal for PGA base is the base address of the PGA module This function disables the external chopping signal for PGA None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_configurefeedbackOnPin</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#ga8cc680f422fd7d8a5ec4025e648ac20f</field>
    <field name="keywords">PGA_configurefeedbackOnPin PGA_configurefeedbackOnPin</field>
    <field name="text">Configures feedback to PGA negative input pin base is the base address of the PGA module This function configures feedback to PGA negative input pin and connects PGA_NEG and PGA inverting input None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">PGA_REGISTER_PGACTL</field>
    <field name="url">group__pga__api.html#ga8ff63cae0277ff75de1053991bbad225</field>
    <field name="keywords">PGA_REGISTER_PGACTL PGA_REGISTER_PGACTL</field>
    <field name="text">PGA Register PGACTL</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_selectMMUXInput</field>
    <field name="args">(uint32_t base, PGA_MMUXInput mmuxinput)</field>
    <field name="url">group__pga__api.html#gab6fc42d3b0e10fcfd6375489f1115ab6</field>
    <field name="keywords">PGA_selectMMUXInput PGA_selectMMUXInput</field>
    <field name="text">Selects input source of the M-Mux base is the base address of the PGA module mmuxinput is source of the Mux s negative input This function selects the input source for the M-Mux by mmuxinput Valid values for mmuxinput are PGA_MMUX_NAKED_OPAMP VSSA will be connected as M-Mux input source PGA_MMUX_NON_INVERTING_GAIN_VSSA VSSA_RESARRAY will be connected to M-Mux input for non-inverting gain settings PGA_MMUX_INVERTING_GAIN_NEG PGA_NEG pin will be connected as M-Mux input source for inverting gain settings PGA_MMUX_INVERTING_GAIN_NEG_SHARED PGA_NEG_SHARED will be connected as M-Mux input source for inverting gain settings None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">PGA_NMUXInput</field>
    <field name="url">group__pga__api.html#gac73959f2a2354cc572d8ceb9f66d0760</field>
    <field name="keywords">PGA_NMUXInput PGA_NMUXInput</field>
    <field name="text">Values that can be passed to PGA_selectNMUXInput() as the nmuxinput parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_setOffsetTrimPMOS</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#gaca874192d986e8fd00e32da874bbc73d</field>
    <field name="keywords">PGA_setOffsetTrimPMOS PGA_setOffsetTrimPMOS</field>
    <field name="text">Configures the offset trim for PMOS pair of the desired PGA instance base is the base address of the PGA module This function loads the offset trims for PMOS pair of the desired PGA instance None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">PGA_REGISTER_MUXSEL</field>
    <field name="url">group__pga__api.html#gadf5ee80aa455117460a047ea4fa4f60c</field>
    <field name="keywords">PGA_REGISTER_MUXSEL PGA_REGISTER_MUXSEL</field>
    <field name="text">PGA Register MUXSEL</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_selectNMUXInput</field>
    <field name="args">(uint32_t base, PGA_NMUXInput nmuxinput)</field>
    <field name="url">group__pga__api.html#gae3373d6eed71d1f3f5328cdad1ff7310</field>
    <field name="keywords">PGA_selectNMUXInput PGA_selectNMUXInput</field>
    <field name="text">Selects PGA negative input Mux source base is the base address of the PGA module nmuxinput is source of the Mux s negative input This function selects the source for the negative input of the Mux by nmuxinput Valid values for nmuxinput are PGA_NMUX_RTOP RTOP(inter gain resistor tap point) will be selected as inverting input PGA_NMUX_RTAP RTAP(pre gain resistor tap point) will be selected as inverting input PGA_NMUX_NEG PGA_NEG pin will be selected as inverting input None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_setGain</field>
    <field name="args">(uint32_t base, PGA_GainValue gainValue)</field>
    <field name="url">group__pga__api.html#gaea45311ae41f305407968abf2cb4b031</field>
    <field name="keywords">PGA_setGain PGA_setGain</field>
    <field name="text">Sets PGA gain value base is the base address of the PGA module gainValue is the PGA gain value This function sets the PGA gain value None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">PGA_GainValue</field>
    <field name="url">group__pga__api.html#gaee02ca5cbf724e634d3dcd61a92694d7</field>
    <field name="keywords">PGA_GainValue PGA_GainValue</field>
    <field name="text">Values that can be passed to PGA_setGain() as the gainValue parameter Values that can be passed to PGA_setGain() as the gainValue parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_selectPMUXInput</field>
    <field name="args">(uint32_t base, PGA_PMUXInput pmuxinput)</field>
    <field name="url">group__pga__api.html#gaf44a1edb4bd30b5fe334a143d27cb92a</field>
    <field name="keywords">PGA_selectPMUXInput PGA_selectPMUXInput</field>
    <field name="text">Selects PGA positive input Mux source base is the base address of the PGA module pmuxinput is source of the Mux s positive input This function selects the whether the positive input of the Mux will be connected with PGA_POS pin or VSSA by pmuxinput Valid values for pmuxinput are PGA_PMUX_POS PGA_POS pin will be selected as non-inverting input PGA_PMUX_VSSA Positive pin will be grounded or VSSA will be connected as non-inverting input None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_enable</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#gaf9d4238d864c93525ae9bf33f9b33112</field>
    <field name="keywords">PGA_enable PGA_enable</field>
    <field name="text">Enables PGA base is the base address of the PGA module This function enables the PGA module None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">PGA_PMUXInput</field>
    <field name="url">group__pga__api.html#gafd688cf439b297a418e5cd789ec564b6</field>
    <field name="keywords">PGA_PMUXInput PGA_PMUXInput</field>
    <field name="text">Values that can be passed to PGA_selectPMUXInput() as the pmuxinput parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PGA_enableExternalChop</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__pga__api.html#gaff3933d60a95426d528d0e11b894ce40</field>
    <field name="keywords">PGA_enableExternalChop PGA_enableExternalChop</field>
    <field name="text">Enable external Chopping signal for PGA base is the base address of the PGA module This function enables the external chopping signal for PGA None</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_CHOP_ADC_ASSISTED_ADCSOC</field>
    <field name="url">group__pga__api.html#gga51ae2596f6eec6f61eed726d9f67d7cca356105bc00825bbc2dcfecfba4bc9dab</field>
    <field name="keywords">PGA_CHOP_ADC_ASSISTED_ADCSOC PGA_CHOP_ADC_ASSISTED_ADCSOC</field>
    <field name="text">ADC assisted chop using ADCSOC</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_CHOP_ADC_ASSISTED_EXTCTRL</field>
    <field name="url">group__pga__api.html#gga51ae2596f6eec6f61eed726d9f67d7cca49fc198aa6062b64637b2c0b9fc7a65e</field>
    <field name="keywords">PGA_CHOP_ADC_ASSISTED_EXTCTRL PGA_CHOP_ADC_ASSISTED_EXTCTRL</field>
    <field name="text">PGA_CHOP_EXTCTRL ADC assisted chop using</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_CHOP_DISABLE</field>
    <field name="url">group__pga__api.html#gga51ae2596f6eec6f61eed726d9f67d7ccad6e52438ff8d77539599c88c1240d6bb</field>
    <field name="keywords">PGA_CHOP_DISABLE PGA_CHOP_DISABLE</field>
    <field name="text">Chopping is disabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_CHOP_REGULAR_INTOSC</field>
    <field name="url">group__pga__api.html#gga51ae2596f6eec6f61eed726d9f67d7ccaedaa9a97f13d779b6967d527e64eb0f9</field>
    <field name="keywords">PGA_CHOP_REGULAR_INTOSC PGA_CHOP_REGULAR_INTOSC</field>
    <field name="text">Regular chopping using INTOSC</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_MMUX_NAKED_OPAMP</field>
    <field name="url">group__pga__api.html#gga60a73c488a3b1791ca061ad76911be2ba9db58a159c74099b7f451199273c0ec2</field>
    <field name="keywords">PGA_MMUX_NAKED_OPAMP PGA_MMUX_NAKED_OPAMP</field>
    <field name="text">Naked op-amp mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_MMUX_INVERTING_GAIN_NEG</field>
    <field name="url">group__pga__api.html#gga60a73c488a3b1791ca061ad76911be2bace7f46eaa5e26ddd1c035c53cf3588c2</field>
    <field name="keywords">PGA_MMUX_INVERTING_GAIN_NEG PGA_MMUX_INVERTING_GAIN_NEG</field>
    <field name="text">PGA_NEG as MMUX input for Inverting gain mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_MMUX_NON_INVERTING_GAIN_VSSA</field>
    <field name="url">group__pga__api.html#gga60a73c488a3b1791ca061ad76911be2baf69d8576d058f2d3eec6fb767251c700</field>
    <field name="keywords">PGA_MMUX_NON_INVERTING_GAIN_VSSA PGA_MMUX_NON_INVERTING_GAIN_VSSA</field>
    <field name="text">VSSA as MMUX input for Non-Inverting gain mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_MMUX_INVERTING_GAIN_NEG_SHARED</field>
    <field name="url">group__pga__api.html#gga60a73c488a3b1791ca061ad76911be2baf9b11ba38451da324420f06de25eaa4a</field>
    <field name="keywords">PGA_MMUX_INVERTING_GAIN_NEG_SHARED PGA_MMUX_INVERTING_GAIN_NEG_SHARED</field>
    <field name="text">PGA_NEG_SHARED as MMUX input for Inverting gain mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_LOW_PASS_FILTER_RESISTOR_800_OHM</field>
    <field name="url">group__pga__api.html#gga64e01690db09e9f1581993f67e470ae8a0dab967b9daf2b28af0e96603818254e</field>
    <field name="keywords">PGA_LOW_PASS_FILTER_RESISTOR_800_OHM PGA_LOW_PASS_FILTER_RESISTOR_800_OHM</field>
    <field name="text">Resistor value of 8 0 0 Ohm</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_LOW_PASS_FILTER_RESISTOR_50_OHM</field>
    <field name="url">group__pga__api.html#gga64e01690db09e9f1581993f67e470ae8a2358741ba4bcd188be4ac31c56c8b19b</field>
    <field name="keywords">PGA_LOW_PASS_FILTER_RESISTOR_50_OHM PGA_LOW_PASS_FILTER_RESISTOR_50_OHM</field>
    <field name="text">Resistor value of 5 0 Ohm</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_LOW_PASS_FILTER_DISABLED</field>
    <field name="url">group__pga__api.html#gga64e01690db09e9f1581993f67e470ae8a7feecd0c5fabb05bdb8a9d3fce5cf8b2</field>
    <field name="keywords">PGA_LOW_PASS_FILTER_DISABLED PGA_LOW_PASS_FILTER_DISABLED</field>
    <field name="text">Low pass filter disabled open circuit</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_LOW_PASS_FILTER_RESISTOR_200_OHM</field>
    <field name="url">group__pga__api.html#gga64e01690db09e9f1581993f67e470ae8aae5f16c8f70a885cc84cac3eecfe6de0</field>
    <field name="keywords">PGA_LOW_PASS_FILTER_RESISTOR_200_OHM PGA_LOW_PASS_FILTER_RESISTOR_200_OHM</field>
    <field name="text">Resistor value of 2 0 0 Ohm</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_LOW_PASS_FILTER_RESISTOR_100_OHM</field>
    <field name="url">group__pga__api.html#gga64e01690db09e9f1581993f67e470ae8ad009cc85d3f17ba134c8749d7ceffb90</field>
    <field name="keywords">PGA_LOW_PASS_FILTER_RESISTOR_100_OHM PGA_LOW_PASS_FILTER_RESISTOR_100_OHM</field>
    <field name="text">Resistor value of 1 0 0 Ohm</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_LOW_PASS_FILTER_RESISTOR_400_OHM</field>
    <field name="url">group__pga__api.html#gga64e01690db09e9f1581993f67e470ae8afd013b907dac91bbad9fdb919ad3f880</field>
    <field name="keywords">PGA_LOW_PASS_FILTER_RESISTOR_400_OHM PGA_LOW_PASS_FILTER_RESISTOR_400_OHM</field>
    <field name="text">Resistor value of 4 0 0 Ohm</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_NMUX_INM1</field>
    <field name="url">group__pga__api.html#ggac73959f2a2354cc572d8ceb9f66d0760a6f2993c652dbbacac68f311dbad338f1</field>
    <field name="keywords">PGA_NMUX_INM1 PGA_NMUX_INM1</field>
    <field name="text">PGA_INM1 as inverting input</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_NMUX_INM2</field>
    <field name="url">group__pga__api.html#ggac73959f2a2354cc572d8ceb9f66d0760a7f28dfa434e98c141dc6dca636d34847</field>
    <field name="keywords">PGA_NMUX_INM2 PGA_NMUX_INM2</field>
    <field name="text">PGA_INM2 as inverting input</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_NMUX_RTAP</field>
    <field name="url">group__pga__api.html#ggac73959f2a2354cc572d8ceb9f66d0760ada5f0c925b7a3ca12632f422f1e36a5c</field>
    <field name="keywords">PGA_NMUX_RTAP PGA_NMUX_RTAP</field>
    <field name="text">RTAP as inverting input</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_NMUX_RTOP</field>
    <field name="url">group__pga__api.html#ggac73959f2a2354cc572d8ceb9f66d0760afeb67d085de50a301113750c7e73c294</field>
    <field name="keywords">PGA_NMUX_RTOP PGA_NMUX_RTOP</field>
    <field name="text">RTOP as inverting input</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_GAIN_1</field>
    <field name="url">group__pga__api.html#ggaee02ca5cbf724e634d3dcd61a92694d7a11e83a211ab6b9e4459e1c95e79855af</field>
    <field name="keywords">PGA_GAIN_1 PGA_GAIN_1</field>
    <field name="text">PGA gain value of 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_GAIN_4</field>
    <field name="url">group__pga__api.html#ggaee02ca5cbf724e634d3dcd61a92694d7a26603720747c0c969c378c1b07c36f3a</field>
    <field name="keywords">PGA_GAIN_4 PGA_GAIN_4</field>
    <field name="text">PGA gain value of 4 or 3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_GAIN_32</field>
    <field name="url">group__pga__api.html#ggaee02ca5cbf724e634d3dcd61a92694d7a5df0177d1bc8b51871a2bc69f044b2dd</field>
    <field name="keywords">PGA_GAIN_32 PGA_GAIN_32</field>
    <field name="text">PGA gain value of 3 2 or 3 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_GAIN_16</field>
    <field name="url">group__pga__api.html#ggaee02ca5cbf724e634d3dcd61a92694d7a9c87473b5e2f3e84c29b48d7de9747cd</field>
    <field name="keywords">PGA_GAIN_16 PGA_GAIN_16</field>
    <field name="text">PGA gain value of 1 6 or 1 5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_GAIN_2</field>
    <field name="url">group__pga__api.html#ggaee02ca5cbf724e634d3dcd61a92694d7abfd3d40c901d15038c46808ef84a6fb1</field>
    <field name="keywords">PGA_GAIN_2 PGA_GAIN_2</field>
    <field name="text">PGA gain value of 2 or 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_GAIN_64</field>
    <field name="url">group__pga__api.html#ggaee02ca5cbf724e634d3dcd61a92694d7acfa35d78e90623687f18c2f2a82796f1</field>
    <field name="keywords">PGA_GAIN_64 PGA_GAIN_64</field>
    <field name="text">PGA gain value of 6 4 or 6 3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_GAIN_8</field>
    <field name="url">group__pga__api.html#ggaee02ca5cbf724e634d3dcd61a92694d7aee79072ef1a849c129a99af75d1794e3</field>
    <field name="keywords">PGA_GAIN_8 PGA_GAIN_8</field>
    <field name="text">PGA gain value of 8 or 7</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_PMUX_INP3</field>
    <field name="url">group__pga__api.html#ggafd688cf439b297a418e5cd789ec564b6a0d42c6475ff2cca1da77790987bf02f7</field>
    <field name="keywords">PGA_PMUX_INP3 PGA_PMUX_INP3</field>
    <field name="text">PGA_INP3 as non-inverting input</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_PMUX_INP2</field>
    <field name="url">group__pga__api.html#ggafd688cf439b297a418e5cd789ec564b6a21877c1feefd99a192547cdcc267028e</field>
    <field name="keywords">PGA_PMUX_INP2 PGA_PMUX_INP2</field>
    <field name="text">PGA_INP2 as non-inverting input</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">PGA_PMUX_INP1</field>
    <field name="url">group__pga__api.html#ggafd688cf439b297a418e5cd789ec564b6a6d121b7ca56873e482506800e94c71a5</field>
    <field name="keywords">PGA_PMUX_INP1 PGA_PMUX_INP1</field>
    <field name="text">PGA_INP1 as non-inverting input</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">sci_api</field>
    <field name="url">group__sci__api.html</field>
    <field name="keywords">SCI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_WLEN_7</field>
    <field name="url">group__sci__api.html#ga0598ca502672659bd74da8b54ea58390</field>
    <field name="keywords">SCI_CONFIG_WLEN_7 SCI_CONFIG_WLEN_7</field>
    <field name="text">7 bit data 7 bit data</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SCI_ParityType</field>
    <field name="url">group__sci__api.html#ga061845fa0af9c0b8b6072d973091b497</field>
    <field name="keywords">SCI_ParityType SCI_ParityType</field>
    <field name="text">Values that can be used with SCI_setParityMode() and SCI_getParityMode() to describe the parity of the SCI communication</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_getOverflowStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga08fe17d985e7b64a1a15c0bdd5924176</field>
    <field name="keywords">SCI_getOverflowStatus SCI_getOverflowStatus</field>
    <field name="text">Get the receive FIFO Overflow flag status base is the base address of the SCI port This functions gets the receive FIFO overflow flag status Returns true if overflow has occurred else returned false if an overflow hasn t occurred</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_getConfig</field>
    <field name="args">(uint32_t base, uint32_t lspclkHz, uint32_t *baud, uint32_t *config)</field>
    <field name="url">group__sci__api.html#ga0bba17633f300f0db562531a2bb29a00</field>
    <field name="keywords">SCI_getConfig SCI_getConfig</field>
    <field name="text">Gets the current configuration of a SCI base is the base address of the SCI port lspclkHz is the rate of the clock supplied to the SCI module This is the LSPCLK baud is a pointer to storage for the baud rate config is a pointer to storage for the data format The baud rate and data format for the SCI is determined given an explicitly provided peripheral clock hence the ExpClk suffix The returned baud rate is the actual baud rate it may not be the exact baud rate requested or an official baud rate The data format returned in config is enumerated the same as the config parameter of SCI_setConfig() The peripheral clock is the low speed peripheral clock This will be the value returned by SysCtl_getLowSeedClock() or it can be explicitly hard coded if it is constant and known to save the code/execution overhead of a call to SysCtl_getLowSpeedClock() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_lockAutobaud</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga0c3c8975d3dd838b3b65285cd819bfe9</field>
    <field name="keywords">SCI_lockAutobaud SCI_lockAutobaud</field>
    <field name="text">Locks Autobaud base is the base address of the SCI port This function performs an autobaud lock for the SCI None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_setAddrMultiProcessorMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga0c9144f86f6bc605cd23d9fdf0cecda4</field>
    <field name="keywords">SCI_setAddrMultiProcessorMode SCI_setAddrMultiProcessorMode</field>
    <field name="text">Sets the multiprocessor protocol to address-bit mode base is the base address of the SCI port This function sets the multi-processor protocol to address-bit mode None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_isFIFOEnabled</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga0e9a3714ed3064df9bcbe56121953dfc</field>
    <field name="keywords">SCI_isFIFOEnabled SCI_isFIFOEnabled</field>
    <field name="text">Determines if the FIFO enhancement is enabled base is the base address of the SCI port This function returns a flag indicating whether or not the FIFO enhancement is enabled Returns true if the FIFO enhancement is enabled or false if the FIFO enhancement is disabled</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_INT_TXRDY</field>
    <field name="url">group__sci__api.html#ga0f4d49ce0bec628e4c86083498193d1c</field>
    <field name="keywords">SCI_INT_TXRDY SCI_INT_TXRDY</field>
    <field name="text">TXRDY interrupt TXRDY interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_writeCharBlockingNonFIFO</field>
    <field name="args">(uint32_t base, uint16_t data)</field>
    <field name="url">group__sci__api.html#ga108ee60c802a2479b38b26afba87e2de</field>
    <field name="keywords">SCI_writeCharBlockingNonFIFO SCI_writeCharBlockingNonFIFO</field>
    <field name="text">Waits to send a character from the specified port base is the base address of the SCI port data is the character to be transmitted Sends the character data to the transmit buffer for the specified port If there is no space available in the transmit buffer or the transmit FIFO if it is enabled this function waits until there is space available before returning data is a uint16_t but only 8 bits are written to the SCI port SCI only transmits 8 bit characters None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_WLEN_8</field>
    <field name="url">group__sci__api.html#ga11ed925d81d838218960da1cf3d1e9cd</field>
    <field name="keywords">SCI_CONFIG_WLEN_8 SCI_CONFIG_WLEN_8</field>
    <field name="text">8 bit data 8 bit data</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_INT_RXERR</field>
    <field name="url">group__sci__api.html#ga1345b5490e4e4047989eafddc952568b</field>
    <field name="keywords">SCI_INT_RXERR SCI_INT_RXERR</field>
    <field name="text">RXERR interrupt RXERR interrupt</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_INT_OE</field>
    <field name="url">group__sci__api.html#ga177b491004b1692e618b512c3cab3f73</field>
    <field name="keywords">SCI_INT_OE SCI_INT_OE</field>
    <field name="text">Overrun Error Overrun Error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_resetChannels</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga1aa027d0a63848a281f84024f420a9a1</field>
    <field name="keywords">SCI_resetChannels SCI_resetChannels</field>
    <field name="text">Resets the SCI Transmit and Receive Channels base is the base address of the SCI port This functions resets transmit and receive channels in the SCI None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_INT_TXFF</field>
    <field name="url">group__sci__api.html#ga1d2030b63fd355404bc2eba35ef6c9af</field>
    <field name="keywords">SCI_INT_TXFF SCI_INT_TXFF</field>
    <field name="text">TX FIFO level interrupt TX FIFO level interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_enableTxModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga1dd9bb1543f008ea8be6f79236c92dbb</field>
    <field name="keywords">SCI_enableTxModule SCI_enableTxModule</field>
    <field name="text">Enables transmitting base is the base address of the SCI port Enables SCI by taking SCI out of the software reset Sets the TXENA bit which enables transmit None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_INT_RXFF</field>
    <field name="url">group__sci__api.html#ga2a12a68d8ca0d77826b44f75dbf7daa7</field>
    <field name="keywords">SCI_INT_RXFF SCI_INT_RXFF</field>
    <field name="text">RX FIFO level interrupt RX FIFO level interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_enableFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga310280f30775b4666f0ff244fb1e4116</field>
    <field name="keywords">SCI_enableFIFO SCI_enableFIFO</field>
    <field name="text">Enables the transmit and receive FIFOs base is the base address of the SCI port This functions enables the transmit and receive FIFOs in the SCI None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_WLEN_1</field>
    <field name="url">group__sci__api.html#ga34e403a2d1df6520406fd121d60501e9</field>
    <field name="keywords">SCI_CONFIG_WLEN_1 SCI_CONFIG_WLEN_1</field>
    <field name="text">1 bit data 1 bit data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_disableRxModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga3bd842e55a2d7a6d88f7ca2f467a8853</field>
    <field name="keywords">SCI_disableRxModule SCI_disableRxModule</field>
    <field name="text">Disables receiving base is the base address of the SCI port Disables SCI by taking SCI out of the software reset Clears the RXENA bit which disables receive None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_STOP_MASK</field>
    <field name="url">group__sci__api.html#ga43bbb169f8d7e1c48b58b54516c6eb3b</field>
    <field name="keywords">SCI_CONFIG_STOP_MASK SCI_CONFIG_STOP_MASK</field>
    <field name="text">Mask for extracting stop bits Mask for extracting stop bits</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SCI_RxFIFOLevel</field>
    <field name="url">group__sci__api.html#ga4484ef93f7f2c5b3661390e9447f2617</field>
    <field name="keywords">SCI_RxFIFOLevel SCI_RxFIFOLevel</field>
    <field name="text">Values that can be passed to SCI_setFIFOInterruptLevel() as the rxLevel parameter and returned by SCI_getFIFOInterruptLevel() and SCI_getRxFIFOStatus()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_disableFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga44c4983a36789febfd60f4f21ed0ef51</field>
    <field name="keywords">SCI_disableFIFO SCI_disableFIFO</field>
    <field name="text">Disables the transmit and receive FIFOs base is the base address of the SCI port This functions disables the transmit and receive FIFOs in the SCI None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_WLEN_MASK</field>
    <field name="url">group__sci__api.html#ga4855556cc261ac07ccabfe3a53bd290a</field>
    <field name="keywords">SCI_CONFIG_WLEN_MASK SCI_CONFIG_WLEN_MASK</field>
    <field name="text">Mask for extracting word length Mask for extracting word length</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_STOP_ONE</field>
    <field name="url">group__sci__api.html#ga4a6032341796e3cffe28e1190e582c77</field>
    <field name="keywords">SCI_CONFIG_STOP_ONE SCI_CONFIG_STOP_ONE</field>
    <field name="text">One stop bit One stop bit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_getTxFIFOStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga4e6cc8b077c1d5bc1ef523c416c403f4</field>
    <field name="keywords">SCI_getTxFIFOStatus SCI_getTxFIFOStatus</field>
    <field name="text">Get the transmit FIFO status base is the base address of the SCI port This functions gets the current number of words in the transmit FIFO Returns the current number of words in the transmit FIFO specified as one of the following SCI_FIFO_TX0 SCI_FIFO_TX1 SCI_FIFO_TX2 SCI_FIFO_TX3 SCI_FIFO_TX4 or SCI_FIFO_TX16</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_getRxFIFOStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga508c75cffba2883fe6b925debfb952c3</field>
    <field name="keywords">SCI_getRxFIFOStatus SCI_getRxFIFOStatus</field>
    <field name="text">Get the receive FIFO status base is the base address of the SCI port This functions gets the current number of words in the receive FIFO Returns the current number of words in the receive FIFO specified as one of the following SCI_FIFO_RX0 SCI_FIFO_RX1 SCI_FIFO_RX2 SCI_FIFO_RX3 SCI_FIFO_RX4 or SCI_FIFO_RX16</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_INT_PE</field>
    <field name="url">group__sci__api.html#ga524c9a45f1c6acbde5f6a2a54f1088af</field>
    <field name="keywords">SCI_INT_PE SCI_INT_PE</field>
    <field name="text">Parity Error Parity Error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_setIdleMultiProcessorMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga546268bb163766e345fdda2fe3046b76</field>
    <field name="keywords">SCI_setIdleMultiProcessorMode SCI_setIdleMultiProcessorMode</field>
    <field name="text">Sets the multiprocessor protocol to idle-line mode base is the base address of the SCI port This function sets the multi-processor protocol to idle-line protocol None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_readCharBlockingFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga653cd2c0117234643127b1cd782e7986</field>
    <field name="keywords">SCI_readCharBlockingFIFO SCI_readCharBlockingFIFO</field>
    <field name="text">Waits for a character from the specified port when the FIFO enhancement is enabled base is the base address of the SCI port Gets a character from the receive FIFO for the specified port If there are no characters available this function waits until a character is received before returning Returns immediately in case of Error Returns the character read from the specified port as uint16_t or 0 x0 in case of Error The application must use SCI_getRxStatus() API to check if some error occurred before consuming the data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_disableLoopback</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga6d5db9b4a29bf94df710fc63c2a78890</field>
    <field name="keywords">SCI_disableLoopback SCI_disableLoopback</field>
    <field name="text">Disables Loop Back Test Mode base is the base address of the SCI port Disables the loop back test mode where the Tx pin is no longer internally connected to the Rx pin None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_setWakeFlag</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga6d8885ca0a064e063367cf8aa3c9ac5a</field>
    <field name="keywords">SCI_setWakeFlag SCI_setWakeFlag</field>
    <field name="text">Sets the SCI TXWAKE flag base is the base address of the SCI port This function sets the TXWAKE flag bit to indicate that the next frame is an address frame TXWAKE bit controls selection of data-transmit feature based on which mode is selected from idle-line and address-bit None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_INT_FE</field>
    <field name="url">group__sci__api.html#ga6ec97594cfe13d807f0fc67b35154e77</field>
    <field name="keywords">SCI_INT_FE SCI_INT_FE</field>
    <field name="text">Frame Error Frame Error</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_RXSTATUS_READY</field>
    <field name="url">group__sci__api.html#ga6f30ec3629d3cbb94c439985632ea959</field>
    <field name="keywords">SCI_RXSTATUS_READY SCI_RXSTATUS_READY</field>
    <field name="text">Receiver ready Receiver ready</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SCI_TxFIFOLevel</field>
    <field name="url">group__sci__api.html#ga6fba1f1d41dff0562830f10f597b665f</field>
    <field name="keywords">SCI_TxFIFOLevel SCI_TxFIFOLevel</field>
    <field name="text">Values that can be passed to SCI_setFIFOInterruptLevel() as the txLevel parameter and returned by SCI_getFIFOInteruptLevel() and SCI_getTxFIFOStatus()</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_STOP_TWO</field>
    <field name="url">group__sci__api.html#ga747ddcee7a0baeee2984f52696a21af9</field>
    <field name="keywords">SCI_CONFIG_STOP_TWO SCI_CONFIG_STOP_TWO</field>
    <field name="text">Two stop bits Two stop bits</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_readCharArray</field>
    <field name="args">(uint32_t base, uint16_t *const array, uint16_t length)</field>
    <field name="url">group__sci__api.html#ga779ef3fcf95ab9d4d8dafd572adbf3a9</field>
    <field name="keywords">SCI_readCharArray SCI_readCharArray</field>
    <field name="text">Waits to receive an array of characters from the specified port base is the base address of the SCI port array is the address of the array of characters to be received It is a pointer to the array of characters to be received length is the length of the array or number of characters in the array to be received Receives an array of characters from the receive buffer for the specified port and stores them as an array of characters starting at address array This function waits until the length number of characters are received before returning None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_setFIFOInterruptLevel</field>
    <field name="args">(uint32_t base, SCI_TxFIFOLevel txLevel, SCI_RxFIFOLevel rxLevel)</field>
    <field name="url">group__sci__api.html#ga85013f693224da42aec7fc76f7b16b2c</field>
    <field name="keywords">SCI_setFIFOInterruptLevel SCI_setFIFOInterruptLevel</field>
    <field name="text">Sets the FIFO interrupt level at which interrupts are generated base is the base address of the SCI port txLevel is the transmit FIFO interrupt level specified as one of the following SCI_FIFO_TX0 SCI_FIFO_TX1 SCI_FIFO_TX2 or SCI_FIFO_TX16 rxLevel is the receive FIFO interrupt level specified as one of the following SCI_FIFO_RX0 SCI_FIFO_RX1 SCI_FIFO_RX2 or SCI_FIFO_RX16 This function sets the FIFO level at which transmit and receive interrupts are generated None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_readCharBlockingNonFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga8a1cb29f22a34246d30b43a62cae4bac</field>
    <field name="keywords">SCI_readCharBlockingNonFIFO SCI_readCharBlockingNonFIFO</field>
    <field name="text">Waits for a character from the specified port when the FIFO enhancement is not enabled base is the base address of the SCI port Gets a character from the receive buffer for the specified port If there is no characters available this function waits until a character is received before returning Returns the character read from the specified port as uint16_t</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_enableSleepMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga8bb07d0fd9bbbff44821f6da893bb6ca</field>
    <field name="keywords">SCI_enableSleepMode SCI_enableSleepMode</field>
    <field name="text">Enables Sleep Mode base is the base address of the SCI port Enables the sleep mode in SCI by setting the SLEEP bit in SCICTL1 register None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_RXSTATUS_BREAK</field>
    <field name="url">group__sci__api.html#ga8c18d6bc6033a63028787faa2001035c</field>
    <field name="keywords">SCI_RXSTATUS_BREAK SCI_RXSTATUS_BREAK</field>
    <field name="text">Break detect Break detect</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_enableModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#ga9be05e003f6cf09737349245e2f7ca90</field>
    <field name="keywords">SCI_enableModule SCI_enableModule</field>
    <field name="text">Enables transmitting and receiving base is the base address of the SCI port Enables SCI by taking SCI out of the software reset Sets the TXENA and RXENA bits which enables transmit and receive None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_writeCharArray</field>
    <field name="args">(uint32_t base, const uint16_t *const array, uint16_t length)</field>
    <field name="url">group__sci__api.html#ga9f13d61c0e51cacf1e760e52b50d1b2b</field>
    <field name="keywords">SCI_writeCharArray SCI_writeCharArray</field>
    <field name="text">Waits to send an array of characters from the specified port base is the base address of the SCI port array is the address of the array of characters to be transmitted It is pointer to the array of characters to be transmitted length is the length of the array or number of characters in the array to be transmitted Sends the number of characters specified by length starting at the address array out of the transmit buffer for the specified port If there is no space available in the transmit buffer or the transmit FIFO if it is enabled this function waits until there is space available and length number of characters are transmitted before returning array is a pointer to uint16_ts but only the least significant 8 bits are written to the SCI port SCI only transmits 8 bit characters None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_clearOverflowStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gaa26cf4400102fb416b75aff5d95c1fdf</field>
    <field name="keywords">SCI_clearOverflowStatus SCI_clearOverflowStatus</field>
    <field name="text">Clear the receive FIFO Overflow flag status base is the base address of the SCI port This functions clears the receive FIFO overflow flag status None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_RXSTATUS_FRAMING</field>
    <field name="url">group__sci__api.html#gaa4edf471267d7ea36b804c02275afc1a</field>
    <field name="keywords">SCI_RXSTATUS_FRAMING SCI_RXSTATUS_FRAMING</field>
    <field name="text">Framing error Framing error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_getRxStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gaaa0ea4bd7501eaaddf5a094495f74ffa</field>
    <field name="keywords">SCI_getRxStatus SCI_getRxStatus</field>
    <field name="text">Gets current receiver status flags base is the base address of the SCI port This function returns the current receiver status flags The returned error flags are equivalent to the error bits returned via the previous reading or receiving of a character with the exception that the overrun error is set immediately the overrun occurs rather than when a character is next read Returns a bitwise OR combination of the receiver status flags SCI_RXSTATUS_WAKE SCI_RXSTATUS_PARITY SCI_RXSTATUS_OVERRUN SCI_RXSTATUS_FRAMING SCI_RXSTATUS_BREAK SCI_RXSTATUS_READY and SCI_RXSTATUS_ERROR</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_disableTxModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gaae2fbd7254ab6b55fe2d0544394eafbd</field>
    <field name="keywords">SCI_disableTxModule SCI_disableTxModule</field>
    <field name="text">Disables transmitting base is the base address of the SCI port Disables SCI by taking SCI out of the software reset Clears the TXENA bit which disables transmit None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_getFIFOInterruptLevel</field>
    <field name="args">(uint32_t base, SCI_TxFIFOLevel *txLevel, SCI_RxFIFOLevel *rxLevel)</field>
    <field name="url">group__sci__api.html#gab3f62d057b08525634b52de2ddeed38b</field>
    <field name="keywords">SCI_getFIFOInterruptLevel SCI_getFIFOInterruptLevel</field>
    <field name="text">Gets the FIFO interrupt level at which interrupts are generated base is the base address of the SCI port txLevel is a pointer to storage for the transmit FIFO interrupt level returned as one of the following SCI_FIFO_TX0 SCI_FIFO_TX1 SCI_FIFO_TX2 or SCI_FIFO_TX16 rxLevel is a pointer to storage for the receive FIFO interrupt level returned as one of the following SCI_FIFO_RX0 SCI_FIFO_RX1 SCI_FIFO_RX2 or SCI_FIFO_RX16 This function gets the FIFO level at which transmit and receive interrupts are generated None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_isDataAvailableNonFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gab65c8520f5244e1997b3ceaa5d0796b6</field>
    <field name="keywords">SCI_isDataAvailableNonFIFO SCI_isDataAvailableNonFIFO</field>
    <field name="text">Determines if there are any characters in the receive buffer when the FIFO enhancement is not enabled base is the base address of the SCI port This function returns a flag indicating whether or not there is data available in the receive buffer Returns true if there is data in the receive buffer or false if there is no data in the receive buffer</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_WLEN_2</field>
    <field name="url">group__sci__api.html#gabe8e4240709846d599247a36794ff75f</field>
    <field name="keywords">SCI_CONFIG_WLEN_2 SCI_CONFIG_WLEN_2</field>
    <field name="text">2 bit data 2 bit data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_readCharNonBlocking</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gac0597164632bc6745b30a60b8f65ef35</field>
    <field name="keywords">SCI_readCharNonBlocking SCI_readCharNonBlocking</field>
    <field name="text">Receives a character from the specified port base is the base address of the SCI port Gets a character from the receive buffer for the specified port This function does not block and only reads the receive buffer The user should use SCI_isDataAvailableNonFIFO() or SCI_getRxFIFOStatus() to determine if the receive buffer or FIFO have data available Returns uin16_t which is read from the receive buffer</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_writeCharBlockingFIFO</field>
    <field name="args">(uint32_t base, uint16_t data)</field>
    <field name="url">group__sci__api.html#gac345f0ffdcd6af84784f3899fc53eee2</field>
    <field name="keywords">SCI_writeCharBlockingFIFO SCI_writeCharBlockingFIFO</field>
    <field name="text">Waits to send a character from the specified port when the FIFO enhancement is enabled base is the base address of the SCI port data is the character to be transmitted Sends the character data to the transmit buffer for the specified port If there is no space available in the transmit FIFO this function waits until there is space available before returning data is a uint16_t but only 8 bits are written to the SCI port SCI only transmits 8 bit characters None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_setParityMode</field>
    <field name="args">(uint32_t base, SCI_ParityType parity)</field>
    <field name="url">group__sci__api.html#gac4ba73ec9b9f7ca901cc037c6c336d7b</field>
    <field name="keywords">SCI_setParityMode SCI_setParityMode</field>
    <field name="text">Sets the type of parity base is the base address of the SCI port parity specifies the type of parity to use Sets the type of parity to use for transmitting and expect when receiving The parity parameter must be one of the following SCI_CONFIG_PAR_NONE SCI_CONFIG_PAR_EVEN SCI_CONFIG_PAR_ODD None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_enableRxModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gac5073444bcde67212d9749da81f219aa</field>
    <field name="keywords">SCI_enableRxModule SCI_enableRxModule</field>
    <field name="text">Enables receiving base is the base address of the SCI port Enables SCI by taking SCI out of the software reset Sets the RXENA bit which enables receive None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_disableModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gac59d41324cbad25e42021e2046eadcd7</field>
    <field name="keywords">SCI_disableModule SCI_disableModule</field>
    <field name="text">Disables transmitting and receiving base is the base address of the SCI port Clears the SCIEN TXE and RXE bits The user should ensure that all the data has been sent before disable the module during transmission None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_writeCharNonBlocking</field>
    <field name="args">(uint32_t base, uint16_t data)</field>
    <field name="url">group__sci__api.html#gaca2384b5e33beb850a34ca359442c4af</field>
    <field name="keywords">SCI_writeCharNonBlocking SCI_writeCharNonBlocking</field>
    <field name="text">Sends a character to the specified port base is the base address of the SCI port data is the character to be transmitted Writes the character data to the transmit buffer for the specified port This function does not block and only writes to the transmit buffer The user should use SCI_isSpaceAvailableNonFIFO() or SCI_getTxFIFOStatus() to determine if the transmit buffer or FIFO have space available data is a uint16_t but only 8 bits are written to the SCI port SCI only transmits 8 bit characters None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_enableInterrupt</field>
    <field name="args">(uint32_t base, uint32_t intFlags)</field>
    <field name="url">group__sci__api.html#gacc2edba175e067861397accef2cd4010</field>
    <field name="keywords">SCI_enableInterrupt SCI_enableInterrupt</field>
    <field name="text">Enables individual SCI interrupt sources base is the base address of the SCI port intFlags is the bit mask of the interrupt sources to be enabled Enables the indicated SCI interrupt sources Only the sources that are enabled can be reflected to the processor interrupt disabled sources have no effect on the processor The intFlags parameter is the bitwise OR of any of the following SCI_INT_RXERR RXERR Interrupt SCI_INT_RXRDY_BRKDT RXRDY/BRKDT Interrupt SCI_INT_TXRDY TXRDY Interrupt SCI_INT_TXFF TX FIFO Level Interrupt SCI_INT_RXFF RX FIFO Level Interrupt SCI_INT_FE Frame Error SCI_INT_OE Overrun Error SCI_INT_PE Parity Error None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_enableLoopback</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gad1bd0298389bf01486614d1d1f637cff</field>
    <field name="keywords">SCI_enableLoopback SCI_enableLoopback</field>
    <field name="text">Enables Loop Back Test Mode base is the base address of the SCI port Enables the loop back test mode where the Tx pin is internally connected to the Rx pin None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_RXSTATUS_PARITY</field>
    <field name="url">group__sci__api.html#gad2fb4f025ee62c0f685c5d93e65e944c</field>
    <field name="keywords">SCI_RXSTATUS_PARITY SCI_RXSTATUS_PARITY</field>
    <field name="text">Parity error Parity error</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_RXSTATUS_WAKE</field>
    <field name="url">group__sci__api.html#gad32185ba65a4326c8b9a77a917c4d0d8</field>
    <field name="keywords">SCI_RXSTATUS_WAKE SCI_RXSTATUS_WAKE</field>
    <field name="text">Receiver wake up detect Receiver wake up detect</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_resetRxFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gad3d079fef552bbcbeb7e7d532b5cb64b</field>
    <field name="keywords">SCI_resetRxFIFO SCI_resetRxFIFO</field>
    <field name="text">Resets the receive FIFO base is the base address of the SCI port This functions resets the receive FIFO of the SCI None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_isSpaceAvailableNonFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gad4d95de59d61c89f01bfade7b2a94f5f</field>
    <field name="keywords">SCI_isSpaceAvailableNonFIFO SCI_isSpaceAvailableNonFIFO</field>
    <field name="text">Determines if there is any space in the transmit buffer when the FIFO enhancement is not enabled base is the base address of the SCI port This function returns a flag indicating whether or not there is space available in the transmit buffer when not using the FIFO enhancement Returns true if there is space available in the transmit buffer or false if there is no space available in the transmit buffer</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_getInterruptStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gad5ce839c53219d33b5777b045ae1888c</field>
    <field name="keywords">SCI_getInterruptStatus SCI_getInterruptStatus</field>
    <field name="text">Gets the current interrupt status base is the base address of the SCI port Returns the current interrupt status enumerated as a bit field of values described in SCI_enableInterrupt()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_disableSleepMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gaddc41247edc8c6a298177ab0e70c04c1</field>
    <field name="keywords">SCI_disableSleepMode SCI_disableSleepMode</field>
    <field name="text">Disables Sleep Mode base is the base address of the SCI port Disables the sleep mode in SCI by clearing the SLEEP bit in SCICTL1 register None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_WLEN_5</field>
    <field name="url">group__sci__api.html#gae2e8bc8edc8b1ddc872022b542c60466</field>
    <field name="keywords">SCI_CONFIG_WLEN_5 SCI_CONFIG_WLEN_5</field>
    <field name="text">5 bit data 5 bit data</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_RXSTATUS_OVERRUN</field>
    <field name="url">group__sci__api.html#gae7b02a6b5ec9d2be3342bbc0fa1192ab</field>
    <field name="keywords">SCI_RXSTATUS_OVERRUN SCI_RXSTATUS_OVERRUN</field>
    <field name="text">Overrun error Overrun error</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_INT_RXRDY_BRKDT</field>
    <field name="url">group__sci__api.html#gae946bde032d17d6790c2f187f3f9c16b</field>
    <field name="keywords">SCI_INT_RXRDY_BRKDT SCI_INT_RXRDY_BRKDT</field>
    <field name="text">RXRDY interrupt RXRDY interrupt</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_WLEN_4</field>
    <field name="url">group__sci__api.html#gaeaf7c4dbbfef9bd81d119e24c9a0bc16</field>
    <field name="keywords">SCI_CONFIG_WLEN_4 SCI_CONFIG_WLEN_4</field>
    <field name="text">4 bit data 4 bit data</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_PAR_MASK</field>
    <field name="url">group__sci__api.html#gaed297004266768363f1cc9302ec5954a</field>
    <field name="keywords">SCI_CONFIG_PAR_MASK SCI_CONFIG_PAR_MASK</field>
    <field name="text">Parity Mask Parity Mask</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_getParityMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gaed55fde63548d54b186a151f76a0ea5a</field>
    <field name="keywords">SCI_getParityMode SCI_getParityMode</field>
    <field name="text">Gets the type of parity currently being used base is the base address of the SCI port This function gets the type of parity used for transmitting data and expected when receiving data Returns the current parity settings specified as one of the following SCI_CONFIG_PAR_NONE SCI_CONFIG_PAR_EVEN SCI_CONFIG_PAR_ODD</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_RXSTATUS_ERROR</field>
    <field name="url">group__sci__api.html#gaedd2ffc6a19dc28bdeb039e64042cc5b</field>
    <field name="keywords">SCI_RXSTATUS_ERROR SCI_RXSTATUS_ERROR</field>
    <field name="text">Receiver error Receiver error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_clearInterruptStatus</field>
    <field name="args">(uint32_t base, uint32_t intFlags)</field>
    <field name="url">group__sci__api.html#gaeefbe3bdb0502a0c86923e8da13b74a8</field>
    <field name="keywords">SCI_clearInterruptStatus SCI_clearInterruptStatus</field>
    <field name="text">Clears SCI interrupt sources base is the base address of the SCI port intFlags is a bit mask of the interrupt sources to be cleared The specified SCI interrupt sources are cleared so that they no longer assert This function must be called in the interrupt handler to keep the interrupt from being recognized again immediately upon exit The intFlags parameter has the same definition as the intFlags parameter to SCI_enableInterrupt() None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_WLEN_3</field>
    <field name="url">group__sci__api.html#gaf76a7eceaaec23b0c43ee48d77b25e38</field>
    <field name="keywords">SCI_CONFIG_WLEN_3 SCI_CONFIG_WLEN_3</field>
    <field name="text">3 bit data 3 bit data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_setConfig</field>
    <field name="args">(uint32_t base, uint32_t lspclkHz, uint32_t baud, uint32_t config)</field>
    <field name="url">group__sci__api.html#gaf90d3bd5f5234a9af9ce56914b954235</field>
    <field name="keywords">SCI_setConfig SCI_setConfig</field>
    <field name="text">Sets the configuration of a SCI base is the base address of the SCI port lspclkHz is the rate of the clock supplied to the SCI module This is the LSPCLK baud is the desired baud rate config is the data format for the port number of data bits number of stop bits and parity This function configures the SCI for operation in the specified data format The baud rate is provided in the baud parameter and the data format in the config parameter The config parameter is the bitwise OR of three values the number of data bits the number of stop bits and the parity SCI_CONFIG_WLEN_8 SCI_CONFIG_WLEN_7 SCI_CONFIG_WLEN_6 SCI_CONFIG_WLEN_5 SCI_CONFIG_WLEN_4 SCI_CONFIG_WLEN_3 SCI_CONFIG_WLEN_2 and SCI_CONFIG_WLEN_1 Select from eight to one data bits per byte respectively SCI_CONFIG_STOP_ONE and SCI_CONFIG_STOP_TWO select one or two stop bits respectively SCI_CONFIG_PAR_NONE SCI_CONFIG_PAR_EVEN SCI_CONFIG_PAR_ODD select the parity mode no parity bit even parity bit odd parity bit respectively The peripheral clock is the low speed peripheral clock This will be the value returned by SysCtl_getLowSpeedClock() or it can be explicitly hard coded if it is constant and known to save the code/execution overhead of a call to SysCtl_getLowSpeedClock() A baud rate divider BRR is used in this function to calculate the baud rate The value of BRR is calculated in float and type casted as int to be fed in the SCIHBAUD and SCILBAUD registers This conversion brings an error in the calculated baud rate and the requested Error will be significant when operating at higher baud rates The error is due to lower BRR integer value granularity at higher baud rates None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SCI_CONFIG_WLEN_6</field>
    <field name="url">group__sci__api.html#gaf9f1704b82abbb7c6facb6e541a825e1</field>
    <field name="keywords">SCI_CONFIG_WLEN_6 SCI_CONFIG_WLEN_6</field>
    <field name="text">6 bit data 6 bit data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_setBaud</field>
    <field name="args">(uint32_t base, uint32_t lspclkHz, uint32_t baud)</field>
    <field name="url">group__sci__api.html#gafaf7c602b55b339735f3c0c06506d55d</field>
    <field name="keywords">SCI_setBaud SCI_setBaud</field>
    <field name="text">Sets SCI Baud rate base is the base address of the SCI port lspclkHz is the rate of the clock supplied to the SCI module This is the LSPCLK baud is the desired baud rate This function configures the SCI for operation in the specified baud rate The baud rate is provided in the baud parameter The peripheral clock is the low speed peripheral clock This will be the value returned by SysCtl_getLowSpeedClock() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_performSoftwareReset</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gafc0fa4ea7eefa99dbd0f534e128ba98d</field>
    <field name="keywords">SCI_performSoftwareReset SCI_performSoftwareReset</field>
    <field name="text">Performs a software reset of the SCI and Clears all reported receiver status flags base is the base address of the SCI port This function performs a software reset of the SCI port It affects the operating flags of the SCI but it neither affects the configuration bits nor restores the reset values None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_disableInterrupt</field>
    <field name="args">(uint32_t base, uint32_t intFlags)</field>
    <field name="url">group__sci__api.html#gafe077d1f9438fad6700548afe02e8a25</field>
    <field name="keywords">SCI_disableInterrupt SCI_disableInterrupt</field>
    <field name="text">Disables individual SCI interrupt sources base is the base address of the SCI port intFlags is the bit mask of the interrupt sources to be disabled Disables the indicated SCI interrupt sources Only the sources that are enabled can be reflected to the processor interrupt disabled sources have no effect on the processor The intFlags parameter has the same definition as the intFlags parameter to SCI_enableInterrupt() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_resetTxFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gaff5c21ec6720284d88a15c511337c215</field>
    <field name="keywords">SCI_resetTxFIFO SCI_resetTxFIFO</field>
    <field name="text">Resets the transmit FIFO base is the base address of the SCI port This functions resets the transmit FIFO of the SCI None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SCI_isTransmitterBusy</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__sci__api.html#gaffd040a634046e966411b3706df59c59</field>
    <field name="keywords">SCI_isTransmitterBusy SCI_isTransmitterBusy</field>
    <field name="text">Determines whether the SCI transmitter is busy or not base is the base address of the SCI port Allows the caller to determine whether all transmitted bytes have cleared the transmitter hardware when the FIFO is not enabled When the FIFO is enabled this function allows the caller to determine whether there is any data in the FIFO Without the FIFO enabled if false is returned the transmit buffer and shift registers are empty and the transmitter is not busy With the FIFO enabled if false is returned the FIFO is empty This does not necessarily mean that the transmitter is not busy The empty FIFO does not reflect the status of the transmitter shift register The FIFO may be empty while the transmitter is still transmitting data Returns true if the SCI is transmitting or false if transmissions are complete</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_CONFIG_PAR_NONE</field>
    <field name="url">group__sci__api.html#gga061845fa0af9c0b8b6072d973091b497a3b63ffa711fe21b1e789bea06ab841f6</field>
    <field name="keywords">SCI_CONFIG_PAR_NONE SCI_CONFIG_PAR_NONE</field>
    <field name="text">No parity</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_CONFIG_PAR_EVEN</field>
    <field name="url">group__sci__api.html#gga061845fa0af9c0b8b6072d973091b497a5898c0082fa887334fbec9df985215c5</field>
    <field name="keywords">SCI_CONFIG_PAR_EVEN SCI_CONFIG_PAR_EVEN</field>
    <field name="text">Even parity</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_CONFIG_PAR_ODD</field>
    <field name="url">group__sci__api.html#gga061845fa0af9c0b8b6072d973091b497aaa2a106064c58ffc63472445919399db</field>
    <field name="keywords">SCI_CONFIG_PAR_ODD SCI_CONFIG_PAR_ODD</field>
    <field name="text">Odd parity</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX3</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617a0a5779a184a99f10ff056615a7d90956</field>
    <field name="keywords">SCI_FIFO_RX3 SCI_FIFO_RX3</field>
    <field name="text">Receive interrupt 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX7</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617a277fed0b23063bff4876ea9e74cf302f</field>
    <field name="keywords">SCI_FIFO_RX7 SCI_FIFO_RX7</field>
    <field name="text">Receive interrupt 7 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX16</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617a3283d0484336c2d4d8c0482d6c0e034b</field>
    <field name="keywords">SCI_FIFO_RX16 SCI_FIFO_RX16</field>
    <field name="text">Receive interrupt full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX12</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617a3bd4632ab6c92afd3087b10f98d7f40a</field>
    <field name="keywords">SCI_FIFO_RX12 SCI_FIFO_RX12</field>
    <field name="text">Receive interrupt 1 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX8</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617a5afb04202443817cf4ec5f604d5a8f3c</field>
    <field name="keywords">SCI_FIFO_RX8 SCI_FIFO_RX8</field>
    <field name="text">Receive interrupt 8 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX14</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617a5fe5e251a22e89fb8ebdb9b4fbbe481b</field>
    <field name="keywords">SCI_FIFO_RX14 SCI_FIFO_RX14</field>
    <field name="text">Receive interrupt 1 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX4</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617a689295885aa686ce1215abbc50cc456f</field>
    <field name="keywords">SCI_FIFO_RX4 SCI_FIFO_RX4</field>
    <field name="text">Receive interrupt 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX5</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617a6e2746e20285ecf719491179f3ccf9fa</field>
    <field name="keywords">SCI_FIFO_RX5 SCI_FIFO_RX5</field>
    <field name="text">Receive interrupt 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX15</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617a849605d47c2f70c8b6196510ad48689f</field>
    <field name="keywords">SCI_FIFO_RX15 SCI_FIFO_RX15</field>
    <field name="text">Receive interrupt 1 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX11</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617a8711a92f14527be4b8a6b89619e499e7</field>
    <field name="keywords">SCI_FIFO_RX11 SCI_FIFO_RX11</field>
    <field name="text">Receive interrupt 1 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX1</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617a954c2ed201f794a8f2675c33cdd5a045</field>
    <field name="keywords">SCI_FIFO_RX1 SCI_FIFO_RX1</field>
    <field name="text">Receive interrupt 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX9</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617aa45e39964023f548dadb524f2aec95c4</field>
    <field name="keywords">SCI_FIFO_RX9 SCI_FIFO_RX9</field>
    <field name="text">Receive interrupt 9 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX10</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617abee18ff8402622167559d17cb390d41f</field>
    <field name="keywords">SCI_FIFO_RX10 SCI_FIFO_RX10</field>
    <field name="text">Receive interrupt 1 0 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX13</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617aca8a8b68d08f7a8cea7de20866ceccd2</field>
    <field name="keywords">SCI_FIFO_RX13 SCI_FIFO_RX13</field>
    <field name="text">Receive interrupt 1 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX0</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617adc5c97483710210e8a8b73747d01c4c7</field>
    <field name="keywords">SCI_FIFO_RX0 SCI_FIFO_RX0</field>
    <field name="text">Receive interrupt empty</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX2</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617aee6ee16632db82e8cc96883b1da58604</field>
    <field name="keywords">SCI_FIFO_RX2 SCI_FIFO_RX2</field>
    <field name="text">Receive interrupt 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_RX6</field>
    <field name="url">group__sci__api.html#gga4484ef93f7f2c5b3661390e9447f2617af90bb8d99ce3fc4489603039dffdc464</field>
    <field name="keywords">SCI_FIFO_RX6 SCI_FIFO_RX6</field>
    <field name="text">Receive interrupt 6 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX6</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa06a33e4bf00089166614645ff547b806</field>
    <field name="keywords">SCI_FIFO_TX6 SCI_FIFO_TX6</field>
    <field name="text">Transmit interrupt 6 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX12</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa1442b372de19b8e118d2661f2063daac</field>
    <field name="keywords">SCI_FIFO_TX12 SCI_FIFO_TX12</field>
    <field name="text">Transmit interrupt 1 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX14</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa20701a33cdffd293872847e58f8d8d1b</field>
    <field name="keywords">SCI_FIFO_TX14 SCI_FIFO_TX14</field>
    <field name="text">Transmit interrupt 1 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX8</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa3ca314bde9e4b18dca8fb695cd7ef0b4</field>
    <field name="keywords">SCI_FIFO_TX8 SCI_FIFO_TX8</field>
    <field name="text">Transmit interrupt 8 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX5</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa526b5b3f34646a60397bca56a3a01bcb</field>
    <field name="keywords">SCI_FIFO_TX5 SCI_FIFO_TX5</field>
    <field name="text">Transmit interrupt 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX15</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa57bfafbefbe1f916de168970923a71ce</field>
    <field name="keywords">SCI_FIFO_TX15 SCI_FIFO_TX15</field>
    <field name="text">Transmit interrupt 1 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX2</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa644feb6574fe2479c7f516fd67a1ee55</field>
    <field name="keywords">SCI_FIFO_TX2 SCI_FIFO_TX2</field>
    <field name="text">Transmit interrupt 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX11</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa6a5d6bc33004c3318d2dcd81651ed76f</field>
    <field name="keywords">SCI_FIFO_TX11 SCI_FIFO_TX11</field>
    <field name="text">Transmit interrupt 1 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX10</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa6dc634d9bccd492088b82aa1b0b83057</field>
    <field name="keywords">SCI_FIFO_TX10 SCI_FIFO_TX10</field>
    <field name="text">Transmit interrupt 1 0 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX13</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa6dd64df775f3a88e5699e0a3802893cf</field>
    <field name="keywords">SCI_FIFO_TX13 SCI_FIFO_TX13</field>
    <field name="text">Transmit interrupt 1 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX7</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa71a259192c9457e0f7251a962253592e</field>
    <field name="keywords">SCI_FIFO_TX7 SCI_FIFO_TX7</field>
    <field name="text">Transmit interrupt 7 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX9</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa779ffc123441fa04cbf2187ad2480549</field>
    <field name="keywords">SCI_FIFO_TX9 SCI_FIFO_TX9</field>
    <field name="text">Transmit interrupt 9 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX4</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa7a9c0f68f164a0971fb428bf74ce88b7</field>
    <field name="keywords">SCI_FIFO_TX4 SCI_FIFO_TX4</field>
    <field name="text">Transmit interrupt 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX1</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fa979d82a81780204d6d3a8c1ee3898e1a</field>
    <field name="keywords">SCI_FIFO_TX1 SCI_FIFO_TX1</field>
    <field name="text">Transmit interrupt 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX3</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fab1c4df7f4095324fc0496f62c22588c5</field>
    <field name="keywords">SCI_FIFO_TX3 SCI_FIFO_TX3</field>
    <field name="text">Transmit interrupt 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX16</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665faca14492b1643c751986e78b1b80d72ef</field>
    <field name="keywords">SCI_FIFO_TX16 SCI_FIFO_TX16</field>
    <field name="text">Transmit interrupt full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SCI_FIFO_TX0</field>
    <field name="url">group__sci__api.html#gga6fba1f1d41dff0562830f10f597b665fad28054d31b4b804cb2f58f5e62f5a0aa</field>
    <field name="keywords">SCI_FIFO_TX0 SCI_FIFO_TX0</field>
    <field name="text">Transmit interrupt empty</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">spi_api</field>
    <field name="url">group__spi__api.html</field>
    <field name="keywords">SPI</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_writeDataNonBlocking</field>
    <field name="args">(uint32_t base, uint16_t data)</field>
    <field name="url">group__spi__api.html#ga05ba29699e4fa08adcbcf1ff49212316</field>
    <field name="keywords">SPI_writeDataNonBlocking SPI_writeDataNonBlocking</field>
    <field name="text">Puts a data element into the SPI transmit buffer base specifies the SPI module base address data is the left-justified data to be transmitted over SPI This function places the supplied data into the transmit buffer of the specified SPI module The data being sent must be left-justified in data The lower 1 6 N bits will be discarded where N is the data width selected in SPI_setConfig() For example if configured for a 6 bit data width the lower 1 0 bits of data will be discarded None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_resetTxFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga08e77fb24cae5c8a7f28beae9a9b664a</field>
    <field name="keywords">SPI_resetTxFIFO SPI_resetTxFIFO</field>
    <field name="text">Resets the transmit FIFO base is the base address of the SPI port This function resets the transmit FIFO setting the FIFO pointer back to zero None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_disableTriWire</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga0d4faf9ca5cffda1a569eb7d14b6511b</field>
    <field name="keywords">SPI_disableTriWire SPI_disableTriWire</field>
    <field name="text">Disables SPI 3 wire mode base is the base address of the SPI port This function disables 3 wire mode SPI will operate in normal 4 wire mode None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_enableLoopback</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga109f54faebee50016173c009e4a85a48</field>
    <field name="keywords">SPI_enableLoopback SPI_enableLoopback</field>
    <field name="text">Enables SPI loopback mode base is the base address of the SPI port This function enables loopback mode This mode is only valid during controller mode and is helpful during device testing as it internally connects PICO and POCI None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_enableTalk</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga1243947c1a217892f360f1769a6cb653</field>
    <field name="keywords">SPI_enableTalk SPI_enableTalk</field>
    <field name="text">Enable Trasnmit base is the base address of the SPI port This function sets the TALK bit enabling the data trasnmission This bit is enabled by SPI_setConfig if the parameter mode is selected as SPI_MODE_PERIPHERAL or SPI_MODE_CONTROLLER None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_pollingFIFOTransaction</field>
    <field name="args">(uint32_t base, uint16_t charLength, uint16_t *pTxBuffer, uint16_t *pRxBuffer, uint16_t numOfWords, uint16_t txDelay)</field>
    <field name="url">group__spi__api.html#ga1b1aec6f36f2b7606cc71f0909fda5b7</field>
    <field name="keywords">SPI_pollingFIFOTransaction SPI_pollingFIFOTransaction</field>
    <field name="text">This function is used to initiate SPI transaction of specified character length and N words of transaction base specifies the SPI module base address charLength specifies the SPI character length of SPI transaction pTxBuffer specifies the pointer to transmit buffer pRxBuffer specifies the pointer to receive buffer numOfWords specified the number of data to be transmitted received The SPI must be configured to the provided charLength BEFORE the function is called This function does not set/change the SPI char length none</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_readRxEmulationBuffer</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga25f756f5f99b40a034731566ede73952</field>
    <field name="keywords">SPI_readRxEmulationBuffer SPI_readRxEmulationBuffer</field>
    <field name="text">Returns the Emulation Buffer Received Data base is the base address of the SPI port This function returns the Emulation Buffer Received Data Rx emulation buffer data</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SPI_PTEPolarity</field>
    <field name="url">group__spi__api.html#ga29a3646b19e9eec25ffcfdcab74f45ee</field>
    <field name="keywords">SPI_PTEPolarity SPI_PTEPolarity</field>
    <field name="text">Values that can be passed to SPI_setPTESignalPolarity() as the polarity parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_isBusy</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga2e6fc28f6e555930de491f2b7fc5bf7d</field>
    <field name="keywords">SPI_isBusy SPI_isBusy</field>
    <field name="text">Determines whether the SPI transmitter is busy or not base is the base address of the SPI port This function allows the caller to determine whether all transmitted bytes have cleared the transmitter hardware If false is returned then the transmit FIFO is empty and all bits of the last transmitted word have left the hardware shift register This function is only valid when operating in FIFO mode Returns true if the SPI is transmitting or false if all transmissions are complete</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_receive16Bits</field>
    <field name="args">(uint32_t base, SPI_endianess endianness, uint16_t dummyData, uint16_t txDelay)</field>
    <field name="url">group__spi__api.html#ga33536bd1a5789526594a99837703d5c0</field>
    <field name="keywords">SPI_receive16Bits SPI_receive16Bits</field>
    <field name="text">This function is used to receive a 1 6 bit word of data base specifies the SPI module base address endianness specifies the endianess of received data dummyData is the data which is transmitted to initiate SPI transaction to receive SPI data txDelay specifies the number of serial clock cycles delay time after completion of perious word This function is used to receive a 1 6 bit word of data This function uses SPI_pollingFIFOTransaction function SPI character length must be configured to 8 bits BEFORE calling the function the received 1 6 bit word</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SPI_RxFIFOLevel</field>
    <field name="url">group__spi__api.html#ga335ad38fd0e0483abed9adc7dcf7bf8e</field>
    <field name="keywords">SPI_RxFIFOLevel SPI_RxFIFOLevel</field>
    <field name="text">Values that can be passed to SPI_setFIFOInterruptLevel() as the rxLevel parameter returned by SPI_getFIFOInterruptLevel() in the rxLevel parameter and returned by SPI_getRxFIFOStatus()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_disableHighSpeedMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga33dd696528b49788d173c26dd371994a</field>
    <field name="keywords">SPI_disableHighSpeedMode SPI_disableHighSpeedMode</field>
    <field name="text">Disables SPI high speed mode base is the base address of the SPI port This function disables high speed mode High speed mode is disabled by default after reset None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_transmit16Bits</field>
    <field name="args">(base, txData)</field>
    <field name="url">group__spi__api.html#ga3409d09dc697cddbcd367486512dc333</field>
    <field name="keywords">SPI_transmit16Bits SPI_transmit16Bits</field>
    <field name="text">This macro definition is used to transmit a 1 6 bit word of data base specifies the SPI module base address txData is the data to be transmitted over SPI This macro definition is to transmit a 1 6 bit word of data This macro uses SPI_pollingNonFIFOTransaction function SPI character length must be configured to 1 6 bits BEFORE calling the function None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_writeDataBlockingFIFO</field>
    <field name="args">(uint32_t base, uint16_t data)</field>
    <field name="url">group__spi__api.html#ga34c43777654aa2fcaee92dd4716b435d</field>
    <field name="keywords">SPI_writeDataBlockingFIFO SPI_writeDataBlockingFIFO</field>
    <field name="text">Waits for space in the FIFO and then puts data into the transmit buffer base specifies the SPI module base address data is the left-justified data to be transmitted over SPI This function places the supplied data into the transmit buffer of the specified SPI module once space is available in the transmit FIFO This function should only be used when the FIFO is enabled The data being sent must be left-justified in data The lower 1 6 N bits will be discarded where N is the data width selected in SPI_setConfig() For example if configured for a 6 bit data width the lower 1 0 bits of data will be discarded None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SPI_TxFIFOLevel</field>
    <field name="url">group__spi__api.html#ga36e17a38150b8f065d2770c68497ba77</field>
    <field name="keywords">SPI_TxFIFOLevel SPI_TxFIFOLevel</field>
    <field name="text">Values that can be passed to SPI_setFIFOInterruptLevel() as the txLevel parameter returned by SPI_getFIFOInterruptLevel() in the txLevel parameter and returned by SPI_getTxFIFOStatus()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_resetRxFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga372711acfdc1ba004bb146bee2ea9063</field>
    <field name="keywords">SPI_resetRxFIFO SPI_resetRxFIFO</field>
    <field name="text">Resets the receive FIFO base is the base address of the SPI port This function resets the receive FIFO setting the FIFO pointer back to zero None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_receive32Bits</field>
    <field name="args">(uint32_t base, SPI_endianess endianness, uint16_t dummyData, uint16_t txDelay)</field>
    <field name="url">group__spi__api.html#ga3f59b257fbbe444f9c276ac08e88ea56</field>
    <field name="keywords">SPI_receive32Bits SPI_receive32Bits</field>
    <field name="text">This function is used to receive a 3 2 bit word of data base specifies the SPI module base address endianness specifies the endianess of received data dummyData is the data which is transmitted to initiate SPI transaction to receive SPI data txDelay specifies the number of serial clock cycles delay time after completion of perious word This function is used to receive a 3 2 bit word of data This function uses SPI_pollingFIFOTransaction function SPI character length must be configured to 8 bits BEFORE calling the function the received 3 2 bit word</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_readDataBlockingFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga418133cac5bc8ad7a859ea520a23c626</field>
    <field name="keywords">SPI_readDataBlockingFIFO SPI_readDataBlockingFIFO</field>
    <field name="text">Waits for data in the FIFO and then reads it from the receive buffer base specifies the SPI module base address This function waits until there is data in the receive FIFO and then reads received data from the receive buffer This function should only be used when FIFO mode is enabled Only the lower N bits of the value written to data contain valid data where N is the data width as configured by SPI_setConfig() For example if the interface is configured for 8 bit data width only the lower 8 bits of the value written to data contain valid data Returns the word of data read from the SPI receive buffer</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_pollingNonFIFOTransaction</field>
    <field name="args">(uint32_t base, uint16_t charLength, uint16_t data)</field>
    <field name="url">group__spi__api.html#ga4895a230620eee7ed4cd542adb75e40c</field>
    <field name="keywords">SPI_pollingNonFIFOTransaction SPI_pollingNonFIFOTransaction</field>
    <field name="text">This function is used to initiate SPI transaction of specified character length base specifies the SPI module base address charLength specifies the SPI character length of SPI transaction data specified the data to be transmitted The SPI must be configured to the provided charLength BEFORE the function is called This function does not set/change the SPI char length</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_setFIFOInterruptLevel</field>
    <field name="args">(uint32_t base, SPI_TxFIFOLevel txLevel, SPI_RxFIFOLevel rxLevel)</field>
    <field name="url">group__spi__api.html#ga4e1fde09eb8da4a77d161d7ce1e62ba4</field>
    <field name="keywords">SPI_setFIFOInterruptLevel SPI_setFIFOInterruptLevel</field>
    <field name="text">Sets the FIFO level at which interrupts are generated base is the base address of the SPI port txLevel is the transmit FIFO interrupt level specified as SPI_FIFO_TX0 SPI_FIFO_TX1 SPI_FIFO_TX2 or SPI_FIFO_TX16 rxLevel is the receive FIFO interrupt level specified as SPI_FIFO_RX0 SPI_FIFO_RX1 SPI_FIFO_RX2 or SPI_FIFO_RX16 This function sets the FIFO level at which transmit and receive interrupts are generated None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_transmitN16BitWord</field>
    <field name="args">(base, txBuffer, numOfWords, txDelay)</field>
    <field name="url">group__spi__api.html#ga4ec0b76f75154db24a1f9da6dad1104a</field>
    <field name="keywords">SPI_transmitN16BitWord SPI_transmitN16BitWord</field>
    <field name="text">This macro definition can be used to transmit N 1 6 bit words of data base specifies the SPI module base address txBuffer is the transmit buffer to be transmitted over SPI numOfWords is the number of 1 6 bit word to be transmitted txDelay specifies the number of serial clock cycles delay time after completion of perious word This function can be used to transmit N 1 6 bit words of data This function uses SPI_pollingFIFOTransaction function SPI character length must be configured to 1 6 bits BEFORE calling the function None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_clearInterruptStatus</field>
    <field name="args">(uint32_t base, uint32_t intFlags)</field>
    <field name="url">group__spi__api.html#ga4ec4660abc56014aa5fd333a9203789b</field>
    <field name="keywords">SPI_clearInterruptStatus SPI_clearInterruptStatus</field>
    <field name="text">Clears SPI interrupt sources base specifies the SPI module base address intFlags is a bit mask of the interrupt sources to be cleared This function clears the specified SPI interrupt sources so that they no longer assert This function must be called in the interrupt handler to keep the interrupts from being triggered again immediately upon exit The intFlags parameter can consist of a bit field of the following values SPI_INT_RX_OVERRUN SPI_INT_RX_DATA_TX_EMPTY SPI_INT_RXFF SPI_INT_RXFF_OVERFLOW SPI_INT_TXFF SPI_INT_RX_DATA_TX_EMPTY is cleared by a read of the receive receive buffer so it usually doesn t need to be cleared using this function Also note that SPI_INT_RX_OVERRUN SPI_INT_RX_DATA_TX_EMPTY SPI_INT_RXFF_OVERFLOW and SPI_INT_RXFF are associated with SPIRXINT SPI_INT_TXFF is associated with SPITXINT None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_transmitNBytes</field>
    <field name="args">(base, txBuffer, numOfWords, txDelay)</field>
    <field name="url">group__spi__api.html#ga5324ba994390800daa7d5fca0f304aaa</field>
    <field name="keywords">SPI_transmitNBytes SPI_transmitNBytes</field>
    <field name="text">This macro definition can be used to transmit N bytes of data base specifies the SPI module base address txBuffer is the transmit buffer to be transmitted over SPI numOfWords is the number of bytes to be transmitted txDelay specifies the number of serial clock cycles delay time after completion of perious word This macro definition can be used to transmit N bytes of data This macro definition uses SPI_pollingFIFOTransaction function SPI character length must be configured to 8 bits BEFORE calling the function None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_setTxFifoTransmitDelay</field>
    <field name="args">(uint32_t base, uint16_t delay)</field>
    <field name="url">group__spi__api.html#ga592b9e1266470a1b50ef7c38f817ec78</field>
    <field name="keywords">SPI_setTxFifoTransmitDelay SPI_setTxFifoTransmitDelay</field>
    <field name="text">Configures the FIFO Transmit Delay base is the base address of the SPI port delay Tx FIFO delay to be configured in cycles 0 0 xFF This function sets the delay between every transfer from FIFO transmit buffer to transmit shift register The delay is defined in number SPI serial clock cycles None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_disableLoopback</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga5989fc1b9e4182e8b07fcb1f5e6ea566</field>
    <field name="keywords">SPI_disableLoopback SPI_disableLoopback</field>
    <field name="text">Disables SPI loopback mode base is the base address of the SPI port This function disables loopback mode Loopback mode is disabled by default after reset None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SPI_Mode</field>
    <field name="url">group__spi__api.html#ga60a7e3d74577b38aa79ea6983362f942</field>
    <field name="keywords">SPI_Mode SPI_Mode</field>
    <field name="text">Values that can be passed to SPI_setConfig() as the mode parameter Values that can be passed to SPI_setConfig() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_enableTriWire</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga6931b9c117738c731c7319c882bdbd54</field>
    <field name="keywords">SPI_enableTriWire SPI_enableTriWire</field>
    <field name="text">Enables SPI 3 wire mode base is the base address of the SPI port This function enables 3 wire mode When in controller mode this allows SPIPICO to become SPICOCI and SPIPOCI to become free for non-SPI use When in peripheral mode SPIPOCI because the SPIPIPO pin and SPIPICO is free for non-SPI use None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_enableHighSpeedMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga6f676970c11f148a957a1fbe226e3e5b</field>
    <field name="keywords">SPI_enableHighSpeedMode SPI_enableHighSpeedMode</field>
    <field name="text">Enables SPI high speed mode base is the base address of the SPI port This function enables high speed mode None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_receiveNWordsWithcharLength</field>
    <field name="args">(base, charLength, rxBuffer, numOfWords, txDelay)</field>
    <field name="url">group__spi__api.html#ga759d67c315bb1e4570ead8467871bf0b</field>
    <field name="keywords">SPI_receiveNWordsWithcharLength SPI_receiveNWordsWithcharLength</field>
    <field name="text">SPI_pollingFIFOTransaction base charLength NULL rxBuffer numOfWords txDelay This macro is used to receive N words with previously configured character length base specifies the SPI module base address charLength specifies the SPI character length of SPI transaction rxBuffer specifies receive buffer which will store the received bytes numOfWords specifies the number of words with specified character length txDelay specifies the number of serial clock cycles delay time after completion of perious word This function is used to receive N words with specified character length This function uses SPI_pollingFIFOTransaction function SPI character length must be configured to required value BEFORE calling the function and passed as the charLength parameter None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SPI_TransferProtocol</field>
    <field name="url">group__spi__api.html#ga799f6216550a736a4cf0fb4ed75cbe78</field>
    <field name="keywords">SPI_TransferProtocol SPI_TransferProtocol</field>
    <field name="text">Values that can be passed to SPI_setConfig() as the protocol parameter Values that can be passed to SPI_setConfig() as the protocol parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_readDataNonBlocking</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#ga7a57915903b18dba052696278ec2c0e1</field>
    <field name="keywords">SPI_readDataNonBlocking SPI_readDataNonBlocking</field>
    <field name="text">Gets a data element from the SPI receive buffer base specifies the SPI module base address This function gets received data from the receive buffer of the specified SPI module and returns it Only the lower N bits of the value written to data contain valid data where N is the data width as configured by SPI_setConfig() For example if the interface is configured for 8 bit data width only the lower 8 bits of the value written to data contain valid data Returns the word of data read from the SPI receive buffer</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_transmitNWordsWithCharLength</field>
    <field name="args">(base, charLength, txBuffer, numOfWords, txDelay)</field>
    <field name="url">group__spi__api.html#ga7c6f68b0edf68f8e3d2c8f5072368d43</field>
    <field name="keywords">SPI_transmitNWordsWithCharLength SPI_transmitNWordsWithCharLength</field>
    <field name="text">SPI_pollingFIFOTransaction base charLength txBuffer NULL numOfWords txDelay This macro definition can be used to transmit N with previously configured SPI character length base specifies the SPI module base address charLength specifies the SPI character length txBuffer is the transmit buffer to be transmitted over SPI numOfWords is the number of 1 6 bit word to be transmitted txDelay specifies the number of serial clock cycles delay time after completion of perious word This macro definition can be used to transmit N with configurable SPI character length This macro uses SPI_pollingFIFOTransaction function SPI character length must be configured to required value BEFORE calling the function and passed as the charLength parameter None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_INT_RXFF_OVERFLOW</field>
    <field name="url">group__spi__api.html#ga7eb46fff567509fff4fe673cc637229d</field>
    <field name="keywords">SPI_INT_RXFF_OVERFLOW SPI_INT_RXFF_OVERFLOW</field>
    <field name="text">RX FIFO overflow RX FIFO overflow</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_setBaudRate</field>
    <field name="args">(uint32_t base, uint32_t lspclkHz, uint32_t bitRate)</field>
    <field name="url">group__spi__api.html#ga866e6000de4d1d303fd4dcb5f83434be</field>
    <field name="keywords">SPI_setBaudRate SPI_setBaudRate</field>
    <field name="text">Configures the baud rate of the serial peripheral interface base specifies the SPI module base address lspclkHz is the rate of the clock supplied to the SPI module LSPCLK in Hz bitRate specifies the clock rate in Hz This function configures the SPI baud rate The bitRate parameter defines the bit rate for the SPI This bit rate must satisfy the following clock ratio criteria bitRate can be no greater than lspclkHz divided by 4 lspclkHz bitRate cannot be greater than 1 2 8 The peripheral clock is the low speed peripheral clock This value is returned by SysCtl_getLowSpeedClock() or it can be explicitly hard coded if it is constant and known to save the code/execution overhead of a call to SysCtl_getLowSpeedClock() SPI_setConfig() also sets the baud rate Use SPI_setBaudRate() if you wish to configure it separately from protocol and mode None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_INT_RXFF</field>
    <field name="url">group__spi__api.html#ga8d7e1f5fabb3ba8a82743ce0cb8fea0a</field>
    <field name="keywords">SPI_INT_RXFF SPI_INT_RXFF</field>
    <field name="text">RX FIFO level interrupt RX FIFO level interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_writeDataBlockingNonFIFO</field>
    <field name="args">(uint32_t base, uint16_t data)</field>
    <field name="url">group__spi__api.html#ga9293a42b5f06e76c482b083dbffc5591</field>
    <field name="keywords">SPI_writeDataBlockingNonFIFO SPI_writeDataBlockingNonFIFO</field>
    <field name="text">Waits for the transmit buffer to empty and then writes data to it base specifies the SPI module base address data is the left-justified data to be transmitted over SPI This function places the supplied data into the transmit buffer of the specified SPI module once it is empty This function should not be used when FIFO mode is enabled The data being sent must be left-justified in data The lower 1 6 N bits will be discarded where N is the data width selected in SPI_setConfig() For example if configured for a 6 bit data width the lower 1 0 bits of data will be discarded None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_setPTESignalPolarity</field>
    <field name="args">(uint32_t base, SPI_PTEPolarity polarity)</field>
    <field name="url">group__spi__api.html#ga946a1a915173562b36dd5047d1ec43e2</field>
    <field name="keywords">SPI_setPTESignalPolarity SPI_setPTESignalPolarity</field>
    <field name="text">Set the peripheral select SPIPTE signal polarity base is the base address of the SPI port polarity is the SPIPTE signal polarity This function sets the polarity of the peripheral select SPIPTE signal The two modes to choose from for the polarity parameter are SPI_PTE_ACTIVE_LOW for active-low polarity typical and SPI_PTE_ACTIVE_HIGH for active-high polarity considered inverted This has no effect on the PTE signal when in controller mode It is only applicable to peripheral mode None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_setConfig</field>
    <field name="args">(uint32_t base, uint32_t lspclkHz, SPI_TransferProtocol protocol, SPI_Mode mode, uint32_t bitRate, uint16_t dataWidth)</field>
    <field name="url">group__spi__api.html#ga985446cc44839750f1b8a073a8e949c4</field>
    <field name="keywords">SPI_setConfig SPI_setConfig</field>
    <field name="text">Configures the serial peripheral interface base specifies the SPI module base address lspclkHz is the rate of the clock supplied to the SPI module LSPCLK in Hz protocol specifies the data transfer protocol mode specifies the mode of operation bitRate specifies the clock rate in Hz dataWidth specifies number of bits transferred per frame This function configures the serial peripheral interface It sets the SPI protocol mode of operation bit rate and data width The protocol parameter defines the data frame format The protocol parameter can be one of the following values SPI_PROT_POL0PHA0 SPI_PROT_POL0PHA1 SPI_PROT_POL1PHA0 or SPI_PROT_POL1PHA1 These frame formats encode the following polarity and phase configurations Polarity Phase Mode 0 0 SPI_PROT_POL0PHA0 0 1 SPI_PROT_POL0PHA1 1 0 SPI_PROT_POL1PHA0 1 1 SPI_PROT_POL1PHA1 The mode parameter defines the operating mode of the SPI module The SPI module can operate as a controller or peripheral the SPI can also be be configured to disable output on its serial output line The mode parameter can be one of the following values SPI_MODE_CONTROLLER SPI_MODE_PERIPHERAL SPI_MODE_CONTROLLER_OD or SPI_MODE_PERIPHERAL_OD indicates The bitRate parameter defines the bit rate for the SPI This bit rate must satisfy the following clock ratio criteria bitRate can be no greater than lspclkHz divided by 4 lspclkHz bitRate cannot be greater than 1 2 8 The dataWidth parameter defines the width of the data transfers and can be a value between 1 and 1 6 inclusive The peripheral clock is the low speed peripheral clock This value is returned by SysCtl_getLowSpeedClock() or it can be explicitly hard coded if it is constant and known to save the code/execution overhead of a call to SysCtl_getLowSpeedClock() SPI operation should be disabled via SPI_disableModule() before any changes to its configuration None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_disableFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#gaa831b8ef7f9767282871d292975a36a7</field>
    <field name="keywords">SPI_disableFIFO SPI_disableFIFO</field>
    <field name="text">Disables the transmit and receive FIFOs base is the base address of the SPI port This functions disables the transmit and receive FIFOs in the SPI None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_disableInterrupt</field>
    <field name="args">(uint32_t base, uint32_t intFlags)</field>
    <field name="url">group__spi__api.html#gaaa8e5ef5f2bb567c1215b6000a5bb933</field>
    <field name="keywords">SPI_disableInterrupt SPI_disableInterrupt</field>
    <field name="text">Disables individual SPI interrupt sources base specifies the SPI module base address intFlags is a bit mask of the interrupt sources to be disabled This function disables the indicated SPI interrupt sources The intFlags parameter can be any of the following values SPI_INT_RX_OVERRUN SPI_INT_RX_DATA_TX_EMPTY SPI_INT_RXFF also disables SPI_INT_RXFF_OVERFLOW SPI_INT_TXFF SPI_INT_RX_OVERRUN SPI_INT_RX_DATA_TX_EMPTY SPI_INT_RXFF_OVERFLOW and SPI_INT_RXFF are associated with SPIRXINT SPI_INT_TXFF is associated with SPITXINT None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_enableInterrupt</field>
    <field name="args">(uint32_t base, uint32_t intFlags)</field>
    <field name="url">group__spi__api.html#gaab48db2de2544c5abfe4503d2c92e1c2</field>
    <field name="keywords">SPI_enableInterrupt SPI_enableInterrupt</field>
    <field name="text">Enables individual SPI interrupt sources base specifies the SPI module base address intFlags is a bit mask of the interrupt sources to be enabled This function enables the indicated SPI interrupt sources Only the sources that are enabled can be reflected to the processor interrupt disabled sources have no effect on the processor The intFlags parameter can be any of the following values SPI_INT_RX_OVERRUN Receive overrun interrupt SPI_INT_RX_DATA_TX_EMPTY Data received transmit empty SPI_INT_RXFF also enables SPI_INT_RXFF_OVERFLOW RX FIFO level interrupt and RX FIFO overflow SPI_INT_TXFF TX FIFO level interrupt SPI_INT_RX_OVERRUN SPI_INT_RX_DATA_TX_EMPTY SPI_INT_RXFF_OVERFLOW and SPI_INT_RXFF are associated with SPIRXINT SPI_INT_TXFF is associated with SPITXINT None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_getFIFOInterruptLevel</field>
    <field name="args">(uint32_t base, SPI_TxFIFOLevel *txLevel, SPI_RxFIFOLevel *rxLevel)</field>
    <field name="url">group__spi__api.html#gaaeed550c837f349fd66266224e26f501</field>
    <field name="keywords">SPI_getFIFOInterruptLevel SPI_getFIFOInterruptLevel</field>
    <field name="text">Gets the FIFO level at which interrupts are generated base is the base address of the SPI port txLevel is a pointer to storage for the transmit FIFO level returned as one of SPI_FIFO_TX0 SPI_FIFO_TX1 SPI_FIFO_TX2 or SPI_FIFO_TX16 rxLevel is a pointer to storage for the receive FIFO level returned as one of SPI_FIFO_RX0 SPI_FIFO_RX1 SPI_FIFO_RX2 or SPI_FIFO_RX16 This function gets the FIFO level at which transmit and receive interrupts are generated None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_INT_TXFF</field>
    <field name="url">group__spi__api.html#gab0e46560a0931e57bead8009ecbcf9a6</field>
    <field name="keywords">SPI_INT_TXFF SPI_INT_TXFF</field>
    <field name="text">TX FIFO level interrupt TX FIFO level interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_reset</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#gab67276c8c5b9ff473366326a2af321b9</field>
    <field name="keywords">SPI_reset SPI_reset</field>
    <field name="text">Reset SPI transmit and receive channels base is the base address of the SPI port This function resets the SPI transmit and receive channels None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_receiveN16BitWord</field>
    <field name="args">(base, rxBuffer, numOfWords, txDelay)</field>
    <field name="url">group__spi__api.html#gab82f821e6416d2301199fab02562b0a5</field>
    <field name="keywords">SPI_receiveN16BitWord SPI_receiveN16BitWord</field>
    <field name="text">This macro is used to receive N 1 6 bits words of data base specifies the SPI module base address rxBuffer specifies receive buffer which will store the received bytes numOfWords specifies the number of 1 6 bit words to be received txDelay specifies the number of serial clock cycles delay time after completion of perious word This function is used to receive N 1 6 bit words of data This function uses SPI_pollingFIFOTransaction function SPI character length must be configured to 1 6 bits BEFORE calling the function None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_transmit32Bits</field>
    <field name="args">(uint32_t base, uint32_t data, uint16_t txDelay)</field>
    <field name="url">group__spi__api.html#gab928644ccad772ac7ae24fb6ccb772b4</field>
    <field name="keywords">SPI_transmit32Bits SPI_transmit32Bits</field>
    <field name="text">This function can be used to transmit a 3 2 bit word of data base specifies the SPI module base address txData is the data to be transmitted over SPI txDelay specifies the number of serial clock cycles delay time after completion of perious word This function can be used to transmit a 3 2 bit word of data 3 2 bit word data is divided into four bytes of data This function uses SPI_pollingFIFOTransaction function SPI character length must be configured to 1 6 bits BEFORE calling the function None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_enableModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#gabaf56e9f70511b62bfbdc80f7a953597</field>
    <field name="keywords">SPI_enableModule SPI_enableModule</field>
    <field name="text">Enables the serial peripheral interface base specifies the SPI module base address This function enables operation of the serial peripheral interface The serial peripheral interface must be configured before it is enabled None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_setcharLength</field>
    <field name="args">(uint32_t base, uint16_t charLength)</field>
    <field name="url">group__spi__api.html#gac02e87766225bb036e3e74808f103007</field>
    <field name="keywords">SPI_setcharLength SPI_setcharLength</field>
    <field name="text">Sets the character length of SPI transaction base specifies the SPI module base address charLength specifies the character length of SPI transaction This function configures the character length of SPI transaction SPI character length can be from anywhere between 1 bit word to 1 6 bit word of character length None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_disableTalk</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#gac298eca1cbf12d3ecbb01bb2103fde59</field>
    <field name="keywords">SPI_disableTalk SPI_disableTalk</field>
    <field name="text">Disable Trasnmit base is the base address of the SPI port This function clears the TALK bit disabling the data trasnmission The output pin will be put in high-impedance state This bit is enabled by SPI_setConfig if the parameter mode is selected as SPI_MODE_PERIPHERAL or SPI_MODE_CONTROLLER None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_transmitByte</field>
    <field name="args">(base, txData)</field>
    <field name="url">group__spi__api.html#gac2a607ec0caa4932aa104ba2d6d86ddd</field>
    <field name="keywords">SPI_transmitByte SPI_transmitByte</field>
    <field name="text">This macro definition is used to transmit a byte of data base specifies the SPI module base address txData is the data to be transmitted over SPI This macro definition is to transmit a byte of data This macro uses SPI_pollingNonFIFOTransaction function SPI character length must be configured to 8 bits BEFORE calling the function None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SPI_endianess</field>
    <field name="url">group__spi__api.html#gac3e39d2245fa82e5aee50c8ce7af5f62</field>
    <field name="keywords">SPI_endianess SPI_endianess</field>
    <field name="text">Values that can be passed to SPI_receive16Bits() SPI_receive24Bits() SPI_receive32Bits()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_transmit24Bits</field>
    <field name="args">(uint32_t base, uint32_t data, uint16_t txDelay)</field>
    <field name="url">group__spi__api.html#gac7bae53ae5e6790160827b25f568c7ff</field>
    <field name="keywords">SPI_transmit24Bits SPI_transmit24Bits</field>
    <field name="text">This function can be used to transmit a 2 4 bit word of data base specifies the SPI module base address txData is the data to be transmitted over SPI txDelay specifies the number of serial clock cycles delay time after completion of perious word This function can be used to transmit a 2 4 bit word of data 2 4 bit word data is divided into three bytes of data This function uses SPI_pollingFIFOTransaction function SPI character length must be configured to 8 bits BEFORE calling the function None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_INT_RX_DATA_TX_EMPTY</field>
    <field name="url">group__spi__api.html#gaccf4ba71a326c2fc84ad2a4fcd867bba</field>
    <field name="keywords">SPI_INT_RX_DATA_TX_EMPTY SPI_INT_RX_DATA_TX_EMPTY</field>
    <field name="text">Data received transmit empty Data received transmit empty</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_disableModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#gaceb3f98ed4417a5a25f58e84ec2d21bb</field>
    <field name="keywords">SPI_disableModule SPI_disableModule</field>
    <field name="text">Disables the serial peripheral interface base specifies the SPI module base address This function disables operation of the serial peripheral interface Call this function before doing any configuration None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_receiveNBytes</field>
    <field name="args">(base, rxBuffer, numOfWords, txDelay)</field>
    <field name="url">group__spi__api.html#gad2234544c52a09fa686ff55fb7cc3a6e</field>
    <field name="keywords">SPI_receiveNBytes SPI_receiveNBytes</field>
    <field name="text">This macro is used to receive N bytes of data base specifies the SPI module base address rxBuffer specifies receive buffer which will store the received bytes numOfWords specifies the number of bytes to be received txDelay specifies the number of serial clock cycles delay time after completion of perious word This function is used to receive N bytes of data This function uses SPI_pollingFIFOTransaction function SPI character length must be configured to 8 bits BEFORE calling the function None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_receive24Bits</field>
    <field name="args">(uint32_t base, SPI_endianess endianness, uint16_t dummyData, uint16_t txDelay)</field>
    <field name="url">group__spi__api.html#gada6fa624c167254f8aa108d0da2974ad</field>
    <field name="keywords">SPI_receive24Bits SPI_receive24Bits</field>
    <field name="text">This function is used to receive a 2 4 bit word of data base specifies the SPI module base address endianness specifies the endianess of received data dummyData is the data which is transmitted to initiate SPI transaction to receive SPI data txDelay specifies the number of serial clock cycles delay time after completion of perious word This function is used to receive a 2 4 bit word of data This function uses SPI_pollingFIFOTransaction function SPI character length must be configured to 8 bits BEFORE calling the function the received 2 4 bit word</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_enableFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#gadc0d662cf9f039959baf9d24827c1356</field>
    <field name="keywords">SPI_enableFIFO SPI_enableFIFO</field>
    <field name="text">Enables the transmit and receive FIFOs base is the base address of the SPI port This functions enables the transmit and receive FIFOs in the SPI None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_getInterruptStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#gadd7e6fe10fa730622f533ead94e8e8f9</field>
    <field name="keywords">SPI_getInterruptStatus SPI_getInterruptStatus</field>
    <field name="text">Gets the current interrupt status base specifies the SPI module base address This function returns the interrupt status for the SPI module The current interrupt status enumerated as a bit field of the following values SPI_INT_RX_OVERRUN Receive overrun interrupt SPI_INT_RX_DATA_TX_EMPTY Data received transmit empty SPI_INT_RXFF RX FIFO level interrupt SPI_INT_RXFF_OVERFLOW RX FIFO overflow SPI_INT_TXFF TX FIFO level interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_setEmulationMode</field>
    <field name="args">(uint32_t base, SPI_EmulationMode mode)</field>
    <field name="url">group__spi__api.html#gaddbfb995f8dfc9ded4074b5884fcb328</field>
    <field name="keywords">SPI_setEmulationMode SPI_setEmulationMode</field>
    <field name="text">Sets SPI emulation mode base is the base address of the SPI port mode is the emulation mode This function sets the behavior of the SPI operation when an emulation suspend occurs The mode parameter can be one of the following SPI_EMULATION_STOP_MIDWAY Transmission stops midway through the bit stream The rest of the bits will be transmitting after the suspend is deasserted SPI_EMULATION_STOP_AFTER_TRANSMIT If the suspend occurs before the first SPICLK pulse the transmission will not start If it occurs later the transmission will be completed SPI_EMULATION_FREE_RUN SPI operation continues regardless of a the suspend None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_readDataBlockingNonFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#gae18e22991663c27c9ce75444b8da4938</field>
    <field name="keywords">SPI_readDataBlockingNonFIFO SPI_readDataBlockingNonFIFO</field>
    <field name="text">Waits for data to be received and then reads it from the buffer base specifies the SPI module base address This function waits for data to be received and then reads it from the receive buffer of the specified SPI module This function should not be used when FIFO mode is enabled Only the lower N bits of the value written to data contain valid data where N is the data width as configured by SPI_setConfig() For example if the interface is configured for 8 bit data width only the lower 8 bits of the value written to data contain valid data Returns the word of data read from the SPI receive buffer</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SPI_EmulationMode</field>
    <field name="url">group__spi__api.html#gae30dfc51d749eae0dc63914e092f134e</field>
    <field name="keywords">SPI_EmulationMode SPI_EmulationMode</field>
    <field name="text">Values that can be passed to SPI_setEmulationMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_receiveByte</field>
    <field name="args">(base, dummyData)</field>
    <field name="url">group__spi__api.html#gae3bf1cc0af38af4e055d5e2d91f5e3c0</field>
    <field name="keywords">SPI_receiveByte SPI_receiveByte</field>
    <field name="text">This macro definition is used to receive a byte of data base specifies the SPI module base address dummyData is the data which is transmitted to initiate SPI transaction to receive SPI data This macro definition is to receive a byte of data This macro uses SPI_pollingNonFIFOTransaction function SPI character length must be configured to 8 bits BEFORE calling the function the received byte</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_getRxFIFOStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#gaf360ed7e2d70ba0061aed40ff2b03da0</field>
    <field name="keywords">SPI_getRxFIFOStatus SPI_getRxFIFOStatus</field>
    <field name="text">Get the receive FIFO status base is the base address of the SPI port This function gets the current number of words in the receive FIFO Returns the current number of words in the receive FIFO specified as one of the following SPI_FIFO_RX0 SPI_FIFO_RX1 SPI_FIFO_RX2 SPI_FIFO_RX3 or SPI_FIFO_RX16</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SPI_INT_RX_OVERRUN</field>
    <field name="url">group__spi__api.html#gaf4692979b38b20e3c0e9ee3d90fd4267</field>
    <field name="keywords">SPI_INT_RX_OVERRUN SPI_INT_RX_OVERRUN</field>
    <field name="text">Receive overrun interrupt Receive overrun interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SPI_getTxFIFOStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__spi__api.html#gafa7ea494f00eb7dda320503e05495ffb</field>
    <field name="keywords">SPI_getTxFIFOStatus SPI_getTxFIFOStatus</field>
    <field name="text">Get the transmit FIFO status base is the base address of the SPI port This function gets the current number of words in the transmit FIFO Returns the current number of words in the transmit FIFO specified as one of the following SPI_FIFO_TX0 SPI_FIFO_TX1 SPI_FIFO_TX2 SPI_FIFO_TX3 or SPI_FIFO_TX16</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_PTE_ACTIVE_HIGH</field>
    <field name="url">group__spi__api.html#gga29a3646b19e9eec25ffcfdcab74f45eeae33a420496bd1d5af017dc5c1cfe8a25</field>
    <field name="keywords">SPI_PTE_ACTIVE_HIGH SPI_PTE_ACTIVE_HIGH</field>
    <field name="text">SPIPTE is active high inverted</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_PTE_ACTIVE_LOW</field>
    <field name="url">group__spi__api.html#gga29a3646b19e9eec25ffcfdcab74f45eeaf0432f6c50ae25e7267f0061901706db</field>
    <field name="keywords">SPI_PTE_ACTIVE_LOW SPI_PTE_ACTIVE_LOW</field>
    <field name="text">SPIPTE is active low normal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RXEMPTY</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea1550ff47b4be9b3ba3ac50a649a740dd</field>
    <field name="keywords">SPI_FIFO_RXEMPTY SPI_FIFO_RXEMPTY</field>
    <field name="text">Receive FIFO empty</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX2</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea31d78a14aed8e08c981fd2b9cb47bc2d</field>
    <field name="keywords">SPI_FIFO_RX2 SPI_FIFO_RX2</field>
    <field name="text">Receive FIFO 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX16</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea360a29a651be258712a098be23d2d187</field>
    <field name="keywords">SPI_FIFO_RX16 SPI_FIFO_RX16</field>
    <field name="text">Receive FIFO full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX14</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea4b3a34d3e42fa3aa9350b096153e1e95</field>
    <field name="keywords">SPI_FIFO_RX14 SPI_FIFO_RX14</field>
    <field name="text">Receive FIFO 1 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX3</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea500ea32ba7c00d1c8ed389862e126dc5</field>
    <field name="keywords">SPI_FIFO_RX3 SPI_FIFO_RX3</field>
    <field name="text">Receive FIFO 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX9</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea507fca8f36563017c5b900d0df4f94f9</field>
    <field name="keywords">SPI_FIFO_RX9 SPI_FIFO_RX9</field>
    <field name="text">Receive FIFO 9 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX1</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea664d9ab330a72fc7d7d971aa0c8bb466</field>
    <field name="keywords">SPI_FIFO_RX1 SPI_FIFO_RX1</field>
    <field name="text">Receive FIFO 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX11</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea7b73222b4330255f5243cd9696ccb03d</field>
    <field name="keywords">SPI_FIFO_RX11 SPI_FIFO_RX11</field>
    <field name="text">Receive FIFO 1 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX10</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea7e0dce0405c8231c0c54ea609a56b95f</field>
    <field name="keywords">SPI_FIFO_RX10 SPI_FIFO_RX10</field>
    <field name="text">Receive FIFO 1 0 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX13</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea80b794a376d71f94bd53b10572afc71e</field>
    <field name="keywords">SPI_FIFO_RX13 SPI_FIFO_RX13</field>
    <field name="text">Receive FIFO 1 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX0</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea9131dc3a39f8663fa25ab796464c10b1</field>
    <field name="keywords">SPI_FIFO_RX0 SPI_FIFO_RX0</field>
    <field name="text">Receive FIFO empty</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX4</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea92d7a39ffe3bd4b793cf85f8b52671b1</field>
    <field name="keywords">SPI_FIFO_RX4 SPI_FIFO_RX4</field>
    <field name="text">Receive FIFO 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX8</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea999da6c162406684dbbb69fc76717dea</field>
    <field name="keywords">SPI_FIFO_RX8 SPI_FIFO_RX8</field>
    <field name="text">Receive FIFO 8 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX15</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8ea9a5bf425c75dcd388a8a7a32570b333d</field>
    <field name="keywords">SPI_FIFO_RX15 SPI_FIFO_RX15</field>
    <field name="text">Receive FIFO 1 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX5</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8eac1d5bef5da27dcdaf507ce2fd14abe10</field>
    <field name="keywords">SPI_FIFO_RX5 SPI_FIFO_RX5</field>
    <field name="text">Receive FIFO 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX6</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8eac7958e746cfabe03ebe3791bb716ad5c</field>
    <field name="keywords">SPI_FIFO_RX6 SPI_FIFO_RX6</field>
    <field name="text">Receive FIFO 6 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RXDEFAULT</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8eacb4586d4412b16461ba0b867c7f7b56a</field>
    <field name="keywords">SPI_FIFO_RXDEFAULT SPI_FIFO_RXDEFAULT</field>
    <field name="text">To prevent interrupt at reset</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RXFULL</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8eae000b191ee66f729985b045540d83aff</field>
    <field name="keywords">SPI_FIFO_RXFULL SPI_FIFO_RXFULL</field>
    <field name="text">Receive FIFO full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX12</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8eaeebb97895b47923511989168d6661893</field>
    <field name="keywords">SPI_FIFO_RX12 SPI_FIFO_RX12</field>
    <field name="text">Receive FIFO 1 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_RX7</field>
    <field name="url">group__spi__api.html#gga335ad38fd0e0483abed9adc7dcf7bf8eafe723a9d81e94912c642428ddcf5c3a9</field>
    <field name="keywords">SPI_FIFO_RX7 SPI_FIFO_RX7</field>
    <field name="text">Receive FIFO 7 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX2</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77a0d81c6441105f7c2255449a827a99836</field>
    <field name="keywords">SPI_FIFO_TX2 SPI_FIFO_TX2</field>
    <field name="text">Transmit FIFO 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TXEMPTY</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77a2dab05215eb8a86ff8a0690e980619c6</field>
    <field name="keywords">SPI_FIFO_TXEMPTY SPI_FIFO_TXEMPTY</field>
    <field name="text">Transmit FIFO empty</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX0</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77a39eff8cb76f31452f019a6e0f8954840</field>
    <field name="keywords">SPI_FIFO_TX0 SPI_FIFO_TX0</field>
    <field name="text">Transmit FIFO empty</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX16</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77a3eb338b69b7ee05099ad18fbcfba14e6</field>
    <field name="keywords">SPI_FIFO_TX16 SPI_FIFO_TX16</field>
    <field name="text">Transmit FIFO full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX6</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77a47949bb99031320a72b2c39d906b6303</field>
    <field name="keywords">SPI_FIFO_TX6 SPI_FIFO_TX6</field>
    <field name="text">Transmit FIFO 6 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX15</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77a5d56150c162e2bf4d74b30ef3bd38501</field>
    <field name="keywords">SPI_FIFO_TX15 SPI_FIFO_TX15</field>
    <field name="text">Transmit FIFO 1 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX11</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77a60da0dbb50f66bab0d54de7aa13b26cc</field>
    <field name="keywords">SPI_FIFO_TX11 SPI_FIFO_TX11</field>
    <field name="text">Transmit FIFO 1 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX9</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77a66e59ac869dafb13625bbe21ed4131ec</field>
    <field name="keywords">SPI_FIFO_TX9 SPI_FIFO_TX9</field>
    <field name="text">Transmit FIFO 9 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX10</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77a77ce9519f70bb71074e274a1b10ef4e9</field>
    <field name="keywords">SPI_FIFO_TX10 SPI_FIFO_TX10</field>
    <field name="text">Transmit FIFO 1 0 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX14</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77a7bf50fb7e4a03d8883bf8eaf2a4e6239</field>
    <field name="keywords">SPI_FIFO_TX14 SPI_FIFO_TX14</field>
    <field name="text">Transmit FIFO 1 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX8</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77a885016b19ddd80c6256036f20a28fe30</field>
    <field name="keywords">SPI_FIFO_TX8 SPI_FIFO_TX8</field>
    <field name="text">Transmit FIFO 8 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX4</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77a887c490b26a85348d9a6ec886c755a60</field>
    <field name="keywords">SPI_FIFO_TX4 SPI_FIFO_TX4</field>
    <field name="text">Transmit FIFO 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX13</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77aa5e90654d6728d7b1c1ac18ea8830bfb</field>
    <field name="keywords">SPI_FIFO_TX13 SPI_FIFO_TX13</field>
    <field name="text">Transmit FIFO 1 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TXFULL</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77aa6dfa21657f0d968a4a17928cba606f3</field>
    <field name="keywords">SPI_FIFO_TXFULL SPI_FIFO_TXFULL</field>
    <field name="text">Transmit FIFO full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX1</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77aa6e6bfa3c55c435a76bbda054871608f</field>
    <field name="keywords">SPI_FIFO_TX1 SPI_FIFO_TX1</field>
    <field name="text">Transmit FIFO 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX5</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77aac7644afc9aa28b7c444fd05b66f6d3d</field>
    <field name="keywords">SPI_FIFO_TX5 SPI_FIFO_TX5</field>
    <field name="text">Transmit FIFO 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX3</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77ab25fa295f17ae9ba13f833d4abd349a3</field>
    <field name="keywords">SPI_FIFO_TX3 SPI_FIFO_TX3</field>
    <field name="text">Transmit FIFO 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX12</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77abfc98f7c9c9c98324ace5ec3eebefd21</field>
    <field name="keywords">SPI_FIFO_TX12 SPI_FIFO_TX12</field>
    <field name="text">Transmit FIFO 1 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_FIFO_TX7</field>
    <field name="url">group__spi__api.html#gga36e17a38150b8f065d2770c68497ba77ac1f603a830d6a5b25f1bd3950b7dab5b</field>
    <field name="keywords">SPI_FIFO_TX7 SPI_FIFO_TX7</field>
    <field name="text">Transmit FIFO 7 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_MODE_CONTROLLER</field>
    <field name="url">group__spi__api.html#gga60a7e3d74577b38aa79ea6983362f942a38fdef4f22f6e917842f3532a1899526</field>
    <field name="keywords">SPI_MODE_CONTROLLER SPI_MODE_CONTROLLER</field>
    <field name="text">SPI controller</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_MODE_PERIPHERAL</field>
    <field name="url">group__spi__api.html#gga60a7e3d74577b38aa79ea6983362f942abaf16f0880e7ba152b403257e056dd2f</field>
    <field name="keywords">SPI_MODE_PERIPHERAL SPI_MODE_PERIPHERAL</field>
    <field name="text">SPI peripheral</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_MODE_PERIPHERAL_OD</field>
    <field name="url">group__spi__api.html#gga60a7e3d74577b38aa79ea6983362f942ae13eb76ff10d9e5f14674e58f46c2bb5</field>
    <field name="keywords">SPI_MODE_PERIPHERAL_OD SPI_MODE_PERIPHERAL_OD</field>
    <field name="text">SPI peripheral w/ output disabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_MODE_CONTROLLER_OD</field>
    <field name="url">group__spi__api.html#gga60a7e3d74577b38aa79ea6983362f942aeacdf8d3ce803c08f753ce341ec8d1e5</field>
    <field name="keywords">SPI_MODE_CONTROLLER_OD SPI_MODE_CONTROLLER_OD</field>
    <field name="text">SPI controller w/ output disabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_PROT_POL0PHA1</field>
    <field name="url">group__spi__api.html#gga799f6216550a736a4cf0fb4ed75cbe78a0535adeeeb6e82551b81f79fc66b7c77</field>
    <field name="keywords">SPI_PROT_POL0PHA1 SPI_PROT_POL0PHA1</field>
    <field name="text">Mode 1 Polarity 0 phase 1 Rising edge with delay</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_PROT_POL1PHA1</field>
    <field name="url">group__spi__api.html#gga799f6216550a736a4cf0fb4ed75cbe78a130c98b2d6f1cd791f242bf9f4868338</field>
    <field name="keywords">SPI_PROT_POL1PHA1 SPI_PROT_POL1PHA1</field>
    <field name="text">Mode 3 Polarity 1 phase 1 Falling edge with delay</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_PROT_POL0PHA0</field>
    <field name="url">group__spi__api.html#gga799f6216550a736a4cf0fb4ed75cbe78abd3bebdf8b1e5fbe5d66b112cd8f9441</field>
    <field name="keywords">SPI_PROT_POL0PHA0 SPI_PROT_POL0PHA0</field>
    <field name="text">Mode 0 Polarity 0 phase 0 Rising edge without delay</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_PROT_POL1PHA0</field>
    <field name="url">group__spi__api.html#gga799f6216550a736a4cf0fb4ed75cbe78af2baaf3792318e8a983d2a58f83def74</field>
    <field name="keywords">SPI_PROT_POL1PHA0 SPI_PROT_POL1PHA0</field>
    <field name="text">Mode 2 Polarity 1 phase 0 Falling edge without delay</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_DATA_BIG_ENDIAN</field>
    <field name="url">group__spi__api.html#ggac3e39d2245fa82e5aee50c8ce7af5f62a56154e2e0519083d58585d88e5a4e1ba</field>
    <field name="keywords">SPI_DATA_BIG_ENDIAN SPI_DATA_BIG_ENDIAN</field>
    <field name="text">BIG ENDIAN</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_DATA_LITTLE_ENDIAN</field>
    <field name="url">group__spi__api.html#ggac3e39d2245fa82e5aee50c8ce7af5f62afc536e1d444d1bebf1e87ea3e8095542</field>
    <field name="keywords">SPI_DATA_LITTLE_ENDIAN SPI_DATA_LITTLE_ENDIAN</field>
    <field name="text">LITTLE ENDIAN</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_EMULATION_STOP_AFTER_TRANSMIT</field>
    <field name="url">group__spi__api.html#ggae30dfc51d749eae0dc63914e092f134ea2ef6c15c8d6efc9bd85165b0a636d541</field>
    <field name="keywords">SPI_EMULATION_STOP_AFTER_TRANSMIT SPI_EMULATION_STOP_AFTER_TRANSMIT</field>
    <field name="text">Transmission will stop after a started transmission completes</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_EMULATION_FREE_RUN</field>
    <field name="url">group__spi__api.html#ggae30dfc51d749eae0dc63914e092f134ea6b638fc86f1bc40788a73c87822e0f9f</field>
    <field name="keywords">SPI_EMULATION_FREE_RUN SPI_EMULATION_FREE_RUN</field>
    <field name="text">Continue SPI operation regardless</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SPI_EMULATION_STOP_MIDWAY</field>
    <field name="url">group__spi__api.html#ggae30dfc51d749eae0dc63914e092f134eaaa3a1dbbc1505d8703ee763355b89955</field>
    <field name="keywords">SPI_EMULATION_STOP_MIDWAY SPI_EMULATION_STOP_MIDWAY</field>
    <field name="text">Transmission stops after midway in the bit stream</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">sysctl_api</field>
    <field name="url">group__sysctl__api.html</field>
    <field name="keywords">SysCtl</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_disableExtADCSOCSource</field>
    <field name="args">(uint32_t adcsocSrc)</field>
    <field name="url">group__sysctl__api.html#ga00887ac36367d22ffa569d4eed215146</field>
    <field name="keywords">SysCtl_disableExtADCSOCSource SysCtl_disableExtADCSOCSource</field>
    <field name="text">Disables PWM SOC signals from driving an external ADCSOC signal adcsocSrc is a bit field of the selected signals to be disabled This function configures which PWM SOC signals are disabled as a source for either ADCSOCAO or ADCSOCBO The adcsocSrc parameter takes a logical OR of SYSCTL_ADCSOC_SRC_PWMxSOCA/B values that correspond to different signals None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_DCC_BASE_M</field>
    <field name="url">group__sysctl__api.html#ga044ed5b6e2add35377ba13f9eb29db9c</field>
    <field name="keywords">SYSCTL_DCC_BASE_M SYSCTL_DCC_BASE_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setLowSpeedClock</field>
    <field name="args">(SysCtl_LSPCLKPrescaler prescaler)</field>
    <field name="url">group__sysctl__api.html#ga04a6d079c24e384537ad6b336c3ac31a</field>
    <field name="keywords">SysCtl_setLowSpeedClock SysCtl_setLowSpeedClock</field>
    <field name="text">Sets the low speed peripheral clock rate prescaler prescaler is the LSPCLK rate relative to SYSCLK This function configures the clock rate of the low speed peripherals The prescaler parameter is the value by which the SYSCLK rate is divided to get the LSPCLK rate For example a prescaler of SYSCTL_LSPCLK_PRESCALE_4 will result in a LSPCLK rate that is a quarter of the SYSCLK rate None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getPIEVErrAddr</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga09149c8da6c7ac4947d658c03e2132d3</field>
    <field name="keywords">SysCtl_getPIEVErrAddr SysCtl_getPIEVErrAddr</field>
    <field name="text">Gets the PIE Vector Fetch Error Handler Routine Address The function indicates the address of the PIE Vector Fetch Error handler routine Error Handler Address Its the responsibility of user to initialize this register If this register is not initialized a default error handler at address 0 x3fffbe will get executed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_disableWatchdog</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga09d8ef03c43a6f4f98cbd2c9f0e949ca</field>
    <field name="keywords">SysCtl_disableWatchdog SysCtl_disableWatchdog</field>
    <field name="text">Disables the watchdog This function disables the watchdog timer Note that the watchdog timer is enabled on reset None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_clearWatchdogResetStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga0a4a1330c101f92d54457581bbdf00c1</field>
    <field name="keywords">SysCtl_clearWatchdogResetStatus SysCtl_clearWatchdogResetStatus</field>
    <field name="text">Clears the watchdog reset status This function clears the watchdog reset status To check if it was set first see SysCtl_getWatchdogResetStatus() None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_CAUSE_XRS</field>
    <field name="url">group__sysctl__api.html#ga10616deb9901ef4cea589174093cb7cd</field>
    <field name="keywords">SYSCTL_CAUSE_XRS SYSCTL_CAUSE_XRS</field>
    <field name="text">External reset pin External reset pin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_selectClockOutSource</field>
    <field name="args">(SysCtl_ClockOut source)</field>
    <field name="url">group__sysctl__api.html#ga111e568254e85be18d862c47103ff4f5</field>
    <field name="keywords">SysCtl_selectClockOutSource SysCtl_selectClockOutSource</field>
    <field name="text">Selects a clock source to mux to an external GPIO pin XCLKOUT source is the internal clock source to be configured This function configures the specified clock source to be muxed to an external clock out XCLKOUT GPIO pin The source parameter may take a value of one of the following values SYSCTL_CLOCKOUT_PLLSYS SYSCTL_CLOCKOUT_PLLRAW SYSCTL_CLOCKOUT_SYSCLK SYSCTL_CLOCKOUT_WROSC SYSCTL_CLOCKOUT_SYSOSC SYSCTL_CLOCKOUT_WROSCDIV8 SYSCTL_CLOCKOUT_SYSOSCDIV4 SYSCTL_CLOCKOUT_XTALOSC SYSCTL_SYSPLLCLKOUT None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_clearResetCause</field>
    <field name="args">(uint32_t rstCauses)</field>
    <field name="url">group__sysctl__api.html#ga1190782fb493d99eb6ccf16a3c27692a</field>
    <field name="keywords">SysCtl_clearResetCause SysCtl_clearResetCause</field>
    <field name="text">Clears reset reasons rstCauses are the reset causes to be cleared must be a logical OR of SYSCTL_CAUSE_POR Power-on reset SYSCTL_CAUSE_XRS External reset pin SYSCTL_CAUSE_WDRS Watchdog reset SYSCTL_CAUSE_NMIWDRS NMI watchdog reset SYSCTL_CAUSE_SCCRESET SCCRESETn reset from DCSM SYSCTL_CAUSE_SIMRESET_CPU1RSN SIMRESET_CPU1RSn SYSCTL_CAUSE_SIMRESET_XRSN SIMRESET_XRSn This function clears the specified sticky reset reasons Once cleared another reset for the same reason can be detected and a reset for a different reason can be distinguished instead of having two reset causes set If the reset reason is used by an application all reset causes should be cleared after they are retrieved with SysCtl_getResetCause() Some reset causes are cleared by the boot ROM None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enableMCD</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga120093f85de16c0ad72cbdca33823e37</field>
    <field name="keywords">SysCtl_enableMCD SysCtl_enableMCD</field>
    <field name="text">Enable the missing clock detection MCD Logic None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_DCC_BASE_S</field>
    <field name="url">group__sysctl__api.html#ga13a283f082917637a0f18ea8afde8bc7</field>
    <field name="keywords">SYSCTL_DCC_BASE_S SYSCTL_DCC_BASE_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_CAUSE_SIMRESET_CPU1RSN</field>
    <field name="url">group__sysctl__api.html#ga13de8f5d6f9160703c943ec2bf64dd92</field>
    <field name="keywords">SYSCTL_CAUSE_SIMRESET_CPU1RSN SYSCTL_CAUSE_SIMRESET_CPU1RSN</field>
    <field name="text">SIMRESET_CPU1RSn SIMRESET_CPU1RSn</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_NMI_UNCERR</field>
    <field name="url">group__sysctl__api.html#ga153d38b13210e3d3e69bd7366ef481e9</field>
    <field name="keywords">SYSCTL_NMI_UNCERR SYSCTL_NMI_UNCERR</field>
    <field name="text">Flash/RAM/ROM Uncorrectable Error NMI Flag Flash/RAM/ROM Uncorrectable Error NMI Flag</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_PERIPH_BIT_M</field>
    <field name="url">group__sysctl__api.html#ga16550cd8daebf0dfa1f24424631dad61</field>
    <field name="keywords">SYSCTL_PERIPH_BIT_M SYSCTL_PERIPH_BIT_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_disconnectMCDClockSource</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga17bd94e2b00dfd42e56c817254a264bf</field>
    <field name="keywords">SysCtl_disconnectMCDClockSource SysCtl_disconnectMCDClockSource</field>
    <field name="text">Disconnect missing clock detection clock source to simulate clock failure This is for testing the MCD functionality None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_isNMIFlagSet</field>
    <field name="args">(uint16_t nmiFlags)</field>
    <field name="url">group__sysctl__api.html#ga17f437fea5fb8382094189543ca07222</field>
    <field name="keywords">SysCtl_isNMIFlagSet SysCtl_isNMIFlagSet</field>
    <field name="text">Check if the individual NMI interrupts are set nmiFlags Bit mask of the NMI interrupts that user wants to clear The bit format of this parameter is same as of the NMIFLG register These defines are provided SYSCTL_NMI_NMIINT NMI Interrupt Flag SYSCTL_NMI_CLOCKFAIL Clock Fail Interrupt Flag SYSCTL_NMI_UNCERR Flash/RAM/ROM Uncorrectable Error NMI Flag SYSCTL_NMI_SWERR SW Error Force NMI Flag Check if interrupt flags corresponding to the passed in bit mask are asserted true if any of the NMI asked for in the parameter bit mask is set false if none of the NMI requested in the parameter bit mask are set</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_PERIPH_BIT_S</field>
    <field name="url">group__sysctl__api.html#ga1c5fbb6f112bd99b64f5729107b9ed23</field>
    <field name="keywords">SYSCTL_PERIPH_BIT_S SYSCTL_PERIPH_BIT_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_lockClkConfig</field>
    <field name="args">(SysCtl_ClkRegSel registerName)</field>
    <field name="url">group__sysctl__api.html#ga23decfa4a195cbc1ffa10ff52447bcbc</field>
    <field name="keywords">SysCtl_lockClkConfig SysCtl_lockClkConfig</field>
    <field name="text">Locks the Clock configuration registers registerName is clock configuration register which needs to be locked The registerName parameter can be a value from the enumeration SysCtl_ClkRegSel None The register is unlocked only on a system reset</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_SelType</field>
    <field name="url">group__sysctl__api.html#ga26739158b5ca8b7415263d3f563246e8</field>
    <field name="keywords">SysCtl_SelType SysCtl_SelType</field>
    <field name="text">The following are values that can be passed to SysCtl_configureType() as the peripheral parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_clearAllNMIFlags</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga28844f840d5a42c15dbae077a3e39fcc</field>
    <field name="keywords">SysCtl_clearAllNMIFlags SysCtl_clearAllNMIFlags</field>
    <field name="text">Clear all the NMI Flags that are currently set None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enterHaltMode</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga28ba35e8e37870fbccda20be41a22371</field>
    <field name="keywords">SysCtl_enterHaltMode SysCtl_enterHaltMode</field>
    <field name="text">Enters HALT mode This function puts the device into HALT mode This will gate almost all systems and clocks and allows for the power-down of oscillators and analog blocks The watchdog may be left clocked to produce a reset See SysCtl_enableWatchdogInHalt() to enable this GPIOs should be configured to wake the CPU subsystem See SysCtl_enableLPMWakeupPin() The CPU will receive an interrupt WAKEINT on wakeup None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_CAUSE_SIMRESET_XRSN</field>
    <field name="url">group__sysctl__api.html#ga2aa9f0b220c2f10a892268686c7ffc27</field>
    <field name="keywords">SYSCTL_CAUSE_SIMRESET_XRSN SYSCTL_CAUSE_SIMRESET_XRSN</field>
    <field name="text">SIMRESET_XRSn SIMRESET_XRSn</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_XClkDivider</field>
    <field name="url">group__sysctl__api.html#ga2fc267f38b1bc13f485fb129364f8f98</field>
    <field name="keywords">SysCtl_XClkDivider SysCtl_XClkDivider</field>
    <field name="text">The following are values that can be passed to SysCtl_setXClk() as divider parameter</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Sysctl_PLLRDivClk0</field>
    <field name="url">group__sysctl__api.html#ga2fed392ce241cc5b293d8ca5b14515ad</field>
    <field name="keywords">Sysctl_PLLRDivClk0 Sysctl_PLLRDivClk0</field>
    <field name="text">The following are values that can be passed to Sysctl_setClock() as rdivclk0 parameter</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_WDPredivider</field>
    <field name="url">group__sysctl__api.html#ga31d67715f0625a756ee649adb7c9430d</field>
    <field name="keywords">SysCtl_WDPredivider SysCtl_WDPredivider</field>
    <field name="text">The following are values that can be passed to SysCtl_setWatchdogPredivider() as the predivider parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setInterruptStatus</field>
    <field name="args">(uint32_t intFlags)</field>
    <field name="url">group__sysctl__api.html#ga321b8bf7935a17687428e6533d5dc23f</field>
    <field name="keywords">SysCtl_setInterruptStatus SysCtl_setInterruptStatus</field>
    <field name="text">Sets the interrupts for the multiple different errors in the system intFlags is the interrupt that needs to be set The intFlags parameter are the Interrupts that can be set for the errors in the system The values can be one/ more from SYSCTL_STATUS_CORRECTABLE_ERR SYSCTL_STATUS_FPU_UFLOW SYSCTL_STATUS_FPU_OFLOW None This API is present only on CPU1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getNMIWatchdogCounter</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga32d41f174f71ab0291370b78d2052bd2</field>
    <field name="keywords">SysCtl_getNMIWatchdogCounter SysCtl_getNMIWatchdogCounter</field>
    <field name="text">Gets the NMI watchdog counter value Note The counter is clocked at the SYSCLKOUT rate Returns the NMI watchdog counter register s current value</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_STATUS_FPU_UFLOW</field>
    <field name="url">group__sysctl__api.html#ga377db0cf015406d1e12b01a41b890ca3</field>
    <field name="keywords">SYSCTL_STATUS_FPU_UFLOW SYSCTL_STATUS_FPU_UFLOW</field>
    <field name="text">FPU_UFLOW Interrupt flag FPU_UFLOW Interrupt flag</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_ADCSOC_SRC_PWM1SOCA</field>
    <field name="url">group__sysctl__api.html#ga3a90e9fa4055810244b4444f86035ae3</field>
    <field name="keywords">SYSCTL_ADCSOC_SRC_PWM1SOCA SYSCTL_ADCSOC_SRC_PWM1SOCA</field>
    <field name="text">PWM1 SOCA for ADCSOCAO PWM1 SOCA for ADCSOCAO</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_clearExternalOscCounterValue</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga3d50bdda1ae269c2ad0c684b0884dd95</field>
    <field name="keywords">SysCtl_clearExternalOscCounterValue SysCtl_clearExternalOscCounterValue</field>
    <field name="text">Clears the external oscillator counter value None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_DEFAULT_SYSOSCDIV4_FREQ</field>
    <field name="url">group__sysctl__api.html#ga3d70ffbacdfde95486167687337574eb</field>
    <field name="keywords">SYSCTL_DEFAULT_SYSOSCDIV4_FREQ SYSCTL_DEFAULT_SYSOSCDIV4_FREQ</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_WD_RSTKEY</field>
    <field name="url">group__sysctl__api.html#ga3e3d924aaf5398366979108ec11ea9f4</field>
    <field name="keywords">SYSCTL_WD_RSTKEY SYSCTL_WD_RSTKEY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getNMIStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga4220c02fd125ebb1a77d6647fec83e90</field>
    <field name="keywords">SysCtl_getNMIStatus SysCtl_getNMIStatus</field>
    <field name="text">Read NMI interrupts Read the current state of NMI interrupt true if NMI interrupt is triggered false if not</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setPLLSysClk</field>
    <field name="args">(uint16_t divider)</field>
    <field name="url">group__sysctl__api.html#ga43cb8b0440af0f88ec597c3740c518d1</field>
    <field name="keywords">SysCtl_setPLLSysClk SysCtl_setPLLSysClk</field>
    <field name="text">Sets up PLLSYSCLK divider divider is the value that configures the divider This function sets up the PLLSYSCLK divider There is only one divider that scales PLLSYSCLK to generate the system clock The divider parameter can have any value even/odd from 1 6 4 0 x0 0 x1 0 x2 default on reset 0 x3 0 x4 0 x3F None Please make sure to check if the PLL is locked and valid using the SysCtl_isPLLValid() before setting the divider</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getDeviceParametric</field>
    <field name="args">(SysCtl_DeviceParametric parametric)</field>
    <field name="url">group__sysctl__api.html#ga4415f1691a5b93e442c6ee5eee5885e7</field>
    <field name="keywords">SysCtl_getDeviceParametric SysCtl_getDeviceParametric</field>
    <field name="text">Get the device part parametric value parametric is the requested device parametric value This function gets the device part parametric value The parametric parameter can have one the following enumerated values SYSCTL_DEVICE_QUAL Device Qualification Status SYSCTL_DEVICE_PINCOUNT Device Pin Count SYSCTL_DEVICE_FLASH Device Flash size KB SYSCTL_DEVICE_FAMILY Device Family SYSCTL_DEVICE_PARTNO Device Part Number SYSCTL_DEVICE_CLASSID Device Class ID This API is applicable only for the CPU1 subsystem Returns the specified parametric value</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Sysctl_PLLConfig</field>
    <field name="url">group__sysctl__api.html#ga44bf52fe695d5b0e53154c98c0f53950</field>
    <field name="keywords">Sysctl_PLLConfig Sysctl_PLLConfig</field>
    <field name="text">The following are values that can be passed to Sysctl_setClock() as pllConfig parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_REGWRITE_DELAY</field>
    <field name="url">group__sysctl__api.html#ga4582b25de3a7c684448faa00da1bbf6c</field>
    <field name="keywords">SYSCTL_REGWRITE_DELAY SYSCTL_REGWRITE_DELAY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_ClkRegSel</field>
    <field name="url">group__sysctl__api.html#ga45e2c59387a65f005d050e25b29def89</field>
    <field name="keywords">SysCtl_ClkRegSel SysCtl_ClkRegSel</field>
    <field name="text">The following are values that can be passed to SysCtl_lockClkConfig() as the peripheral parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enableWatchdogStandbyWakeup</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga461b8784214f3b4bb54a9bf3810d5e88</field>
    <field name="keywords">SysCtl_enableWatchdogStandbyWakeup SysCtl_enableWatchdogStandbyWakeup</field>
    <field name="text">Enable the device to wake from STANDBY mode upon a watchdog interrupt In order to use this option you must configure the watchdog to generate an interrupt using SysCtl_setWatchdogMode() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_disablePeripheral</field>
    <field name="args">(SysCtl_PeripheralPCLOCKCR peripheral)</field>
    <field name="url">group__sysctl__api.html#ga467372b74154af6c8892fb453f0ffc6c</field>
    <field name="keywords">SysCtl_disablePeripheral SysCtl_disablePeripheral</field>
    <field name="text">Disables a peripheral peripheral is the peripheral to disable Peripherals are disabled with this function Once disabled they will not operate or respond to register reads/writes None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_OSCSRC_M</field>
    <field name="url">group__sysctl__api.html#ga4a095891850bfd2eabafe4cd5f81e4c4</field>
    <field name="keywords">SYSCTL_OSCSRC_M SYSCTL_OSCSRC_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_LPM_HALT</field>
    <field name="url">group__sysctl__api.html#ga4d87d1880fb5784b3d20603ff0436674</field>
    <field name="keywords">SYSCTL_LPM_HALT SYSCTL_LPM_HALT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_clearNMIStatus</field>
    <field name="args">(uint16_t nmiFlags)</field>
    <field name="url">group__sysctl__api.html#ga4e1658fcc007d3b94b921c12687ccdcf</field>
    <field name="keywords">SysCtl_clearNMIStatus SysCtl_clearNMIStatus</field>
    <field name="text">Function to clear individual NMI interrupts nmiFlags Bit mask of the NMI interrupts that user wants to clear The bit format of this parameter is same as of the NMIFLG register These defines are provided SYSCTL_NMI_NMIINT NMI Interrupt Flag SYSCTL_NMI_CLOCKFAIL Clock Fail Interrupt Flag SYSCTL_NMI_UNCERR Flash/RAM/ROM Uncorrectable Error NMI Flag SYSCTL_NMI_SWERR SW Error Force NMI Flag Clear NMI interrupt flags that correspond with the passed in bit mask Note The NMI Interrupt flag is always cleared by default and therefore doesn t have to be included in the bit mask None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Sysctl_PLLMult</field>
    <field name="url">group__sysctl__api.html#ga4e3181bdb6a693bac0e296abb9eb84ee</field>
    <field name="keywords">Sysctl_PLLMult Sysctl_PLLMult</field>
    <field name="text">The following are values that can be passed to Sysctl_setClock() as multiplier parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_PLLLOCK_TIMEOUT</field>
    <field name="url">group__sysctl__api.html#ga4f790ef3ac72b8a403001f82d7c94ee2</field>
    <field name="keywords">SYSCTL_PLLLOCK_TIMEOUT SYSCTL_PLLLOCK_TIMEOUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_WD_CHKBITS</field>
    <field name="url">group__sysctl__api.html#ga4ff66bcd10dff57f6a8a882ac63d2961</field>
    <field name="keywords">SYSCTL_WD_CHKBITS SYSCTL_WD_CHKBITS</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_OSCSRC_SYSOSCDIV4</field>
    <field name="url">group__sysctl__api.html#ga50196c862da800ca90082987aadc0843</field>
    <field name="keywords">SYSCTL_OSCSRC_SYSOSCDIV4 SYSCTL_OSCSRC_SYSOSCDIV4</field>
    <field name="text">SYSOSCDIV4 SYSOSCDIV4</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_PeripheralSOFTPRES</field>
    <field name="url">group__sysctl__api.html#ga54ee7d33eb760f838f036ecd3bc7c53d</field>
    <field name="keywords">SysCtl_PeripheralSOFTPRES SysCtl_PeripheralSOFTPRES</field>
    <field name="text">The following are values that can be passed to SysCtl_resetPeripheral() as the peripheral parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_resetMCD</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga58e333a03afb9384e68304a35485369a</field>
    <field name="keywords">SysCtl_resetMCD SysCtl_resetMCD</field>
    <field name="text">Reset the missing clock detection logic after clock failure None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_PERIPH_REG_S</field>
    <field name="url">group__sysctl__api.html#ga5913805479477ff8cf016fd0bd5815a1</field>
    <field name="keywords">SYSCTL_PERIPH_REG_S SYSCTL_PERIPH_REG_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_disableCMPSSLPMWakeupPin</field>
    <field name="args">(SysCtl_CMPSSLPMSel pin)</field>
    <field name="url">group__sysctl__api.html#ga5be74b1f8027aba01bd381ff50096bde</field>
    <field name="keywords">SysCtl_disableCMPSSLPMWakeupPin SysCtl_disableCMPSSLPMWakeupPin</field>
    <field name="text">Disonnects the selected pin from LPM circuit The pin parameter can be a value from the enumeration SysCtl_CMPSSLPMSel This function disconnects a pin from the LPM circuit None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_Cputimer2ClkSource</field>
    <field name="url">group__sysctl__api.html#ga5cb264c5e7d7ea39520550db6e31ef72</field>
    <field name="keywords">SysCtl_Cputimer2ClkSource SysCtl_Cputimer2ClkSource</field>
    <field name="text">The following are values that can be passed to SysCtl_setCputimer2Clk() as source parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_lockExtADCSOCSelect</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga5cb84c591f4ec2b64f57c681e2b3c270</field>
    <field name="keywords">SysCtl_lockExtADCSOCSelect SysCtl_lockExtADCSOCSelect</field>
    <field name="text">Locks the SOC Select of the Trig X-BAR This function locks the external ADC SOC select of the Trig X-BAR None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_OSCSRC_XTAL</field>
    <field name="url">group__sysctl__api.html#ga5ea5c1655f2f13340b93b13c0aeb608e</field>
    <field name="keywords">SYSCTL_OSCSRC_XTAL SYSCTL_OSCSRC_XTAL</field>
    <field name="text">External oscillator XTAL in crystal mode External oscillator XTAL in crystal mode</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_DEFAULT_OSC_FREQ</field>
    <field name="url">group__sysctl__api.html#ga5ef416513cb7daf3907f147ff03bf8b8</field>
    <field name="keywords">SYSCTL_DEFAULT_OSC_FREQ SYSCTL_DEFAULT_OSC_FREQ</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getWatchdogCounterValue</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga61e6f9926383a2b36699e011ed06ba55</field>
    <field name="keywords">SysCtl_getWatchdogCounterValue SysCtl_getWatchdogCounterValue</field>
    <field name="text">Gets the watchdog counter value Returns the current value of the 8 bit watchdog counter If this count value overflows a watchdog output pulse is generated</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Sysctl_PLLSysDiv</field>
    <field name="url">group__sysctl__api.html#ga65573c548c81c3f94e0a8bf93c3beabe</field>
    <field name="keywords">Sysctl_PLLSysDiv Sysctl_PLLSysDiv</field>
    <field name="text">The following are values that can be passed to Sysctl_setClock() as sysdiv parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setWatchdogWindowValue</field>
    <field name="args">(uint16_t value)</field>
    <field name="url">group__sysctl__api.html#ga6a8bcbbbe055d27660ec05a245061416</field>
    <field name="keywords">SysCtl_setWatchdogWindowValue SysCtl_setWatchdogWindowValue</field>
    <field name="text">Set the minimum threshold value for windowed watchdog value is the value to set the window threshold This function sets the minimum threshold value used to define the lower limit of the windowed watchdog functionality None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_WDMode</field>
    <field name="url">group__sysctl__api.html#ga6acfa77eedbb703be286b9900f403839</field>
    <field name="keywords">SysCtl_WDMode SysCtl_WDMode</field>
    <field name="text">The following are values that can be passed to SysCtl_setWatchdogMode() as the prescaler parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_BOOT_ROM_POR</field>
    <field name="url">group__sysctl__api.html#ga6c60627b278fe5e93b7eab0eabfd1816</field>
    <field name="keywords">SYSCTL_BOOT_ROM_POR SYSCTL_BOOT_ROM_POR</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_ClockOut</field>
    <field name="url">group__sysctl__api.html#ga6d6707580ed69295038d9eb68c52b114</field>
    <field name="keywords">SysCtl_ClockOut SysCtl_ClockOut</field>
    <field name="text">The following are values that can be passed to SysCtl_selectClockOutSource() as the source parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_isWatchdogEnabled</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga6ef98c24d03f8d744ba29dfee4f298ad</field>
    <field name="keywords">SysCtl_isWatchdogEnabled SysCtl_isWatchdogEnabled</field>
    <field name="text">Checks if the watchdog is enabled or not This function returns the watchdog status whether it is enabled or disabled true if the watchdog is enabled false if the watchdog is disabled</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getLowSpeedClock</field>
    <field name="args">(uint32_t clockInHz)</field>
    <field name="url">group__sysctl__api.html#ga70606ae075b1e015e3a63f8e83320321</field>
    <field name="keywords">SysCtl_getLowSpeedClock SysCtl_getLowSpeedClock</field>
    <field name="text">Calculates the low-speed peripheral clock frequency LSPCLK clockInHz is the frequency of the oscillator clock source OSCCLK This function determines the frequency of the low-speed peripheral clock based on the frequency of the oscillator clock source from clockInHz and the PLL and clock divider configuration registers Returns the low-speed peripheral clock frequency</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getClock</field>
    <field name="args">(uint32_t clockInHz)</field>
    <field name="url">group__sysctl__api.html#ga707d0a2ecffe9925e20d49362032b60e</field>
    <field name="keywords">SysCtl_getClock SysCtl_getClock</field>
    <field name="text">Calculates the system clock frequency SYSCLK clockInHz is the frequency of the oscillator clock source OSCCLK This function determines the frequency of the system clock based on the frequency of the oscillator clock source from clockInHz and the PLL and clock divider configuration registers Returns the system clock frequency If a missing clock is detected the function will return the WROSCDIV8 frequency This needs to be corrected and cleared see SysCtl_resetMCD() before trying to call this function again</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_resetDevice</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga708122f4c4f6424632c0bc6fb562bc59</field>
    <field name="keywords">SysCtl_resetDevice SysCtl_resetDevice</field>
    <field name="text">Resets the device This function performs a watchdog reset of the device This function does not return</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Sysctl_PLLPDiv</field>
    <field name="url">group__sysctl__api.html#ga70f699e4683205033f6a83a88fbe97e7</field>
    <field name="keywords">Sysctl_PLLPDiv Sysctl_PLLPDiv</field>
    <field name="text">The following are values that can be passed to Sysctl_setClock() as pdiv parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enableCMPSSLPMWakeupPin</field>
    <field name="args">(SysCtl_CMPSSLPMSel pin)</field>
    <field name="url">group__sysctl__api.html#ga72f8af4deb94743b1471c6211fee8ef9</field>
    <field name="keywords">SysCtl_enableCMPSSLPMWakeupPin SysCtl_enableCMPSSLPMWakeupPin</field>
    <field name="text">Connects the selected pin to LPM circuit The pin parameter can be a value from the enumeration SysCtl_CMPSSLPMSel This function connects a pin to the LPM circuit None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_ADCSOC_SRC_PWM3SOCA</field>
    <field name="url">group__sysctl__api.html#ga74c2ae6c7375eb75af2cda925acd1554</field>
    <field name="keywords">SYSCTL_ADCSOC_SRC_PWM3SOCA SYSCTL_ADCSOC_SRC_PWM3SOCA</field>
    <field name="text">PWM3 SOCA for ADCSOCAO PWM3 SOCA for ADCSOCAO</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getUserRegister</field>
    <field name="args">(SysCtl_UserRegister reg)</field>
    <field name="url">group__sysctl__api.html#ga75c67d47b81b73d10ce3976203509a1b</field>
    <field name="keywords">SysCtl_getUserRegister SysCtl_getUserRegister</field>
    <field name="text">Gets the user register reg is the register to be set This function sets sepcified user register The value parameter can have one enumerated value from SysCtl_UserRegister value of the specified register</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_isErrorTriggered</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga75d6b4dd17b3a537f79fb5c96c5bf049</field>
    <field name="keywords">SysCtl_isErrorTriggered SysCtl_isErrorTriggered</field>
    <field name="text">Check if One or more of the error sources triggered Following are the events/triggers that can indicate an error nmi interrupt on C28x Watchdog reset Error on a Pie vector fetch Efuse error nmi interrupt on CM true if the error is triggered false if the error is not triggered</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_turnOnOsc</field>
    <field name="args">(uint32_t oscSource)</field>
    <field name="url">group__sysctl__api.html#ga78166d8e71ecd040e5ceadf8bf298125</field>
    <field name="keywords">SysCtl_turnOnOsc SysCtl_turnOnOsc</field>
    <field name="text">Turns on the specified oscillator sources oscSource is the oscillator source to be configured This function turns on the oscillator specified by the oscSource parameter which may take a value of SYSCTL_OSCSRC_XTAL SYSCTL_OSCSRC_WROSCDIV8 is not a valid value for oscSource None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enablePeripheral</field>
    <field name="args">(SysCtl_PeripheralPCLOCKCR peripheral)</field>
    <field name="url">group__sysctl__api.html#ga78267e0e8a73252b8e27527fab5ca73f</field>
    <field name="keywords">SysCtl_enablePeripheral SysCtl_enablePeripheral</field>
    <field name="text">Enables a peripheral peripheral is the peripheral to enable Peripherals are enabled with this function At power-up all peripherals are disabled they must be enabled in order to operate or respond to register reads/writes Note that there should be atleast 5 cycles delay between enabling the peripheral clock and accessing the peripheral registers The delay should be added by the user if the peripheral is accessed immediately after this function call Use asm to add 5 cycle delay post this function call None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_WD_ENRSTKEY</field>
    <field name="url">group__sysctl__api.html#ga7a99a2a52229f6685b80e5b6c043124e</field>
    <field name="keywords">SYSCTL_WD_ENRSTKEY SYSCTL_WD_ENRSTKEY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getInterruptStatusMask</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga7c558345919b56ee6bd80275e2303891</field>
    <field name="keywords">SysCtl_getInterruptStatusMask SysCtl_getInterruptStatusMask</field>
    <field name="text">Gets the masked interrupts due to multiple different errors in the system the Interrupt generated on the system The values can be one/ more from SYSCTL_STATUS_CORRECTABLE_ERR SYSCTL_STATUS_FPU_UFLOW SYSCTL_STATUS_FPU_OFLOW</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_connectMCDClockSource</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga7c55bb148ebf089f8beb164dad717332</field>
    <field name="keywords">SysCtl_connectMCDClockSource SysCtl_connectMCDClockSource</field>
    <field name="text">Re-connect missing clock detection clock source to stop simulating clock failure None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_resetWatchdog</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga7dfa6c17e175a296c770a674df577528</field>
    <field name="keywords">SysCtl_resetWatchdog SysCtl_resetWatchdog</field>
    <field name="text">Writes the second key to reset the watchdog This function writes the second key to reset the watchdog None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_CAUSE_NMIWDRS</field>
    <field name="url">group__sysctl__api.html#ga7f6a58b746fd010e1e1f8b11755882f9</field>
    <field name="keywords">SYSCTL_CAUSE_NMIWDRS SYSCTL_CAUSE_NMIWDRS</field>
    <field name="text">NMI watchdog reset NMI watchdog reset</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_DeviceParametric</field>
    <field name="url">group__sysctl__api.html#ga8091af9c8eec7464d7169cc869b1aff9</field>
    <field name="keywords">SysCtl_DeviceParametric SysCtl_DeviceParametric</field>
    <field name="text">The following values define the parametric parameter for SysCtl_getDeviceParametric()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_disableLPMWakeupPin</field>
    <field name="args">(uint32_t pin)</field>
    <field name="url">group__sysctl__api.html#ga81364c301d34e67c0d2a0d6e0a90413a</field>
    <field name="keywords">SysCtl_disableLPMWakeupPin SysCtl_disableLPMWakeupPin</field>
    <field name="text">Disables a pin to wake up the device from the following mode(s) STANDBY HALT pin is the identifying number of the pin This function disconnects a pin to the LPM circuit disallowing an event on the pin to wake up the device when when it is in following mode(s) STANDBY HALT The pin is specified by its numerical value For example GPIO34 is specified by passing 3 4 as pin Only GPIOs 0 through 6 3 are valid None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_NMI_SWERR</field>
    <field name="url">group__sysctl__api.html#ga840e05904d35eec227548c5eae006510</field>
    <field name="keywords">SYSCTL_NMI_SWERR SYSCTL_NMI_SWERR</field>
    <field name="text">SW Error Force NMI Flag SW Error Force NMI Flag</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getExternalOscCounterValue</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga85459bf0495fe7ebf9e695e0d70eeea8</field>
    <field name="keywords">SysCtl_getExternalOscCounterValue SysCtl_getExternalOscCounterValue</field>
    <field name="text">Gets the external oscillator counter value This function returns the X1 clock counter value When the return value reaches 0 x3FF it freezes Before switching from SYSOSCDIV4 to an external oscillator XTAL an application should call this function to make sure the counter is saturated Returns the value of the 1 0 bit X1 clock counter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enableLPMWakeupPin</field>
    <field name="args">(uint32_t pin)</field>
    <field name="url">group__sysctl__api.html#ga85edc679017301868ae78d0b5c26eae2</field>
    <field name="keywords">SysCtl_enableLPMWakeupPin SysCtl_enableLPMWakeupPin</field>
    <field name="text">Enables a pin to wake up the device from the following mode(s) STANDBY HALT pin is the identifying number of the pin This function connects a pin to the LPM circuit allowing an event on the pin to wake up the device when when it is in following mode(s) STANDBY HALT The pin is specified by its numerical value For example GPIO34 is specified by passing 3 4 as pin Only GPIOs 0 through 6 3 are capable of being connected to the LPM circuit None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_Cputimer2ClkDivider</field>
    <field name="url">group__sysctl__api.html#ga87e7a6d6c886d8d9d06e75ecf47ccd9a</field>
    <field name="keywords">SysCtl_Cputimer2ClkDivider SysCtl_Cputimer2ClkDivider</field>
    <field name="text">The following are values that can be passed to SysCtl_setCputimer2Clk() as divider parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_isNMIShadowFlagSet</field>
    <field name="args">(uint16_t nmiFlags)</field>
    <field name="url">group__sysctl__api.html#ga87fe9573ce48238e42a9dc6604aa4c04</field>
    <field name="keywords">SysCtl_isNMIShadowFlagSet SysCtl_isNMIShadowFlagSet</field>
    <field name="text">Check if the individual NMI shadow flags are set nmiFlags Bit mask of the NMI interrupts that user wants to clear The bit format of this parameter is same as of the NMIFLG register These defines are provided SYSCTL_NMI_NMIINT NMI Interrupt Flag SYSCTL_NMI_CLOCKFAIL Clock Fail Interrupt Flag SYSCTL_NMI_UNCERR Flash/RAM/ROM Uncorrectable Error NMI Flag SYSCTL_NMI_SWERR SW Error Force NMI Flag Check if interrupt flags corresponding to the passed in bit mask are asserted true if any of the NMI asked for in the parameter bit mask is set false if none of the NMI requested in the parameter bit mask are set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setUserRegister</field>
    <field name="args">(SysCtl_UserRegister reg, uint32_t value)</field>
    <field name="url">group__sysctl__api.html#ga89fde46c7ee009d2996b90e1d881575a</field>
    <field name="keywords">SysCtl_setUserRegister SysCtl_setUserRegister</field>
    <field name="text">Sets the user register reg is the register to be set value is the value to be set This function sets sepcified user register The value parameter can have one enumerated value from SysCtl_UserRegister None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_ADCSOC_SRC_PWM1SOCB</field>
    <field name="url">group__sysctl__api.html#ga8a29f0a71a82ff374affa5ab888205b9</field>
    <field name="keywords">SYSCTL_ADCSOC_SRC_PWM1SOCB SYSCTL_ADCSOC_SRC_PWM1SOCB</field>
    <field name="text">PWM1 SOCB for ADCSOCBO PWM1 SOCB for ADCSOCBO</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getDeviceUID0</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga8b077339da2e6e4c8cf981c84514e7a4</field>
    <field name="keywords">SysCtl_getDeviceUID0 SysCtl_getDeviceUID0</field>
    <field name="text">Get the device UID_UNIQUE0 value This function returns the device UID_UNIQUE0 value Returns the device UID_UNIQUE0 value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enableWatchdogInHalt</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga8bf625f6e3e9dc1d47a5db2ca358265f</field>
    <field name="keywords">SysCtl_enableWatchdogInHalt SysCtl_enableWatchdogInHalt</field>
    <field name="text">Enable the watchdog to run while in HALT mode This function configures the watchdog to continue to run while in HALT mode Additionally WROSCDIV8 and SYSOSCDIV4 are not powered down when the system enters HALT mode By default the watchdog is gated when the system enters HALT None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enableNMIGlobalInterrupt</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga8d0e91eb7597b8f43e2f422bc2583e8e</field>
    <field name="keywords">SysCtl_enableNMIGlobalInterrupt SysCtl_enableNMIGlobalInterrupt</field>
    <field name="text">Enable the NMI Global interrupt bit Note This bit should be set after the device security related initialization is complete None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_SyncOutputSource</field>
    <field name="url">group__sysctl__api.html#ga8d491ad686984213d6bbc1336f5841b4</field>
    <field name="keywords">SysCtl_SyncOutputSource SysCtl_SyncOutputSource</field>
    <field name="text">The following values define the syncSrc parameter for SysCtl_setSyncOutputConfig()</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_PLL_KEY</field>
    <field name="url">group__sysctl__api.html#ga8e88386569f70481d235c843bc10c56a</field>
    <field name="keywords">SYSCTL_PLL_KEY SYSCTL_PLL_KEY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setCputimer2Clk</field>
    <field name="args">(SysCtl_Cputimer2ClkDivider divider, SysCtl_Cputimer2ClkSource source)</field>
    <field name="url">group__sysctl__api.html#ga917ece65bef87e60e3a4f8dca84c4687</field>
    <field name="keywords">SysCtl_setCputimer2Clk SysCtl_setCputimer2Clk</field>
    <field name="text">Sets up CPU Timer 2 CLK source divider divider is the value that configures the divider source is the source for the clock divider This function sets up the CPU Timer 2 CLK divider based on the source that is selected There is only one divider that scales the to CPU Timer 2 CLK The divider parameter can have one enumerated value from SysCtl_Cputimer2ClkDivider The source parameter can have one enumerated value from SysCtl_Cputimer2ClkSource None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_STATUS_CORRECTABLE_ERR</field>
    <field name="url">group__sysctl__api.html#ga925ddda412a53037c57cc62855a5af8a</field>
    <field name="keywords">SYSCTL_STATUS_CORRECTABLE_ERR SYSCTL_STATUS_CORRECTABLE_ERR</field>
    <field name="text">RAM/Flash correctable error flag RAM/Flash correctable error flag</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_selectXTALSingleEnded</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga95a127882ad3c5117cc616af69ed781f</field>
    <field name="keywords">SysCtl_selectXTALSingleEnded SysCtl_selectXTALSingleEnded</field>
    <field name="text">Configures the external oscillator for the clocking of the device in single-ended mode This function configures the external oscillator XTAL to be used for the clocking of the device in single-ended mode It follows the procedure to turn on the oscillator wait for it to power up and select it as the source of the system clock Please note that this function blocks while it waits for the XTAL to power up If the XTAL does not manage to power up properly the function will loop for a long time It is recommended that you modify this function to add an appropriate timeout and error-handling procedure None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_ExternalOscMode</field>
    <field name="url">group__sysctl__api.html#ga96f499faab10fd54daa75a5e204a4e3b</field>
    <field name="keywords">SysCtl_ExternalOscMode SysCtl_ExternalOscMode</field>
    <field name="text">The following are values that can be passed to SysCtl_setExternalOscMode() as the mode parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_serviceWatchdog</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga9748f435e7f7427a097bada323c112df</field>
    <field name="keywords">SysCtl_serviceWatchdog SysCtl_serviceWatchdog</field>
    <field name="text">Services the watchdog This function resets the watchdog None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enableExtADCSOCSource</field>
    <field name="args">(uint32_t adcsocSrc)</field>
    <field name="url">group__sysctl__api.html#ga983537277f1c26a864d88b1abb4e793d</field>
    <field name="keywords">SysCtl_enableExtADCSOCSource SysCtl_enableExtADCSOCSource</field>
    <field name="text">Enables PWM SOC signals to drive an external off-chip ADCSOC signal adcsocSrc is a bit field of the selected signals to be enabled This function configures which PWM SOC signals are enabled as a source for either ADCSOCAO or ADCSOCBO The adcsocSrc parameter takes a logical OR of SYSCTL_ADCSOC_SRC_PWMxSOCA/B values that correspond to different signals None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getDeviceUID1</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga99aa9b1ffa816444b11eddc62c29ca13</field>
    <field name="keywords">SysCtl_getDeviceUID1 SysCtl_getDeviceUID1</field>
    <field name="text">Get the device UID_UNIQUE1 value This function returns the device UID_UNIQUE1 value Returns the device UID_UNIQUE1 value</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_CAUSE_SCCRESET</field>
    <field name="url">group__sysctl__api.html#ga99bdb5472fc50d18cd8551e6caa760f6</field>
    <field name="keywords">SYSCTL_CAUSE_SCCRESET SYSCTL_CAUSE_SCCRESET</field>
    <field name="text">SCCRESETn by DCSM SCCRESETn by DCSM</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_NMI_NMIINT</field>
    <field name="url">group__sysctl__api.html#ga9a096df0c13fde22e240ba37645c1772</field>
    <field name="keywords">SYSCTL_NMI_NMIINT SYSCTL_NMI_NMIINT</field>
    <field name="text">NMI Interrupt Flag NMI Interrupt Flag</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_OSCSRC_XTAL_SE</field>
    <field name="url">group__sysctl__api.html#ga9a25e9bf1d2657193fb45494757ca6ca</field>
    <field name="keywords">SYSCTL_OSCSRC_XTAL_SE SYSCTL_OSCSRC_XTAL_SE</field>
    <field name="text">External oscillator XTAL in single-ended mode External oscillator XTAL in single-ended mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setSyncOutputConfig</field>
    <field name="args">(SysCtl_SyncOutputSource syncSrc)</field>
    <field name="url">group__sysctl__api.html#ga9b6a5f0f9cc5440eaa003a8dfc1d19d2</field>
    <field name="keywords">SysCtl_setSyncOutputConfig SysCtl_setSyncOutputConfig</field>
    <field name="text">Configures the sync output source syncSrc is sync output source selection This function configures the sync output source from the PWM modules The syncSrc parameter is a value SYSCTL_SYNC_OUT_SRC_XXXX where XXXX is a sync signal coming from an PWM such as SYSCTL_SYNC_OUT_SRC_PWM1SYNCOUT None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_lockErrControl</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga9c97bf8ea9ffb1c472c68fb16030d792</field>
    <field name="keywords">SysCtl_lockErrControl SysCtl_lockErrControl</field>
    <field name="text">Locks the Error control registers This function locks the Error configuration registers None The lock register is cleared only on a system reset</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_lockSysConfig</field>
    <field name="args">(SysCtl_CpuRegSel registerName)</field>
    <field name="url">group__sysctl__api.html#ga9dd729d44f590fc77a24d1ef728abc4c</field>
    <field name="keywords">SysCtl_lockSysConfig SysCtl_lockSysConfig</field>
    <field name="text">Locks the CPU system configuration registers registerName is CPU system configuration register which needs to be locked The registerName parameter can be a value from the enumeration SysCtl_CpuRegSel None The register is unlocked only on a system reset</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enterStandbyMode</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga9e4bf8cb67dde0318676158f69f1878a</field>
    <field name="keywords">SysCtl_enterStandbyMode SysCtl_enterStandbyMode</field>
    <field name="text">Enters STANDBY mode This function puts the device into STANDBY mode This will gate both the CPU clock and any peripheral clocks derived from SYSCLK The watchdog is left active and an NMI or an optional watchdog interrupt will wake the CPU subsystem from STANDBY mode GPIOs may be configured to wake the CPU subsystem See SysCtl_enableLPMWakeupPin() The CPU will receive an interrupt WAKEINT on wakeup None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setClock</field>
    <field name="args">(uint32_t oscSrc, Sysctl_PLLConfig pllConfig, Sysctl_PLLPDiv pDiv, Sysctl_PLLMult multiplier, Sysctl_PLLRDivClk0 rDiv, Sysctl_PLLSysDiv sysDiv, uint32_t dccBase)</field>
    <field name="url">group__sysctl__api.html#ga9ef900320bd122c9a06b6bdcde45e692</field>
    <field name="keywords">SysCtl_setClock SysCtl_setClock</field>
    <field name="text">Configures the clocking of the device This function configures the clocking of the device The input crystal frequency oscillator to be used use of the PLL and the system clock divider are all configured with this function oscSrc PLL Source Can be one of the following values SYSCTL_OSCSRC_SYSOSCDIV4 System Oscillator SYSCTL_OSCSRC_XTAL External XTAL SYSCTL_OSCSRC_XTAL_SE External XTAL Single-ended mode SYSCTL_OSCSRC_WROSCDIV8 Wide-range Oscillator 1 pllConfig PLL configuration Can be one fo the following values SYSCTL_PLL_ENABLE This is to Enable the PLL Clock to the System SYSCTL_PLL_BYPASS This is to Bypass the PLLCLK from the System this will also power up the PLL if the user desires to power up the PLL but not use it for System SYSCTL_PLL_DISABLE This is to Power Down the PLL and Bypass the PLLCLK to the System pDiv Input Clock Divider Use Enum SYSCTL_PDIV_1 8 multiplier PLL Multiplier Use Enum SYSCTL_PLLMULT_2 1 2 8 rDivClk0 Output Clock Divider Use Enum SYSCTL_RDIVCLK0_2 3 2 sysDiv SYSCLK Divider Use Enum SYSCTL_SYSDIV_1 6 4 dccBase Base address of DCC module for PLL output validation This function uses the DCC to check that the PLLRAWCLK is running at the expected rate If you are using the DCC you must back up its configuration before calling this function and restore it afterward Locking PLL sequence is only done if the multipliers are updated See your device errata for more details about locking the PLL Returns false if a missing clock error is detected This needs to be cleared see SysCtl_resetMCD() before trying to call this function again Also returns false if the PLLRAWCLK is not running and its expected rate Otherwise returns true</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setStandbyQualificationPeriod</field>
    <field name="args">(uint16_t cycles)</field>
    <field name="url">group__sysctl__api.html#ga9f555a5c7119d4639a5f082a4b218f01</field>
    <field name="keywords">SysCtl_setStandbyQualificationPeriod SysCtl_setStandbyQualificationPeriod</field>
    <field name="text">Sets the number of cycles to qualify an input on waking from STANDBY mode cycles is the number of OSCCLK cycles This function sets the number of OSCCLK clock cycles used to qualify the selected inputs when waking from STANDBY mode The cycles parameter should be passed a cycle count between 2 and 6 5 cycles inclusive None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getResetCause</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#ga9f99f0e5438928c222c99340dc46a253</field>
    <field name="keywords">SysCtl_getResetCause SysCtl_getResetCause</field>
    <field name="text">Gets the reason for a reset This function will return the reason(s) for a reset Since the reset reasons are sticky until either cleared by software or an external reset multiple reset reasons may be returned if multiple resets have occurred The reset reason will be a logical OR of SYSCTL_CAUSE_POR Power-on reset SYSCTL_CAUSE_XRS External reset pin SYSCTL_CAUSE_WDRS Watchdog reset SYSCTL_CAUSE_NMIWDRS NMI watchdog reset SYSCTL_CAUSE_SCCRESET SCCRESETn reset from DCSM SYSCTL_CAUSE_SIMRESET_CPU1RSN SIMRESET_CPU1RSn SYSCTL_CAUSE_SIMRESET_XRSN SIMRESET_XRSn If you re-purpose the reserved boot ROM RAM the POR and XRS reset statuses won t be accurate Returns the reason(s) for a reset</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_BOOT_ROM_STATUS</field>
    <field name="url">group__sysctl__api.html#gaa0a1c1405134a0ce6c3124260b0474a8</field>
    <field name="keywords">SYSCTL_BOOT_ROM_STATUS SYSCTL_BOOT_ROM_STATUS</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_turnOffOsc</field>
    <field name="args">(uint32_t oscSource)</field>
    <field name="url">group__sysctl__api.html#gaa0dadbda4129af72ca9fc4fa756e94b2</field>
    <field name="keywords">SysCtl_turnOffOsc SysCtl_turnOffOsc</field>
    <field name="text">Turns off the specified oscillator sources oscSource is the oscillator source to be configured This function turns off the oscillator specified by the oscSource parameter which may take a value of SYSCTL_OSCSRC_XTAL SYSCTL_OSCSRC_WROSCDIV8 is not a valid value for oscSource None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_deviceCal</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gaa0dbdec83dafa5a28445478ab2bb4e84</field>
    <field name="keywords">SysCtl_deviceCal SysCtl_deviceCal</field>
    <field name="text">Wrapper function for Device_cal function None This is a wrapper function for the Device_cal function available in the OTP memory None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_resetPeripheral</field>
    <field name="args">(SysCtl_PeripheralSOFTPRES peripheral)</field>
    <field name="url">group__sysctl__api.html#gaa27c6396066aaef8f555fc26a62472ca</field>
    <field name="keywords">SysCtl_resetPeripheral SysCtl_resetPeripheral</field>
    <field name="text">Resets a peripheral peripheral is the peripheral to reset This function uses the SOFTPRESx registers to reset a specified peripheral Module registers will be returned to their reset states This includes registers containing trim values.The peripheral software reset needed by CPU2 can be communicated to CPU1 via IPC for all shared peripherals None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_selectXTAL</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gaa2ffccc39ede3ef73379322d2e6bebc5</field>
    <field name="keywords">SysCtl_selectXTAL SysCtl_selectXTAL</field>
    <field name="text">Configures the external oscillator for the clocking of the device This function configures the external oscillator XTAL to be used for the clocking of the device in crystal mode It follows the procedure to turn on the oscillator wait for it to power up and select it as the source of the system clock Please note that this function blocks while it waits for the XTAL to power up If the XTAL does not manage to power up properly the function will loop for a long time It is recommended that you modify this function to add an appropriate timeout and error-handling procedure None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_DCC_COUNTER0_WINDOW</field>
    <field name="url">group__sysctl__api.html#gaa38cd0b6faa1c9e49904cc168dbf9cf6</field>
    <field name="keywords">SYSCTL_DCC_COUNTER0_WINDOW SYSCTL_DCC_COUNTER0_WINDOW</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_clearInterruptStatus</field>
    <field name="args">(uint32_t intFlags)</field>
    <field name="url">group__sysctl__api.html#gaa5a6614fcc3180557822d9f1cd9e72e7</field>
    <field name="keywords">SysCtl_clearInterruptStatus SysCtl_clearInterruptStatus</field>
    <field name="text">Clears the interrupts due to multiple different errors in the system intFlags is the interrupt that needs to be cleared The intFlags parameter are the Interrupts generated on errors in the system that need to be cleared The values can be one or more from SYSCTL_STATUS_GINT SYSCTL_STATUS_CORRECTABLE_ERR SYSCTL_STATUS_FPU_UFLOW SYSCTL_STATUS_FPU_OFLOW None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_selectErrPinPolarity</field>
    <field name="args">(uint16_t pol)</field>
    <field name="url">group__sysctl__api.html#gaa73f2abeb99be2eddef091b572cf8bb7</field>
    <field name="keywords">SysCtl_selectErrPinPolarity SysCtl_selectErrPinPolarity</field>
    <field name="text">Selects the polarity of the error pin pol is the ERROR pin polarity The pol parameter can take any of the below values 0 x0U If an error is already triggered Error pin will be driven with a value of 0 else 1 0 x1U If an error is already triggered Error pin will be driven with a value of 1 else 0 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getInterruptStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gaa9dcd33edc95c841d4e9806c8fdf14c5</field>
    <field name="keywords">SysCtl_getInterruptStatus SysCtl_getInterruptStatus</field>
    <field name="text">Gets the status of interrupts due to multiple different errors in the system the Interrupt generated on the system The values can be one/ more from SYSCTL_STATUS_CORRECTABLE_ERR SYSCTL_STATUS_FPU_UFLOW SYSCTL_STATUS_FPU_OFLOW</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_configureType</field>
    <field name="args">(SysCtl_SelType type, uint16_t config, uint16_t lock)</field>
    <field name="url">group__sysctl__api.html#gaab22b1b49f1fc1c0fd315eaf461a3cfd</field>
    <field name="keywords">SysCtl_configureType SysCtl_configureType</field>
    <field name="text">Configures locks/unlocks the peripheral type type is the peripheral type that needs to be configured config is the configuration done to the peripheral which is dependent on the peripheral type lock is to decide if writes for any further configuration is to be allowed or not The type parameter can be a value from the enumeration SysCtl_SelType The config parameter can be a value from the ones below 0 x0U disables the feature for the type 0 x1U enables the feature for the type For ECAP ECAP registers are EALLOW protected or not The lock parameter can be a value from the ones below 0 x1U Write for any further configuration is not allowed 0 x0U Write for any further configuration is allowed This API is applicable only for the CPU1 subsystem None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setXClk</field>
    <field name="args">(SysCtl_XClkDivider divider)</field>
    <field name="url">group__sysctl__api.html#gaabb5de8f58ac1dea92d39793f92ff63d</field>
    <field name="keywords">SysCtl_setXClk SysCtl_setXClk</field>
    <field name="text">Sets up XCLK divider divider is the value that configures the divider This function sets up the XCLK divider There is only one divider that scales WROSCDIV8 to XCLK The divider parameter can have one enumerated value from SysCtl_XClkDivider None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getNMIWatchdogPeriod</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gaabf62201f2d6686ddd6b37f32170e090</field>
    <field name="keywords">SysCtl_getNMIWatchdogPeriod SysCtl_getNMIWatchdogPeriod</field>
    <field name="text">Gets the NMI watchdog period value Returns the NMI watchdog period register s current value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getDeviceRevision</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gaac08e66969434f9184a6bfdcdd7580fd</field>
    <field name="keywords">SysCtl_getDeviceRevision SysCtl_getDeviceRevision</field>
    <field name="text">Get the Device Silicon Revision ID This function returns the silicon revision ID for the device This API is applicable only for the CPU1 subsystem Returns the silicon revision ID value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_disableMCD</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gaacc9d9fcd5905c3404e06dcaaef67ecb</field>
    <field name="keywords">SysCtl_disableMCD SysCtl_disableMCD</field>
    <field name="text">Disable the missing clock detection MCD Logic None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_WDPrescaler</field>
    <field name="url">group__sysctl__api.html#gaad355f0335e50fd3157277781b3a432c</field>
    <field name="keywords">SysCtl_WDPrescaler SysCtl_WDPrescaler</field>
    <field name="text">The following are values that can be passed to SysCtl_setWatchdogPrescaler() as the prescaler parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_forceNMIFlags</field>
    <field name="args">(uint16_t nmiFlags)</field>
    <field name="url">group__sysctl__api.html#gaadaca7368a3e9216a30403a77db026b2</field>
    <field name="keywords">SysCtl_forceNMIFlags SysCtl_forceNMIFlags</field>
    <field name="text">Function to force individual NMI interrupt fail flags nmiFlags Bit mask of the NMI interrupts that user wants to clear The bit format of this parameter is same as of the NMIFLG register These defines are provided SYSCTL_NMI_NMIINT NMI Interrupt Flag SYSCTL_NMI_CLOCKFAIL Clock Fail Interrupt Flag SYSCTL_NMI_UNCERR Flash/RAM/ROM Uncorrectable Error NMI Flag SYSCTL_NMI_SWERR SW Error Force NMI Flag None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_simulateReset</field>
    <field name="args">(uint32_t rstCauses)</field>
    <field name="url">group__sysctl__api.html#gaadfc83982fbd2d0ea9f6d426ca7f7f91</field>
    <field name="keywords">SysCtl_simulateReset SysCtl_simulateReset</field>
    <field name="text">Simulates a reset to the CPU1 rstCauses is the cause for the reset The rstCauses parameter can be one/ more of these values SYSCTL_SIMRESET_CPU1RSN or SYSCTL_SIMRESET_XRSN None This API exists only on CPU1</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_LPM_STANDBY</field>
    <field name="url">group__sysctl__api.html#gab214fef36f7321ccc9dfbeebb7c78d7c</field>
    <field name="keywords">SYSCTL_LPM_STANDBY SYSCTL_LPM_STANDBY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setNMIWatchdogPeriod</field>
    <field name="args">(uint16_t wdPeriod)</field>
    <field name="url">group__sysctl__api.html#gab3c2b3ea0516329c524912152fd8d9b1</field>
    <field name="keywords">SysCtl_setNMIWatchdogPeriod SysCtl_setNMIWatchdogPeriod</field>
    <field name="text">Sets the NMI watchdog period value wdPeriod is the 1 6 bit value at which a reset is generated This function writes to the NMI watchdog period register that holds the value to which the NMI watchdog counter is compared When the two registers match a reset is generated By default the period is 0 xFFFF If a value smaller than the current counter value is passed into the wdPeriod parameter a NMIRSn will be forced None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_DCC_COUNTER0_TOLERANCE</field>
    <field name="url">group__sysctl__api.html#gab4ad37c20d9628812075a2fbd0d4acfa</field>
    <field name="keywords">SYSCTL_DCC_COUNTER0_TOLERANCE SYSCTL_DCC_COUNTER0_TOLERANCE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_PERIPH_REG_M</field>
    <field name="url">group__sysctl__api.html#gab969646d59b5a23f2a4c35ca4f310c91</field>
    <field name="keywords">SYSCTL_PERIPH_REG_M SYSCTL_PERIPH_REG_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_delay</field>
    <field name="args">(uint32_t count)</field>
    <field name="url">group__sysctl__api.html#gaba2186034e7c3b3b219d3b7a3f33aa1d</field>
    <field name="keywords">SysCtl_delay SysCtl_delay</field>
    <field name="text">Delays for a fixed number of cycles count is the number of delay loop iterations to perform This function generates a constant length delay using assembly code The loop takes 5 cycles per iteration plus 9 cycles of overhead If count is equal to zero the loop will underflow and run for a very long time Refer to the macro DEVICE_DELAY_US(x) in device.h which can be used to insert a delay in microseconds None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_PeripheralPCLOCKCR</field>
    <field name="url">group__sysctl__api.html#gabda7c864eeed2819e9dfecf398397632</field>
    <field name="keywords">SysCtl_PeripheralPCLOCKCR SysCtl_PeripheralPCLOCKCR</field>
    <field name="text">The following are values that can be passed to SysCtl_enablePeripheral() and SysCtl_disablePeripheral() as the peripheral parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enterIdleMode</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gabeb482257235b14b5b366a167b8cb2dd</field>
    <field name="keywords">SysCtl_enterIdleMode SysCtl_enterIdleMode</field>
    <field name="text">Enters IDLE mode This function puts the device into IDLE mode The CPU clock is gated while all peripheral clocks are left running Any enabled interrupt will wake the CPU up from IDLE mode None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setWatchdogPredivider</field>
    <field name="args">(SysCtl_WDPredivider predivider)</field>
    <field name="url">group__sysctl__api.html#gac359009ec34b621e28b234b1d46c403f</field>
    <field name="keywords">SysCtl_setWatchdogPredivider SysCtl_setWatchdogPredivider</field>
    <field name="text">Sets up watchdog clock WDCLK pre-divider predivider is the value that configures the pre-divider This function sets up the watchdog clock WDCLK pre-divider There are two dividers that scale WROSCDIV8 to WDCLK The predivider parameter divides WROSCDIV8 down to PREDIVCLK and the prescaler set by the SysCtl_setWatchdogPrescaler() function divides PREDIVCLK down to WDCLK None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_lockSyncSelect</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gac4314ff4260411ae7d4db2ec89125a96</field>
    <field name="keywords">SysCtl_lockSyncSelect SysCtl_lockSyncSelect</field>
    <field name="text">Locks the Sync Select of the Trig X-BAR This function locks Sync Input and Output Select of the Trig X-BAR None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_UserRegister</field>
    <field name="url">group__sysctl__api.html#gac5498d27aa1dd188eeac2d50b82407bd</field>
    <field name="keywords">SysCtl_UserRegister SysCtl_UserRegister</field>
    <field name="text">The following are values that can be passed to SysCtl_setUserRegister() and SysCtl_getUserRegister() as the reg parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_STATUS_FPU_OFLOW</field>
    <field name="url">group__sysctl__api.html#gac7c9e85e32d31ac285b5a272a1f8bb2a</field>
    <field name="keywords">SYSCTL_STATUS_FPU_OFLOW SYSCTL_STATUS_FPU_OFLOW</field>
    <field name="text">FPU_OFLOW Interrupt flag FPU_OFLOW Interrupt flag</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getErrorPinStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gac8ed33415f688201047151e9255d9b34</field>
    <field name="keywords">SysCtl_getErrorPinStatus SysCtl_getErrorPinStatus</field>
    <field name="text">Check if Error status pin is high or not true if the error status pin is high false if the error status pin is low</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_LSPCLKPrescaler</field>
    <field name="url">group__sysctl__api.html#gac9b98bad15c0beff12ee0f1f1be50dcd</field>
    <field name="keywords">SysCtl_LSPCLKPrescaler SysCtl_LSPCLKPrescaler</field>
    <field name="text">The following are values that can be passed to SysCtl_setLowSpeedClock() as the prescaler parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_CLKSRCCTL_DELAY</field>
    <field name="url">group__sysctl__api.html#gaca4b83c4a34d578cfee1dad6600a24c0</field>
    <field name="keywords">SYSCTL_CLKSRCCTL_DELAY SYSCTL_CLKSRCCTL_DELAY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_isMCDClockFailureDetected</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gacb3b2d17a39330f48106016568da558a</field>
    <field name="keywords">SysCtl_isMCDClockFailureDetected SysCtl_isMCDClockFailureDetected</field>
    <field name="text">Get the missing clock detection Failure Status A failure means the oscillator clock is missing Returns true if a failure is detected or false if a failure isn t detected</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setWatchdogMode</field>
    <field name="args">(SysCtl_WDMode mode)</field>
    <field name="url">group__sysctl__api.html#gace6f1e8796fc7be153dfd3024c36b8cf</field>
    <field name="keywords">SysCtl_setWatchdogMode SysCtl_setWatchdogMode</field>
    <field name="text">Configures whether the watchdog generates a reset or an interrupt signal mode is a flag to select the watchdog mode This function configures the action taken when the watchdog counter reaches its maximum value When the mode parameter is SYSCTL_WD_MODE_INTERRUPT the watchdog is enabled to generate a watchdog interrupt signal and disables the generation of a reset signal This will allow the watchdog module to wake up the device from IDLE or STANDBY if desired see SysCtl_enableWatchdogStandbyWakeup() When the mode parameter is SYSCTL_WD_MODE_RESET the watchdog will be put into reset mode and generation of a watchdog interrupt signal will be disabled This is how the watchdog is configured by default Check the status of the watchdog interrupt using SysCtl_isWatchdogInterruptActive() before calling this function If the interrupt is still active switching from interrupt mode to reset mode will immediately reset the device None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_DCC_BASE_0</field>
    <field name="url">group__sysctl__api.html#gacf6e13c4b573c58cb867af91d34a62d1</field>
    <field name="keywords">SYSCTL_DCC_BASE_0 SYSCTL_DCC_BASE_0</field>
    <field name="text">DCC0 module DCC0 module</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_CAUSE_WDRS</field>
    <field name="url">group__sysctl__api.html#gad0cce81063efc09282ab763dfedca05d</field>
    <field name="keywords">SYSCTL_CAUSE_WDRS SYSCTL_CAUSE_WDRS</field>
    <field name="text">Watchdog reset Watchdog reset</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_forceError</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gad126c624a8b9825a6dd4c7bf91191aef</field>
    <field name="keywords">SysCtl_forceError SysCtl_forceError</field>
    <field name="text">Forces an error flag to set to indicate an error being generated None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">Device_cal</field>
    <field name="url">group__sysctl__api.html#gad2572bfcd71c77b3b263e0295cb933a4</field>
    <field name="keywords">Device_cal Device_cal</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setExternalOscMode</field>
    <field name="args">(SysCtl_ExternalOscMode mode)</field>
    <field name="url">group__sysctl__api.html#gad25d060d45060f71e89be5960403b87a</field>
    <field name="keywords">SysCtl_setExternalOscMode SysCtl_setExternalOscMode</field>
    <field name="text">Set the external oscillator mode mode is the external oscillator mode to be configured This function sets the external oscillator mode specified by the mode parameter which may take one of two values SYSCTL_XTALMODE_CRYSTAL Crystal Mode SYSCTL_XTALMODE_SINGLE Single-Ended Mode The external oscillator must be powered off before this configuration can be performed None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setWatchdogPrescaler</field>
    <field name="args">(SysCtl_WDPrescaler prescaler)</field>
    <field name="url">group__sysctl__api.html#gaddfa7f6f3265d168e23211705b869974</field>
    <field name="keywords">SysCtl_setWatchdogPrescaler SysCtl_setWatchdogPrescaler</field>
    <field name="text">Sets up watchdog clock WDCLK prescaler prescaler is the value that configures the watchdog clock relative to the value from the pre-divider This function sets up the watchdog clock WDCLK prescaler There are two dividers that scale WROSCDIV8 to WDCLK The predivider set with the SysCtl_setWatchdogPredivider() function divides WROSCDIV8 down to PREDIVCLK and the prescaler parameter divides PREDIVCLK down to WDCLK None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_selectOscSource</field>
    <field name="args">(uint32_t oscSource)</field>
    <field name="url">group__sysctl__api.html#gadf52cc177b0c4fb322e03b421c2513a0</field>
    <field name="keywords">SysCtl_selectOscSource SysCtl_selectOscSource</field>
    <field name="text">Selects the oscillator to be used for the clocking of the device oscSource is the oscillator source to be configured This function configures the oscillator to be used in the clocking of the device The oscSource parameter may take a value of SYSCTL_OSCSRC_SYSOSCDIV4 SYSCTL_OSCSRC_XTAL SYSCTL_OSCSRC_XTAL_SE or SYSCTL_OSCSRC_WROSCDIV8 SysCtl_turnOnOsc() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_setInterruptStatusMask</field>
    <field name="args">(uint32_t intFlags)</field>
    <field name="url">group__sysctl__api.html#gae04ddc7dc96ffab607710384c77a0e21</field>
    <field name="keywords">SysCtl_setInterruptStatusMask SysCtl_setInterruptStatusMask</field>
    <field name="text">Masks the interrupts for the multiple different errors in the system intFlags is the interrupt that needs to be set The intFlags parameter are the Interrupts that can be masked for the errors in the system The values can be one/ more from SYSCTL_STATUS_CORRECTABLE_ERR SYSCTL_STATUS_FPU_UFLOW SYSCTL_STATUS_FPU_OFLOW None This API is present only on CPU1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_clearError</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gae09b890cf37e484d8b64ee004a85c217</field>
    <field name="keywords">SysCtl_clearError SysCtl_clearError</field>
    <field name="text">Clears any error flag set due to error generated None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getWatchdogResetStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gae1f8d2eaf2c1f80b25915eb64bfd0aba</field>
    <field name="keywords">SysCtl_getWatchdogResetStatus SysCtl_getWatchdogResetStatus</field>
    <field name="text">Gets the watchdog reset status This function returns the watchdog reset status If this function returns true that indicates that a watchdog reset generated the last reset condition Otherwise it was an external device or power-up reset condition Returns true if the watchdog generated the last reset condition</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_OSCSRC_S</field>
    <field name="url">group__sysctl__api.html#gae2bb6cf5b4fc6a4d139183de3a1fb70d</field>
    <field name="keywords">SYSCTL_OSCSRC_S SYSCTL_OSCSRC_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enableWatchdog</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gae4c4ce93ddb47fc8604a931bbc499151</field>
    <field name="keywords">SysCtl_enableWatchdog SysCtl_enableWatchdog</field>
    <field name="text">Enables the watchdog This function enables the watchdog timer Note that the watchdog timer is enabled on reset None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_STATUS_GINT</field>
    <field name="url">group__sysctl__api.html#gae508ba272b5109a0cc6e6ae7ee9c4e0a</field>
    <field name="keywords">SYSCTL_STATUS_GINT SYSCTL_STATUS_GINT</field>
    <field name="text">Global Interrupt flag Global Interrupt flag</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_isConfigTypeLocked</field>
    <field name="args">(SysCtl_SelType type)</field>
    <field name="url">group__sysctl__api.html#gae722bb8922e76bf9e29529bad291c32f</field>
    <field name="keywords">SysCtl_isConfigTypeLocked SysCtl_isConfigTypeLocked</field>
    <field name="text">Check if writes for any further configuration of peripheral types is to be allowed or not type is the peripheral type for which permissions are being checked This API is applicable only for the CPU1 subsystem true if Write for any further configuration is not allowed false if Write for any further configuration is allowed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_isWatchdogInterruptActive</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gae94262ac78a6baab8080987f2da40637</field>
    <field name="keywords">SysCtl_isWatchdogInterruptActive SysCtl_isWatchdogInterruptActive</field>
    <field name="text">Gets the status of the watchdog interrupt signal This function returns the status of the watchdog interrupt signal If the interrupt is active this function will return true If false the interrupt is NOT active Make sure to call this function to ensure that the interrupt is not active before making any changes to the configuration of the watchdog to prevent any unexpected behavior For instance switching from interrupt mode to reset mode while the interrupt is active will immediately reset the device true if the interrupt is active and false if it is not</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_LPM_IDLE</field>
    <field name="url">group__sysctl__api.html#gaec3a21e9cb48d4bdde5c64db943625d1</field>
    <field name="keywords">SYSCTL_LPM_IDLE SYSCTL_LPM_IDLE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_REG_KEY</field>
    <field name="url">group__sysctl__api.html#gaeed314ab3d0f6c2c5bf6b83d4a3267b4</field>
    <field name="keywords">SYSCTL_REG_KEY SYSCTL_REG_KEY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_OSCSRC_WROSCDIV8</field>
    <field name="url">group__sysctl__api.html#gaf108ef230d8338c43382339a25c69c1f</field>
    <field name="keywords">SYSCTL_OSCSRC_WROSCDIV8 SYSCTL_OSCSRC_WROSCDIV8</field>
    <field name="text">Wide-range oscillator by 8 WROSCDIV8 Wide-range oscillator by 8 WROSCDIV8</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_PLL_RETRIES</field>
    <field name="url">group__sysctl__api.html#gaf296ca377739ea74f1e1ceeb827b7169</field>
    <field name="keywords">SYSCTL_PLL_RETRIES SYSCTL_PLL_RETRIES</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_ADCSOC_SRC_PWM3SOCB</field>
    <field name="url">group__sysctl__api.html#gaf2bba0c9c4b39f6bd935c73b5e463512</field>
    <field name="keywords">SYSCTL_ADCSOC_SRC_PWM3SOCB SYSCTL_ADCSOC_SRC_PWM3SOCB</field>
    <field name="text">PWM3 SOCB for ADCSOCBO PWM3 SOCB for ADCSOCBO</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_clearWatchdogOverride</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gaf6595bb219f9a79bfb4fdac1adbe4bcc</field>
    <field name="keywords">SysCtl_clearWatchdogOverride SysCtl_clearWatchdogOverride</field>
    <field name="text">Clears the watchdog override This function clears the watchdog override and locks the watchdog timer module to remain in its prior state which could be either enable The watchdog timer will remain in this state until the next system reset None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_isPLLValid</field>
    <field name="args">(uint32_t dccBase, uint32_t oscSource, Sysctl_PLLPDiv pDiv, Sysctl_PLLMult multiplier, Sysctl_PLLRDivClk0 rDiv)</field>
    <field name="url">group__sysctl__api.html#gaf903ba9e16df218f536a2d8199f61b8a</field>
    <field name="keywords">SysCtl_isPLLValid SysCtl_isPLLValid</field>
    <field name="text">Validates PLL Raw Clock Frequency PLLRAWCLK base is the DCC module base address oscSource PLL Source Can be one of the following values SYSCTL_OSCSRC_SYSOSCDIV4 System Oscillator SYSCTL_OSCSRC_XTAL External XTAL SYSCTL_OSCSRC_XTAL_SE External XTAL Single-ended mode SYSCTL_OSCSRC_WROSCDIV8 Wide-range Oscillator 1 pDiv Input Clock Divider Use Enum SYSCTL_PDIV_1 8 multiplier PLL Multiplier Use Enum SYSCTL_PLLMULT_2 1 2 8 rDivClk0 Output Clock Divider Use Enum SYSCTL_RDIVCLK0_2 3 2 This function uses DCC module to validate the PLL clock frequency It uses oscSource as a reference clock for DCC and PLL is used as clock under test As long as the Counter0 running of oscSource Counter1 running of PLL expire at the same time DCC will not generate an Error This function gives 1 0 0 attempts for PLL to lock and make sure frequency is as expected This function does not validate if PLL output frequency PLLRAWCLK is within the operating range as per the datasheet Returns true if the DCCSTATUS error flag is not set Otherwise returns false</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_TYPE_LOCK_S</field>
    <field name="url">group__sysctl__api.html#gaf92222533df6ea29d15e1e2c84ce6ac4</field>
    <field name="keywords">SYSCTL_TYPE_LOCK_S SYSCTL_TYPE_LOCK_S</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_disableWatchdogStandbyWakeup</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gafa29610a8b6aaaec6311851135ff3111</field>
    <field name="keywords">SysCtl_disableWatchdogStandbyWakeup SysCtl_disableWatchdogStandbyWakeup</field>
    <field name="text">Disable the device from waking from STANDBY mode upon a watchdog interrupt None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getNMIFlagStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gafa88edb9de25d570e2cc4371f5cf4a0e</field>
    <field name="keywords">SysCtl_getNMIFlagStatus SysCtl_getNMIFlagStatus</field>
    <field name="text">Read NMI Flags Read the current state of individual NMI interrupts Value of NMIFLG register These defines are provided to decode the value SYSCTL_NMI_NMIINT NMI Interrupt Flag SYSCTL_NMI_CLOCKFAIL Clock Fail Interrupt Flag SYSCTL_NMI_UNCERR Flash/RAM/ROM Uncorrectable Error NMI Flag SYSCTL_NMI_SWERR SW Error Force NMI Flag</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_CpuRegSel</field>
    <field name="url">group__sysctl__api.html#gafb42a258e99bcfb4a183fe70e5def269</field>
    <field name="keywords">SysCtl_CpuRegSel SysCtl_CpuRegSel</field>
    <field name="text">The following are values that can be passed to SysCtl_lockSysConfig() as the peripheral parameter</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_CAUSE_POR</field>
    <field name="url">group__sysctl__api.html#gafb7a1a748fb4802a241d6896c19faa06</field>
    <field name="keywords">SYSCTL_CAUSE_POR SYSCTL_CAUSE_POR</field>
    <field name="text">Power-on reset Power-on reset</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_BOOT_ROM_XRS</field>
    <field name="url">group__sysctl__api.html#gafc901a2e02f1921c75dfd0e5565da6bc</field>
    <field name="keywords">SYSCTL_BOOT_ROM_XRS SYSCTL_BOOT_ROM_XRS</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getTapStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gafd4d0e73cab56a07f4c14d9120e8f511</field>
    <field name="keywords">SysCtl_getTapStatus SysCtl_getTapStatus</field>
    <field name="text">Get the status of JTAG State machine and debugger connect This function returns the JTAG status Returns the JTAG status The bits representing will be 0 TLR 1 IDLE 2 SELECTDR 3 CAPDR 4 SHIFTDR 5 EXIT1DR 6 PAUSEDR 7 EXIT2DR 8 UPDTDR 9 SLECTIR 1 0 CAPIR 1 1 SHIFTIR 1 2 EXIT1IR 1 3 PAUSEIR 1 4 EXIT2IR 1 5 UPDTIR</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_enableWatchdogReset</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gafd72aa81a6100876ef32b7362a1bea36</field>
    <field name="keywords">SysCtl_enableWatchdogReset SysCtl_enableWatchdogReset</field>
    <field name="text">Writes the first key to enter the watchdog reset This function writes the first key to enter the watchdog reset None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">SysCtl_CMPSSLPMSel</field>
    <field name="url">group__sysctl__api.html#gafda30b4db4ddffa31068967dc4d8d0e1</field>
    <field name="keywords">SysCtl_CMPSSLPMSel SysCtl_CMPSSLPMSel</field>
    <field name="text">Values that can be passed to SysCtl_disableCMPSSLPMWakeupPin() and SysCtl_enableCMPSSLPMWakeupPin() as the pin input parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_disableWatchdogInHalt</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gafe38dc9b258a051e4aa8c3a7201288ad</field>
    <field name="keywords">SysCtl_disableWatchdogInHalt SysCtl_disableWatchdogInHalt</field>
    <field name="text">Disable the watchdog from running while in HALT mode This function gates the watchdog when the system enters HALT mode WROSCDIV8 and SYSOSCDIV4 will be powered down This is the default behavior of the device None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">SYSCTL_NMI_CLOCKFAIL</field>
    <field name="url">group__sysctl__api.html#gafe456d7acc08d766e20e1d0db2e3411e</field>
    <field name="keywords">SYSCTL_NMI_CLOCKFAIL SYSCTL_NMI_CLOCKFAIL</field>
    <field name="text">Clock Fail Interrupt Flag Clock Fail Interrupt Flag</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">SysCtl_getNMIShadowFlagStatus</field>
    <field name="args">(void)</field>
    <field name="url">group__sysctl__api.html#gaff3def8e16cf00390c05ffbc94557660</field>
    <field name="keywords">SysCtl_getNMIShadowFlagStatus SysCtl_getNMIShadowFlagStatus</field>
    <field name="text">Read NMI Shadow Flags Read the current state of individual NMI interrupts Value of NMISHDFLG register These defines are provided to decode the value SYSCTL_NMI_NMIINT NMI Interrupt Flag SYSCTL_NMI_CLOCKFAIL Clock Fail Interrupt Flag SYSCTL_NMI_UNCERR Flash/RAM/ROM Uncorrectable Error NMI Flag SYSCTL_NMI_SWERR SW Error Force NMI Flag</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_ECAPTYPE</field>
    <field name="url">group__sysctl__api.html#gga26739158b5ca8b7415263d3f563246e8ae3d3cfd943710cd29b2e6502d2c5cbfc</field>
    <field name="keywords">SYSCTL_ECAPTYPE SYSCTL_ECAPTYPE</field>
    <field name="text">Configure ECAP Type Type 0 No EALLOW protection for ECAP registers Type 1 ECAP registers are EALLOW protected</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_XCLKOUT_DIV_2</field>
    <field name="url">group__sysctl__api.html#gga2fc267f38b1bc13f485fb129364f8f98a053e836bdaeb15f242c8f92645255ef6</field>
    <field name="keywords">SYSCTL_XCLKOUT_DIV_2 SYSCTL_XCLKOUT_DIV_2</field>
    <field name="text">XCLKOUT XCLKOUT 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_XCLKOUT_DIV_8</field>
    <field name="url">group__sysctl__api.html#gga2fc267f38b1bc13f485fb129364f8f98a32580a404caf069abee103fd002039c8</field>
    <field name="keywords">SYSCTL_XCLKOUT_DIV_8 SYSCTL_XCLKOUT_DIV_8</field>
    <field name="text">XCLKOUT XCLKOUT 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_XCLKOUT_DIV_4</field>
    <field name="url">group__sysctl__api.html#gga2fc267f38b1bc13f485fb129364f8f98a877707221d5f5546a1c4b7a4ad7284f5</field>
    <field name="keywords">SYSCTL_XCLKOUT_DIV_4 SYSCTL_XCLKOUT_DIV_4</field>
    <field name="text">XCLKOUT XCLKOUT 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_XCLKOUT_DIV_1</field>
    <field name="url">group__sysctl__api.html#gga2fc267f38b1bc13f485fb129364f8f98aea8729a54bd4600d837e17acaf18b494</field>
    <field name="keywords">SYSCTL_XCLKOUT_DIV_1 SYSCTL_XCLKOUT_DIV_1</field>
    <field name="text">XCLKOUT XCLKOUT 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_16</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515ada0d935fec699ee2c705af00e470d0ba60</field>
    <field name="keywords">SYSCTL_RDIVCLK0_16 SYSCTL_RDIVCLK0_16</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_28</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515ada15de26ee8953c1a5bb42edd56a737735</field>
    <field name="keywords">SYSCTL_RDIVCLK0_28 SYSCTL_RDIVCLK0_28</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_22</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515ada3552e07bc0cc1b0c65db063c51a33620</field>
    <field name="keywords">SYSCTL_RDIVCLK0_22 SYSCTL_RDIVCLK0_22</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_20</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515ada44ce70e99630a890300d550bcb74b48c</field>
    <field name="keywords">SYSCTL_RDIVCLK0_20 SYSCTL_RDIVCLK0_20</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_8</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515ada468795cf6a39ba81518e27304e42cb56</field>
    <field name="keywords">SYSCTL_RDIVCLK0_8 SYSCTL_RDIVCLK0_8</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_14</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515ada46c1a625f2ef5c8784544126e382fdb1</field>
    <field name="keywords">SYSCTL_RDIVCLK0_14 SYSCTL_RDIVCLK0_14</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_4</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515ada4af636ed500752c127023eb296779d75</field>
    <field name="keywords">SYSCTL_RDIVCLK0_4 SYSCTL_RDIVCLK0_4</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_2</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515ada59c89ece0fc538285fe57e29f33e640c</field>
    <field name="keywords">SYSCTL_RDIVCLK0_2 SYSCTL_RDIVCLK0_2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_10</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515ada5c108d7018429abae70a71faf6ce5399</field>
    <field name="keywords">SYSCTL_RDIVCLK0_10 SYSCTL_RDIVCLK0_10</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_26</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515ada73ead2925a7aec87358e98bcf8529f11</field>
    <field name="keywords">SYSCTL_RDIVCLK0_26 SYSCTL_RDIVCLK0_26</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_32</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515ada7578db2be99314f81fef6b9faa72898f</field>
    <field name="keywords">SYSCTL_RDIVCLK0_32 SYSCTL_RDIVCLK0_32</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_24</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515ada89d435045c2e46f639163ce4d73bad2a</field>
    <field name="keywords">SYSCTL_RDIVCLK0_24 SYSCTL_RDIVCLK0_24</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_18</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515adaafb614366233b4112685da4a32c45d31</field>
    <field name="keywords">SYSCTL_RDIVCLK0_18 SYSCTL_RDIVCLK0_18</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_12</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515adac62569eb6e66bb7f1b7acab9f0f422a0</field>
    <field name="keywords">SYSCTL_RDIVCLK0_12 SYSCTL_RDIVCLK0_12</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_30</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515adadcd1e748c5d811ec00b339aac65638cc</field>
    <field name="keywords">SYSCTL_RDIVCLK0_30 SYSCTL_RDIVCLK0_30</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_RDIVCLK0_6</field>
    <field name="url">group__sysctl__api.html#gga2fed392ce241cc5b293d8ca5b14515adae95803aa762742e7419f079455350e56</field>
    <field name="keywords">SYSCTL_RDIVCLK0_6 SYSCTL_RDIVCLK0_6</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PREDIV_16</field>
    <field name="url">group__sysctl__api.html#gga31d67715f0625a756ee649adb7c9430da102cfe36f7d7097b8826ecd135e6b704</field>
    <field name="keywords">SYSCTL_WD_PREDIV_16 SYSCTL_WD_PREDIV_16</field>
    <field name="text">PREDIVCLK WROSCDIV8 1 6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PREDIV_1024</field>
    <field name="url">group__sysctl__api.html#gga31d67715f0625a756ee649adb7c9430da10626d58b1eab984a9cd8bba60088a0f</field>
    <field name="keywords">SYSCTL_WD_PREDIV_1024 SYSCTL_WD_PREDIV_1024</field>
    <field name="text">PREDIVCLK WROSCDIV8 1 0 2 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PREDIV_8</field>
    <field name="url">group__sysctl__api.html#gga31d67715f0625a756ee649adb7c9430da12ddcd1ec254373a359773394702e076</field>
    <field name="keywords">SYSCTL_WD_PREDIV_8 SYSCTL_WD_PREDIV_8</field>
    <field name="text">PREDIVCLK WROSCDIV8 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PREDIV_256</field>
    <field name="url">group__sysctl__api.html#gga31d67715f0625a756ee649adb7c9430da1751a4239b4146d013b0f412c82d6410</field>
    <field name="keywords">SYSCTL_WD_PREDIV_256 SYSCTL_WD_PREDIV_256</field>
    <field name="text">PREDIVCLK WROSCDIV8 2 5 6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PREDIV_2048</field>
    <field name="url">group__sysctl__api.html#gga31d67715f0625a756ee649adb7c9430da22949bdefd949a9577f4a8ddaa675a86</field>
    <field name="keywords">SYSCTL_WD_PREDIV_2048 SYSCTL_WD_PREDIV_2048</field>
    <field name="text">PREDIVCLK WROSCDIV8 2 0 4 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PREDIV_2</field>
    <field name="url">group__sysctl__api.html#gga31d67715f0625a756ee649adb7c9430da61fdab06e3ee42e67f4b2e36bdee7659</field>
    <field name="keywords">SYSCTL_WD_PREDIV_2 SYSCTL_WD_PREDIV_2</field>
    <field name="text">PREDIVCLK WROSCDIV8 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PREDIV_512</field>
    <field name="url">group__sysctl__api.html#gga31d67715f0625a756ee649adb7c9430da7d5a20d84eb9ee595963dda1e6b80775</field>
    <field name="keywords">SYSCTL_WD_PREDIV_512 SYSCTL_WD_PREDIV_512</field>
    <field name="text">PREDIVCLK WROSCDIV8 5 1 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PREDIV_128</field>
    <field name="url">group__sysctl__api.html#gga31d67715f0625a756ee649adb7c9430da7e9e3ff10b6667ca06ab31caf0d60056</field>
    <field name="keywords">SYSCTL_WD_PREDIV_128 SYSCTL_WD_PREDIV_128</field>
    <field name="text">PREDIVCLK WROSCDIV8 1 2 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PREDIV_64</field>
    <field name="url">group__sysctl__api.html#gga31d67715f0625a756ee649adb7c9430da8e595406615573fbaac22ede64231560</field>
    <field name="keywords">SYSCTL_WD_PREDIV_64 SYSCTL_WD_PREDIV_64</field>
    <field name="text">PREDIVCLK WROSCDIV8 6 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PREDIV_32</field>
    <field name="url">group__sysctl__api.html#gga31d67715f0625a756ee649adb7c9430da9ac7a652e2457b05bf70514483d2c80b</field>
    <field name="keywords">SYSCTL_WD_PREDIV_32 SYSCTL_WD_PREDIV_32</field>
    <field name="text">PREDIVCLK WROSCDIV8 3 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PREDIV_4</field>
    <field name="url">group__sysctl__api.html#gga31d67715f0625a756ee649adb7c9430dab6c30ff1cf28906dae66fe7b0a7b6eec</field>
    <field name="keywords">SYSCTL_WD_PREDIV_4 SYSCTL_WD_PREDIV_4</field>
    <field name="text">PREDIVCLK WROSCDIV8 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PREDIV_4096</field>
    <field name="url">group__sysctl__api.html#gga31d67715f0625a756ee649adb7c9430dae666dcbdea07309b8a5b313d881555bb</field>
    <field name="keywords">SYSCTL_WD_PREDIV_4096 SYSCTL_WD_PREDIV_4096</field>
    <field name="text">PREDIVCLK WROSCDIV8 4 0 9 6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLL_DISABLE</field>
    <field name="url">group__sysctl__api.html#gga44bf52fe695d5b0e53154c98c0f53950a05620d8e952fa06ae14ad3449802083a</field>
    <field name="keywords">SYSCTL_PLL_DISABLE SYSCTL_PLL_DISABLE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLL_BYPASS</field>
    <field name="url">group__sysctl__api.html#gga44bf52fe695d5b0e53154c98c0f53950a580529387061b1770c47f82e6c6453b0</field>
    <field name="keywords">SYSCTL_PLL_BYPASS SYSCTL_PLL_BYPASS</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLL_ENABLE</field>
    <field name="url">group__sysctl__api.html#gga44bf52fe695d5b0e53154c98c0f53950a6028eee26cc22b60f553185c199f037b</field>
    <field name="keywords">SYSCTL_PLL_ENABLE SYSCTL_PLL_ENABLE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CLK_REG_SEL_ALL</field>
    <field name="url">group__sysctl__api.html#gga45e2c59387a65f005d050e25b29def89a339fb2353c2543f2706ac9b486e6c344</field>
    <field name="keywords">SYSCTL_CLK_REG_SEL_ALL SYSCTL_CLK_REG_SEL_ALL</field>
    <field name="text">ALL lock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_33</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea01000ceb754e812c1127de23ce66c2f9</field>
    <field name="keywords">SYSCTL_PLLMULT_33 SYSCTL_PLLMULT_33</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_16</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea07320cbfafd83b883140bf6e6e0a8aa4</field>
    <field name="keywords">SYSCTL_PLLMULT_16 SYSCTL_PLLMULT_16</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_34</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea0cec4c854c7f8a56e61bfd7856967c77</field>
    <field name="keywords">SYSCTL_PLLMULT_34 SYSCTL_PLLMULT_34</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_91</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea117fddf7d06f2a8ced447e6ac247844c</field>
    <field name="keywords">SYSCTL_PLLMULT_91 SYSCTL_PLLMULT_91</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_98</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea1364a12e6bd9da54bb2289185cd2291e</field>
    <field name="keywords">SYSCTL_PLLMULT_98 SYSCTL_PLLMULT_98</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_61</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea15608fefa947fccfb42fa31e7a186f55</field>
    <field name="keywords">SYSCTL_PLLMULT_61 SYSCTL_PLLMULT_61</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_52</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea180ad93d1b286f7dc390e1ca5865fb2c</field>
    <field name="keywords">SYSCTL_PLLMULT_52 SYSCTL_PLLMULT_52</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_123</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea18f76947247169c2467a18b57ca024e5</field>
    <field name="keywords">SYSCTL_PLLMULT_123 SYSCTL_PLLMULT_123</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_6</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea1a70129852c7509bc97153dd17dd8b67</field>
    <field name="keywords">SYSCTL_PLLMULT_6 SYSCTL_PLLMULT_6</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_120</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea1b31dedc249bc363871767c8fac13a99</field>
    <field name="keywords">SYSCTL_PLLMULT_120 SYSCTL_PLLMULT_120</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_2</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea1fa28fafe8f516451f6f764591b8905e</field>
    <field name="keywords">SYSCTL_PLLMULT_2 SYSCTL_PLLMULT_2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_65</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea201cd5bc8df0a3c4e1331c79c82803a1</field>
    <field name="keywords">SYSCTL_PLLMULT_65 SYSCTL_PLLMULT_65</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_107</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea21825feb5907314e45929514f68fe805</field>
    <field name="keywords">SYSCTL_PLLMULT_107 SYSCTL_PLLMULT_107</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_35</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea2278558dbd3d1af3d23000a5af74620d</field>
    <field name="keywords">SYSCTL_PLLMULT_35 SYSCTL_PLLMULT_35</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_88</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea237111a326d6330773c48a33b214d4da</field>
    <field name="keywords">SYSCTL_PLLMULT_88 SYSCTL_PLLMULT_88</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_75</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea23e1d90fb9de53faaa88c03f983422a0</field>
    <field name="keywords">SYSCTL_PLLMULT_75 SYSCTL_PLLMULT_75</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_99</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea2448aa6309a881975fb5cff24f93d2d6</field>
    <field name="keywords">SYSCTL_PLLMULT_99 SYSCTL_PLLMULT_99</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_121</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea274268dfa8769ae3c91e5780d08f9764</field>
    <field name="keywords">SYSCTL_PLLMULT_121 SYSCTL_PLLMULT_121</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_55</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea28f76c19237b397bf0233318ef1d1e98</field>
    <field name="keywords">SYSCTL_PLLMULT_55 SYSCTL_PLLMULT_55</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_49</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea2c369a2f359a760d9de26b1ff2c2faea</field>
    <field name="keywords">SYSCTL_PLLMULT_49 SYSCTL_PLLMULT_49</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_59</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea32024f97aee7e8e864eedcccbf6b3220</field>
    <field name="keywords">SYSCTL_PLLMULT_59 SYSCTL_PLLMULT_59</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_126</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea32e121a80c907d294f856a245c058748</field>
    <field name="keywords">SYSCTL_PLLMULT_126 SYSCTL_PLLMULT_126</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_124</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea32e3c2d2644b5ee51376483234c7c04e</field>
    <field name="keywords">SYSCTL_PLLMULT_124 SYSCTL_PLLMULT_124</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_78</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea3794711a2303e4fe57ae146845ac57bd</field>
    <field name="keywords">SYSCTL_PLLMULT_78 SYSCTL_PLLMULT_78</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_43</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea37ac88c7205d7d61d67cf86d842c527e</field>
    <field name="keywords">SYSCTL_PLLMULT_43 SYSCTL_PLLMULT_43</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_105</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea3a192c4abf744e2d1b8d7d0e66292e03</field>
    <field name="keywords">SYSCTL_PLLMULT_105 SYSCTL_PLLMULT_105</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_128</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea3bea358419263581ff3e4005ad395d8a</field>
    <field name="keywords">SYSCTL_PLLMULT_128 SYSCTL_PLLMULT_128</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_101</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea3f54422befe1b9b575c1cfb143058b22</field>
    <field name="keywords">SYSCTL_PLLMULT_101 SYSCTL_PLLMULT_101</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_82</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea424263cc2b21ae1a55c6701742a16652</field>
    <field name="keywords">SYSCTL_PLLMULT_82 SYSCTL_PLLMULT_82</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_119</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea45550d7095259e353a78edd6e11a5456</field>
    <field name="keywords">SYSCTL_PLLMULT_119 SYSCTL_PLLMULT_119</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_24</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea47204fdb945794eb30d683c109223806</field>
    <field name="keywords">SYSCTL_PLLMULT_24 SYSCTL_PLLMULT_24</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_114</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea477e382a3829e8645829cdf5fe594380</field>
    <field name="keywords">SYSCTL_PLLMULT_114 SYSCTL_PLLMULT_114</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_115</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea486b63314f301f5619aa8b4513a6d1db</field>
    <field name="keywords">SYSCTL_PLLMULT_115 SYSCTL_PLLMULT_115</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_15</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea4a4b60f3d41cb034f8023bc74567e1db</field>
    <field name="keywords">SYSCTL_PLLMULT_15 SYSCTL_PLLMULT_15</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_4</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea4d054794eec8c23a4c132dfad31ed97f</field>
    <field name="keywords">SYSCTL_PLLMULT_4 SYSCTL_PLLMULT_4</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_22</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea4da20158bf0e955d6764439c50232e26</field>
    <field name="keywords">SYSCTL_PLLMULT_22 SYSCTL_PLLMULT_22</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_51</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea4e9570e793c00d720fc7f462363ae0e8</field>
    <field name="keywords">SYSCTL_PLLMULT_51 SYSCTL_PLLMULT_51</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_53</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea4ee45be3a3d92a449beaae35d8729209</field>
    <field name="keywords">SYSCTL_PLLMULT_53 SYSCTL_PLLMULT_53</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_47</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea4ef39c91d96966bf3352763f2a2e8d35</field>
    <field name="keywords">SYSCTL_PLLMULT_47 SYSCTL_PLLMULT_47</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_11</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea5042c34606097a91799bd596e62d094f</field>
    <field name="keywords">SYSCTL_PLLMULT_11 SYSCTL_PLLMULT_11</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_25</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea5228f00591e1abbcc0e5f112c4a169fd</field>
    <field name="keywords">SYSCTL_PLLMULT_25 SYSCTL_PLLMULT_25</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_87</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea54e13c5e0dbd20715e5cd8c4d3ef81b6</field>
    <field name="keywords">SYSCTL_PLLMULT_87 SYSCTL_PLLMULT_87</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_23</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea55fa8193f83adb6bfa963d51c712461a</field>
    <field name="keywords">SYSCTL_PLLMULT_23 SYSCTL_PLLMULT_23</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_7</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea56f775d053b8d5e1f630e41e9482c6ea</field>
    <field name="keywords">SYSCTL_PLLMULT_7 SYSCTL_PLLMULT_7</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_56</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea57c55af7c7b2b9961c22abdb87e575b2</field>
    <field name="keywords">SYSCTL_PLLMULT_56 SYSCTL_PLLMULT_56</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_111</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea5816aa17da0af2df9352ea06eefc4514</field>
    <field name="keywords">SYSCTL_PLLMULT_111 SYSCTL_PLLMULT_111</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_44</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea585f5815c6fbb865d04d352243528ee3</field>
    <field name="keywords">SYSCTL_PLLMULT_44 SYSCTL_PLLMULT_44</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_80</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea5ac8b7695316425f7df41943c1537e26</field>
    <field name="keywords">SYSCTL_PLLMULT_80 SYSCTL_PLLMULT_80</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_54</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea5fbeee8cc460a938901d478edc0e5dad</field>
    <field name="keywords">SYSCTL_PLLMULT_54 SYSCTL_PLLMULT_54</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_17</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea60fb509571d1431d80ef1e6d46dd87dd</field>
    <field name="keywords">SYSCTL_PLLMULT_17 SYSCTL_PLLMULT_17</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_103</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea654ab0b2ef18667aa0bf0ec6c015f96d</field>
    <field name="keywords">SYSCTL_PLLMULT_103 SYSCTL_PLLMULT_103</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_36</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea6681870bd9a774ea0de9fc561e1db2bb</field>
    <field name="keywords">SYSCTL_PLLMULT_36 SYSCTL_PLLMULT_36</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_50</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea6c3109b8606234ba0e3f7a23e213e440</field>
    <field name="keywords">SYSCTL_PLLMULT_50 SYSCTL_PLLMULT_50</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_57</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea7a0c6d4ed79f4af3c0a5cc147a748670</field>
    <field name="keywords">SYSCTL_PLLMULT_57 SYSCTL_PLLMULT_57</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_76</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea7b7ce9640d11d02acff4fe4402bb6bfd</field>
    <field name="keywords">SYSCTL_PLLMULT_76 SYSCTL_PLLMULT_76</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_112</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea7ceb00178f67e81ab313760058ab8098</field>
    <field name="keywords">SYSCTL_PLLMULT_112 SYSCTL_PLLMULT_112</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_79</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea7dabd28b3102c718b672ba31dc6502a2</field>
    <field name="keywords">SYSCTL_PLLMULT_79 SYSCTL_PLLMULT_79</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_37</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea7e8e63b1d3986b65d0106be92e56b82e</field>
    <field name="keywords">SYSCTL_PLLMULT_37 SYSCTL_PLLMULT_37</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_84</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea7f763254cb3461acedf78674668563b7</field>
    <field name="keywords">SYSCTL_PLLMULT_84 SYSCTL_PLLMULT_84</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_14</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea7fcc82180aea2ba4076c934909924568</field>
    <field name="keywords">SYSCTL_PLLMULT_14 SYSCTL_PLLMULT_14</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_45</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea838ff3b10521cf8b995a17cdeb90e1e4</field>
    <field name="keywords">SYSCTL_PLLMULT_45 SYSCTL_PLLMULT_45</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_85</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea88cd24d221f15f0e9b2ce0c227e5b00d</field>
    <field name="keywords">SYSCTL_PLLMULT_85 SYSCTL_PLLMULT_85</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_122</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea8b2df013916def75e415fdb3888c8f5d</field>
    <field name="keywords">SYSCTL_PLLMULT_122 SYSCTL_PLLMULT_122</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_83</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea8dfa1202a6890e483605ddf74572d6ee</field>
    <field name="keywords">SYSCTL_PLLMULT_83 SYSCTL_PLLMULT_83</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_72</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea8eab4948fefd55c6390735adb27afded</field>
    <field name="keywords">SYSCTL_PLLMULT_72 SYSCTL_PLLMULT_72</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_67</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea94e4a57831310e6513c9bd69da5c53aa</field>
    <field name="keywords">SYSCTL_PLLMULT_67 SYSCTL_PLLMULT_67</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_18</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea9635a756f2316a90c19524850aff2004</field>
    <field name="keywords">SYSCTL_PLLMULT_18 SYSCTL_PLLMULT_18</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_38</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea966df4b5b5b855af7e9f61e4e0636a6c</field>
    <field name="keywords">SYSCTL_PLLMULT_38 SYSCTL_PLLMULT_38</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_31</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea972456b9279eeb2ae52ece8dded3b577</field>
    <field name="keywords">SYSCTL_PLLMULT_31 SYSCTL_PLLMULT_31</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_102</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea986095ca6706c9644cface729ee3e1e9</field>
    <field name="keywords">SYSCTL_PLLMULT_102 SYSCTL_PLLMULT_102</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_12</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea9daa86ea198df3b5be8779e025362583</field>
    <field name="keywords">SYSCTL_PLLMULT_12 SYSCTL_PLLMULT_12</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_104</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea9dfcd53967de83ebd6263a1325040a40</field>
    <field name="keywords">SYSCTL_PLLMULT_104 SYSCTL_PLLMULT_104</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_20</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eea9e121ee155ea855f2bca1942d7b433fd</field>
    <field name="keywords">SYSCTL_PLLMULT_20 SYSCTL_PLLMULT_20</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_32</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaa0f33d4517bb859bb94b921cd0558585</field>
    <field name="keywords">SYSCTL_PLLMULT_32 SYSCTL_PLLMULT_32</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_110</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaa3d8bd39cbc766e6f4d85310416798b1</field>
    <field name="keywords">SYSCTL_PLLMULT_110 SYSCTL_PLLMULT_110</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_28</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaa4127cbfc8d16f046e77a41f5809f630</field>
    <field name="keywords">SYSCTL_PLLMULT_28 SYSCTL_PLLMULT_28</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_89</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaa5b217374e86fd439b769c2dbe3692e2</field>
    <field name="keywords">SYSCTL_PLLMULT_89 SYSCTL_PLLMULT_89</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_21</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaa5c89e328dbaa86f0b22644db59fc0d9</field>
    <field name="keywords">SYSCTL_PLLMULT_21 SYSCTL_PLLMULT_21</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_58</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaa67d35062a4b40ce2875cfe80d6009e5</field>
    <field name="keywords">SYSCTL_PLLMULT_58 SYSCTL_PLLMULT_58</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_60</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaa75c4412fd693d628c8e0b2fe21b0b4f</field>
    <field name="keywords">SYSCTL_PLLMULT_60 SYSCTL_PLLMULT_60</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_94</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaa7a8a1718188c13de971e05b8463429b</field>
    <field name="keywords">SYSCTL_PLLMULT_94 SYSCTL_PLLMULT_94</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_68</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaa972372634d1afcd23a0d251359fdb0c</field>
    <field name="keywords">SYSCTL_PLLMULT_68 SYSCTL_PLLMULT_68</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_9</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaac2faf2f6219ce05ac382c2ae9061a13</field>
    <field name="keywords">SYSCTL_PLLMULT_9 SYSCTL_PLLMULT_9</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_125</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaad3f6c1e2bd14c56c6ab80587151d700</field>
    <field name="keywords">SYSCTL_PLLMULT_125 SYSCTL_PLLMULT_125</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_116</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaadc7a9e7693519090642b1f78447c66f</field>
    <field name="keywords">SYSCTL_PLLMULT_116 SYSCTL_PLLMULT_116</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_73</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaae888efca7a14c3b20cee76f3d0acce8</field>
    <field name="keywords">SYSCTL_PLLMULT_73 SYSCTL_PLLMULT_73</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_3</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaaf03937ff87bc76f1ee260f3bff449eb</field>
    <field name="keywords">SYSCTL_PLLMULT_3 SYSCTL_PLLMULT_3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_71</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeab2ed1aa3df2e681b2f11a5b9167767f3</field>
    <field name="keywords">SYSCTL_PLLMULT_71 SYSCTL_PLLMULT_71</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_127</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeab32e0de354deb79eaa5ffd1eb95ab57d</field>
    <field name="keywords">SYSCTL_PLLMULT_127 SYSCTL_PLLMULT_127</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_64</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeab3e8f035a0ff3d4411e57a78702f1c17</field>
    <field name="keywords">SYSCTL_PLLMULT_64 SYSCTL_PLLMULT_64</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_92</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeab412ad6e7baddbfd8a21b8d491b78952</field>
    <field name="keywords">SYSCTL_PLLMULT_92 SYSCTL_PLLMULT_92</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_10</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeab4b0ce4d1b92ebb154e981b1eb314753</field>
    <field name="keywords">SYSCTL_PLLMULT_10 SYSCTL_PLLMULT_10</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_27</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeab532afaa8e9f2edf2f815182f414728e</field>
    <field name="keywords">SYSCTL_PLLMULT_27 SYSCTL_PLLMULT_27</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_40</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeabc57388a585682ec8825fa2fe27d7b54</field>
    <field name="keywords">SYSCTL_PLLMULT_40 SYSCTL_PLLMULT_40</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_108</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeabc886bfbe788d864e5b4d0c384c0d2ef</field>
    <field name="keywords">SYSCTL_PLLMULT_108 SYSCTL_PLLMULT_108</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_19</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeabccb38e561ed8ab81393c39c82b677a7</field>
    <field name="keywords">SYSCTL_PLLMULT_19 SYSCTL_PLLMULT_19</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_8</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeabf24f682fb73dd45c64f118c876205f5</field>
    <field name="keywords">SYSCTL_PLLMULT_8 SYSCTL_PLLMULT_8</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_118</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeac2c71cb0c050971e424aa9c90d83696d</field>
    <field name="keywords">SYSCTL_PLLMULT_118 SYSCTL_PLLMULT_118</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_48</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeac34d1b610db86fe956cb4d79a8608b43</field>
    <field name="keywords">SYSCTL_PLLMULT_48 SYSCTL_PLLMULT_48</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_86</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeac49636f7840310bef0d0bf753f60e246</field>
    <field name="keywords">SYSCTL_PLLMULT_86 SYSCTL_PLLMULT_86</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_97</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeac69ffcec6e4cae23f8eefb109a3993b8</field>
    <field name="keywords">SYSCTL_PLLMULT_97 SYSCTL_PLLMULT_97</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_66</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeac6acf8a39b96d1ef2600eb94d81972b7</field>
    <field name="keywords">SYSCTL_PLLMULT_66 SYSCTL_PLLMULT_66</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_70</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeac921816c5a25ca02f05116066f9a49a7</field>
    <field name="keywords">SYSCTL_PLLMULT_70 SYSCTL_PLLMULT_70</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_41</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeace738f3c689ca9fb1e896175940b2a17</field>
    <field name="keywords">SYSCTL_PLLMULT_41 SYSCTL_PLLMULT_41</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_30</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eead3599b38aa26f94a49004af43f47fd85</field>
    <field name="keywords">SYSCTL_PLLMULT_30 SYSCTL_PLLMULT_30</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_96</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eead8673705fe37e37729ef59e6f551f100</field>
    <field name="keywords">SYSCTL_PLLMULT_96 SYSCTL_PLLMULT_96</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_63</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eead91bcfc708859fff8b9301238559bc5d</field>
    <field name="keywords">SYSCTL_PLLMULT_63 SYSCTL_PLLMULT_63</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_113</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeadbc92db141e910a6ad5f8c5678fa0755</field>
    <field name="keywords">SYSCTL_PLLMULT_113 SYSCTL_PLLMULT_113</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_69</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeadced5f2f4c1cbb31b66f4c4d66cacec8</field>
    <field name="keywords">SYSCTL_PLLMULT_69 SYSCTL_PLLMULT_69</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_29</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeadf477dc2ec35229bf0c04e0210b1da94</field>
    <field name="keywords">SYSCTL_PLLMULT_29 SYSCTL_PLLMULT_29</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_95</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeadfe24826a591af6890a764ff621acf5c</field>
    <field name="keywords">SYSCTL_PLLMULT_95 SYSCTL_PLLMULT_95</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_26</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeae03280ba96c68cae7a583bfed2541e02</field>
    <field name="keywords">SYSCTL_PLLMULT_26 SYSCTL_PLLMULT_26</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_109</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeae26bffe62c15f832f53c79ded2b2c160</field>
    <field name="keywords">SYSCTL_PLLMULT_109 SYSCTL_PLLMULT_109</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_100</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeae4b4bb2c51e8727cf4e7637d0eee7e15</field>
    <field name="keywords">SYSCTL_PLLMULT_100 SYSCTL_PLLMULT_100</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_81</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeae56b43d4174ad92d89b3aa6d25864718</field>
    <field name="keywords">SYSCTL_PLLMULT_81 SYSCTL_PLLMULT_81</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_117</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeae8dfa81c9c4048bd9217699519acd4c8</field>
    <field name="keywords">SYSCTL_PLLMULT_117 SYSCTL_PLLMULT_117</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_39</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaea6e83d36e8c533616c971c1e4a4c242</field>
    <field name="keywords">SYSCTL_PLLMULT_39 SYSCTL_PLLMULT_39</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_90</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaee5122f0265c10b89baf6b119b92d3e8</field>
    <field name="keywords">SYSCTL_PLLMULT_90 SYSCTL_PLLMULT_90</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_77</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaef0e65f6ced785b9c9e3e739a67c1e63</field>
    <field name="keywords">SYSCTL_PLLMULT_77 SYSCTL_PLLMULT_77</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_13</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaef97e07bf23b72dd59832a9e1ac1857b</field>
    <field name="keywords">SYSCTL_PLLMULT_13 SYSCTL_PLLMULT_13</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_46</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaefd2d35134099a76484e0a1e5f449827</field>
    <field name="keywords">SYSCTL_PLLMULT_46 SYSCTL_PLLMULT_46</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_62</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaf3165b1b617cf9bb4d76b088e52912d1</field>
    <field name="keywords">SYSCTL_PLLMULT_62 SYSCTL_PLLMULT_62</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_42</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaf56a133eee134fd5a16b5704362fb2bf</field>
    <field name="keywords">SYSCTL_PLLMULT_42 SYSCTL_PLLMULT_42</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_93</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaf84c9efd32ee845a834ed2256bc414e1</field>
    <field name="keywords">SYSCTL_PLLMULT_93 SYSCTL_PLLMULT_93</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_5</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaf9330ea12c7be4fc0709a820bf81eab4</field>
    <field name="keywords">SYSCTL_PLLMULT_5 SYSCTL_PLLMULT_5</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_74</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeaf945a16ccc122ee60bb5fb600bb1d968</field>
    <field name="keywords">SYSCTL_PLLMULT_74 SYSCTL_PLLMULT_74</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PLLMULT_106</field>
    <field name="url">group__sysctl__api.html#gga4e3181bdb6a693bac0e296abb9eb84eeafc8d99b1fbd41dbd1cc0d896309ed916</field>
    <field name="keywords">SYSCTL_PLLMULT_106 SYSCTL_PLLMULT_106</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_MCPWM1</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53da043cb4f24ea42bb061b55645cabda977</field>
    <field name="keywords">SYSCTL_PERIPH_RES_MCPWM1 SYSCTL_PERIPH_RES_MCPWM1</field>
    <field name="text">Reset MCPWM1 clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_I2CA</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53da0555cd9302ba811503a82ac990f545d3</field>
    <field name="keywords">SYSCTL_PERIPH_RES_I2CA SYSCTL_PERIPH_RES_I2CA</field>
    <field name="text">Reset I2C_A clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_MCPWM3</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53da0a18827aafaecda4a89e3326a4f32ca1</field>
    <field name="keywords">SYSCTL_PERIPH_RES_MCPWM3 SYSCTL_PERIPH_RES_MCPWM3</field>
    <field name="text">Reset MCPWM3 clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_ECAP1</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53da142054df02bc270a3d6b04f623b1d88f</field>
    <field name="keywords">SYSCTL_PERIPH_RES_ECAP1 SYSCTL_PERIPH_RES_ECAP1</field>
    <field name="text">Reset ECAP1 clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_UARTA</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53da6c3b00fa52e2f0f1362858c6640c9c4a</field>
    <field name="keywords">SYSCTL_PERIPH_RES_UARTA SYSCTL_PERIPH_RES_UARTA</field>
    <field name="text">Reset UART_A clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_PGA1</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53da82edb111e69aa126b398284a89e8cfc4</field>
    <field name="keywords">SYSCTL_PERIPH_RES_PGA1 SYSCTL_PERIPH_RES_PGA1</field>
    <field name="text">Reset PGA1 clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_SCIA</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53da861ea1d1fe139abe0f4a54a2add1b06e</field>
    <field name="keywords">SYSCTL_PERIPH_RES_SCIA SYSCTL_PERIPH_RES_SCIA</field>
    <field name="text">Reset SCI_A clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_SCIB</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53da8f54bb48b30b1a50ceb8c1dad9da840c</field>
    <field name="keywords">SYSCTL_PERIPH_RES_SCIB SYSCTL_PERIPH_RES_SCIB</field>
    <field name="text">Reset SCI_B clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_ADCA</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53da9eb74a92ecde5493bd389479a9297faf</field>
    <field name="keywords">SYSCTL_PERIPH_RES_ADCA SYSCTL_PERIPH_RES_ADCA</field>
    <field name="text">Reset ADC_A clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_CMPSS3</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53daa68d24537fb1e9d149d3823acbb8365d</field>
    <field name="keywords">SYSCTL_PERIPH_RES_CMPSS3 SYSCTL_PERIPH_RES_CMPSS3</field>
    <field name="text">Reset CMPSS3 clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_SPIA</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53daacfb5b9451f2fd22e7bc9486b7975466</field>
    <field name="keywords">SYSCTL_PERIPH_RES_SPIA SYSCTL_PERIPH_RES_SPIA</field>
    <field name="text">Reset SPI_A clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_EQEP1</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53dad7f4af4535ec3c5793c3dd6348eba711</field>
    <field name="keywords">SYSCTL_PERIPH_RES_EQEP1 SYSCTL_PERIPH_RES_EQEP1</field>
    <field name="text">Reset EQEP1 clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_CMPSS2</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53dad9a206dbf660ceb7d04892550872a3a9</field>
    <field name="keywords">SYSCTL_PERIPH_RES_CMPSS2 SYSCTL_PERIPH_RES_CMPSS2</field>
    <field name="text">Reset CMPSS2 clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_RES_CMPSS1</field>
    <field name="url">group__sysctl__api.html#gga54ee7d33eb760f838f036ecd3bc7c53daf6d73c1f2753b975c2346fe440bd92df</field>
    <field name="keywords">SYSCTL_PERIPH_RES_CMPSS1 SYSCTL_PERIPH_RES_CMPSS1</field>
    <field name="text">Reset CMPSS1 clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_TMR2CLKSRCSEL_SYSCLK</field>
    <field name="url">group__sysctl__api.html#gga5cb264c5e7d7ea39520550db6e31ef72a6ea76d7e7034ba8cb732349330c10a99</field>
    <field name="keywords">SYSCTL_TMR2CLKSRCSEL_SYSCLK SYSCTL_TMR2CLKSRCSEL_SYSCLK</field>
    <field name="text">System Clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_TMR2CLKSRCSEL_XTAL</field>
    <field name="url">group__sysctl__api.html#gga5cb264c5e7d7ea39520550db6e31ef72a7dcf6fd67167e568d57f0cb00d57a478</field>
    <field name="keywords">SYSCTL_TMR2CLKSRCSEL_XTAL SYSCTL_TMR2CLKSRCSEL_XTAL</field>
    <field name="text">Crystal oscillator</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_TMR2CLKSRCSEL_AUXPLLCLK</field>
    <field name="url">group__sysctl__api.html#gga5cb264c5e7d7ea39520550db6e31ef72a81e458632d7d496854788f8acadb5031</field>
    <field name="keywords">SYSCTL_TMR2CLKSRCSEL_AUXPLLCLK SYSCTL_TMR2CLKSRCSEL_AUXPLLCLK</field>
    <field name="text">Aux PLL CLock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_TMR2CLKSRCSEL_WROSCDIV8</field>
    <field name="url">group__sysctl__api.html#gga5cb264c5e7d7ea39520550db6e31ef72aefc47d30225d47e8e3b194520119a047</field>
    <field name="keywords">SYSCTL_TMR2CLKSRCSEL_WROSCDIV8 SYSCTL_TMR2CLKSRCSEL_WROSCDIV8</field>
    <field name="text">Wide-range Oscillator</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_TMR2CLKSRCSEL_SYSOSCDIV4</field>
    <field name="url">group__sysctl__api.html#gga5cb264c5e7d7ea39520550db6e31ef72af72ad7328bef90c29f0729299340b60a</field>
    <field name="keywords">SYSCTL_TMR2CLKSRCSEL_SYSOSCDIV4 SYSCTL_TMR2CLKSRCSEL_SYSOSCDIV4</field>
    <field name="text">System Oscillator</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_56</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea01013cdba80f398ab3f952559596bcd6</field>
    <field name="keywords">SYSCTL_SYSDIV_56 SYSCTL_SYSDIV_56</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_48</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea0233c14c66a4f3fd6b6c5af802513d5b</field>
    <field name="keywords">SYSCTL_SYSDIV_48 SYSCTL_SYSDIV_48</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_46</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea02e7e5fc26824b348ee99ce7ef3cf39e</field>
    <field name="keywords">SYSCTL_SYSDIV_46 SYSCTL_SYSDIV_46</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_11</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea036414691242c07096e17f3d46f536d5</field>
    <field name="keywords">SYSCTL_SYSDIV_11 SYSCTL_SYSDIV_11</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_37</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea0855cad41fafbe81fe54a0786bc8749a</field>
    <field name="keywords">SYSCTL_SYSDIV_37 SYSCTL_SYSDIV_37</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_54</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea0e0ba40d3fd4813146114277e7027e66</field>
    <field name="keywords">SYSCTL_SYSDIV_54 SYSCTL_SYSDIV_54</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_31</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea10e7f3b6ce9ceb97c49f01a2e4d4659d</field>
    <field name="keywords">SYSCTL_SYSDIV_31 SYSCTL_SYSDIV_31</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_41</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea13281b600de7c75134a9424ddf5277e1</field>
    <field name="keywords">SYSCTL_SYSDIV_41 SYSCTL_SYSDIV_41</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_15</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea1386e094bee6bccbd849a38eabb4f4b6</field>
    <field name="keywords">SYSCTL_SYSDIV_15 SYSCTL_SYSDIV_15</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_14</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea14a8a607a0c68f99ceeb020d3da6ac2c</field>
    <field name="keywords">SYSCTL_SYSDIV_14 SYSCTL_SYSDIV_14</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_23</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea1baae8eeeef52b58d091d4188e349579</field>
    <field name="keywords">SYSCTL_SYSDIV_23 SYSCTL_SYSDIV_23</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_47</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea22f9e03d566ad88452e96bd9e1c71fff</field>
    <field name="keywords">SYSCTL_SYSDIV_47 SYSCTL_SYSDIV_47</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_30</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea2fe05f2569f08612bfbe5257302ca7e9</field>
    <field name="keywords">SYSCTL_SYSDIV_30 SYSCTL_SYSDIV_30</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_20</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea304215f6d442b16eb5fc2e9522cfcd31</field>
    <field name="keywords">SYSCTL_SYSDIV_20 SYSCTL_SYSDIV_20</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_3</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea311a1e345b4d2ce3518716f6c2c75c59</field>
    <field name="keywords">SYSCTL_SYSDIV_3 SYSCTL_SYSDIV_3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_38</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea31f2c1f4ba3ead6c1898c63e19761c6e</field>
    <field name="keywords">SYSCTL_SYSDIV_38 SYSCTL_SYSDIV_38</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_34</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea3ab308e8afcd107841473ab62b87e2ee</field>
    <field name="keywords">SYSCTL_SYSDIV_34 SYSCTL_SYSDIV_34</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_44</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea3eebc4a5ec3b530d163397042e1aadf2</field>
    <field name="keywords">SYSCTL_SYSDIV_44 SYSCTL_SYSDIV_44</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_60</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea4841cc9b411ef4e2d8cda610b8ac3110</field>
    <field name="keywords">SYSCTL_SYSDIV_60 SYSCTL_SYSDIV_60</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_7</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea4fe81393f244aff094fe7cdbf02c67f6</field>
    <field name="keywords">SYSCTL_SYSDIV_7 SYSCTL_SYSDIV_7</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_59</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea588e387d9e7438ccee182a34cf849e1e</field>
    <field name="keywords">SYSCTL_SYSDIV_59 SYSCTL_SYSDIV_59</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_42</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea61b3bc6fd686fceafb7b5cf15a846c37</field>
    <field name="keywords">SYSCTL_SYSDIV_42 SYSCTL_SYSDIV_42</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_26</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea6257980adefe29c19ae2abbd8e951b24</field>
    <field name="keywords">SYSCTL_SYSDIV_26 SYSCTL_SYSDIV_26</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_4</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea63b96b32b21653605aa6ed30868329f5</field>
    <field name="keywords">SYSCTL_SYSDIV_4 SYSCTL_SYSDIV_4</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_51</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea67f610639e045e8830377bb73623ff86</field>
    <field name="keywords">SYSCTL_SYSDIV_51 SYSCTL_SYSDIV_51</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_17</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea6bd64933a42cdf9683e3772a3732ea45</field>
    <field name="keywords">SYSCTL_SYSDIV_17 SYSCTL_SYSDIV_17</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_13</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea6cd8d08755b4737c430539468e854bfd</field>
    <field name="keywords">SYSCTL_SYSDIV_13 SYSCTL_SYSDIV_13</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_24</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea6da2140e7fa0152c6f994453bea2525a</field>
    <field name="keywords">SYSCTL_SYSDIV_24 SYSCTL_SYSDIV_24</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_58</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea712ce1287583dd2ed9b09f083b4d5716</field>
    <field name="keywords">SYSCTL_SYSDIV_58 SYSCTL_SYSDIV_58</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_62</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea750c4c65a3b681b290466b7c0428c77e</field>
    <field name="keywords">SYSCTL_SYSDIV_62 SYSCTL_SYSDIV_62</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_29</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea773d64adaa8fbeb47064a717d4fe12b0</field>
    <field name="keywords">SYSCTL_SYSDIV_29 SYSCTL_SYSDIV_29</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_6</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea786b9653b13f622ec7c33c30fafb8a6e</field>
    <field name="keywords">SYSCTL_SYSDIV_6 SYSCTL_SYSDIV_6</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_32</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea7b62153935de28119af7f5bb22c236a8</field>
    <field name="keywords">SYSCTL_SYSDIV_32 SYSCTL_SYSDIV_32</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_33</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea7b8d12fbc892882bbd73d49be5883d14</field>
    <field name="keywords">SYSCTL_SYSDIV_33 SYSCTL_SYSDIV_33</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_52</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea8227c1a7c5e07ce2b7559e4d096f4ac6</field>
    <field name="keywords">SYSCTL_SYSDIV_52 SYSCTL_SYSDIV_52</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_45</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea83b36a6049e2894089059afe77da2099</field>
    <field name="keywords">SYSCTL_SYSDIV_45 SYSCTL_SYSDIV_45</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_5</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea8a3e2e8ce1652fe06b4f09d36a33f064</field>
    <field name="keywords">SYSCTL_SYSDIV_5 SYSCTL_SYSDIV_5</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_39</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea8c0638c766e5c03a8d37e8425cf1db51</field>
    <field name="keywords">SYSCTL_SYSDIV_39 SYSCTL_SYSDIV_39</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_55</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea8f20fcbb5d97292f5af2f2b694e931d1</field>
    <field name="keywords">SYSCTL_SYSDIV_55 SYSCTL_SYSDIV_55</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_12</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea9264397d9ca572ebe78a54f3ca4ce389</field>
    <field name="keywords">SYSCTL_SYSDIV_12 SYSCTL_SYSDIV_12</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_57</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea97d1ea0912324c6bc371d761334703c3</field>
    <field name="keywords">SYSCTL_SYSDIV_57 SYSCTL_SYSDIV_57</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_53</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea982f660842027622965c683ed9894250</field>
    <field name="keywords">SYSCTL_SYSDIV_53 SYSCTL_SYSDIV_53</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_49</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea98b78ddbe8c6458576e11306fc52177e</field>
    <field name="keywords">SYSCTL_SYSDIV_49 SYSCTL_SYSDIV_49</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_21</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea9c77ad177538b1ae89e36fe988715c26</field>
    <field name="keywords">SYSCTL_SYSDIV_21 SYSCTL_SYSDIV_21</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_16</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea9cab056fa61c1ccfaf8f5255314cf92c</field>
    <field name="keywords">SYSCTL_SYSDIV_16 SYSCTL_SYSDIV_16</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_28</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea9e9a2becd55586b4a12ce5a24d83f45b</field>
    <field name="keywords">SYSCTL_SYSDIV_28 SYSCTL_SYSDIV_28</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_61</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabea9ff79223598b3a8711b0e4b19f3f7d54</field>
    <field name="keywords">SYSCTL_SYSDIV_61 SYSCTL_SYSDIV_61</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_1</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeaa99776834f130fda9dc2053e0b92e95f</field>
    <field name="keywords">SYSCTL_SYSDIV_1 SYSCTL_SYSDIV_1</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_19</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeab97eb5bb8e852f0e8139527a061ebb6e</field>
    <field name="keywords">SYSCTL_SYSDIV_19 SYSCTL_SYSDIV_19</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_25</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeabb4854ff0667e4e0bb5d53267d3086bb</field>
    <field name="keywords">SYSCTL_SYSDIV_25 SYSCTL_SYSDIV_25</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_40</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeac09228a44b0c40481509cb82de1adfbb</field>
    <field name="keywords">SYSCTL_SYSDIV_40 SYSCTL_SYSDIV_40</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_64</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeac482c3c5666ff6f10e6e50c3c4b96bfc</field>
    <field name="keywords">SYSCTL_SYSDIV_64 SYSCTL_SYSDIV_64</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_27</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeac6152e6b64a42869dd490ddc76e87e38</field>
    <field name="keywords">SYSCTL_SYSDIV_27 SYSCTL_SYSDIV_27</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_36</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabead0e3649b8f293923c8bbb1002e2c5292</field>
    <field name="keywords">SYSCTL_SYSDIV_36 SYSCTL_SYSDIV_36</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_2</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabead1155a74e1d8098ea47ce05ae11fef0c</field>
    <field name="keywords">SYSCTL_SYSDIV_2 SYSCTL_SYSDIV_2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_35</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabead4f309ab5e9a21cc4b32007dc440ab4b</field>
    <field name="keywords">SYSCTL_SYSDIV_35 SYSCTL_SYSDIV_35</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_22</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabead7756463af84aa4d14488f35dfb44bf7</field>
    <field name="keywords">SYSCTL_SYSDIV_22 SYSCTL_SYSDIV_22</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_50</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeadffa980aecd85c09d83227e507c3f066</field>
    <field name="keywords">SYSCTL_SYSDIV_50 SYSCTL_SYSDIV_50</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_9</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeae353fd02298c5cd31749d0aa9a27b665</field>
    <field name="keywords">SYSCTL_SYSDIV_9 SYSCTL_SYSDIV_9</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_43</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeae6ae2541c8b4e998bd334af278cd1819</field>
    <field name="keywords">SYSCTL_SYSDIV_43 SYSCTL_SYSDIV_43</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_63</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeaea3a9a71cfabb7245e7dec60fb605eae</field>
    <field name="keywords">SYSCTL_SYSDIV_63 SYSCTL_SYSDIV_63</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_18</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeaea9f0ea7b9d6ab38393881215df36463</field>
    <field name="keywords">SYSCTL_SYSDIV_18 SYSCTL_SYSDIV_18</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_8</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeaefc33d4ccde4893dc2c719d84dfa94f1</field>
    <field name="keywords">SYSCTL_SYSDIV_8 SYSCTL_SYSDIV_8</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYSDIV_10</field>
    <field name="url">group__sysctl__api.html#gga65573c548c81c3f94e0a8bf93c3beabeaff7fa349265a81484bca3a8d5ee5b917</field>
    <field name="keywords">SYSCTL_SYSDIV_10 SYSCTL_SYSDIV_10</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_MODE_INTERRUPT</field>
    <field name="url">group__sysctl__api.html#gga6acfa77eedbb703be286b9900f403839a11af76bfd1e3eadd9b0ac8fdf50b38fd</field>
    <field name="keywords">SYSCTL_WD_MODE_INTERRUPT SYSCTL_WD_MODE_INTERRUPT</field>
    <field name="text">Watchdog can generate an interrupt signal reset signal is disabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_MODE_RESET</field>
    <field name="url">group__sysctl__api.html#gga6acfa77eedbb703be286b9900f403839aa7da134dee5ed49d116d345c9232708b</field>
    <field name="keywords">SYSCTL_WD_MODE_RESET SYSCTL_WD_MODE_RESET</field>
    <field name="text">Watchdog can generate a reset signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CLOCKOUT_PLLSYS</field>
    <field name="url">group__sysctl__api.html#gga6d6707580ed69295038d9eb68c52b114a17a7432c7631bf60f8241ec3c13dbfc3</field>
    <field name="keywords">SYSCTL_CLOCKOUT_PLLSYS SYSCTL_CLOCKOUT_PLLSYS</field>
    <field name="text">PLL System Clock post SYSCLKDIV</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CLOCKOUT_PLLCLK</field>
    <field name="url">group__sysctl__api.html#gga6d6707580ed69295038d9eb68c52b114a22f57959e5185982e5d3b4f6dccbfd7c</field>
    <field name="keywords">SYSCTL_CLOCKOUT_PLLCLK SYSCTL_CLOCKOUT_PLLCLK</field>
    <field name="text">PLL Clock after Bypass Mux</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CLOCKOUT_SYSCLK</field>
    <field name="url">group__sysctl__api.html#gga6d6707580ed69295038d9eb68c52b114a2e53bf6eccf9a54eb6b5f7bc665bca79</field>
    <field name="keywords">SYSCTL_CLOCKOUT_SYSCLK SYSCTL_CLOCKOUT_SYSCLK</field>
    <field name="text">CPU System Clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CLOCKOUT_WROSCDIV8</field>
    <field name="url">group__sysctl__api.html#gga6d6707580ed69295038d9eb68c52b114a542b533a208c7e5a10d8b2f997cf886d</field>
    <field name="keywords">SYSCTL_CLOCKOUT_WROSCDIV8 SYSCTL_CLOCKOUT_WROSCDIV8</field>
    <field name="text">Wide-range Oscillator BY 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CLOCKOUT_XTALOSC</field>
    <field name="url">group__sysctl__api.html#gga6d6707580ed69295038d9eb68c52b114a5f8d430b09caa0b38235e0d80d743a47</field>
    <field name="keywords">SYSCTL_CLOCKOUT_XTALOSC SYSCTL_CLOCKOUT_XTALOSC</field>
    <field name="text">External Oscillator</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CLOCKOUT_SYSOSC</field>
    <field name="url">group__sysctl__api.html#gga6d6707580ed69295038d9eb68c52b114a748aeda1b5dbfe8b9d69579741951a82</field>
    <field name="keywords">SYSCTL_CLOCKOUT_SYSOSC SYSCTL_CLOCKOUT_SYSOSC</field>
    <field name="text">System Oscillator</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CLOCKOUT_PLLRAW</field>
    <field name="url">group__sysctl__api.html#gga6d6707580ed69295038d9eb68c52b114a7511b9d48a93873fe2915b34af57b6fe</field>
    <field name="keywords">SYSCTL_CLOCKOUT_PLLRAW SYSCTL_CLOCKOUT_PLLRAW</field>
    <field name="text">PLL System Clock pre SYSCLKDIV</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CLOCKOUT_WROSC</field>
    <field name="url">group__sysctl__api.html#gga6d6707580ed69295038d9eb68c52b114ad82e829668f466fea1fd01fb2543afaf</field>
    <field name="keywords">SYSCTL_CLOCKOUT_WROSC SYSCTL_CLOCKOUT_WROSC</field>
    <field name="text">Wide-range Oscillator</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CLOCKOUT_SYSOSCDIV4</field>
    <field name="url">group__sysctl__api.html#gga6d6707580ed69295038d9eb68c52b114ae2240238a0dc2378b5cbf92a2dfb43bd</field>
    <field name="keywords">SYSCTL_CLOCKOUT_SYSOSCDIV4 SYSCTL_CLOCKOUT_SYSOSCDIV4</field>
    <field name="text">System Oscillator BY 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PDIV_4</field>
    <field name="url">group__sysctl__api.html#gga70f699e4683205033f6a83a88fbe97e7a135ce29d833adf5fefbba01cc5af1ada</field>
    <field name="keywords">SYSCTL_PDIV_4 SYSCTL_PDIV_4</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PDIV_2</field>
    <field name="url">group__sysctl__api.html#gga70f699e4683205033f6a83a88fbe97e7a791162c86df5b776457d0c93099835aa</field>
    <field name="keywords">SYSCTL_PDIV_2 SYSCTL_PDIV_2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PDIV_8</field>
    <field name="url">group__sysctl__api.html#gga70f699e4683205033f6a83a88fbe97e7ac032c55d32b0c73e6498946849119617</field>
    <field name="keywords">SYSCTL_PDIV_8 SYSCTL_PDIV_8</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PDIV_1</field>
    <field name="url">group__sysctl__api.html#gga70f699e4683205033f6a83a88fbe97e7ac3f5bfa938c53579966a634db5a2981c</field>
    <field name="keywords">SYSCTL_PDIV_1 SYSCTL_PDIV_1</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_DEVICE_FAMILY</field>
    <field name="url">group__sysctl__api.html#gga8091af9c8eec7464d7169cc869b1aff9a2c20f187e1ae7638bc66ee6ebb5d7a45</field>
    <field name="keywords">SYSCTL_DEVICE_FAMILY SYSCTL_DEVICE_FAMILY</field>
    <field name="text">Device Family</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_DEVICE_PARTNO</field>
    <field name="url">group__sysctl__api.html#gga8091af9c8eec7464d7169cc869b1aff9a8c67a22636d8d66b1be9fa1961338dc9</field>
    <field name="keywords">SYSCTL_DEVICE_PARTNO SYSCTL_DEVICE_PARTNO</field>
    <field name="text">Device Part Number</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_DEVICE_CLASSID</field>
    <field name="url">group__sysctl__api.html#gga8091af9c8eec7464d7169cc869b1aff9af397f08cacb85b3f6c51db69ec61d689</field>
    <field name="keywords">SYSCTL_DEVICE_CLASSID SYSCTL_DEVICE_CLASSID</field>
    <field name="text">Device Class ID</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_DEVICE_FLASH</field>
    <field name="url">group__sysctl__api.html#gga8091af9c8eec7464d7169cc869b1aff9af5718fc0dcb6ccab13cd42d6fb6bd2b9</field>
    <field name="keywords">SYSCTL_DEVICE_FLASH SYSCTL_DEVICE_FLASH</field>
    <field name="text">Device Flash size KB</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_DEVICE_QUAL</field>
    <field name="url">group__sysctl__api.html#gga8091af9c8eec7464d7169cc869b1aff9aff53b40836a2a6ace95d2f6792dc0b68</field>
    <field name="keywords">SYSCTL_DEVICE_QUAL SYSCTL_DEVICE_QUAL</field>
    <field name="text">Device Qualification Status</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_TMR2CLKPRESCALE_16</field>
    <field name="url">group__sysctl__api.html#gga87e7a6d6c886d8d9d06e75ecf47ccd9aa2780fb41bf911ea9fb423c3cc5b86961</field>
    <field name="keywords">SYSCTL_TMR2CLKPRESCALE_16 SYSCTL_TMR2CLKPRESCALE_16</field>
    <field name="text">Cputimer2 clock Cputimer2 clock 1 6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_TMR2CLKPRESCALE_8</field>
    <field name="url">group__sysctl__api.html#gga87e7a6d6c886d8d9d06e75ecf47ccd9aa325171c5e3b4674d2a29b904e1be4399</field>
    <field name="keywords">SYSCTL_TMR2CLKPRESCALE_8 SYSCTL_TMR2CLKPRESCALE_8</field>
    <field name="text">Cputimer2 clock Cputimer2 clock 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_TMR2CLKPRESCALE_2</field>
    <field name="url">group__sysctl__api.html#gga87e7a6d6c886d8d9d06e75ecf47ccd9aa4fbb1337c8cabf8736b4b17ee5dc6edb</field>
    <field name="keywords">SYSCTL_TMR2CLKPRESCALE_2 SYSCTL_TMR2CLKPRESCALE_2</field>
    <field name="text">Cputimer2 clock Cputimer2 clock 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_TMR2CLKPRESCALE_1</field>
    <field name="url">group__sysctl__api.html#gga87e7a6d6c886d8d9d06e75ecf47ccd9aaba7ed31ecd30ba315c858075d1686fcc</field>
    <field name="keywords">SYSCTL_TMR2CLKPRESCALE_1 SYSCTL_TMR2CLKPRESCALE_1</field>
    <field name="text">Cputimer2 clock Cputimer2 clock 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_TMR2CLKPRESCALE_4</field>
    <field name="url">group__sysctl__api.html#gga87e7a6d6c886d8d9d06e75ecf47ccd9aabe1a8c4e919d95d743cf549f858de467</field>
    <field name="keywords">SYSCTL_TMR2CLKPRESCALE_4 SYSCTL_TMR2CLKPRESCALE_4</field>
    <field name="text">Cputimer2 clock Cputimer2 clock 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYNC_OUT_SRC_MCPWM3SYNCOUT</field>
    <field name="url">group__sysctl__api.html#gga8d491ad686984213d6bbc1336f5841b4a12fb6a62c0296dad0bf45774ed058e52</field>
    <field name="keywords">SYSCTL_SYNC_OUT_SRC_MCPWM3SYNCOUT SYSCTL_SYNC_OUT_SRC_MCPWM3SYNCOUT</field>
    <field name="text">MCPWM3SYNCOUT EXTSYNCOUT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYNC_OUT_SRC_ECAP1SYNCOUT</field>
    <field name="url">group__sysctl__api.html#gga8d491ad686984213d6bbc1336f5841b4a8c4506fa5c09086f2a5257cfd2dd6154</field>
    <field name="keywords">SYSCTL_SYNC_OUT_SRC_ECAP1SYNCOUT SYSCTL_SYNC_OUT_SRC_ECAP1SYNCOUT</field>
    <field name="text">ECAP1SYNCOUT EXTSYNCOUT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_SYNC_OUT_SRC_MCPWM1SYNCOUT</field>
    <field name="url">group__sysctl__api.html#gga8d491ad686984213d6bbc1336f5841b4abef57051edcd4950372ffcaffa39bdce</field>
    <field name="keywords">SYSCTL_SYNC_OUT_SRC_MCPWM1SYNCOUT SYSCTL_SYNC_OUT_SRC_MCPWM1SYNCOUT</field>
    <field name="text">MCPWM1SYNCOUT EXTSYNCOUT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_XTALMODE_CRYSTAL</field>
    <field name="url">group__sysctl__api.html#gga96f499faab10fd54daa75a5e204a4e3bae561360bdff9d54de5699ea46bce0dbe</field>
    <field name="keywords">SYSCTL_XTALMODE_CRYSTAL SYSCTL_XTALMODE_CRYSTAL</field>
    <field name="text">XTAL Oscillator Crystal Mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_XTALMODE_SINGLE</field>
    <field name="url">group__sysctl__api.html#gga96f499faab10fd54daa75a5e204a4e3baee2878bf64fdb5d03310fb6a7285a88c</field>
    <field name="keywords">SYSCTL_XTALMODE_SINGLE SYSCTL_XTALMODE_SINGLE</field>
    <field name="text">XTAL Oscillator Single-Ended Mode</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PRESCALE_32</field>
    <field name="url">group__sysctl__api.html#ggaad355f0335e50fd3157277781b3a432ca0e33debe85f1d26871aec8fc7b228520</field>
    <field name="keywords">SYSCTL_WD_PRESCALE_32 SYSCTL_WD_PRESCALE_32</field>
    <field name="text">WDCLK PREDIVCLK 3 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PRESCALE_16</field>
    <field name="url">group__sysctl__api.html#ggaad355f0335e50fd3157277781b3a432ca26fe96f4f05be5ae2e6f529deec1fbd7</field>
    <field name="keywords">SYSCTL_WD_PRESCALE_16 SYSCTL_WD_PRESCALE_16</field>
    <field name="text">WDCLK PREDIVCLK 1 6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PRESCALE_4</field>
    <field name="url">group__sysctl__api.html#ggaad355f0335e50fd3157277781b3a432ca71449a5f1de0bad2d9f384a94aa78163</field>
    <field name="keywords">SYSCTL_WD_PRESCALE_4 SYSCTL_WD_PRESCALE_4</field>
    <field name="text">WDCLK PREDIVCLK 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PRESCALE_8</field>
    <field name="url">group__sysctl__api.html#ggaad355f0335e50fd3157277781b3a432caa6945aa85b54e8c973f75cf7bc34488b</field>
    <field name="keywords">SYSCTL_WD_PRESCALE_8 SYSCTL_WD_PRESCALE_8</field>
    <field name="text">WDCLK PREDIVCLK 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PRESCALE_2</field>
    <field name="url">group__sysctl__api.html#ggaad355f0335e50fd3157277781b3a432cabc30113c1aa6776f9d16c64196b66049</field>
    <field name="keywords">SYSCTL_WD_PRESCALE_2 SYSCTL_WD_PRESCALE_2</field>
    <field name="text">WDCLK PREDIVCLK 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PRESCALE_1</field>
    <field name="url">group__sysctl__api.html#ggaad355f0335e50fd3157277781b3a432cac21092e82cfc1d95e72026922b27f56e</field>
    <field name="keywords">SYSCTL_WD_PRESCALE_1 SYSCTL_WD_PRESCALE_1</field>
    <field name="text">WDCLK PREDIVCLK 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_WD_PRESCALE_64</field>
    <field name="url">group__sysctl__api.html#ggaad355f0335e50fd3157277781b3a432caed1467ca008366209fca1f67c3dc497a</field>
    <field name="keywords">SYSCTL_WD_PRESCALE_64 SYSCTL_WD_PRESCALE_64</field>
    <field name="text">WDCLK PREDIVCLK 6 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_PERIPH_CLK_TBCLKSYNC</field>
    <field name="url">group__sysctl__api.html#ggabda7c864eeed2819e9dfecf398397632aeec2a25ab8fa74e6b70fdbee5d42dc6f</field>
    <field name="keywords">SYSCTL_PERIPH_CLK_TBCLKSYNC SYSCTL_PERIPH_CLK_TBCLKSYNC</field>
    <field name="text">TBCLKSYNC clock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_USER_REG1_XRSN</field>
    <field name="url">group__sysctl__api.html#ggac5498d27aa1dd188eeac2d50b82407bda1ea8689e445d1b67d1159d72e60fe493</field>
    <field name="keywords">SYSCTL_USER_REG1_XRSN SYSCTL_USER_REG1_XRSN</field>
    <field name="text">User register reset by XRSn</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_USER_REG1_SYSRSN</field>
    <field name="url">group__sysctl__api.html#ggac5498d27aa1dd188eeac2d50b82407bda4cfbc5519bae1d328145f32ecb5aa472</field>
    <field name="keywords">SYSCTL_USER_REG1_SYSRSN SYSCTL_USER_REG1_SYSRSN</field>
    <field name="text">User register reset by SYSRSn</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_USER_REG1_PORESETN</field>
    <field name="url">group__sysctl__api.html#ggac5498d27aa1dd188eeac2d50b82407bda68c92827b6f6ed3495a527bcba700d0d</field>
    <field name="keywords">SYSCTL_USER_REG1_PORESETN SYSCTL_USER_REG1_PORESETN</field>
    <field name="text">User register reset by PORESETn</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_USER_REG2_PORESETN</field>
    <field name="url">group__sysctl__api.html#ggac5498d27aa1dd188eeac2d50b82407bda8034cf1f8863df352b41d83ff4ff3100</field>
    <field name="keywords">SYSCTL_USER_REG2_PORESETN SYSCTL_USER_REG2_PORESETN</field>
    <field name="text">User register reset by PORESETn</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_USER_REG2_XRSN</field>
    <field name="url">group__sysctl__api.html#ggac5498d27aa1dd188eeac2d50b82407bda87cb1449b98b8477344da6bde479ff69</field>
    <field name="keywords">SYSCTL_USER_REG2_XRSN SYSCTL_USER_REG2_XRSN</field>
    <field name="text">User register reset by XRSn</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_USER_REG3_PORESETN</field>
    <field name="url">group__sysctl__api.html#ggac5498d27aa1dd188eeac2d50b82407bdaa0449b30b5f17ee251b5928ca2284b46</field>
    <field name="keywords">SYSCTL_USER_REG3_PORESETN SYSCTL_USER_REG3_PORESETN</field>
    <field name="text">User register reset by PORESETn</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_USER_REG4_PORESETN</field>
    <field name="url">group__sysctl__api.html#ggac5498d27aa1dd188eeac2d50b82407bdab33c649e5937b83f2cf8fe2a8f121830</field>
    <field name="keywords">SYSCTL_USER_REG4_PORESETN SYSCTL_USER_REG4_PORESETN</field>
    <field name="text">User register reset by PORESETn</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_USER_REG2_SYSRSN</field>
    <field name="url">group__sysctl__api.html#ggac5498d27aa1dd188eeac2d50b82407bdad893ab65cbf83f4fbb3ad92b749877e3</field>
    <field name="keywords">SYSCTL_USER_REG2_SYSRSN SYSCTL_USER_REG2_SYSRSN</field>
    <field name="text">User register reset by SYSRSn</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_LSPCLK_PRESCALE_8</field>
    <field name="url">group__sysctl__api.html#ggac9b98bad15c0beff12ee0f1f1be50dcda02b1124ef58da7e76f3283f7c1ea311c</field>
    <field name="keywords">SYSCTL_LSPCLK_PRESCALE_8 SYSCTL_LSPCLK_PRESCALE_8</field>
    <field name="text">LSPCLK SYSCLK 8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_LSPCLK_PRESCALE_14</field>
    <field name="url">group__sysctl__api.html#ggac9b98bad15c0beff12ee0f1f1be50dcda0dc363bb65d4ef2fbdd1f7d27716ab4f</field>
    <field name="keywords">SYSCTL_LSPCLK_PRESCALE_14 SYSCTL_LSPCLK_PRESCALE_14</field>
    <field name="text">LSPCLK SYSCLK 1 4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_LSPCLK_PRESCALE_4</field>
    <field name="url">group__sysctl__api.html#ggac9b98bad15c0beff12ee0f1f1be50dcda12fb3b5cf24dc7fd89a47ffc3a950d67</field>
    <field name="keywords">SYSCTL_LSPCLK_PRESCALE_4 SYSCTL_LSPCLK_PRESCALE_4</field>
    <field name="text">LSPCLK SYSCLK 4 default</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_LSPCLK_PRESCALE_2</field>
    <field name="url">group__sysctl__api.html#ggac9b98bad15c0beff12ee0f1f1be50dcda21344974c410ae819697747b7ccc974f</field>
    <field name="keywords">SYSCTL_LSPCLK_PRESCALE_2 SYSCTL_LSPCLK_PRESCALE_2</field>
    <field name="text">LSPCLK SYSCLK 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_LSPCLK_PRESCALE_6</field>
    <field name="url">group__sysctl__api.html#ggac9b98bad15c0beff12ee0f1f1be50dcdaa70055e87eb8bda3364c28fbf65a2eca</field>
    <field name="keywords">SYSCTL_LSPCLK_PRESCALE_6 SYSCTL_LSPCLK_PRESCALE_6</field>
    <field name="text">LSPCLK SYSCLK 6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_LSPCLK_PRESCALE_1</field>
    <field name="url">group__sysctl__api.html#ggac9b98bad15c0beff12ee0f1f1be50dcdab543f6c6eb886bc575b1caa2feb9e532</field>
    <field name="keywords">SYSCTL_LSPCLK_PRESCALE_1 SYSCTL_LSPCLK_PRESCALE_1</field>
    <field name="text">LSPCLK SYSCLK 1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_LSPCLK_PRESCALE_10</field>
    <field name="url">group__sysctl__api.html#ggac9b98bad15c0beff12ee0f1f1be50dcdac3915e2057986453e0acfb73c565b0c6</field>
    <field name="keywords">SYSCTL_LSPCLK_PRESCALE_10 SYSCTL_LSPCLK_PRESCALE_10</field>
    <field name="text">LSPCLK SYSCLK 1 0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_LSPCLK_PRESCALE_12</field>
    <field name="url">group__sysctl__api.html#ggac9b98bad15c0beff12ee0f1f1be50dcdaf1aa6bf8ccd1948809c589b376abe417</field>
    <field name="keywords">SYSCTL_LSPCLK_PRESCALE_12 SYSCTL_LSPCLK_PRESCALE_12</field>
    <field name="text">LSPCLK SYSCLK 1 2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CPU_REG_SEL_BROMPATCH</field>
    <field name="url">group__sysctl__api.html#ggafb42a258e99bcfb4a183fe70e5def269a80ab38f83288e25ef2e316e8f939fe3a</field>
    <field name="keywords">SYSCTL_CPU_REG_SEL_BROMPATCH SYSCTL_CPU_REG_SEL_BROMPATCH</field>
    <field name="text">BROMPATCH lock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CPU_REG_SEL_ALL</field>
    <field name="url">group__sysctl__api.html#ggafb42a258e99bcfb4a183fe70e5def269ab5464054185cbc22184c65bd3d8dfd29</field>
    <field name="keywords">SYSCTL_CPU_REG_SEL_ALL SYSCTL_CPU_REG_SEL_ALL</field>
    <field name="text">ALL lock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CMPSSLPMSEL_CMPSS_4L</field>
    <field name="url">group__sysctl__api.html#ggafda30b4db4ddffa31068967dc4d8d0e1a0180e97bc2be1049a6123ef1b351431d</field>
    <field name="keywords">SYSCTL_CMPSSLPMSEL_CMPSS_4L SYSCTL_CMPSSLPMSEL_CMPSS_4L</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CMPSSLPMSEL_CMPSS_2L</field>
    <field name="url">group__sysctl__api.html#ggafda30b4db4ddffa31068967dc4d8d0e1a2766bc91581559853938ca95882859af</field>
    <field name="keywords">SYSCTL_CMPSSLPMSEL_CMPSS_2L SYSCTL_CMPSSLPMSEL_CMPSS_2L</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CMPSSLPMSEL_CMPSS_6L</field>
    <field name="url">group__sysctl__api.html#ggafda30b4db4ddffa31068967dc4d8d0e1a390ab2bc3710bbc41fbc031e26d069af</field>
    <field name="keywords">SYSCTL_CMPSSLPMSEL_CMPSS_6L SYSCTL_CMPSSLPMSEL_CMPSS_6L</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CMPSSLPMSEL_CMPSS_5H</field>
    <field name="url">group__sysctl__api.html#ggafda30b4db4ddffa31068967dc4d8d0e1a4300b057a38d7d1d2a64ff778fc74c8d</field>
    <field name="keywords">SYSCTL_CMPSSLPMSEL_CMPSS_5H SYSCTL_CMPSSLPMSEL_CMPSS_5H</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CMPSSLPMSEL_CMPSS_6H</field>
    <field name="url">group__sysctl__api.html#ggafda30b4db4ddffa31068967dc4d8d0e1a4b6e2c0defb06211f211b88f36fcb219</field>
    <field name="keywords">SYSCTL_CMPSSLPMSEL_CMPSS_6H SYSCTL_CMPSSLPMSEL_CMPSS_6H</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CMPSSLPMSEL_CMPSS_3H</field>
    <field name="url">group__sysctl__api.html#ggafda30b4db4ddffa31068967dc4d8d0e1aa987869fee427dfe25351469f1209897</field>
    <field name="keywords">SYSCTL_CMPSSLPMSEL_CMPSS_3H SYSCTL_CMPSSLPMSEL_CMPSS_3H</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CMPSSLPMSEL_CMPSS_2H</field>
    <field name="url">group__sysctl__api.html#ggafda30b4db4ddffa31068967dc4d8d0e1ab413eeddf46a3fff2a0bd697c6961c8a</field>
    <field name="keywords">SYSCTL_CMPSSLPMSEL_CMPSS_2H SYSCTL_CMPSSLPMSEL_CMPSS_2H</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CMPSSLPMSEL_CMPSS_1H</field>
    <field name="url">group__sysctl__api.html#ggafda30b4db4ddffa31068967dc4d8d0e1ac48ddf673680234a759ddd4842ff547c</field>
    <field name="keywords">SYSCTL_CMPSSLPMSEL_CMPSS_1H SYSCTL_CMPSSLPMSEL_CMPSS_1H</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CMPSSLPMSEL_CMPSS_4H</field>
    <field name="url">group__sysctl__api.html#ggafda30b4db4ddffa31068967dc4d8d0e1ad899c21117f35307665bf45b1780b506</field>
    <field name="keywords">SYSCTL_CMPSSLPMSEL_CMPSS_4H SYSCTL_CMPSSLPMSEL_CMPSS_4H</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CMPSSLPMSEL_CMPSS_5L</field>
    <field name="url">group__sysctl__api.html#ggafda30b4db4ddffa31068967dc4d8d0e1aed02af2f04f9fe396503f3b46d096ae7</field>
    <field name="keywords">SYSCTL_CMPSSLPMSEL_CMPSS_5L SYSCTL_CMPSSLPMSEL_CMPSS_5L</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CMPSSLPMSEL_CMPSS_3L</field>
    <field name="url">group__sysctl__api.html#ggafda30b4db4ddffa31068967dc4d8d0e1af05dfb4d29e74b7e69fc686363018110</field>
    <field name="keywords">SYSCTL_CMPSSLPMSEL_CMPSS_3L SYSCTL_CMPSSLPMSEL_CMPSS_3L</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">SYSCTL_CMPSSLPMSEL_CMPSS_1L</field>
    <field name="url">group__sysctl__api.html#ggafda30b4db4ddffa31068967dc4d8d0e1afa44dfb5e9274eb89fbec70b16cc9db5</field>
    <field name="keywords">SYSCTL_CMPSSLPMSEL_CMPSS_1L SYSCTL_CMPSSLPMSEL_CMPSS_1L</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">uart_api</field>
    <field name="url">group__uart__api.html</field>
    <field name="keywords">UART</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_WLEN_8</field>
    <field name="url">group__uart__api.html#ga00030434646d741635d32f955eb9460c</field>
    <field name="keywords">UART_CONFIG_WLEN_8 UART_CONFIG_WLEN_8</field>
    <field name="text">8 bit data 8 bit data</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_RXERROR_BREAK</field>
    <field name="url">group__uart__api.html#ga0095e719c755e72b325c60807bfc2947</field>
    <field name="keywords">UART_RXERROR_BREAK UART_RXERROR_BREAK</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CLK_IRLPBAUD16</field>
    <field name="url">group__uart__api.html#ga0473d32d10b9e3893732fdbbc631d806</field>
    <field name="keywords">UART_CLK_IRLPBAUD16 UART_CLK_IRLPBAUD16</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_INT_9BIT</field>
    <field name="url">group__uart__api.html#ga06b239c29b2e80d1e8ef7babbf54660a</field>
    <field name="keywords">UART_INT_9BIT UART_INT_9BIT</field>
    <field name="text">9 bit address match interrupt 9 bit address match interrupt</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_FIFO_RX2_8</field>
    <field name="url">group__uart__api.html#ga07c48011bc25cbeae8e703acb5b706b6</field>
    <field name="keywords">UART_FIFO_RX2_8 UART_FIFO_RX2_8</field>
    <field name="text">Receive interrupt at 1 Full Receive interrupt at 1 Full</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_WLEN_7</field>
    <field name="url">group__uart__api.html#ga07e4ba186b8f4a590395efbf2802cbf9</field>
    <field name="keywords">UART_CONFIG_WLEN_7 UART_CONFIG_WLEN_7</field>
    <field name="text">7 bit data 7 bit data</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_RXERROR_PARITY</field>
    <field name="url">group__uart__api.html#ga090520942aaf297184dd074bfc24dc49</field>
    <field name="keywords">UART_RXERROR_PARITY UART_RXERROR_PARITY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_enableDMA</field>
    <field name="args">(uint32_t base, uint32_t dmaFlags)</field>
    <field name="url">group__uart__api.html#ga0b22a960f4078592cc2b8df3a1dc2efe</field>
    <field name="keywords">UART_enableDMA UART_enableDMA</field>
    <field name="text">Enable UART uDMA operation base is the base address of the UART port dmaFlags is a bit mask of the uDMA features to enable The specified UART uDMA features are enabled The UART can be configured to use uDMA for transmit or receive and to disable receive if an error occurs The dmaFlags parameter is the logical OR of any of the following values UART_DMA_RX enable uDMA for receive UART_DMA_TX enable uDMA for transmit UART_DMA_ERR_RXSTOP disable uDMA receive on UART error The uDMA controller must also be set up before DMA can be used with the UART None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_setParityMode</field>
    <field name="args">(uint32_t base, uint32_t parity)</field>
    <field name="url">group__uart__api.html#ga1024627a03692e9d419821edff5a97ae</field>
    <field name="keywords">UART_setParityMode UART_setParityMode</field>
    <field name="text">Sets the type of parity base is the base address of the UART port parity specifies the type of parity to use This function configures the type of parity to use for transmitting and expect when receiving The parity parameter must be one of UART_CONFIG_PAR_NONE UART_CONFIG_PAR_EVEN UART_CONFIG_PAR_ODD UART_CONFIG_PAR_ONE or UART_CONFIG_PAR_ZERO The last two parameters allow direct control of the parity bit it is always either one or zero based on the mode None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_setBreakConfig</field>
    <field name="args">(uint32_t base, bool breakState)</field>
    <field name="url">group__uart__api.html#ga11b638c5ffd0ecfc705553fa0774e417</field>
    <field name="keywords">UART_setBreakConfig UART_setBreakConfig</field>
    <field name="text">Causes a BREAK to be sent base is the base address of the UART port breakState controls the output level Calling this function with bBreakState set to true asserts a break condition on the UART Calling this function with bBreakState set to false removes the break condition For proper transmission of a break command the break must be asserted for at least two complete frames None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_PAR_NONE</field>
    <field name="url">group__uart__api.html#ga195d4b28a36df1b8588ca5380a442174</field>
    <field name="keywords">UART_CONFIG_PAR_NONE UART_CONFIG_PAR_NONE</field>
    <field name="text">No parity No parity</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_getGlobalInterruptFlagStatus</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga1df126781851c901dffb3ed1578088d6</field>
    <field name="keywords">UART_getGlobalInterruptFlagStatus UART_getGlobalInterruptFlagStatus</field>
    <field name="text">Returns the status of UART global interrupt flag base is the base address of the UART port This function returns the status of UART global interrupt flag register Returns the status of UART global interrupt flag register</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_setIrDALPDivisor</field>
    <field name="args">(uint32_t base, uint32_t uartClk)</field>
    <field name="url">group__uart__api.html#ga236d404bc264afd38326ece103d94e57</field>
    <field name="keywords">UART_setIrDALPDivisor UART_setIrDALPDivisor</field>
    <field name="text">Sets the SIR IrDA Low Power Divisor base is the base address of the UART port uartClk is the rate of the clock supplied to the UART module It should be provided as UART_CLK_FREQ using the updated clk rate This function configures the SIR IrDA Low power divisor This function is used only if the SIR IrDA is to be used in Low Power mode which is indicated as part of the UART_enableSIR() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_disableSIR</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga243a36f0aa1b97b2bf12c4eb2e700b88</field>
    <field name="keywords">UART_disableSIR UART_disableSIR</field>
    <field name="text">Disables SIR IrDA mode on the specified UART base is the base address of the UART port This function disables SIR(IrDA) mode on the UART This function only has an effect if the UART has not been enabled by a call to UART_enableModule() The call UART_enableSIR() must be made before a call to UART_setConfig() because the UART_setConfig() function calls the UART_enableModule() function Another option is to call UART_disableModule() followed by UART_enableSIR() and then enable the UART by calling UART_enableModule() The IrDA SIR physical layer specifies a minimum 1 0 ms delay between transmission and reception which needs to be provided None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_getConfig</field>
    <field name="args">(uint32_t base, uint32_t uartClk, uint32_t *baud, uint32_t *config)</field>
    <field name="url">group__uart__api.html#ga25f18a72192b6acb5f748333cab2f781</field>
    <field name="keywords">UART_getConfig UART_getConfig</field>
    <field name="text">Gets the current configuration of a UART base is the base address of the UART port uartClk is the rate of the clock supplied to the UART module It should be provided as UART_CLK_FREQ using the updated clk rate baud is the desired baud rate baud is a pointer to storage for the baud rate config is a pointer to storage for the data format This function determines the baud rate and data format for the UART given an explicitly provided peripheral clock The returned baud rate is the actual baud rate it may not be the exact baud rate requested or an official baud rate The data format returned in config is enumerated the same as the config parameter of UART_setConfig() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_registerInterrupt</field>
    <field name="args">(uint32_t interruptNum, void(*pfnHandler)(void))</field>
    <field name="url">group__uart__api.html#ga2bb0296936b0a1f38539fe6ac69e93b1</field>
    <field name="keywords">UART_registerInterrupt UART_registerInterrupt</field>
    <field name="text">Registers an interrupt handler for a UART interrupt interruptNum specifies the interrupt in question pfnHandler is a pointer to the function to be called when the UART interrupt occurs This function does the actual registering of the interrupt handler This function enables the global interrupt in the interrupt controller specific UART interrupts must be enabled via UART_enableInterrupt() It is the interrupt handler s responsibility to clear the interrupt source Interrupt_register() for important information about registering interrupt handlers None</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">Uart_IntType</field>
    <field name="url">group__uart__api.html#ga2d04e909e78e853e5000152922b5c1c6</field>
    <field name="keywords">Uart_IntType Uart_IntType</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_SIR_LOWPOWER_ENABLE</field>
    <field name="url">group__uart__api.html#ga2ee948b1b9d193449a13193bc5337c74</field>
    <field name="keywords">UART_SIR_LOWPOWER_ENABLE UART_SIR_LOWPOWER_ENABLE</field>
    <field name="text">masked interrupt masked interrupt</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CLK_DIVIDER</field>
    <field name="url">group__uart__api.html#ga3082604a4c1d62e98ac86f0f32cf34dd</field>
    <field name="keywords">UART_CLK_DIVIDER UART_CLK_DIVIDER</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_PAR_MASK</field>
    <field name="url">group__uart__api.html#ga324205f2700c2ac03b35be45e84523f1</field>
    <field name="keywords">UART_CONFIG_PAR_MASK UART_CONFIG_PAR_MASK</field>
    <field name="text">Mask for extracting parity Mask for extracting parity</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_writeCharNonBlocking</field>
    <field name="args">(uint32_t base, uint8_t data)</field>
    <field name="url">group__uart__api.html#ga328c1865b935f22dce0e8932a91544ab</field>
    <field name="keywords">UART_writeCharNonBlocking UART_writeCharNonBlocking</field>
    <field name="text">Sends a character to the specified port base is the base address of the UART port data is the character to be transmitted This function writes the character data to the transmit FIFO for the specified port This function does not block so if there is no space available then a false is returned and the application must retry the function later Returns true if the character was successfully placed in the transmit FIFO or false if there was no space available in the transmit FIFO</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_TXINT_MODE_EOT</field>
    <field name="url">group__uart__api.html#ga358737e51b37be564b0cf5b9ef1b2f0c</field>
    <field name="keywords">UART_TXINT_MODE_EOT UART_TXINT_MODE_EOT</field>
    <field name="text">trigger when transmitter idle trigger when transmitter idle</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_enableFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga3defc8b7fef049c75f216ee090d0fac7</field>
    <field name="keywords">UART_enableFIFO UART_enableFIFO</field>
    <field name="text">Enables the transmit and receive FIFOs base is the base address of the UART port This functions enables the transmit and receive FIFOs in the UART None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_DMA_RX</field>
    <field name="url">group__uart__api.html#ga3e101ab29814742381777e3524d5d48a</field>
    <field name="keywords">UART_DMA_RX UART_DMA_RX</field>
    <field name="text">Enable DMA for receive Enable DMA for receive</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_setConfig</field>
    <field name="args">(uint32_t base, uint32_t uartClk, uint32_t baud, uint32_t config)</field>
    <field name="url">group__uart__api.html#ga41c6d99b6e60b52d22729be7d6fc9e1d</field>
    <field name="keywords">UART_setConfig UART_setConfig</field>
    <field name="text">Sets the configuration of a UART base is the base address of the UART port uartClk is the rate of the clock supplied to the UART module It should be provided as UART_CLK_FREQ using the updated clk rate baud is the desired baud rate config is the data format for the port number of data bits number of stop bits and parity This function configures the UART for operation in the specified data format The baud rate is provided in the baud parameter and the data format in the config parameter The config parameter is the logical OR of three values the number of data bits the number of stop bits and the parity UART_CONFIG_WLEN_8 UART_CONFIG_WLEN_7 UART_CONFIG_WLEN_6 and UART_CONFIG_WLEN_5 select from eight to five data bits per byte respectively UART_CONFIG_STOP_ONE and UART_CONFIG_STOP_TWO select one or two stop bits respectively UART_CONFIG_PAR_NONE UART_CONFIG_PAR_EVEN UART_CONFIG_PAR_ODD UART_CONFIG_PAR_ONE and UART_CONFIG_PAR_ZERO select the parity mode no parity bit even parity bit odd parity bit parity bit always one and parity bit always zero respectively None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_getFIFOLevel</field>
    <field name="args">(uint32_t base, uint32_t *txLevel, uint32_t *rxLevel)</field>
    <field name="url">group__uart__api.html#ga470ef079a76e5bfc0c9956b934b09609</field>
    <field name="keywords">UART_getFIFOLevel UART_getFIFOLevel</field>
    <field name="text">Gets the FIFO level at which interrupts are generated base is the base address of the UART port txLevel is a pointer to storage for the transmit FIFO level returned as one of UART_FIFO_TX1_8 UART_FIFO_TX2_8 UART_FIFO_TX4_8 UART_FIFO_TX6_8 or UART_FIFO_TX7_8 rxLevel is a pointer to storage for the receive FIFO level returned as one of UART_FIFO_RX1_8 UART_FIFO_RX2_8 UART_FIFO_RX4_8 UART_FIFO_RX6_8 or UART_FIFO_RX7_8 This function gets the FIFO level at which transmit and receive interrupts are generated None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_PAR_ZERO</field>
    <field name="url">group__uart__api.html#ga47e9212c4de4dc69d2febced118e12ca</field>
    <field name="keywords">UART_CONFIG_PAR_ZERO UART_CONFIG_PAR_ZERO</field>
    <field name="text">Parity bit is zero Parity bit is zero</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_send9BitAddress</field>
    <field name="args">(uint32_t base, uint8_t addr)</field>
    <field name="url">group__uart__api.html#ga4d8cb5a197ba502d2c035a81df72212d</field>
    <field name="keywords">UART_send9BitAddress UART_send9BitAddress</field>
    <field name="text">Sends an address character from the specified port when operating in 9 bit mode base is the base address of the UART port addr is the address to be transmitted This function waits until all data has been sent from the specified port and then sends the given address as an address byte It then waits until the address byte has been transmitted before returning None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_FIFO_RX6_8</field>
    <field name="url">group__uart__api.html#ga4f965a6624b8163d8d9ab9754bb74003</field>
    <field name="keywords">UART_FIFO_RX6_8 UART_FIFO_RX6_8</field>
    <field name="text">Receive interrupt at 3 Full Receive interrupt at 3 Full</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_PAR_ODD</field>
    <field name="url">group__uart__api.html#ga539811fccbd8e4bf55e4041a7fdfb3d8</field>
    <field name="keywords">UART_CONFIG_PAR_ODD UART_CONFIG_PAR_ODD</field>
    <field name="text">Odd parity Odd parity</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_readCharNonBlocking</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga57aa1a38da4bd19f0af3c000d7bfa655</field>
    <field name="keywords">UART_readCharNonBlocking UART_readCharNonBlocking</field>
    <field name="text">Receives a character from the specified port base is the base address of the UART port This function gets a character from the receive FIFO for the specified port Returns the character read from the specified port cast as a int32_t A 1 is returned if there are no characters present in the receive FIFO The UART_isDataAvailable() function should be called before attempting to call this function</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_disableDMA</field>
    <field name="args">(uint32_t base, uint32_t dmaFlags)</field>
    <field name="url">group__uart__api.html#ga586b3b145eb80ba08405f4546739dc24</field>
    <field name="keywords">UART_disableDMA UART_disableDMA</field>
    <field name="text">Disable UART uDMA operation base is the base address of the UART port dmaFlags is a bit mask of the uDMA features to disable This function is used to disable UART uDMA features that were enabled by UART_enableDMA() The specified UART uDMA features are disabled The dmaFlags parameter is the logical OR of any of the following values UART_DMA_RX disable uDMA for receive UART_DMA_TX disable uDMA for transmit UART_DMA_ERR_RXSTOP do not disable uDMA receive on UART error None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_INT_EOT</field>
    <field name="url">group__uart__api.html#ga5e2f021e1d6065d97ab266e2943b1036</field>
    <field name="keywords">UART_INT_EOT UART_INT_EOT</field>
    <field name="text">Receive Interrupt Mask Receive Interrupt Mask</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_FIFO_TX2_8</field>
    <field name="url">group__uart__api.html#ga5e621861446c6a7de8cef41c7f1e936d</field>
    <field name="keywords">UART_FIFO_TX2_8 UART_FIFO_TX2_8</field>
    <field name="text">Transmit interrupt at 1 Full Transmit interrupt at 1 Full</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_INT_TX</field>
    <field name="url">group__uart__api.html#ga5edf87050364febe668e42a5f973dd1a</field>
    <field name="keywords">UART_INT_TX UART_INT_TX</field>
    <field name="text">Transmit Interrupt Mask Transmit Interrupt Mask</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_setTxIntMode</field>
    <field name="args">(uint32_t base, uint32_t mode)</field>
    <field name="url">group__uart__api.html#ga6022af2b75308b540ca0728e7367364d</field>
    <field name="keywords">UART_setTxIntMode UART_setTxIntMode</field>
    <field name="text">Sets the operating mode for the UART transmit interrupt base is the base address of the UART port mode is the operating mode for the transmit interrupt It may be UART_TXINT_MODE_EOT to trigger interrupts when the transmitter is idle or UART_TXINT_MODE_FIFO to trigger based on the current transmit FIFO level This function allows the mode of the UART transmit interrupt to be set By default the transmit interrupt is asserted when the FIFO level falls past a threshold set via a call to UART_setFIFOLevel() Alternatively if this function is called with mode set to UART_TXINT_MODE_EOT the transmit interrupt is asserted once the transmitter is completely idle the transmit FIFO is empty and all bits including any stop bits have cleared the transmitter None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_DMA_TX</field>
    <field name="url">group__uart__api.html#ga603226a03ece38ce150462172182d797</field>
    <field name="keywords">UART_DMA_TX UART_DMA_TX</field>
    <field name="text">Enable DMA for transmit Enable DMA for transmit</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_FIFO_RX4_8</field>
    <field name="url">group__uart__api.html#ga616d7e565df3677a59e03bedf2dd63a2</field>
    <field name="keywords">UART_FIFO_RX4_8 UART_FIFO_RX4_8</field>
    <field name="text">Receive interrupt at 1 Full Receive interrupt at 1 Full</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_INT_RX</field>
    <field name="url">group__uart__api.html#ga62a4b9cc83e120b3eee5a0a7636b558c</field>
    <field name="keywords">UART_INT_RX UART_INT_RX</field>
    <field name="text">Receive Interrupt Mask Receive Interrupt Mask</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_clearRxError</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga67b620941cc8188641114d2a94196b21</field>
    <field name="keywords">UART_clearRxError UART_clearRxError</field>
    <field name="text">Clears all reported receiver errors base is the base address of the UART port This function is used to clear all receiver error conditions reported via UART_getRxError() If using the overrun framing error parity error or break interrupts this function must be called after clearing the interrupt to ensure that later errors of the same type trigger another interrupt None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_isDataAvailable</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga69383e3d6740d13f5df6f87a2172666d</field>
    <field name="keywords">UART_isDataAvailable UART_isDataAvailable</field>
    <field name="text">Determines if there are any characters in the receive FIFO base is the base address of the UART port This function returns a flag indicating whether or not there is data available in the receive FIFO Returns true if there is data in the receive FIFO or false if there is no data in the receive FIFO</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_getRxError</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga695288a6baf385168c0a353e17fd8fb9</field>
    <field name="keywords">UART_getRxError UART_getRxError</field>
    <field name="text">Gets current receiver errors base is the base address of the UART port This function returns the current state of each of the 4 receiver error sources The returned errors are equivalent to the four error bits returned via the previous call to UART_readChar() or UART_readCharNonBlocking() with the exception that the overrun error is set immediately when the overrun occurs rather than when a character is next read Returns a logical OR combination of the receiver error flags UART_RXERROR_FRAMING UART_RXERROR_PARITY UART_RXERROR_BREAK and UART_RXERROR_OVERRUN</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_writeChar</field>
    <field name="args">(uint32_t base, uint8_t data)</field>
    <field name="url">group__uart__api.html#ga69f2389ebf3df6b229361640b1f66ed4</field>
    <field name="keywords">UART_writeChar UART_writeChar</field>
    <field name="text">Waits to send a character from the specified port base is the base address of the UART port data is the character to be transmitted This function sends the character data to the transmit FIFO for the specified port If there is no space available in the transmit FIFO this function waits until there is space available before returning None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_INT_RT</field>
    <field name="url">group__uart__api.html#ga6d6d4d5d9fd23170c5f48fefa14e147c</field>
    <field name="keywords">UART_INT_RT UART_INT_RT</field>
    <field name="text">Receive Timeout Interrupt Mask Receive Timeout Interrupt Mask</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_setFIFOLevel</field>
    <field name="args">(uint32_t base, uint32_t txLevel, uint32_t rxLevel)</field>
    <field name="url">group__uart__api.html#ga6dbc1b20f720d0e296313797667f3e7e</field>
    <field name="keywords">UART_setFIFOLevel UART_setFIFOLevel</field>
    <field name="text">Sets the FIFO level at which interrupts are generated base is the base address of the UART port txLevel is the transmit FIFO interrupt level specified as one of UART_FIFO_TX1_8 UART_FIFO_TX2_8 UART_FIFO_TX4_8 UART_FIFO_TX6_8 or UART_FIFO_TX7_8 rxLevel is the receive FIFO interrupt level specified as one of UART_FIFO_RX1_8 UART_FIFO_RX2_8 UART_FIFO_RX4_8 UART_FIFO_RX6_8 or UART_FIFO_RX7_8 This function configures the FIFO level at which transmit and receive interrupts are generated None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_unregisterInterrupt</field>
    <field name="args">(uint32_t interruptNum)</field>
    <field name="url">group__uart__api.html#ga7097b557ec6a22d7ea0d231d725f8820</field>
    <field name="keywords">UART_unregisterInterrupt UART_unregisterInterrupt</field>
    <field name="text">Unregisters an interrupt handler for a UART interrupt interruptNum specifies the interrupt in question This function does the actual unregistering of the interrupt handler It clears the handler to be called when a UART interrupt occurs This function also masks off the interrupt in the interrupt controller so that the interrupt handler no longer is called Interrupt_unregister() for important information about registering interrupt handlers None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_stop9BitDataMode</field>
    <field name="args">(uint32_t base, uint32_t lcrh)</field>
    <field name="url">group__uart__api.html#ga772f38644e1b2b6d69109e40c85fd11d</field>
    <field name="keywords">UART_stop9BitDataMode UART_stop9BitDataMode</field>
    <field name="text">Exits the 9 bit data transmission mode for the specified port base is the base address of the UART port lcrh is the address/data setting needed to restore the normal transmission mode after the full 9 bit data transmission This function waits until all data has been sent from the specified port and then restores the settings for the normal transmission mode None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_RXERROR_OVERRUN</field>
    <field name="url">group__uart__api.html#ga7a2562de4e5843df65241e89c3ecf703</field>
    <field name="keywords">UART_RXERROR_OVERRUN UART_RXERROR_OVERRUN</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_clearGlobalInterruptFlag</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga7a310ed6a3ecb066fd2f8ac00d4ca6ae</field>
    <field name="keywords">UART_clearGlobalInterruptFlag UART_clearGlobalInterruptFlag</field>
    <field name="text">Clears UART global interrupt flag base is the base address of the UART port This function clears the indicated UART global interrupt flag register None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_RAW_INT</field>
    <field name="url">group__uart__api.html#ga7a51e736fee9e46dba76e84b9c1f4da0</field>
    <field name="keywords">UART_RAW_INT UART_RAW_INT</field>
    <field name="text">raw interrupt raw interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_enableModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga7ac3f9d9d81f7f0ea5e2764eb9807170</field>
    <field name="keywords">UART_enableModule UART_enableModule</field>
    <field name="text">Enables transmitting and receiving base is the base address of the UART port This function enables the UART and its transmit and receive FIFOs None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_disable9Bit</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga7e37fb31889beac4d574bc625eef98d4</field>
    <field name="keywords">UART_disable9Bit UART_disable9Bit</field>
    <field name="text">Disables 9 bit mode on the specified UART base is the base address of the UART port This function disables the 9 bit operational mode of the UART None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_getInterruptStatus</field>
    <field name="args">(uint32_t base, Uart_IntType masked)</field>
    <field name="url">group__uart__api.html#ga7f57ab0057ffbf3629699583bfbdaa52</field>
    <field name="keywords">UART_getInterruptStatus UART_getInterruptStatus</field>
    <field name="text">Gets the current interrupt status base is the base address of the UART port masked of type Uart_IntType is UART_RAW_INT if the raw interrupt status is requested and UART_MASKED_INT if the masked interrupt status is requested This function returns the interrupt status for the specified UART Either the raw interrupt status or the status of interrupts that are allowed to reflect to the processor can be returned Returns the current interrupt status enumerated as a bit field of values described in UART_enableInterrupt()</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_MASKED_INT</field>
    <field name="url">group__uart__api.html#ga7fa11eb84526ed0c3ad9989c1833b1bb</field>
    <field name="keywords">UART_MASKED_INT UART_MASKED_INT</field>
    <field name="text">masked interrupt masked interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_set9BitAddress</field>
    <field name="args">(uint32_t base, uint8_t addr, uint8_t mask)</field>
    <field name="url">group__uart__api.html#ga81d95c3b449f3b42fac0acb488f71505</field>
    <field name="keywords">UART_set9BitAddress UART_set9BitAddress</field>
    <field name="text">Sets the device address(es) for 9 bit mode base is the base address of the UART port addr is the device address mask is the device address mask This function configures the device address or range of device addresses that respond to requests on the 9 bit UART port The received address is masked with the mask and then compared against the given address allowing either a single address if mask is 0 xff or a set of addresses to be matched None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_enable9Bit</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga83869dc92057771e7b2123a33d2257f1</field>
    <field name="keywords">UART_enable9Bit UART_enable9Bit</field>
    <field name="text">Enables 9 bit mode on the specified UART base is the base address of the UART port This function enables the 9 bit operational mode of the UART None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_INT_DMARX</field>
    <field name="url">group__uart__api.html#ga861345696404e36a7eb9a1e040de9c8a</field>
    <field name="keywords">UART_INT_DMARX UART_INT_DMARX</field>
    <field name="text">DMA RX interrupt DMA RX interrupt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_disableModuleNonFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga88496bbd26fee1f745a7fbad8b1b02b1</field>
    <field name="keywords">UART_disableModuleNonFIFO UART_disableModuleNonFIFO</field>
    <field name="text">Disables transmitting and receiving without FIFO base is the base address of the UART port This function disables the UART waits for the end of transmission of the current character None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_WLEN_5</field>
    <field name="url">group__uart__api.html#ga8c5bfbc758a5a22ec714c7cca68242d2</field>
    <field name="keywords">UART_CONFIG_WLEN_5 UART_CONFIG_WLEN_5</field>
    <field name="text">5 bit data 5 bit data</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_FIFO_TX4_8</field>
    <field name="url">group__uart__api.html#ga8d6363e555d9e21d654872b8574d45d2</field>
    <field name="keywords">UART_FIFO_TX4_8 UART_FIFO_TX4_8</field>
    <field name="text">Transmit interrupt at 1 Full Transmit interrupt at 1 Full</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_PAR_ONE</field>
    <field name="url">group__uart__api.html#ga8f41997eb87d51c953d48fcfce366be7</field>
    <field name="keywords">UART_CONFIG_PAR_ONE UART_CONFIG_PAR_ONE</field>
    <field name="text">Parity bit is one Parity bit is one</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_WLEN_6</field>
    <field name="url">group__uart__api.html#ga936fb9f59d6cac65e5137a820e82b5d4</field>
    <field name="keywords">UART_CONFIG_WLEN_6 UART_CONFIG_WLEN_6</field>
    <field name="text">6 bit data 6 bit data</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_STOP_TWO</field>
    <field name="url">group__uart__api.html#ga952e6af1351d0c9bf65faf91c86f8c55</field>
    <field name="keywords">UART_CONFIG_STOP_TWO UART_CONFIG_STOP_TWO</field>
    <field name="text">Two stop bits Two stop bits</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_getTxIntMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#ga990c74676401adfcf06003f110d529fc</field>
    <field name="keywords">UART_getTxIntMode UART_getTxIntMode</field>
    <field name="text">Returns the current operating mode for the UART transmit interrupt base is the base address of the UART port This function returns the current operating mode for the UART transmit interrupt The return value is UART_TXINT_MODE_EOT if the transmit interrupt is currently configured to be asserted once the transmitter is completely idle the transmit FIFO is empty and all bits including any stop bits have cleared the transmitter The return value is UART_TXINT_MODE_FIFO if the interrupt is configured to be asserted based on the level of the transmit FIFO Returns UART_TXINT_MODE_FIFO or UART_TXINT_MODE_EOT</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_enableInterrupt</field>
    <field name="args">(uint32_t base, uint32_t intFlags)</field>
    <field name="url">group__uart__api.html#ga9de5e8befca0cf01695338c282736d44</field>
    <field name="keywords">UART_enableInterrupt UART_enableInterrupt</field>
    <field name="text">Enables individual UART interrupt sources base is the base address of the UART port intFlags is the bit mask of the interrupt sources to be enabled This function enables the indicated UART interrupt sources Only the sources that are enabled can be reflected to the processor interrupt disabled sources have no effect on the processor The intFlags parameter is the logical OR of any of the following UART_INT_DMATX Transmit DMA interrupt UART_INT_DMARX Receive DMA interrupt UART_INT_9BIT 9 bit Address Match interrupt UART_INT_EOT End of Transmission interrupt UART_INT_OE Overrun Error interrupt UART_INT_BE Break Error interrupt UART_INT_PE Parity Error interrupt UART_INT_FE Framing Error interrupt UART_INT_RT Receive Timeout interrupt UART_INT_TX Transmit interrupt UART_INT_RX Receive interrupt None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_FIFO_TX7_8</field>
    <field name="url">group__uart__api.html#gaa14091d971253a08b2c47f5faacaf360</field>
    <field name="keywords">UART_FIFO_TX7_8 UART_FIFO_TX7_8</field>
    <field name="text">Transmit interrupt at 7 Full Transmit interrupt at 7 Full</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_isFIFOEnabled</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#gaa4ddde21446fbf7df36c212995cb73f0</field>
    <field name="keywords">UART_isFIFOEnabled UART_isFIFOEnabled</field>
    <field name="text">Determines if the transmit and receive FIFOs are enabled base is the base address of the UART port This function returns a flag indicating whether or not the transmit and receive FIFOs are enabled Returns true if FIFOs are enabled or false if FIFOs are not enabled</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_getParityMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#gaa6cc594eb42870897e501dc83e0687d0</field>
    <field name="keywords">UART_getParityMode UART_getParityMode</field>
    <field name="text">Gets the type of parity currently being used base is the base address of the UART port This function gets the type of parity used for transmitting data and expected when receiving data Returns the current parity settings specified as one of UART_CONFIG_PAR_NONE UART_CONFIG_PAR_EVEN UART_CONFIG_PAR_ODD UART_CONFIG_PAR_ONE or UART_CONFIG_PAR_ZERO</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_FIFO_TX1_8</field>
    <field name="url">group__uart__api.html#gaa84f336878fba36489b6f7d690f6bc16</field>
    <field name="keywords">UART_FIFO_TX1_8 UART_FIFO_TX1_8</field>
    <field name="text">Transmit interrupt at 1 Full Transmit interrupt at 1 Full</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_INT_BE</field>
    <field name="url">group__uart__api.html#gaa8660bdf26ac08961125a6c950f4b76a</field>
    <field name="keywords">UART_INT_BE UART_INT_BE</field>
    <field name="text">Break Error Interrupt Mask Break Error Interrupt Mask</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_disableModule</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#gaaa817146ca1fd034daf6545605faabad</field>
    <field name="keywords">UART_disableModule UART_disableModule</field>
    <field name="text">Disables transmitting and receiving base is the base address of the UART port This function disables the UART waits for the end of transmission of the current character and flushes the transmit FIFO None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_SIR_LOWPOWER_DISABLE</field>
    <field name="url">group__uart__api.html#gaac900197cfff440faeb47edc632235cd</field>
    <field name="keywords">UART_SIR_LOWPOWER_DISABLE UART_SIR_LOWPOWER_DISABLE</field>
    <field name="text">raw interrupt raw interrupt</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_WLEN_MASK</field>
    <field name="url">group__uart__api.html#gaaefa9a300dceb6adf3d639b16bdd7555</field>
    <field name="keywords">UART_CONFIG_WLEN_MASK UART_CONFIG_WLEN_MASK</field>
    <field name="text">Mask for extracting wordlength Mask for extracting wordlength</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_PAR_EVEN</field>
    <field name="url">group__uart__api.html#gab0b5949051df64b22671181391963e95</field>
    <field name="keywords">UART_CONFIG_PAR_EVEN UART_CONFIG_PAR_EVEN</field>
    <field name="text">Even parity Even parity</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_enableModuleNonFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#gab13fef2218033b7e3ee60ef3b8a260c6</field>
    <field name="keywords">UART_enableModuleNonFIFO UART_enableModuleNonFIFO</field>
    <field name="text">Enables transmitting and receiving without FIFO base is the base address of the UART port This function enables the UART None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_readChar</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#gab280d626f311ad6841cbcd89e176a825</field>
    <field name="keywords">UART_readChar UART_readChar</field>
    <field name="text">Waits for a character from the specified port base is the base address of the UART port This function gets a character from the receive FIFO for the specified port If there are no characters available this function waits until a character is received before returning Returns the character read from the specified port cast as a int32_t</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_INT_FE</field>
    <field name="url">group__uart__api.html#gab3da31fe08d3dbc7e40c8beb01ea1607</field>
    <field name="keywords">UART_INT_FE UART_INT_FE</field>
    <field name="text">Framing Error Interrupt Mask Framing Error Interrupt Mask</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_FIFO_RX7_8</field>
    <field name="url">group__uart__api.html#gab55741e5b10b29d7449f37ee4a32ad68</field>
    <field name="keywords">UART_FIFO_RX7_8 UART_FIFO_RX7_8</field>
    <field name="text">Receive interrupt at 7 Full Receive interrupt at 7 Full</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_TXINT_MODE_FIFO</field>
    <field name="url">group__uart__api.html#gab5ee365017c3faaaf210815bf9b60ca8</field>
    <field name="keywords">UART_TXINT_MODE_FIFO UART_TXINT_MODE_FIFO</field>
    <field name="text">trigger based on tx FIFOlevel trigger based on tx FIFOlevel</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_INT_PE</field>
    <field name="url">group__uart__api.html#gab944f4625a878ef1df89a7a6fd790cab</field>
    <field name="keywords">UART_INT_PE UART_INT_PE</field>
    <field name="text">Parity Error Interrupt Mask Parity Error Interrupt Mask</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_RSR_ALL_M</field>
    <field name="url">group__uart__api.html#gab94f580c9ea9c6e3f9bee2b5ef407a76</field>
    <field name="keywords">UART_RSR_ALL_M UART_RSR_ALL_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_INT_OE</field>
    <field name="url">group__uart__api.html#gab9c41a9362abfd4e9546f1c70f3a05a9</field>
    <field name="keywords">UART_INT_OE UART_INT_OE</field>
    <field name="text">Overrun Error Interrupt Mask Overrun Error Interrupt Mask</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_disableInterrupt</field>
    <field name="args">(uint32_t base, uint32_t intFlags)</field>
    <field name="url">group__uart__api.html#gaba49a4d5efc4f359cd5aa2097772511f</field>
    <field name="keywords">UART_disableInterrupt UART_disableInterrupt</field>
    <field name="text">Disables individual UART interrupt sources base is the base address of the UART port intFlags is the bit mask of the interrupt sources to be disabled This function disables the indicated UART interrupt sources Only the sources that are enabled can be reflected to the processor interrupt disabled sources have no effect on the processor The intFlags parameter has the same definition as the intFlags parameter to UART_enableInterrupt() None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CLK_FREQ</field>
    <field name="url">group__uart__api.html#gacfca4084d0fefc311b562280a534e42d</field>
    <field name="keywords">UART_CLK_FREQ UART_CLK_FREQ</field>
    <field name="text">CPU SYSCLK frequency CPU SYSCLK frequency</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CUSTOM_FIFO_LEVEL_KEY</field>
    <field name="url">group__uart__api.html#gad008109dd22c84bfa0cf886906648d89</field>
    <field name="keywords">UART_CUSTOM_FIFO_LEVEL_KEY UART_CUSTOM_FIFO_LEVEL_KEY</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_STOP_MASK</field>
    <field name="url">group__uart__api.html#gad4cadaf06e574cad80e5a954dcfe7ee7</field>
    <field name="keywords">UART_CONFIG_STOP_MASK UART_CONFIG_STOP_MASK</field>
    <field name="text">Mask for extracting stop bits Mask for extracting stop bits</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_RXERROR_FRAMING</field>
    <field name="url">group__uart__api.html#gad55c474de785d45b840305e81fadcb91</field>
    <field name="keywords">UART_RXERROR_FRAMING UART_RXERROR_FRAMING</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">UART_TxFIFOLevelFine</field>
    <field name="url">group__uart__api.html#gad7e3a576ad9b1811373cf692a643a954</field>
    <field name="keywords">UART_TxFIFOLevelFine UART_TxFIFOLevelFine</field>
    <field name="text">Values that can be passed to UART_setFIFOLevelFine() as the txLevel parameter and returned by UART_getFIFOLevelFine() in the txLevel</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_FIFO_RX1_8</field>
    <field name="url">group__uart__api.html#gad896f5a0717ed18124fb2b50d96574bb</field>
    <field name="keywords">UART_FIFO_RX1_8 UART_FIFO_RX1_8</field>
    <field name="text">Receive interrupt at 1 Full Receive interrupt at 1 Full</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_getFIFOLevelFine</field>
    <field name="args">(uint32_t base, uint32_t *txLevel, uint32_t *rxLevel)</field>
    <field name="url">group__uart__api.html#gadda50e1dd7ee72ee710c7c534a89e4c3</field>
    <field name="keywords">UART_getFIFOLevelFine UART_getFIFOLevelFine</field>
    <field name="text">Gets the FIFO level at which interrupts are generated when using the fine-grained mode of the UART FIFO base is the base address of the UART port txLevel is a pointer to storage for the transmit FIFO level returned as one of UART_FIFO_TX0 UART_FIFO_TX1 UART_FIFO_TX2 or UART_FIFO_TX15 rxLevel is a pointer to storage for the receive FIFO level returned as one of UART_FIFO_RX0 UART_FIFO_RX1 UART_FIFO_RX2 or UART_FIFO_RX15 This function gets the FIFO level at which transmit and receive interrupts are generated If the UART is not being used in fine-grained mode use the UART_getFIFOLevel API for this functionality None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_clearInterruptStatus</field>
    <field name="args">(uint32_t base, uint32_t intFlags)</field>
    <field name="url">group__uart__api.html#gadfd83274f5db1642e26347171f5e7af9</field>
    <field name="keywords">UART_clearInterruptStatus UART_clearInterruptStatus</field>
    <field name="text">Clears UART interrupt sources base is the base address of the UART port intFlags is a bit mask of the interrupt sources to be cleared The specified UART interrupt sources are cleared so that they no longer assert This function must be called in the interrupt handler to keep the interrupt from being triggered again immediately upon exit The intFlags parameter has the same definition as the intFlags parameter to UART_enableInterrupt() None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_configure9BitDataMode</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#gae2d57b055741e4a7be47ecf5003836cd</field>
    <field name="keywords">UART_configure9BitDataMode UART_configure9BitDataMode</field>
    <field name="text">Configures the specified port to operate in 9 bit data mode base is the base address of the UART port This function waits until all data has been sent from the specified port and then configures to send 9 bit data The 9 bit data is sent after the UART_send9BitAddress() is complete The data transmission is left to the user to handle outside this API This can be done using UART_writeChar() or UART_writeCharNonBlocking() Returns the address/data setting needed to restore the normal transmission mode after the full 9 bit data transmission</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_FIFO_TX6_8</field>
    <field name="url">group__uart__api.html#gaebb138573237035b69119a730c57c6b7</field>
    <field name="keywords">UART_FIFO_TX6_8 UART_FIFO_TX6_8</field>
    <field name="text">Transmit interrupt at 3 Full Transmit interrupt at 3 Full</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_DMA_ERR_RXSTOP</field>
    <field name="url">group__uart__api.html#gaed2d39213aef902d0f39ea2e9045d1a0</field>
    <field name="keywords">UART_DMA_ERR_RXSTOP UART_DMA_ERR_RXSTOP</field>
    <field name="text">Stop DMA receive if UART error Stop DMA receive if UART error</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">UART_RxFIFOLevelFine</field>
    <field name="url">group__uart__api.html#gaefb8f4b8d19d4741aee3141f88a00822</field>
    <field name="keywords">UART_RxFIFOLevelFine UART_RxFIFOLevelFine</field>
    <field name="text">Values that can be passed to UART_setFIFOLevelFine() as the rxLevel parameter and returned by UART_getFIFOLevelFine() in the rxLevel</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_disableFIFO</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#gaf158f27d909c484c9e52b6cba789c2d9</field>
    <field name="keywords">UART_disableFIFO UART_disableFIFO</field>
    <field name="text">Disables the transmit and receive FIFOs base is the base address of the UART port This function disables the transmit and receive FIFOs in the UART None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_INT_DMATX</field>
    <field name="url">group__uart__api.html#gaf22615dea4d48eacb0f6ff104266310f</field>
    <field name="keywords">UART_INT_DMATX UART_INT_DMATX</field>
    <field name="text">DMA TX interrupt DMA TX interrupt</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">Uart_SirLPMode</field>
    <field name="url">group__uart__api.html#gaf2929c1dccc1abd94641e9f07e7ab3f7</field>
    <field name="keywords">Uart_SirLPMode Uart_SirLPMode</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_isSpaceAvailable</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#gaf37b6fdce7bfb6ecc131d641430953d6</field>
    <field name="keywords">UART_isSpaceAvailable UART_isSpaceAvailable</field>
    <field name="text">Determines if there is any space in the transmit FIFO base is the base address of the UART port This function returns a flag indicating whether or not there is space available in the transmit FIFO Returns true if there is space available in the transmit FIFO or false if there is no space available in the transmit FIFO</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">UART_CONFIG_STOP_ONE</field>
    <field name="url">group__uart__api.html#gaf7c4abbd28a43e145c39404aeba2043c</field>
    <field name="keywords">UART_CONFIG_STOP_ONE UART_CONFIG_STOP_ONE</field>
    <field name="text">One stop bit One stop bit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_enableSIR</field>
    <field name="args">(uint32_t base, Uart_SirLPMode bLowPower)</field>
    <field name="url">group__uart__api.html#gaf801b326c5aaa56174af3abb103f3070</field>
    <field name="keywords">UART_enableSIR UART_enableSIR</field>
    <field name="text">Enables SIR IrDA mode on the specified UART base is the base address of the UART port bLowPower indicates if SIR Low Power Mode is to be used This parameter is of type UART_SirLPMode This function enables SIR IrDA mode on the UART If the bLowPower flag is set then SIR low power mode will be selected as well This function only has an effect if the UART has not been enabled by a call to UART_enableModule() The call UART_enableSIR() must be made before a call to UART_setConfig() because the UART_setConfig() function calls the UART_enableModule() function Another option is to call UART_disableModule() followed by UART_enableSIR() and then enable the UART by calling UART_enableModule() The IrDA SIR physical layer specifies a minimum 1 0 ms delay between transmission and reception which needs to be provided None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_isBusy</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#gaf843508ab7e1441d4812c74d32ec6cca</field>
    <field name="keywords">UART_isBusy UART_isBusy</field>
    <field name="text">Determines whether the UART transmitter is busy or not base is the base address of the UART port This function allows the caller to determine whether all transmitted bytes have cleared the transmitter hardware If false is returned the transmit FIFO is empty and all bits of the last transmitted character including all stop bits have left the hardware shift register Returns true if the UART is transmitting or false if all transmissions are complete</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_setFIFOLevelFine</field>
    <field name="args">(uint32_t base, UART_TxFIFOLevelFine txLevel, UART_RxFIFOLevelFine rxLevel)</field>
    <field name="url">group__uart__api.html#gafcf60fc0a96c949936ec53d6cb0eb9f0</field>
    <field name="keywords">UART_setFIFOLevelFine UART_setFIFOLevelFine</field>
    <field name="text">Sets the FIFO level at which interrupts are generated using the fine- grained mode of the UART FIFO base is the base address of the UART port txLevel is the transmit FIFO interrupt level specified as one of UART_FIFO_TX0 UART_FIFO_TX1 UART_FIFO_TX2 or UART_FIFO_TX15 rxLevel is the receive FIFO interrupt level specified as one of UART_FIFO_RX0 UART_FIFO_RX1 UART_FIFO_RX2 or UART_FIFO_RX15 This function configures the FIFO level at which transmit and receive interrupts are generated If the UART is not being used in fine-grained mode use the UART_setFIFOLevel API for this functionality None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_enableLoopback</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#gafebef345f3d2cafe9090474639330780</field>
    <field name="keywords">UART_enableLoopback UART_enableLoopback</field>
    <field name="text">Enables internal loopback mode for an UART port base is the base address of the UART module This function configures an UART port in internal loopback mode to help with diagnostics and debug.In this mode the UART Tx path is fed through the UARTRx path This allows data to be transferred between the TX and RX of the same UART port without having to go through I/O s.UART_writeChar() UART_writeCharNonBlocking() can be used along with this function None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">UART_disableLoopback</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__uart__api.html#gafee036d66a4ad82ebbb1eed2eb219304</field>
    <field name="keywords">UART_disableLoopback UART_disableLoopback</field>
    <field name="text">Disables internal loopback mode for an UART port base is the base address of the UART module This function disables internal loopback mode in an UART port In this mode the UARTTx path is not fed through the UARTRx path This prevents data to be transferred between the TX and RX of the same UART port without having to go through I/O s None</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX0</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954a09e5b45147d8448bba3a5eebcbb9a29a</field>
    <field name="keywords">UART_FIFO_TX0 UART_FIFO_TX0</field>
    <field name="text">Transmit interrupt 0 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX11</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954a107fba67b1f91214cae34bb5fb32ad7a</field>
    <field name="keywords">UART_FIFO_TX11 UART_FIFO_TX11</field>
    <field name="text">Transmit interrupt 1 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX13</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954a12738f86846fccd9b5294b83d945a273</field>
    <field name="keywords">UART_FIFO_TX13 UART_FIFO_TX13</field>
    <field name="text">Transmit interrupt 1 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX6</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954a152a38c2bc284ce40eed485bf3e8795d</field>
    <field name="keywords">UART_FIFO_TX6 UART_FIFO_TX6</field>
    <field name="text">Transmit interrupt 6 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX2</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954a15726193fa0b609128339bf8f9a95a8d</field>
    <field name="keywords">UART_FIFO_TX2 UART_FIFO_TX2</field>
    <field name="text">Transmit interrupt 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX8</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954a213e4784c8bb9e748cfba1923e30c6a9</field>
    <field name="keywords">UART_FIFO_TX8 UART_FIFO_TX8</field>
    <field name="text">Transmit interrupt 8 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX1</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954a2c1f9508b9f1a5884909163b0fc017bb</field>
    <field name="keywords">UART_FIFO_TX1 UART_FIFO_TX1</field>
    <field name="text">Transmit interrupt 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TXEMPTY</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954a44d4ad8383588e59a319bcd505998c07</field>
    <field name="keywords">UART_FIFO_TXEMPTY UART_FIFO_TXEMPTY</field>
    <field name="text">Transmit interrupt empty</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX3</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954a6c002b60e35ff142a868e226942f5f4f</field>
    <field name="keywords">UART_FIFO_TX3 UART_FIFO_TX3</field>
    <field name="text">Transmit interrupt 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX14</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954a7b717e008448fcb84325530429ffdb7c</field>
    <field name="keywords">UART_FIFO_TX14 UART_FIFO_TX14</field>
    <field name="text">Transmit interrupt 1 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX4</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954a7da0b14e663c6d3ba001df70def35606</field>
    <field name="keywords">UART_FIFO_TX4 UART_FIFO_TX4</field>
    <field name="text">Transmit interrupt 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX5</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954a91473212546a76f9d352b55b44c3b38d</field>
    <field name="keywords">UART_FIFO_TX5 UART_FIFO_TX5</field>
    <field name="text">Transmit interrupt 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX12</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954aa3796b83c473d712974fd9c7df3827de</field>
    <field name="keywords">UART_FIFO_TX12 UART_FIFO_TX12</field>
    <field name="text">Transmit interrupt 1 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX9</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954ab0965055ba7a1782ff8dbb65a2ed6ab9</field>
    <field name="keywords">UART_FIFO_TX9 UART_FIFO_TX9</field>
    <field name="text">Transmit interrupt 9 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX10</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954ad428a9490e8cc21b0f6800c1225f117d</field>
    <field name="keywords">UART_FIFO_TX10 UART_FIFO_TX10</field>
    <field name="text">Transmit interrupt 1 0 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX15</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954adf6e4c24d32365ccddbd4641e8dcf6ef</field>
    <field name="keywords">UART_FIFO_TX15 UART_FIFO_TX15</field>
    <field name="text">Transmit interrupt 1 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_TX7</field>
    <field name="url">group__uart__api.html#ggad7e3a576ad9b1811373cf692a643a954afea2020f5131a9b9a6a0f17d8b17967f</field>
    <field name="keywords">UART_FIFO_TX7 UART_FIFO_TX7</field>
    <field name="text">Transmit interrupt 7 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX7</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822a01b39e47781521e27245acb1014314a2</field>
    <field name="keywords">UART_FIFO_RX7 UART_FIFO_RX7</field>
    <field name="text">Receive interrupt 7 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX9</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822a0c99010d3432d71aef3dfd48cbc94b67</field>
    <field name="keywords">UART_FIFO_RX9 UART_FIFO_RX9</field>
    <field name="text">Receive interrupt 9 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX6</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822a23b69b52a4b93853e25f341647a36fff</field>
    <field name="keywords">UART_FIFO_RX6 UART_FIFO_RX6</field>
    <field name="text">Receive interrupt 6 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RXFULL</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822a439e1f54ca34c27868402c07d5ebade3</field>
    <field name="keywords">UART_FIFO_RXFULL UART_FIFO_RXFULL</field>
    <field name="text">Receive interrupt full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX4</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822a4441e46fc28f3f43adfb76959338ee59</field>
    <field name="keywords">UART_FIFO_RX4 UART_FIFO_RX4</field>
    <field name="text">Receive interrupt 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX0</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822a565320c068351be1efc3bdca5d745f5d</field>
    <field name="keywords">UART_FIFO_RX0 UART_FIFO_RX0</field>
    <field name="text">Receive interrupt 1 6 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX2</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822a5ae635c3fd7183060f777a4d60f88420</field>
    <field name="keywords">UART_FIFO_RX2 UART_FIFO_RX2</field>
    <field name="text">Receive interrupt 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX3</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822a7b2a4113f731ab93849b7f85319213c6</field>
    <field name="keywords">UART_FIFO_RX3 UART_FIFO_RX3</field>
    <field name="text">Receive interrupt 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX14</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822a87a746d16b2c8810ee28ee9ead19451e</field>
    <field name="keywords">UART_FIFO_RX14 UART_FIFO_RX14</field>
    <field name="text">Receive interrupt 1 4 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX13</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822a8bf7f499ad35b67f3580b2a33a505c66</field>
    <field name="keywords">UART_FIFO_RX13 UART_FIFO_RX13</field>
    <field name="text">Receive interrupt 1 3 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX8</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822a8c62d929a7cf6d7bad4227d3a1456a4c</field>
    <field name="keywords">UART_FIFO_RX8 UART_FIFO_RX8</field>
    <field name="text">Receive interrupt 8 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX15</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822a9a471c88bb8d8397f2a8a8f887989916</field>
    <field name="keywords">UART_FIFO_RX15 UART_FIFO_RX15</field>
    <field name="text">Receive interrupt 1 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX10</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822aa4ec8de0cf2da9dff92f57524aa5bc55</field>
    <field name="keywords">UART_FIFO_RX10 UART_FIFO_RX10</field>
    <field name="text">Receive interrupt 1 0 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX1</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822abfabe733e81bad37c31338a82de88463</field>
    <field name="keywords">UART_FIFO_RX1 UART_FIFO_RX1</field>
    <field name="text">Receive interrupt 1 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX5</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822ada9d5d3576028cefe56f93e612579fdb</field>
    <field name="keywords">UART_FIFO_RX5 UART_FIFO_RX5</field>
    <field name="text">Receive interrupt 5 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX12</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822ae654cdc83e4cf6ce06d5a92793b96118</field>
    <field name="keywords">UART_FIFO_RX12 UART_FIFO_RX12</field>
    <field name="text">Receive interrupt 1 2 full</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">UART_FIFO_RX11</field>
    <field name="url">group__uart__api.html#ggaefb8f4b8d19d4741aee3141f88a00822aeec62340d158a6abfef548e597fcce34</field>
    <field name="keywords">UART_FIFO_RX11 UART_FIFO_RX11</field>
    <field name="text">Receive interrupt 1 1 full</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">xbar_api</field>
    <field name="url">group__xbar__api.html</field>
    <field name="keywords">XBAR</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX17</field>
    <field name="url">group__xbar__api.html#ga02d497129989b49394a5a24bea965997</field>
    <field name="keywords">XBAR_MUX17 XBAR_MUX17</field>
    <field name="text">Mask for X-BAR mux 1 7 Mask for X-BAR mux 1 7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_enableOutputMux</field>
    <field name="args">(uint32_t base, XBAR_OutputNum output, uint32_t muxes)</field>
    <field name="url">group__xbar__api.html#ga0487e229f76dc7d7d7f2115a28ab6ab3</field>
    <field name="keywords">XBAR_enableOutputMux XBAR_enableOutputMux</field>
    <field name="text">Enables the Output X-BAR mux values to be passed to the output signal base specifies the X-BAR Enable register base address output is the X-BAR output being configured muxes is a bit field of the muxes to be enabled This function enables the mux values to be passed to the X-BAR output signal The output parameter is a value XBAR_OUTPUTy where y is the output number between 1 and 8 inclusive The base parameter can take base addresses OUTPUTXBAR_BASE The muxes parameter is a bit field of the muxes being enabled where bit 0 represents mux 0 bit 1 represents mux 1 and so on Defines are provided in the form of XBAR_MUXnn that can be OR d together to enable several muxes on an output at the same time For example passing this function XBAR_MUX04 XBAR_MUX10 would enable muxes 4 and 1 0 None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX09</field>
    <field name="url">group__xbar__api.html#ga0797830136ecfc473e1fadf5d70523c0</field>
    <field name="keywords">XBAR_MUX09 XBAR_MUX09</field>
    <field name="text">Mask for X-BAR mux 9 Mask for X-BAR mux 9</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_GPIO_MAX_CNT</field>
    <field name="url">group__xbar__api.html#ga07d999bb0894b1fe7e6bca3210124182</field>
    <field name="keywords">XBAR_GPIO_MAX_CNT XBAR_GPIO_MAX_CNT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_INPUT_FLG_REG_5</field>
    <field name="url">group__xbar__api.html#ga08a00ec0dbe31ae5a8abd614edec1f1a</field>
    <field name="keywords">XBAR_INPUT_FLG_REG_5 XBAR_INPUT_FLG_REG_5</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_INPUT_FLG_REG_1</field>
    <field name="url">group__xbar__api.html#ga0d895b9c51884a756cd1a6378172f13e</field>
    <field name="keywords">XBAR_INPUT_FLG_REG_1 XBAR_INPUT_FLG_REG_1</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">XBAR_OutputMuxConfig</field>
    <field name="url">group__xbar__api.html#ga0e74405c5ebbd87324000177efcc1789</field>
    <field name="keywords">XBAR_OutputMuxConfig XBAR_OutputMuxConfig</field>
    <field name="text">The following values define the muxConfig parameter for XBAR_setOutputMuxConfig()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_lockPWM</field>
    <field name="args">(void)</field>
    <field name="url">group__xbar__api.html#ga0ef5fbe7f1ecd44cbcbea7830cbe9cdd</field>
    <field name="keywords">XBAR_lockPWM XBAR_lockPWM</field>
    <field name="text">Locks the PWM X-BAR This function locks the PWM X-BAR None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_INPUT_FLG_REG_3</field>
    <field name="url">group__xbar__api.html#ga14f68da8c9a0eec528ce9fe73d194698</field>
    <field name="keywords">XBAR_INPUT_FLG_REG_3 XBAR_INPUT_FLG_REG_3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX16</field>
    <field name="url">group__xbar__api.html#ga161adb8dce8fe2ced09d2a29890ce8f9</field>
    <field name="keywords">XBAR_MUX16 XBAR_MUX16</field>
    <field name="text">Mask for X-BAR mux 1 6 Mask for X-BAR mux 1 6</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX04</field>
    <field name="url">group__xbar__api.html#ga1be9c6cd79bb0a21528bad9338893845</field>
    <field name="keywords">XBAR_MUX04 XBAR_MUX04</field>
    <field name="text">Mask for X-BAR mux 4 Mask for X-BAR mux 4</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_PWM_CFG_REG_BASE</field>
    <field name="url">group__xbar__api.html#ga1c23e30abad3ccb246a13012461b6904</field>
    <field name="keywords">XBAR_PWM_CFG_REG_BASE XBAR_PWM_CFG_REG_BASE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_lockInput</field>
    <field name="args">(uint32_t base, XBAR_InputNum input)</field>
    <field name="url">group__xbar__api.html#ga25e475dedad1f4ee0cf56d912cf414a1</field>
    <field name="keywords">XBAR_lockInput XBAR_lockInput</field>
    <field name="text">Locks an input to the Input X-BAR base specifies the X-BAR base address input is an input to the Input X-BAR This function locks the specific input on the Input X-BAR The base parameter can take base addresses INPUTXBAR_BASE or CLBINPUTXBAR_BASE None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_INPUT_FLG_REG_4</field>
    <field name="url">group__xbar__api.html#ga2be58f0d2a52d4ab87643a00a2d3ecf4</field>
    <field name="keywords">XBAR_INPUT_FLG_REG_4 XBAR_INPUT_FLG_REG_4</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_invertOutputSignal</field>
    <field name="args">(uint32_t base, XBAR_OutputNum output, bool invert)</field>
    <field name="url">group__xbar__api.html#ga2f21329c995c9b79ee8b99bfc7865eb9</field>
    <field name="keywords">XBAR_invertOutputSignal XBAR_invertOutputSignal</field>
    <field name="text">Configures the polarity of an Output X-BAR output base specifies the X-BAR base address output is the X-BAR output being configured The valid inputs are XBAR_OUTPUTy where y is from 1 to 8 invert is a flag that determines whether the output is active-high or active-low The base parameter can take base addresses OUTPUTXBAR_BASE This function inverts the Output X-BAR signal if the invert parameter is true If invert is false the signal will be passed as is The output parameter is a value XBAR_OUTPUTy where y is the output number between 1 and 8 inclusive None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_setOutputLatchMode</field>
    <field name="args">(uint32_t base, XBAR_OutputNum output, bool enable)</field>
    <field name="url">group__xbar__api.html#ga3014d464ed29de6138afe4ca942f84e7</field>
    <field name="keywords">XBAR_setOutputLatchMode XBAR_setOutputLatchMode</field>
    <field name="text">Enables or disables the output latch to drive the selected output base specifies the X-BAR base address output is the X-BAR output being configured The valid inputs are XBAR_OUTPUTy where y is from 1 to 8 enable is a flag that determines whether or not the latch is selected to drive the X-BAR output The base parameter can take base addresses OUTPUTXBAR_BASE This function sets the Output X-BAR output signal latch mode If the enable parameter is true the output specified by output will be driven by the output latch None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_INPUT_FLG_INPUT_M</field>
    <field name="url">group__xbar__api.html#ga3b5bdbfe1ed242da0dc05dace2c0811d</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT_M XBAR_INPUT_FLG_INPUT_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_disablePWMMux</field>
    <field name="args">(XBAR_TripNum trip, uint32_t muxes)</field>
    <field name="url">group__xbar__api.html#ga3bfd63c8a789d01a8da0142c6bc8257b</field>
    <field name="keywords">XBAR_disablePWMMux XBAR_disablePWMMux</field>
    <field name="text">Disables the PWM X-BAR mux values to be passed to an mcPWM module trip is the X-BAR output being configured muxes is a bit field of the muxes to be disabled This function disables the mux values to be passed to the X-BAR trip signal The trip parameter is a value XBAR_TRIPy where y is the number of the trip signal on the PWM The muxes parameter is a bit field of the muxes being disabled where bit 0 represents mux 0 bit 1 represents mux 1 and so on Defines are provided in the form of XBAR_MUXnn that can be logically OR d together to disable several muxes on an output at the same time None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_getInputFlagStatus</field>
    <field name="args">(XBAR_InputFlag inputFlag)</field>
    <field name="url">group__xbar__api.html#ga42314dc0448f4ecbf5fe6a0af67e9bfb</field>
    <field name="keywords">XBAR_getInputFlagStatus XBAR_getInputFlagStatus</field>
    <field name="text">Returns the status of the input latch inputFlag is the X-BAR input latch being checked Values are in the format of XBAR_INPUT_FLG_XXXX where is name of the signal Returns true if the X-BAR input corresponding to the inputFlag has been triggered If not it will return false</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX05</field>
    <field name="url">group__xbar__api.html#ga48fff6e7eb9dd9d7a614176e752ee2e6</field>
    <field name="keywords">XBAR_MUX05 XBAR_MUX05</field>
    <field name="text">Mask for X-BAR mux 5 Mask for X-BAR mux 5</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_NON_GPIO_MAX_CNT</field>
    <field name="url">group__xbar__api.html#ga49a2b8f8040933de96a18341fa89bde6</field>
    <field name="keywords">XBAR_NON_GPIO_MAX_CNT XBAR_NON_GPIO_MAX_CNT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX00</field>
    <field name="url">group__xbar__api.html#ga5263b52367c7a465f8a6269b5c8b8de5</field>
    <field name="keywords">XBAR_MUX00 XBAR_MUX00</field>
    <field name="text">Mask for X-BAR mux 0 Mask for X-BAR mux 0</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX10</field>
    <field name="url">group__xbar__api.html#ga538dfe40ed8c90220c728447034e1a5a</field>
    <field name="keywords">XBAR_MUX10 XBAR_MUX10</field>
    <field name="text">Mask for X-BAR mux 1 0 Mask for X-BAR mux 1 0</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_GPIO_AIO_MIN_CNT</field>
    <field name="url">group__xbar__api.html#ga5859b964a2522a5af4ca4d31d0f79713</field>
    <field name="keywords">XBAR_GPIO_AIO_MIN_CNT XBAR_GPIO_AIO_MIN_CNT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX15</field>
    <field name="url">group__xbar__api.html#ga58f349b8397f597c4312a5677c4167a1</field>
    <field name="keywords">XBAR_MUX15 XBAR_MUX15</field>
    <field name="text">Mask for X-BAR mux 1 5 Mask for X-BAR mux 1 5</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_NON_GPIO_MIN_CNT</field>
    <field name="url">group__xbar__api.html#ga5b025d73f645373652e8e2d39afa06d7</field>
    <field name="keywords">XBAR_NON_GPIO_MIN_CNT XBAR_NON_GPIO_MIN_CNT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_INPUT_FLG_REG_2</field>
    <field name="url">group__xbar__api.html#ga5c0397b07e474e10bcb041298bb9d274</field>
    <field name="keywords">XBAR_INPUT_FLG_REG_2 XBAR_INPUT_FLG_REG_2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX08</field>
    <field name="url">group__xbar__api.html#ga6778e456422b63928754f90b7c249f2f</field>
    <field name="keywords">XBAR_MUX08 XBAR_MUX08</field>
    <field name="text">Mask for X-BAR mux 8 Mask for X-BAR mux 8</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX06</field>
    <field name="url">group__xbar__api.html#ga6bf2998a05dd2d48828b08202c5aaba3</field>
    <field name="keywords">XBAR_MUX06 XBAR_MUX06</field>
    <field name="text">Mask for X-BAR mux 6 Mask for X-BAR mux 6</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX14</field>
    <field name="url">group__xbar__api.html#ga73e097f8a43c779033d87e555bb6251a</field>
    <field name="keywords">XBAR_MUX14 XBAR_MUX14</field>
    <field name="text">Mask for X-BAR mux 1 4 Mask for X-BAR mux 1 4</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">XBAR_PWMMuxConfig</field>
    <field name="url">group__xbar__api.html#ga769cc8f2c565dd948bffac186dafedd7</field>
    <field name="keywords">XBAR_PWMMuxConfig XBAR_PWMMuxConfig</field>
    <field name="text">The following values define the muxConfig parameter for XBAR_setPWMMuxConfig()</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX12</field>
    <field name="url">group__xbar__api.html#ga79116c0a2ff79c217eab640bde29ad40</field>
    <field name="keywords">XBAR_MUX12 XBAR_MUX12</field>
    <field name="text">Mask for X-BAR mux 1 2 Mask for X-BAR mux 1 2</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">XBAR_InputFlag</field>
    <field name="url">group__xbar__api.html#ga7a597343d1c59d9fa35f4459f9920e67</field>
    <field name="keywords">XBAR_InputFlag XBAR_InputFlag</field>
    <field name="text">The following values define the inputFlag parameter for XBAR_getInputFlagStatus() and XBAR_clearInputFlag()</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_PWM_EN_REG_BASE</field>
    <field name="url">group__xbar__api.html#ga7de9fffaf50f03c34eddc0a39602f859</field>
    <field name="keywords">XBAR_PWM_EN_REG_BASE XBAR_PWM_EN_REG_BASE</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_enablePWMMux</field>
    <field name="args">(XBAR_TripNum trip, uint32_t muxes)</field>
    <field name="url">group__xbar__api.html#ga81936aa3530131568843d597f3ccc91c</field>
    <field name="keywords">XBAR_enablePWMMux XBAR_enablePWMMux</field>
    <field name="text">Enables the PWM X-BAR mux values to be passed to an mcPWM module trip is the X-BAR output being configured muxes is a bit field of the muxes to be enabled This function enables the mux values to be passed to the X-BAR trip signal The trip parameter is a value XBAR_TRIPy where y is the number of the trip signal on the PWM The muxes parameter is a bit field of the muxes being enabled where bit 0 represents mux 0 bit 1 represents mux 1 and so on Defines are provided in the form of XBAR_MUXnn that can be logically OR d together to enable several muxes on an output at the same time None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX13</field>
    <field name="url">group__xbar__api.html#ga83d4bba013f57b2369700b4f38dbafad</field>
    <field name="keywords">XBAR_MUX13 XBAR_MUX13</field>
    <field name="text">Mask for X-BAR mux 1 3 Mask for X-BAR mux 1 3</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX07</field>
    <field name="url">group__xbar__api.html#ga9ce7263ec4061ee74e3b1e2d57b277f6</field>
    <field name="keywords">XBAR_MUX07 XBAR_MUX07</field>
    <field name="text">Mask for X-BAR mux 7 Mask for X-BAR mux 7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_lockOutput</field>
    <field name="args">(uint32_t base)</field>
    <field name="url">group__xbar__api.html#ga9d70dfed42193489516818a0896c5dd8</field>
    <field name="keywords">XBAR_lockOutput XBAR_lockOutput</field>
    <field name="text">Locks the Output X-BAR base specifies the X-BAR base address This function locks the Output X-BAR The base parameter can take base addresses OUTPUTXBAR_BASE or CLBOUTPUTXBAR_BASE None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX03</field>
    <field name="url">group__xbar__api.html#gaa2da9bf5342873d222053cca8feb7771</field>
    <field name="keywords">XBAR_MUX03 XBAR_MUX03</field>
    <field name="text">Mask for X-BAR mux 3 Mask for X-BAR mux 3</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX01</field>
    <field name="url">group__xbar__api.html#gaa7960d250521e450951d2ef6e3b62682</field>
    <field name="keywords">XBAR_MUX01 XBAR_MUX01</field>
    <field name="text">Mask for X-BAR mux 1 Mask for X-BAR mux 1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_clearOutputLatch</field>
    <field name="args">(uint32_t base, XBAR_OutputNum output)</field>
    <field name="url">group__xbar__api.html#gaa8b34364003bdf2110783473546fdce3</field>
    <field name="keywords">XBAR_clearOutputLatch XBAR_clearOutputLatch</field>
    <field name="text">Clears the output latch for the specified output base specifies the X-BAR base address output is the X-BAR output being configured The valid inputs are XBAR_OUTPUTy where y is from 1 to 8 The base parameter can take base addresses OUTPUTXBAR_BASE This function clears the Output X-BAR output latch The output to be configured is specified by the output parameter None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_forceOutputLatch</field>
    <field name="args">(uint32_t base, XBAR_OutputNum output)</field>
    <field name="url">group__xbar__api.html#gab2dedeb028ecc75e6915550471a4eaca</field>
    <field name="keywords">XBAR_forceOutputLatch XBAR_forceOutputLatch</field>
    <field name="text">Forces the output latch for the specified output base specifies the X-BAR base address output is the X-BAR output being configured The valid inputs are XBAR_OUTPUTy where y is from 1 to 8 The base parameter can take base addresses OUTPUTXBAR_BASE This function forces the Output X-BAR output latch The output to be configured is specified by the output parameter None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_setPWMMuxConfig</field>
    <field name="args">(XBAR_TripNum trip, XBAR_PWMMuxConfig muxConfig)</field>
    <field name="url">group__xbar__api.html#gaba6941282fb8e744af15e3044f65c707</field>
    <field name="keywords">XBAR_setPWMMuxConfig XBAR_setPWMMuxConfig</field>
    <field name="text">Configures the PWM X-BAR mux that determines the signals passed to an mcPWM module trip is the X-BAR output being configured muxConfig is mux configuration that specifies the signal This function configures an PWM X-BAR mux This determines which signal(s) should be passed through the X-BAR to an mcPWM module The trip parameter is a value XBAR_TRIPy where y is a the number of the trip signal on the PWM The muxConfig parameter is the mux configuration value that specifies which signal will be passed from the mux The values have the format of XBAR_PWM_MUXnn_xx where the xx is the signal and nn is the mux number 0 through 3 1 The possible values are found in xbar.h This function may be called for each mux of an output and their values will be logically OR d before being passed to the trip signal This means that this function may be called for example with the argument XBAR_PWM_MUX00_ECAP1_OUT and then with the argument XBAR_PWM_MUX01_INPUTXBAR1 resulting in the values of MUX00 and MUX01 being logically OR d if both are enabled Calling the function twice for the same mux on the output will result in the configuration in the second call overwriting the first None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_getOutputLatchStatus</field>
    <field name="args">(uint32_t base, XBAR_OutputNum output)</field>
    <field name="url">group__xbar__api.html#gaba88b298884976b83b0aafa839fc10d4</field>
    <field name="keywords">XBAR_getOutputLatchStatus XBAR_getOutputLatchStatus</field>
    <field name="text">Returns the status of the output latch base specifies the X-BAR base address output is the X-BAR output being checked The valid inputs are XBAR_OUTPUTy where y is from 1 to 8 The base parameter can take base addresses OUTPUTXBAR_BASE Returns true if the output corresponding to output was triggered If not it will return false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_invertPWMSignal</field>
    <field name="args">(XBAR_TripNum trip, bool invert)</field>
    <field name="url">group__xbar__api.html#gabdb2bc97d104084b4a259fce8bb22a65</field>
    <field name="keywords">XBAR_invertPWMSignal XBAR_invertPWMSignal</field>
    <field name="text">Configures the polarity of an PWM X-BAR output trip is the X-BAR output being configured invert is a flag that determines whether the output is active-high or active-low This function inverts the PWM X-BAR trip signal if the invert parameter is true If invert is false the signal will be passed as is The trip parameter is a value XBAR_TRIPy where y is the number of the trip signal on the PWM X-BAR that is being configured None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_GPIO_AIO_MAX_CNT</field>
    <field name="url">group__xbar__api.html#gad59c081ff77e724993e33c2d4697669a</field>
    <field name="keywords">XBAR_GPIO_AIO_MAX_CNT XBAR_GPIO_AIO_MAX_CNT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_INPUT_FLG_REG_M</field>
    <field name="url">group__xbar__api.html#gadd389c651b05cfedbc54ab0bec060510</field>
    <field name="keywords">XBAR_INPUT_FLG_REG_M XBAR_INPUT_FLG_REG_M</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX02</field>
    <field name="url">group__xbar__api.html#gaddbf359cb117572aae8c18a82c15c700</field>
    <field name="keywords">XBAR_MUX02 XBAR_MUX02</field>
    <field name="text">Mask for X-BAR mux 2 Mask for X-BAR mux 2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_disableOutputMux</field>
    <field name="args">(uint32_t base, XBAR_OutputNum output, uint32_t muxes)</field>
    <field name="url">group__xbar__api.html#gae36c13d0cc38ab78859bb46c7a561f66</field>
    <field name="keywords">XBAR_disableOutputMux XBAR_disableOutputMux</field>
    <field name="text">Disables the Output X-BAR mux values from being passed to the output base specifies the X-BAR Enable Register base address output is the X-BAR output being configured muxes is a bit field of the muxes to be disabled This function disables the mux values from being passed to the X-BAR output signal The output parameter is a value XBAR_OUTPUTy where y is the output number between 1 and 8 inclusive The base parameter can take base addresses OUTPUTXBAR_BASE The muxes parameter is a bit field of the muxes being disabled where bit 0 represents mux 0 bit 1 represents mux 1 and so on Defines are provided in the form of XBAR_MUXnn that can be OR d together to disable several muxes on an output at the same time For example passing this function XBAR_MUX04 XBAR_MUX10 would disable muxes 4 and 1 0 None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_clearInputFlag</field>
    <field name="args">(XBAR_InputFlag inputFlag)</field>
    <field name="url">group__xbar__api.html#gaecc03a3444244aaebe0341811922ca1a</field>
    <field name="keywords">XBAR_clearInputFlag XBAR_clearInputFlag</field>
    <field name="text">Clears the input latch for the specified input latch inputFlag is the X-BAR input latch being cleared This function clears the Input X-BAR input latch The input latch to be cleared is specified by the inputFlag parameter None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_setOutputMuxConfig</field>
    <field name="args">(uint32_t base, XBAR_OutputNum output, XBAR_OutputMuxConfig muxConfig)</field>
    <field name="url">group__xbar__api.html#gaee661191f3b94e2c02ce0f4996657524</field>
    <field name="keywords">XBAR_setOutputMuxConfig XBAR_setOutputMuxConfig</field>
    <field name="text">Configures the Output X-BAR mux that determines the signals passed to an output base specifies the X-BAR Config Register base address output is the X-BAR output being configured muxConfig is mux configuration that specifies the signal This function configures an Output X-BAR mux This determines which signal(s) should be passed through the X-BAR to a GPIO The output parameter is a value XBAR_OUTPUTy where y is a the output number between 1 and 8 inclusive The base parameter can take base addresses OUTPUTXBAR_BASE or CLBOUTPUTXBAR_BASE The muxConfig parameter for OUTPUT XBAR is the mux configuration value that specifies which signal will be passed from the mux The values have the format of XBAR_OUT_MUXnn_xx where the xx is the signal and nn is the mux number The muxConfig parameter for the CLB OUTPUT XBAR have the similar format as XBAR_OUT_MUXnn_xx where the xx is the signal and nn is the mux number This function may be called for each mux of an output and their values will be logically OR d before being passed to the output signal This means that this function may be called for example with the argument XBAR_OUT_MUX00_ECAP1_OUT and then with the argument XBAR_OUT_MUX01_INPUTXBAR1 resulting in the values of MUX00 and MUX01 being logically OR d if both are enabled Calling the function twice for the same mux on the output will result in the configuration in the second call overwriting the first None</field>
  </doc>
  <doc>
    <field name="type">define</field>
    <field name="name">XBAR_MUX11</field>
    <field name="url">group__xbar__api.html#gaee9835d71d5a827e840f33cd436a7803</field>
    <field name="keywords">XBAR_MUX11 XBAR_MUX11</field>
    <field name="text">Mask for X-BAR mux 1 1 Mask for X-BAR mux 1 1</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">XBAR_InputNum</field>
    <field name="url">group__xbar__api.html#gaf09ac9a52685256a427594223621ce01</field>
    <field name="keywords">XBAR_InputNum XBAR_InputNum</field>
    <field name="text">The following values define the input parameter for XBAR_setInputPin() The following values define the input parameter for XBAR_setInputPin()</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">XBAR_OutputNum</field>
    <field name="url">group__xbar__api.html#gaf558e538c7ed2f5d87446851793773ba</field>
    <field name="keywords">XBAR_OutputNum XBAR_OutputNum</field>
    <field name="text">The following values define the output parameter for XBAR_setOutputMuxConfig() XBAR_enableOutputMux() and XBAR_disableOutputMux()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">XBAR_setInputPin</field>
    <field name="args">(uint32_t base, XBAR_InputNum input, uint16_t pin)</field>
    <field name="url">group__xbar__api.html#gaf58bb7588ce93e311ec81f5ad6c0dea9</field>
    <field name="keywords">XBAR_setInputPin XBAR_setInputPin</field>
    <field name="text">Sets the GPIO non-GPIO pin for an Input X-BAR input base specifies the X-BAR base address input is the X-BAR input being configured pin is the identifying number of the pin The base parameter can take base addresses INPUTXBAR_BASE or CLBINPUTXBAR_BASE This function configures which GPIO is assigned to an Input X-BAR input The input parameter is a value in the form of a define XBAR_INPUTy where y is a the input number for the Input X-BAR The pin is specified by its numerical value For example GPIO34 is specified by passing 3 4 as pin For the other non GPIO values 0 xFFFD 1 will be driven to the destination 0 xFFFE 1 will be driven to the destination 0 xFFFF 0 will be driven to the destination NOTE Pin value greater than the available number of GPIO pins on a device except 0 xFFFF will cause the destination to be driven 1 None</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">XBAR_AuxSigNum</field>
    <field name="url">group__xbar__api.html#gafa4968677e82b5d458507035de4f82de</field>
    <field name="keywords">XBAR_AuxSigNum XBAR_AuxSigNum</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">XBAR_TripNum</field>
    <field name="url">group__xbar__api.html#gafbc2ac86889dd94795835aeef4d928ab</field>
    <field name="keywords">XBAR_TripNum XBAR_TripNum</field>
    <field name="text">The following values define the trip parameter for XBAR_setPWMMuxConfig() XBAR_invertPWMSignal() XBAR_enablePWMMux() and XBAR_disablePWMMux()</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX10_ADCSOCB</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a0f8ca3db9ef8356b2c284f8ec0e58701</field>
    <field name="keywords">XBAR_OUT_MUX10_ADCSOCB XBAR_OUT_MUX10_ADCSOCB</field>
    <field name="text">INPUTXBAR6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX07_INPUTXBAR4</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a144b9f59871370c28880466cd5137197</field>
    <field name="keywords">XBAR_OUT_MUX07_INPUTXBAR4 XBAR_OUT_MUX07_INPUTXBAR4</field>
    <field name="text">INPUTXBAR3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX05_INPUTXBAR3</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a19c0ff87ef5f776cebee037589618d27</field>
    <field name="keywords">XBAR_OUT_MUX05_INPUTXBAR3 XBAR_OUT_MUX05_INPUTXBAR3</field>
    <field name="text">CMPSS3 CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX02_ECAP2_OUT</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a1d35d92b259791464add335fc5f20b09</field>
    <field name="keywords">XBAR_OUT_MUX02_ECAP2_OUT XBAR_OUT_MUX02_ECAP2_OUT</field>
    <field name="text">ADCAEVT2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX08_ADCSOCA</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a212470951de802e7648c615179411763</field>
    <field name="keywords">XBAR_OUT_MUX08_ADCSOCA XBAR_OUT_MUX08_ADCSOCA</field>
    <field name="text">INPUTXBAR5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX04_CMPSS3_CTRIPOUTH</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a2a77352ad566026a23943064b132facf</field>
    <field name="keywords">XBAR_OUT_MUX04_CMPSS3_CTRIPOUTH XBAR_OUT_MUX04_CMPSS3_CTRIPOUTH</field>
    <field name="text">INPUTXBAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX02_CMPSS2_CTRIPOUTH_OR_L</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a3436da15212e5af349fec95b95db4389</field>
    <field name="keywords">XBAR_OUT_MUX02_CMPSS2_CTRIPOUTH_OR_L XBAR_OUT_MUX02_CMPSS2_CTRIPOUTH_OR_L</field>
    <field name="text">CMPSS2 CTRIPOUTH</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX00_ADCAEVT1</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a36ba3b2d2139de38b88c4f08a27ebff7</field>
    <field name="keywords">XBAR_OUT_MUX00_ADCAEVT1 XBAR_OUT_MUX00_ADCAEVT1</field>
    <field name="text">CMPSS1 CTRIPOUTH OR CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX00_ECAP1_OUT</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a383f67a82a392cf5a40e7bf5612e3e8a</field>
    <field name="keywords">XBAR_OUT_MUX00_ECAP1_OUT XBAR_OUT_MUX00_ECAP1_OUT</field>
    <field name="text">ADCAEVT1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX09_EXTSYNCOUT</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a4ba4e0606fb6f76d0a32b896e59747b5</field>
    <field name="keywords">XBAR_OUT_MUX09_EXTSYNCOUT XBAR_OUT_MUX09_EXTSYNCOUT</field>
    <field name="text">ADCSOCA</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX04_ADCAEVT3</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a5902e0af9950b5f01348a7d6855cc7bf</field>
    <field name="keywords">XBAR_OUT_MUX04_ADCAEVT3 XBAR_OUT_MUX04_ADCAEVT3</field>
    <field name="text">CMPSS3 CTRIPOUTH OR CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX04_CMPSS3_CTRIPOUTH_OR_L</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a652bb29738a70fc625fdf394a0779643</field>
    <field name="keywords">XBAR_OUT_MUX04_CMPSS3_CTRIPOUTH_OR_L XBAR_OUT_MUX04_CMPSS3_CTRIPOUTH_OR_L</field>
    <field name="text">CMPSS3 CTRIPOUTH</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX03_INPUTXBAR2</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a799a8733140ad09c1b63e1f1aee9e5f5</field>
    <field name="keywords">XBAR_OUT_MUX03_INPUTXBAR2 XBAR_OUT_MUX03_INPUTXBAR2</field>
    <field name="text">CMPSS2 CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX03_CMPSS2_CTRIPOUTL</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789a8995c7ef3dde9dee9e3edf1ba228b81c</field>
    <field name="keywords">XBAR_OUT_MUX03_CMPSS2_CTRIPOUTL XBAR_OUT_MUX03_CMPSS2_CTRIPOUTL</field>
    <field name="text">ECAP2 OUT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX05_CMPSS3_CTRIPOUTL</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789ab3c4c45c35a191b0e4f5cb8c5e89cf3a</field>
    <field name="keywords">XBAR_OUT_MUX05_CMPSS3_CTRIPOUTL XBAR_OUT_MUX05_CMPSS3_CTRIPOUTL</field>
    <field name="text">ADCAEVT3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX01_INPUTXBAR1</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789ab6e555fe844a226c5b374b308ada1dca</field>
    <field name="keywords">XBAR_OUT_MUX01_INPUTXBAR1 XBAR_OUT_MUX01_INPUTXBAR1</field>
    <field name="text">CMPSS1 CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX02_ADCAEVT2</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789abb55468ad54a05091e3722e8c58c5118</field>
    <field name="keywords">XBAR_OUT_MUX02_ADCAEVT2 XBAR_OUT_MUX02_ADCAEVT2</field>
    <field name="text">CMPSS2 CTRIPOUTH OR CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX08_INPUTXBAR5</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789abb799c977350fdf6f4b07549094d4fd7</field>
    <field name="keywords">XBAR_OUT_MUX08_INPUTXBAR5 XBAR_OUT_MUX08_INPUTXBAR5</field>
    <field name="text">INPUTXBAR4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX00_CMPSS1_CTRIPOUTH</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789ac67b6e51d19d0fe90e0bc54b9ca8b616</field>
    <field name="keywords">XBAR_OUT_MUX00_CMPSS1_CTRIPOUTH XBAR_OUT_MUX00_CMPSS1_CTRIPOUTH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX00_CMPSS1_CTRIPOUTH_OR_L</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789ad5ce0d32696d7e8b51ca56808fa3706a</field>
    <field name="keywords">XBAR_OUT_MUX00_CMPSS1_CTRIPOUTH_OR_L XBAR_OUT_MUX00_CMPSS1_CTRIPOUTH_OR_L</field>
    <field name="text">CMPSS1 CTRIPOUTH</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX01_CMPSS1_CTRIPOUTL</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789ae6eabcabd9b11c9c1768a5a0c4bd5554</field>
    <field name="keywords">XBAR_OUT_MUX01_CMPSS1_CTRIPOUTL XBAR_OUT_MUX01_CMPSS1_CTRIPOUTL</field>
    <field name="text">ECAP1 OUT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX11_ERRORSTS</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789aeaa3d9d0a512ae31d46cd58767712abc</field>
    <field name="keywords">XBAR_OUT_MUX11_ERRORSTS XBAR_OUT_MUX11_ERRORSTS</field>
    <field name="text">ADCSOCB</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX10_INPUTXBAR6</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789af4eae30f3f4ef2d45c414b5dfc5ebe92</field>
    <field name="keywords">XBAR_OUT_MUX10_INPUTXBAR6 XBAR_OUT_MUX10_INPUTXBAR6</field>
    <field name="text">EXTSYNCOUT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUT_MUX02_CMPSS2_CTRIPOUTH</field>
    <field name="url">group__xbar__api.html#gga0e74405c5ebbd87324000177efcc1789af67fce0ade624b167bdc7c0466aefa7f</field>
    <field name="keywords">XBAR_OUT_MUX02_CMPSS2_CTRIPOUTH XBAR_OUT_MUX02_CMPSS2_CTRIPOUTH</field>
    <field name="text">INPUTXBAR1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX14_INPUTXBAR_INPUT11</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a090bbe4bee34b5f5a42ac56f3ec20d11</field>
    <field name="keywords">XBAR_PWM_MUX14_INPUTXBAR_INPUT11 XBAR_PWM_MUX14_INPUTXBAR_INPUT11</field>
    <field name="text">EQEP Error Signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX01_CMPSS1_CTRIPL</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a0a58b3f979e7c6884dbcba870d03742b</field>
    <field name="keywords">XBAR_PWM_MUX01_CMPSS1_CTRIPL XBAR_PWM_MUX01_CMPSS1_CTRIPL</field>
    <field name="text">ECAP1 OUT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX15_ECCDBLERR</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a0e3046967e0feb10a3e84f8ee9304673</field>
    <field name="keywords">XBAR_PWM_MUX15_ECCDBLERR XBAR_PWM_MUX15_ECCDBLERR</field>
    <field name="text">INPUTXBAR INPUT12</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX17_ERRORSTS</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a0ea1dced56464ba3ff21b3e98194e6ae</field>
    <field name="keywords">XBAR_PWM_MUX17_ERRORSTS XBAR_PWM_MUX17_ERRORSTS</field>
    <field name="text">INPUTXBAR INPUT14</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX00_ECAP1_OUT</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a10a82d2fdadf32d0f070bf6962d06bc2</field>
    <field name="keywords">XBAR_PWM_MUX00_ECAP1_OUT XBAR_PWM_MUX00_ECAP1_OUT</field>
    <field name="text">ADCAEVT1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX10_INPUTXBAR_INPUT7</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a15fb8151d8d2ae34b4d9e493c4f6aaa2</field>
    <field name="keywords">XBAR_PWM_MUX10_INPUTXBAR_INPUT7 XBAR_PWM_MUX10_INPUTXBAR_INPUT7</field>
    <field name="text">EMU STOP signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX17_INPUTXBAR_INPUT14</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a23d9799e28de71245e3ed73467b0153c</field>
    <field name="keywords">XBAR_PWM_MUX17_INPUTXBAR_INPUT14 XBAR_PWM_MUX17_INPUTXBAR_INPUT14</field>
    <field name="text">PIE Error Signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX02_ECAP2_OUT</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a361d9cc01679c2d435508c4dd8c871e7</field>
    <field name="keywords">XBAR_PWM_MUX02_ECAP2_OUT XBAR_PWM_MUX02_ECAP2_OUT</field>
    <field name="text">ADCAEVT2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX16_PIEERR</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a3e4b9a69bd3b710f2b1b2d2ae6e6cac0</field>
    <field name="keywords">XBAR_PWM_MUX16_PIEERR XBAR_PWM_MUX16_PIEERR</field>
    <field name="text">INPUTXBAR INPUT13</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX09_EMU_STOP</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a40e185538778538f30d8f82e14997adc</field>
    <field name="keywords">XBAR_PWM_MUX09_EMU_STOP XBAR_PWM_MUX09_EMU_STOP</field>
    <field name="text">INPUTXBAR INPUT6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX13_EQEP1_ERROR</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a4155048f93837233b337204884e97f28</field>
    <field name="keywords">XBAR_PWM_MUX13_EQEP1_ERROR XBAR_PWM_MUX13_EQEP1_ERROR</field>
    <field name="text">INPUTXBAR INPUT10</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX11_EXTSYNCOUT</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a4e7bca25d2e7839fcc3d8285bb4544e5</field>
    <field name="keywords">XBAR_PWM_MUX11_EXTSYNCOUT XBAR_PWM_MUX11_EXTSYNCOUT</field>
    <field name="text">INPUTXBAR INPUT8</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX07_INPUTXBAR_INPUT4</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a502276098908ef728a67d851ed29d5af</field>
    <field name="keywords">XBAR_PWM_MUX07_INPUTXBAR_INPUT4 XBAR_PWM_MUX07_INPUTXBAR_INPUT4</field>
    <field name="text">INPUTXBAR INPUT3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX13_INPUTXBAR_INPUT10</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a54dae3238f14d56d55500d30ab10d1f8</field>
    <field name="keywords">XBAR_PWM_MUX13_INPUTXBAR_INPUT10 XBAR_PWM_MUX13_INPUTXBAR_INPUT10</field>
    <field name="text">ADCSOCB</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX00_ADCAEVT1</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a579374194b2211ba20deeda6b317d500</field>
    <field name="keywords">XBAR_PWM_MUX00_ADCAEVT1 XBAR_PWM_MUX00_ADCAEVT1</field>
    <field name="text">CMPSS1 CTRIPH OR L</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX05_CMPSS3_CTRIPL</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a59a99704e4cf561d22a9ae1ea7125a06</field>
    <field name="keywords">XBAR_PWM_MUX05_CMPSS3_CTRIPL XBAR_PWM_MUX05_CMPSS3_CTRIPL</field>
    <field name="text">ADCAEVT3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX09_INPUTXBAR_INPUT6</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a614795f4e39573c0f6fc79101348f32f</field>
    <field name="keywords">XBAR_PWM_MUX09_INPUTXBAR_INPUT6 XBAR_PWM_MUX09_INPUTXBAR_INPUT6</field>
    <field name="text">INPUTXBAR INPUT5</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX04_CMPSS3_CTRIPH_OR_L</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a67701df649b5e940b2453d4017de8e61</field>
    <field name="keywords">XBAR_PWM_MUX04_CMPSS3_CTRIPH_OR_L XBAR_PWM_MUX04_CMPSS3_CTRIPH_OR_L</field>
    <field name="text">CMPSS3 CTRIPH</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX12_INPUTXBAR_INPUT9</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a6c239e34bd99b6af5002df109af255a0</field>
    <field name="keywords">XBAR_PWM_MUX12_INPUTXBAR_INPUT9 XBAR_PWM_MUX12_INPUTXBAR_INPUT9</field>
    <field name="text">EXTSYNCOUT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX01_INPUTXBAR_INPUT1</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a72d465c474cd696ecf53780cdd57e067</field>
    <field name="keywords">XBAR_PWM_MUX01_INPUTXBAR_INPUT1 XBAR_PWM_MUX01_INPUTXBAR_INPUT1</field>
    <field name="text">CMPSS1 CTRIPL</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX03_CMPSS2_CTRIPL</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a7ba4e37f74494038874c9f5d65dd9d20</field>
    <field name="keywords">XBAR_PWM_MUX03_CMPSS2_CTRIPL XBAR_PWM_MUX03_CMPSS2_CTRIPL</field>
    <field name="text">ECAP2 OUT</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX08_INPUTXBAR_INPUT5</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a7e0795790224b30d584151a0d3bb7c29</field>
    <field name="keywords">XBAR_PWM_MUX08_INPUTXBAR_INPUT5 XBAR_PWM_MUX08_INPUTXBAR_INPUT5</field>
    <field name="text">INPUTXBAR INPUT4</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX10_ADCSOCA</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a7ecb88cd746e67537c5bd0df08ffaca1</field>
    <field name="keywords">XBAR_PWM_MUX10_ADCSOCA XBAR_PWM_MUX10_ADCSOCA</field>
    <field name="text">INPUTXBAR INPUT7</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX02_CMPSS2_CTRIPH_OR_L</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a8353ff63cd414c2a4797c1cc88d15a41</field>
    <field name="keywords">XBAR_PWM_MUX02_CMPSS2_CTRIPH_OR_L XBAR_PWM_MUX02_CMPSS2_CTRIPH_OR_L</field>
    <field name="text">CMPSS2 CTRIPH</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX02_CMPSS2_CTRIPH</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a8a5837c1bda6ebd422996fa6553db007</field>
    <field name="keywords">XBAR_PWM_MUX02_CMPSS2_CTRIPH XBAR_PWM_MUX02_CMPSS2_CTRIPH</field>
    <field name="text">INPUTXBAR INPUT1</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX05_INPUTXBAR_INPUT3</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a8eaf3b02421065fe5962ece3570e4cfa</field>
    <field name="keywords">XBAR_PWM_MUX05_INPUTXBAR_INPUT3 XBAR_PWM_MUX05_INPUTXBAR_INPUT3</field>
    <field name="text">CMPSS3 CTRIPL</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX04_ADCAEVT3</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a915402e44b19e2b3a01aa9e2320afb9c</field>
    <field name="keywords">XBAR_PWM_MUX04_ADCAEVT3 XBAR_PWM_MUX04_ADCAEVT3</field>
    <field name="text">CMPSS3 CTRIPH OR L</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX02_ADCAEVT2</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7a993186afd5a356282e8172bd5e6e8246</field>
    <field name="keywords">XBAR_PWM_MUX02_ADCAEVT2 XBAR_PWM_MUX02_ADCAEVT2</field>
    <field name="text">CMPSS2 CTRIPH OR L</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX00_CMPSS1_CTRIPH</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7ab1fc98f2797e1996579dd43c88e11aa2</field>
    <field name="keywords">XBAR_PWM_MUX00_CMPSS1_CTRIPH XBAR_PWM_MUX00_CMPSS1_CTRIPH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX04_CMPSS3_CTRIPH</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7ab821eb8b2b80bda63ed8cbf1fa2e7ca4</field>
    <field name="keywords">XBAR_PWM_MUX04_CMPSS3_CTRIPH XBAR_PWM_MUX04_CMPSS3_CTRIPH</field>
    <field name="text">INPUTXBAR INPUT2</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX12_ADCSOCB</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7abd0eff0ef5dcaa86b35d7621635cebf4</field>
    <field name="keywords">XBAR_PWM_MUX12_ADCSOCB XBAR_PWM_MUX12_ADCSOCB</field>
    <field name="text">INPUTXBAR INPUT9</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX11_INPUTXBAR_INPUT8</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7abff4fcea1d416444ea6d21f933340992</field>
    <field name="keywords">XBAR_PWM_MUX11_INPUTXBAR_INPUT8 XBAR_PWM_MUX11_INPUTXBAR_INPUT8</field>
    <field name="text">ADCSOCA</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX03_INPUTXBAR_INPUT2</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7adcebd99db157f01616ca582acf4db785</field>
    <field name="keywords">XBAR_PWM_MUX03_INPUTXBAR_INPUT2 XBAR_PWM_MUX03_INPUTXBAR_INPUT2</field>
    <field name="text">CMPSS2 CTRIPL</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX15_INPUTXBAR_INPUT12</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7ae065c122a7c0d6f6356f3f9103172705</field>
    <field name="keywords">XBAR_PWM_MUX15_INPUTXBAR_INPUT12 XBAR_PWM_MUX15_INPUTXBAR_INPUT12</field>
    <field name="text">Missing Clock Detect Signal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX14_CLOCKFAIL</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7aec2c3fe121cb87bf015ad3e28cda0b91</field>
    <field name="keywords">XBAR_PWM_MUX14_CLOCKFAIL XBAR_PWM_MUX14_CLOCKFAIL</field>
    <field name="text">INPUTXBAR INPUT11</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX16_INPUTXBAR_INPUT13</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7af0f8e0395b6a1b9830656cf517a6b9fa</field>
    <field name="keywords">XBAR_PWM_MUX16_INPUTXBAR_INPUT13 XBAR_PWM_MUX16_INPUTXBAR_INPUT13</field>
    <field name="text">ECCDBLERR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_PWM_MUX00_CMPSS1_CTRIPH_OR_L</field>
    <field name="url">group__xbar__api.html#gga769cc8f2c565dd948bffac186dafedd7affef7870432471943643ecdd65ad3664</field>
    <field name="keywords">XBAR_PWM_MUX00_CMPSS1_CTRIPH_OR_L XBAR_PWM_MUX00_CMPSS1_CTRIPH_OR_L</field>
    <field name="text">CMPSS1 CTRIPH</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT10</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a0e5d364d7d0c7029cd9471f1a0b12e2f</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT10 XBAR_INPUT_FLG_INPUT10</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS3_CTRIPOUTH</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a1171afbc8b8e3501b58175044a354984</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS3_CTRIPOUTH XBAR_INPUT_FLG_CMPSS3_CTRIPOUTH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_EMUSTOP</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a14367790cab25a78e09af4d40d9bfa23</field>
    <field name="keywords">XBAR_INPUT_FLG_EMUSTOP XBAR_INPUT_FLG_EMUSTOP</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_ECAP2_OUT</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a14f34459233236726b27576168dea2a4</field>
    <field name="keywords">XBAR_INPUT_FLG_ECAP2_OUT XBAR_INPUT_FLG_ECAP2_OUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT12</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a1c0e5e5c8092ea5f22a9c4a541468b70</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT12 XBAR_INPUT_FLG_INPUT12</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CLOCKFAIL</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a1f6a150996869d69f232d6fbfac6d805</field>
    <field name="keywords">XBAR_INPUT_FLG_CLOCKFAIL XBAR_INPUT_FLG_CLOCKFAIL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT8</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a2e2e2455a71da036299b46eb15038be6</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT8 XBAR_INPUT_FLG_INPUT8</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_ECAP1_OUT</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a321b901fbed068ab790cc6df886ef660</field>
    <field name="keywords">XBAR_INPUT_FLG_ECAP1_OUT XBAR_INPUT_FLG_ECAP1_OUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT4</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a356531850ad71b48665404e50dd732e0</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT4 XBAR_INPUT_FLG_INPUT4</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS1_CTRIPOUTL</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a4049378f1c6d3a8fd6d5ae04ba702f8f</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS1_CTRIPOUTL XBAR_INPUT_FLG_CMPSS1_CTRIPOUTL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS4_CTRIPH</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a4b6ec6a99fbaa7fd3935a9bb0fcc93f8</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS4_CTRIPH XBAR_INPUT_FLG_CMPSS4_CTRIPH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_ECCDBLERR</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a4d271cd3edae79a6109cb5d2cd9b987a</field>
    <field name="keywords">XBAR_INPUT_FLG_ECCDBLERR XBAR_INPUT_FLG_ECCDBLERR</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT2</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a4d609323f76099233a987b25d850d82b</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT2 XBAR_INPUT_FLG_INPUT2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS1_CTRIPH</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a500629a69e5adabeabf2fc04cdc6d749</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS1_CTRIPH XBAR_INPUT_FLG_CMPSS1_CTRIPH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_ADCCEVT1</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a50ca0318d131c1460cdf08cd8f1c78ff</field>
    <field name="keywords">XBAR_INPUT_FLG_ADCCEVT1 XBAR_INPUT_FLG_ADCCEVT1</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS3_CTRIPOUTL</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a52cdaa7393c23f621c282ce5ad54c17a</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS3_CTRIPOUTL XBAR_INPUT_FLG_CMPSS3_CTRIPOUTL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS1_CTRIPOUTH</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a65b7e80593717049f0dcb1f8c551d520</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS1_CTRIPOUTH XBAR_INPUT_FLG_CMPSS1_CTRIPOUTH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS4_CTRIPOUTL</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a679201f88b7d1595b1e9e93999de9686</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS4_CTRIPOUTL XBAR_INPUT_FLG_CMPSS4_CTRIPOUTL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT13</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a6939bfe8e73d54c2309e369b4db6da11</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT13 XBAR_INPUT_FLG_INPUT13</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_ADCSOCA</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a6c3cf047768d53d7642913259eb2a837</field>
    <field name="keywords">XBAR_INPUT_FLG_ADCSOCA XBAR_INPUT_FLG_ADCSOCA</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT1</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a72f730db40a435b095a040c94b725482</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT1 XBAR_INPUT_FLG_INPUT1</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS2_CTRIPL</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a7b54287bbc7b1cb60381841e67c86a64</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS2_CTRIPL XBAR_INPUT_FLG_CMPSS2_CTRIPL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_EQEP1ERR</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a7bb1e12b6c3f1d4290f0535c956df1f4</field>
    <field name="keywords">XBAR_INPUT_FLG_EQEP1ERR XBAR_INPUT_FLG_EQEP1ERR</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS2_CTRIPH</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a8356495e0b74a8308444053550f71fc5</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS2_CTRIPH XBAR_INPUT_FLG_CMPSS2_CTRIPH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_EXTSYNCOUT</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a89f90a4bf20a6348427023eeb17941c7</field>
    <field name="keywords">XBAR_INPUT_FLG_EXTSYNCOUT XBAR_INPUT_FLG_EXTSYNCOUT</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT3</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a8db92f9eb48bd2f9d33c6d36141252ba</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT3 XBAR_INPUT_FLG_INPUT3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT9</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67a9a8972b302e63bd1f9d093ad9868fc6a</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT9 XBAR_INPUT_FLG_INPUT9</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_ADCAEVT1</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67aa07fded9ae559500ae156c121d23a793</field>
    <field name="keywords">XBAR_INPUT_FLG_ADCAEVT1 XBAR_INPUT_FLG_ADCAEVT1</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS4_CTRIPL</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67aa2bb8bdfb6f3bdd1355374bc5440a9cc</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS4_CTRIPL XBAR_INPUT_FLG_CMPSS4_CTRIPL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_ERRORSTS_ERROR</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67aa8745a3551efc6dce146def9d749a11f</field>
    <field name="keywords">XBAR_INPUT_FLG_ERRORSTS_ERROR XBAR_INPUT_FLG_ERRORSTS_ERROR</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS2_CTRIPOUTH</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67ab93d6a691e6578815717bae4a1f1eb9b</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS2_CTRIPOUTH XBAR_INPUT_FLG_CMPSS2_CTRIPOUTH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_ADCCEVT3</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67aba9fb2de50882303b431672f03fa2201</field>
    <field name="keywords">XBAR_INPUT_FLG_ADCCEVT3 XBAR_INPUT_FLG_ADCCEVT3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_ADCSOCB</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67ac12062d22b5f7d616ad9a96508fa7c22</field>
    <field name="keywords">XBAR_INPUT_FLG_ADCSOCB XBAR_INPUT_FLG_ADCSOCB</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_PIEERR</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67ac1de078107ec0a1a33770b173700f6a3</field>
    <field name="keywords">XBAR_INPUT_FLG_PIEERR XBAR_INPUT_FLG_PIEERR</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT14</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67ad7f14a1c5852546f138de75e441aa134</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT14 XBAR_INPUT_FLG_INPUT14</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT6</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67adf8fa2c8f8fcfec547dbd54b11d812e9</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT6 XBAR_INPUT_FLG_INPUT6</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS3_CTRIPL</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67ae36d29dec48cd1be6e090ef7f611f594</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS3_CTRIPL XBAR_INPUT_FLG_CMPSS3_CTRIPL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT5</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67aededdced7dd9ee2dcdd1095adcb40491</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT5 XBAR_INPUT_FLG_INPUT5</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT11</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67aee12d41abbf3f4f136501b142eb848d1</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT11 XBAR_INPUT_FLG_INPUT11</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS1_CTRIPL</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67aee333c330591838a30651ab300e67367</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS1_CTRIPL XBAR_INPUT_FLG_CMPSS1_CTRIPL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS3_CTRIPH</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67aeee3b37a98a0afb29fb289327f78f8aa</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS3_CTRIPH XBAR_INPUT_FLG_CMPSS3_CTRIPH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_ADCCEVT2</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67af1042426d3b196e99f4ebbcd9da18c5f</field>
    <field name="keywords">XBAR_INPUT_FLG_ADCCEVT2 XBAR_INPUT_FLG_ADCCEVT2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_ADCAEVT2</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67afef000d3748bb0c4f27bbf69b0f9c36f</field>
    <field name="keywords">XBAR_INPUT_FLG_ADCAEVT2 XBAR_INPUT_FLG_ADCAEVT2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_ADCAEVT3</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67aff1051d5e048c801c0dc2637ac327ce5</field>
    <field name="keywords">XBAR_INPUT_FLG_ADCAEVT3 XBAR_INPUT_FLG_ADCAEVT3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_INPUT7</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67aff76d4fd06329ad26829bb8072dbbee7</field>
    <field name="keywords">XBAR_INPUT_FLG_INPUT7 XBAR_INPUT_FLG_INPUT7</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS2_CTRIPOUTL</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67affab83ede61f883d8875d81bb608a281</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS2_CTRIPOUTL XBAR_INPUT_FLG_CMPSS2_CTRIPOUTL</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT_FLG_CMPSS4_CTRIPOUTH</field>
    <field name="url">group__xbar__api.html#gga7a597343d1c59d9fa35f4459f9920e67afff90ad35d3690cfd9f8a50dde3e7dba</field>
    <field name="keywords">XBAR_INPUT_FLG_CMPSS4_CTRIPOUTH XBAR_INPUT_FLG_CMPSS4_CTRIPOUTH</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT3</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01a13d4fa756a1a18619e1f2fd6a625a1f3</field>
    <field name="keywords">XBAR_INPUT3 XBAR_INPUT3</field>
    <field name="text">PWM TZ3 PWM TRIP3 X-BARs eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT8</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01a181a5e004414ab8621a94f2ebe26374b</field>
    <field name="keywords">XBAR_INPUT8 XBAR_INPUT8</field>
    <field name="text">X-BARs eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT12</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01a18c4545df4fd9e587fda6eb7bfe50377</field>
    <field name="keywords">XBAR_INPUT12 XBAR_INPUT12</field>
    <field name="text">X-BARs eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT15</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01a24b3ac0a57793232c692c11cff4f7302</field>
    <field name="keywords">XBAR_INPUT15 XBAR_INPUT15</field>
    <field name="text">eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT14</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01a4db94a60993ee150a589668c1976b97d</field>
    <field name="keywords">XBAR_INPUT14 XBAR_INPUT14</field>
    <field name="text">XINT5 X-BARs eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT13</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01a547b504100ae995047aee583410e4e6c</field>
    <field name="keywords">XBAR_INPUT13 XBAR_INPUT13</field>
    <field name="text">XINT4 X-BARs eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT9</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01a5703e1376c912f641bb50dc285aab02e</field>
    <field name="keywords">XBAR_INPUT9 XBAR_INPUT9</field>
    <field name="text">X-BARs eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT10</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01a6580e3f6e40e97329db59bb71dd1e3be</field>
    <field name="keywords">XBAR_INPUT10 XBAR_INPUT10</field>
    <field name="text">X-BARs eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT5</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01a674589a08b175c5cb5711c28d7aa0481</field>
    <field name="keywords">XBAR_INPUT5 XBAR_INPUT5</field>
    <field name="text">EXTSYNCIN1 X-BARs XINT2 eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT11</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01a7c9d79536beac811f4b04d6edc37971d</field>
    <field name="keywords">XBAR_INPUT11 XBAR_INPUT11</field>
    <field name="text">X-BARs eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT6</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01a96c60cf9749cbf16b84269030e1dbc50</field>
    <field name="keywords">XBAR_INPUT6 XBAR_INPUT6</field>
    <field name="text">EXTSYNCIN2 PWM TRIP6 X-BARs XINT3 eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT2</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01aa34576546c65c9d6213e2df94de42562</field>
    <field name="keywords">XBAR_INPUT2 XBAR_INPUT2</field>
    <field name="text">PWM TZ2 PWM TRIP2 X-BARs eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT16</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01aa658b93638d6d6d9ee8774ab39c9994f</field>
    <field name="keywords">XBAR_INPUT16 XBAR_INPUT16</field>
    <field name="text">eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT1</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01ab0c14a91da100f2be75690d4c9b5ad67</field>
    <field name="keywords">XBAR_INPUT1 XBAR_INPUT1</field>
    <field name="text">PWM TZ1 PWM TRIP1 X-BARs eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT7</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01ad755ea3e7546129b695f74d96b914f00</field>
    <field name="keywords">XBAR_INPUT7 XBAR_INPUT7</field>
    <field name="text">X-BARs eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_INPUT4</field>
    <field name="url">group__xbar__api.html#ggaf09ac9a52685256a427594223621ce01ae5c59f77343660a9f5e2f737fd178931</field>
    <field name="keywords">XBAR_INPUT4 XBAR_INPUT4</field>
    <field name="text">ADC wrappers X-BARs XINT1 eCAPs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUTPUT7</field>
    <field name="url">group__xbar__api.html#ggaf558e538c7ed2f5d87446851793773baa1ed56ff1fcc84a60270186a8ef98d1f1</field>
    <field name="keywords">XBAR_OUTPUT7 XBAR_OUTPUT7</field>
    <field name="text">OUTPUT7 of the Output X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUTPUT5</field>
    <field name="url">group__xbar__api.html#ggaf558e538c7ed2f5d87446851793773baa3132c98d27cfdcf7680ce5bb34aaec4e</field>
    <field name="keywords">XBAR_OUTPUT5 XBAR_OUTPUT5</field>
    <field name="text">OUTPUT5 of the Output X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUTPUT3</field>
    <field name="url">group__xbar__api.html#ggaf558e538c7ed2f5d87446851793773baa6611f3c16aecc5dc595b038105b3aee3</field>
    <field name="keywords">XBAR_OUTPUT3 XBAR_OUTPUT3</field>
    <field name="text">OUTPUT3 of the Output X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUTPUT4</field>
    <field name="url">group__xbar__api.html#ggaf558e538c7ed2f5d87446851793773baa6c22072082fb3527f46bd733288db1be</field>
    <field name="keywords">XBAR_OUTPUT4 XBAR_OUTPUT4</field>
    <field name="text">OUTPUT4 of the Output X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUTPUT2</field>
    <field name="url">group__xbar__api.html#ggaf558e538c7ed2f5d87446851793773baa7f9c426ff3021a2fc46170b83b23d8ea</field>
    <field name="keywords">XBAR_OUTPUT2 XBAR_OUTPUT2</field>
    <field name="text">OUTPUT2 of the Output X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUTPUT6</field>
    <field name="url">group__xbar__api.html#ggaf558e538c7ed2f5d87446851793773baa9bc7e4d25f3af02df2987d63daadc9c0</field>
    <field name="keywords">XBAR_OUTPUT6 XBAR_OUTPUT6</field>
    <field name="text">OUTPUT6 of the Output X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUTPUT1</field>
    <field name="url">group__xbar__api.html#ggaf558e538c7ed2f5d87446851793773baab6b365ab272ace22148b891f0dd6b2e0</field>
    <field name="keywords">XBAR_OUTPUT1 XBAR_OUTPUT1</field>
    <field name="text">OUTPUT1 of the Output X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_OUTPUT8</field>
    <field name="url">group__xbar__api.html#ggaf558e538c7ed2f5d87446851793773baafe62a906034e4f9c6886e5909fe88aed</field>
    <field name="keywords">XBAR_OUTPUT8 XBAR_OUTPUT8</field>
    <field name="text">OUTPUT8 of the Output X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_AUXSIG0</field>
    <field name="url">group__xbar__api.html#ggafa4968677e82b5d458507035de4f82dea063589bbbdf3f3c4f40bd1627bde8ea5</field>
    <field name="keywords">XBAR_AUXSIG0 XBAR_AUXSIG0</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_AUXSIG1</field>
    <field name="url">group__xbar__api.html#ggafa4968677e82b5d458507035de4f82dea5041b8463b6191e61eae9c5464db96e0</field>
    <field name="keywords">XBAR_AUXSIG1 XBAR_AUXSIG1</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_AUXSIG2</field>
    <field name="url">group__xbar__api.html#ggafa4968677e82b5d458507035de4f82dea527498c55bc8db5dfe9348860f7d5d07</field>
    <field name="keywords">XBAR_AUXSIG2 XBAR_AUXSIG2</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_AUXSIG4</field>
    <field name="url">group__xbar__api.html#ggafa4968677e82b5d458507035de4f82dea6238f24a0d5ad1d7b5b85120d892e1b8</field>
    <field name="keywords">XBAR_AUXSIG4 XBAR_AUXSIG4</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_AUXSIG6</field>
    <field name="url">group__xbar__api.html#ggafa4968677e82b5d458507035de4f82dead58c565d6d787e67eca490ce2d23ce2b</field>
    <field name="keywords">XBAR_AUXSIG6 XBAR_AUXSIG6</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_AUXSIG7</field>
    <field name="url">group__xbar__api.html#ggafa4968677e82b5d458507035de4f82dead9a2fc3a4ada38a3e2cece0ca7b19cd7</field>
    <field name="keywords">XBAR_AUXSIG7 XBAR_AUXSIG7</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_AUXSIG3</field>
    <field name="url">group__xbar__api.html#ggafa4968677e82b5d458507035de4f82deade74d550fcbbd2e80ebcae399ce2f6c1</field>
    <field name="keywords">XBAR_AUXSIG3 XBAR_AUXSIG3</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_AUXSIG5</field>
    <field name="url">group__xbar__api.html#ggafa4968677e82b5d458507035de4f82deaedd7552c67f43601f34478f32f3cbef6</field>
    <field name="keywords">XBAR_AUXSIG5 XBAR_AUXSIG5</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_TRIP6</field>
    <field name="url">group__xbar__api.html#ggafbc2ac86889dd94795835aeef4d928aba079d4a5edff9543204eea5e10a885fe1</field>
    <field name="keywords">XBAR_TRIP6 XBAR_TRIP6</field>
    <field name="text">TRIP6 of the PWM X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_TRIP5</field>
    <field name="url">group__xbar__api.html#ggafbc2ac86889dd94795835aeef4d928aba1397edc3e85b48af28d729cbef309466</field>
    <field name="keywords">XBAR_TRIP5 XBAR_TRIP5</field>
    <field name="text">TRIP5 of the PWM X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_TRIP1</field>
    <field name="url">group__xbar__api.html#ggafbc2ac86889dd94795835aeef4d928aba40f54d1f3f72ac714cd29a4f7ffa6531</field>
    <field name="keywords">XBAR_TRIP1 XBAR_TRIP1</field>
    <field name="text">TRIP1 of the PWM X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_TRIP3</field>
    <field name="url">group__xbar__api.html#ggafbc2ac86889dd94795835aeef4d928aba83d087efcddcc590b5b8ff3be036553b</field>
    <field name="keywords">XBAR_TRIP3 XBAR_TRIP3</field>
    <field name="text">TRIP3 of the PWM X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_TRIP7</field>
    <field name="url">group__xbar__api.html#ggafbc2ac86889dd94795835aeef4d928aba984e61bfda863ab362640a8d4a109d8c</field>
    <field name="keywords">XBAR_TRIP7 XBAR_TRIP7</field>
    <field name="text">TRIP7 of the PWM X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_TRIP4</field>
    <field name="url">group__xbar__api.html#ggafbc2ac86889dd94795835aeef4d928aba9e6f9f93aac81bae322c0fb46b300657</field>
    <field name="keywords">XBAR_TRIP4 XBAR_TRIP4</field>
    <field name="text">TRIP4 of the PWM X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_TRIP2</field>
    <field name="url">group__xbar__api.html#ggafbc2ac86889dd94795835aeef4d928abafbdc0716003b2377745b3e629bda98bf</field>
    <field name="keywords">XBAR_TRIP2 XBAR_TRIP2</field>
    <field name="text">TRIP2 of the PWM X-BAR</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">XBAR_TRIP8</field>
    <field name="url">group__xbar__api.html#ggafbc2ac86889dd94795835aeef4d928abafc5f6f591c895481e01b83789a36723a</field>
    <field name="keywords">XBAR_TRIP8 XBAR_TRIP8</field>
    <field name="text">TRIP8 of the PWM X-BAR</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h.html</field>
    <field name="keywords">i2c.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00130</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00132</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00133</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00135</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00142</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00155</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text">I2C_INTSRC_NONE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00165</field>
    <field name="keywords"></field>
    <field name="text">I2C_INTSRC_ARB_LOST</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">I2C_INTSRC_NO_ACK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00167</field>
    <field name="keywords"></field>
    <field name="text">I2C_INTSRC_REG_ACCESS_RDY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00168</field>
    <field name="keywords"></field>
    <field name="text">I2C_INTSRC_RX_DATA_RDY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00169</field>
    <field name="keywords"></field>
    <field name="text">I2C_INTSRC_TX_DATA_RDY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00170</field>
    <field name="keywords"></field>
    <field name="text">I2C_INTSRC_STOP_CONDITION</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00171</field>
    <field name="keywords"></field>
    <field name="text">I2C_INTSRC_ADDR_TARGET I2C_INTSRC_SCL_ECS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00173</field>
    <field name="keywords"></field>
    <field name="text">I2C_InterruptSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00182</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TXEMPTY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00185</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00186</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00190</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00193</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00194</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00196</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00198</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00199</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00200</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX15</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00201</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_TX16 I2C_FIFO_TXFULL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00203</field>
    <field name="keywords"></field>
    <field name="text">I2C_TxFIFOLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00212</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00214</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RXEMPTY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00215</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00216</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00217</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00218</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00219</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00220</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00221</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00222</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00223</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00224</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00225</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00226</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00227</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00228</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00229</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00230</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX15</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00231</field>
    <field name="keywords"></field>
    <field name="text">I2C_FIFO_RX16 I2C_FIFO_RXFULL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00233</field>
    <field name="keywords"></field>
    <field name="text">I2C_RxFIFOLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00240</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00242</field>
    <field name="keywords"></field>
    <field name="text">I2C_BITCOUNT_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00243</field>
    <field name="keywords"></field>
    <field name="text">I2C_BITCOUNT_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00244</field>
    <field name="keywords"></field>
    <field name="text">I2C_BITCOUNT_3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00245</field>
    <field name="keywords"></field>
    <field name="text">I2C_BITCOUNT_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00246</field>
    <field name="keywords"></field>
    <field name="text">I2C_BITCOUNT_5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00247</field>
    <field name="keywords"></field>
    <field name="text">I2C_BITCOUNT_6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00248</field>
    <field name="keywords"></field>
    <field name="text">I2C_BITCOUNT_7 I2C_BITCOUNT_8 U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00250</field>
    <field name="keywords"></field>
    <field name="text">I2C_BitCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00257</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00259</field>
    <field name="keywords"></field>
    <field name="text">I2C_ADDR_MODE_7BITS I2C_ADDR_MODE_10BITS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00261</field>
    <field name="keywords"></field>
    <field name="text">I2C_AddressMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00268</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00270</field>
    <field name="keywords"></field>
    <field name="text">I2C_EADDR_MODE_BC I2C_EADDR_MODE_FWD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00272</field>
    <field name="keywords"></field>
    <field name="text">I2C_ExtendedMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00280</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00283</field>
    <field name="keywords"></field>
    <field name="text">I2C_EMULATION_STOP_SCL_LOW I2C_EMULATION_FREE_RUN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00286</field>
    <field name="keywords"></field>
    <field name="text">I2C_EmulationMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00294</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00296</field>
    <field name="keywords"></field>
    <field name="text">I2C_DUTYCYCLE_33 I2C_DUTYCYCLE_50</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00298</field>
    <field name="keywords"></field>
    <field name="text">I2C_DutyCycle I2C_isBaseValid uint32_t base base I2CA_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00340</field>
    <field name="keywords"></field>
    <field name="text">I2C_enableModule uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_MDR I2C_MDR_IRS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00362</field>
    <field name="keywords"></field>
    <field name="text">I2C_disableModule uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_MDR I2C_MDR_IRS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00384</field>
    <field name="keywords"></field>
    <field name="text">I2C_enableFIFO uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_FFTX I2C_FFTX_I2CFFEN I2C_FFTX_TXFFRST HWREGH base I2C_O_FFRX I2C_FFRX_RXFFRST</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00410</field>
    <field name="keywords"></field>
    <field name="text">I2C_disableFIFO uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_FFTX I2C_FFTX_I2CFFEN I2C_FFTX_TXFFRST HWREGH base I2C_O_FFRX I2C_FFRX_RXFFRST</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00446</field>
    <field name="keywords"></field>
    <field name="text">I2C_setFIFOInterruptLevel uint32_t base I2C_TxFIFOLevel txLevel I2C_RxFIFOLevel rxLevel ASSERT I2C_isBaseValid base HWREGH base I2C_O_FFTX HWREGH base I2C_O_FFTX I2C_FFTX_TXFFIL_M uint16_t txLevel HWREGH base I2C_O_FFRX HWREGH base I2C_O_FFRX I2C_FFRX_RXFFIL_M uint16_t rxLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00485</field>
    <field name="keywords"></field>
    <field name="text">I2C_getFIFOInterruptLevel uint32_t base I2C_TxFIFOLevel txLevel I2C_RxFIFOLevel rxLevel ASSERT I2C_isBaseValid base txLevel I2C_TxFIFOLevel HWREGH base I2C_O_FFTX I2C_FFTX_TXFFIL_M rxLevel I2C_RxFIFOLevel HWREGH base I2C_O_FFRX I2C_FFRX_RXFFIL_M I2C_TxFIFOLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00517</field>
    <field name="keywords"></field>
    <field name="text">I2C_getTxFIFOStatus uint32_t base uint16_t level ASSERT I2C_isBaseValid base level HWREGH base I2C_O_FFTX I2C_FFTX_TXFFST_M I2C_FFTX_TXFFST_S I2C_TxFIFOLevel level I2C_RxFIFOLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00550</field>
    <field name="keywords"></field>
    <field name="text">I2C_getRxFIFOStatus uint32_t base uint16_t level ASSERT I2C_isBaseValid base level HWREGH base I2C_O_FFRX I2C_FFRX_RXFFST_M I2C_FFRX_RXFFST_S I2C_RxFIFOLevel level uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00581</field>
    <field name="keywords"></field>
    <field name="text">I2C_getPreScaler uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_PSC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00608</field>
    <field name="keywords"></field>
    <field name="text">I2C_setTargetAddress uint32_t base uint16_t targetAddr ASSERT I2C_isBaseValid base ASSERT targetAddr I2C_TAR_TAR_M HWREGH base I2C_O_TAR targetAddr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00635</field>
    <field name="keywords"></field>
    <field name="text">I2C_setOwnAddress uint32_t base uint16_t Addr ASSERT I2C_isBaseValid base ASSERT Addr I2C_OAR_OAR_M HWREGH base I2C_O_OAR Addr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00661</field>
    <field name="keywords"></field>
    <field name="text">I2C_isBusBusy uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_STR I2C_STR_BB I2C_STR_BB uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00698</field>
    <field name="keywords"></field>
    <field name="text">I2C_getStatus uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_STR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00738</field>
    <field name="keywords"></field>
    <field name="text">I2C_clearStatus uint32_t base uint16_t stsFlags ASSERT I2C_isBaseValid base HWREGH base I2C_O_STR stsFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00776</field>
    <field name="keywords"></field>
    <field name="text">I2C_setConfig uint32_t base uint16_t config ASSERT I2C_isBaseValid base HWREGH base I2C_O_MDR HWREGH base I2C_O_MDR I2C_MDR_CNT I2C_MDR_TRX I2C_MDR_RM I2C_MDR_STB I2C_MDR_FDF config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00805</field>
    <field name="keywords"></field>
    <field name="text">I2C_setBitCount uint32_t base I2C_BitCount size ASSERT I2C_isBaseValid base HWREGH base I2C_O_MDR HWREGH base I2C_O_MDR I2C_MDR_BC_M uint16_t size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00833</field>
    <field name="keywords"></field>
    <field name="text">I2C_sendStartCondition uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_MDR I2C_MDR_STT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00863</field>
    <field name="keywords"></field>
    <field name="text">I2C_sendStopCondition uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_MDR I2C_MDR_STP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00889</field>
    <field name="keywords"></field>
    <field name="text">I2C_sendNACK uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_MDR I2C_MDR_NACKMOD uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00914</field>
    <field name="keywords"></field>
    <field name="text">I2C_getData uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_DRR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00940</field>
    <field name="keywords"></field>
    <field name="text">I2C_putData uint32_t base uint16_t data ASSERT I2C_isBaseValid base HWREGH base I2C_O_DXR data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00968</field>
    <field name="keywords"></field>
    <field name="text">I2C_getStopConditionStatus uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_MDR I2C_MDR_STP U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l00995</field>
    <field name="keywords"></field>
    <field name="text">I2C_setDataCount uint32_t base uint16_t count ASSERT I2C_isBaseValid base HWREGH base I2C_O_CNT count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01024</field>
    <field name="keywords"></field>
    <field name="text">I2C_setAddressMode uint32_t base I2C_AddressMode mode ASSERT I2C_isBaseValid base HWREGH base I2C_O_MDR HWREGH base I2C_O_MDR I2C_MDR_XA uint16_t mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01058</field>
    <field name="keywords"></field>
    <field name="text">I2C_setEmulationMode uint32_t base I2C_EmulationMode mode ASSERT I2C_isBaseValid base HWREGH base I2C_O_MDR HWREGH base I2C_O_MDR I2C_MDR_FREE uint16_t mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01086</field>
    <field name="keywords"></field>
    <field name="text">I2C_enableLoopback uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_MDR I2C_MDR_DLB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01112</field>
    <field name="keywords"></field>
    <field name="text">I2C_disableLoopback uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_MDR I2C_MDR_DLB I2C_InterruptSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01157</field>
    <field name="keywords"></field>
    <field name="text">I2C_getInterruptSource uint32_t base ASSERT I2C_isBaseValid base I2C_InterruptSource HWREGH base I2C_O_ISRC I2C_ISRC_INTCODE_M</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01187</field>
    <field name="keywords"></field>
    <field name="text">I2C_setExtendedMode uint32_t base I2C_ExtendedMode mode ASSERT I2C_isBaseValid base HWREGH base I2C_O_EMDR HWREGH base I2C_O_EMDR I2C_EMDR_BC I2C_EMDR_FCM uint16_t mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01216</field>
    <field name="keywords"></field>
    <field name="text">I2C_enableExtendedAutomaticClkStretchingMode uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_EMDR HWREGH base I2C_O_EMDR I2C_EMDR_SCLKEY_M uint16_t I2C_EMDR_SCLKEY_ENABLE I2C_EMDR_SCLKEY_S HWREGH base I2C_O_EMDR I2C_EMDR_ECS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01251</field>
    <field name="keywords"></field>
    <field name="text">I2C_disableExtendedAutomaticClkStretchingMode uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_EMDR HWREGH base I2C_O_EMDR I2C_EMDR_SCLKEY_M uint16_t I2C_EMDR_SCLKEY_DISABLE I2C_EMDR_SCLKEY_S HWREGH base I2C_O_EMDR HWREGH base I2C_O_EMDR I2C_EMDR_ECS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01287</field>
    <field name="keywords"></field>
    <field name="text">I2C_enableManualClkStretchingMode uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_EMDR HWREGH base I2C_O_EMDR I2C_EMDR_SCLKEY_M uint16_t I2C_EMDR_SCLKEY_ENABLE I2C_EMDR_SCLKEY_S HWREGH base I2C_O_EMDR I2C_EMDR_MCS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01322</field>
    <field name="keywords"></field>
    <field name="text">I2C_disableManualClkStretchingMode uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_EMDR HWREGH base I2C_O_EMDR I2C_EMDR_SCLKEY_M uint16_t I2C_EMDR_SCLKEY_DISABLE I2C_EMDR_SCLKEY_S HWREGH base I2C_O_EMDR HWREGH base I2C_O_EMDR I2C_EMDR_MCS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01357</field>
    <field name="keywords"></field>
    <field name="text">I2C_enableNACKCompatibilityMode uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_EMDR I2C_EMDR_NACK_CM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01383</field>
    <field name="keywords"></field>
    <field name="text">I2C_disableNACKCompatibilityMode uint32_t base ASSERT I2C_isBaseValid base HWREGH base I2C_O_EMDR HWREGH base I2C_O_EMDR I2C_EMDR_NACK_CM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01430</field>
    <field name="keywords"></field>
    <field name="text">I2C_initController uint32_t base uint32_t sysclkHz uint32_t bitRate I2C_DutyCycle dutyCycle</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01466</field>
    <field name="keywords"></field>
    <field name="text">I2C_initControllerModuleFrequency uint32_t base uint32_t sysclkHz uint32_t bitRate I2C_DutyCycle dutyCycle uint32_t moduleFrequency</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01499</field>
    <field name="keywords"></field>
    <field name="text">I2C_enableInterrupt uint32_t base uint32_t intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01519</field>
    <field name="keywords"></field>
    <field name="text">I2C_disableInterrupt uint32_t base uint32_t intFlags uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01546</field>
    <field name="keywords"></field>
    <field name="text">I2C_getInterruptStatus uint32_t base</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01573</field>
    <field name="keywords"></field>
    <field name="text">I2C_clearInterruptStatus uint32_t base uint32_t intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01593</field>
    <field name="keywords"></field>
    <field name="text">I2C_configureModuleFrequency uint32_t base uint32_t sysclkHz</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">i2c.h</field>
    <field name="url">i2c_8h_source.html#l01613</field>
    <field name="keywords"></field>
    <field name="text">I2C_configureModuleClockFrequency uint32_t base uint32_t sysclkHz uint32_t moduleFrequency</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">i2c.md</field>
    <field name="url">i2c_8md.html</field>
    <field name="keywords">i2c.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">i2c_ex1_controller.md</field>
    <field name="url">i2c__ex1__controller_8md.html</field>
    <field name="keywords">i2c_ex1_controller.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">i2c_ex1_loopback.md</field>
    <field name="url">i2c__ex1__loopback_8md.html</field>
    <field name="keywords">i2c_ex1_loopback.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">i2c_ex1_target.md</field>
    <field name="url">i2c__ex1__target_8md.html</field>
    <field name="keywords">i2c_ex1_target.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">Introduction The F28E12x Peripheral Driver Library is a set of drivers for accessing the peripherals found on the F28E12x real time control MCU While they are not drivers in the pure operating system sense that is they do not have a common interface and do not connect into a global device driver infrastructure they do provide a software layer to facilitate a slightly higher level of programming than direct register accesses The capabilities and organization of the drivers are governed by the following design goals They are written entirely in C except where absolutely not possible Where possible computations that can be performed at compile time are done there instead of at run time They are intended to make code more portable across other C2000 devices Code written with these APIs will be more readable than code written using many direct register accesses Some consequences of this are that the drivers are not necessarily as efficient as they could be from a code size and/or execution speed point of view While the most efficient piece of code for operating a peripheral would be written in assembly and custom tailored to the specific requirements of the application further size optimizations of the drivers would make them more difficult to understand For many applications the drivers can be used as is But in some cases the drivers will have to be enhanced or rewritten in order to meet the functionality memory or processing requirements of the application If so the existing driver can be used as a reference on how to operate the peripheral see Programming Models</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h.html</field>
    <field name="keywords">interrupt.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00089</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00092</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_defaultHandler</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00159</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_illegalOperationHandler</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00177</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_nmiHandler</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_enableGlobal __enable_interrupts U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00211</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_disableGlobal __disable_interrupts U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00243</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_register uint32_t interruptNumber handler uint32_t address address uint32_t PIEVECTTABLE_BASE interruptNumber EALLOW HWREG address uint32_t handler EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00282</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_unregister uint32_t interruptNumber uint32_t address address uint32_t PIEVECTTABLE_BASE interruptNumber EALLOW HWREG address uint32_t Interrupt_defaultHandler EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00318</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_enableInCPU uint16_t cpuInterrupt IER cpuInterrupt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00344</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_disableInCPU uint16_t cpuInterrupt IER cpuInterrupt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00372</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_clearACKGroup uint16_t group HWREGH PIECTRL_BASE PIE_O_ACK group</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00391</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_enablePIE HWREGH PIECTRL_BASE PIE_O_CTRL PIE_CTRL_ENPIE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00408</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_disablePIE HWREGH PIECTRL_BASE PIE_O_CTRL PIE_CTRL_ENPIE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00425</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_initModule</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00436</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_initVectorTable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00455</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_enable uint32_t interruptNumber</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00474</field>
    <field name="keywords"></field>
    <field name="text">Interrupt_disable uint32_t interruptNumber</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00481</field>
    <field name="keywords"></field>
    <field name="text">uint16_t __disable_interrupts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">interrupt.h</field>
    <field name="url">interrupt_8h_source.html#l00482</field>
    <field name="keywords"></field>
    <field name="text">uint16_t __enable_interrupts</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">interrupt.md</field>
    <field name="url">interrupt_8md.html</field>
    <field name="keywords">interrupt.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">interrupt_ex1_external.md</field>
    <field name="url">interrupt__ex1__external_8md.html</field>
    <field name="keywords">interrupt_ex1_external.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">interrupt_ex2_with_i2c_sci_spi_loopback.md</field>
    <field name="url">interrupt__ex2__with__i2c__sci__spi__loopback_8md.html</field>
    <field name="keywords">interrupt_ex2_with_i2c_sci_spi_loopback.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">interrupt_ex3_sw_prioritization.md</field>
    <field name="url">interrupt__ex3__sw__prioritization_8md.html</field>
    <field name="keywords">interrupt_ex3_sw_prioritization.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">interrupt_ex4_mcpwm_realtime_interrupt.md</field>
    <field name="url">interrupt__ex4__mcpwm__realtime__interrupt_8md.html</field>
    <field name="keywords">interrupt_ex4_mcpwm_realtime_interrupt.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">led_blinky_syscfg.md</field>
    <field name="url">led__blinky__syscfg_8md.html</field>
    <field name="keywords">led_blinky_syscfg.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">led_ex1_blinky.md</field>
    <field name="url">led__ex1__blinky_8md.html</field>
    <field name="keywords">led_ex1_blinky.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">lpm_ex1.md</field>
    <field name="url">lpm__ex1_8md.html</field>
    <field name="keywords">lpm_ex1.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">lpm_ex2.md</field>
    <field name="url">lpm__ex2_8md.html</field>
    <field name="keywords">lpm_ex2.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">lpm_ex3.md</field>
    <field name="url">lpm__ex3_8md.html</field>
    <field name="keywords">lpm_ex3.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">lpm_ex4.md</field>
    <field name="url">lpm__ex4_8md.html</field>
    <field name="keywords">lpm_ex4.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">lpm_ex5.md</field>
    <field name="url">lpm__ex5_8md.html</field>
    <field name="keywords">lpm_ex5.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">lpm_ex6.md</field>
    <field name="url">lpm__ex6_8md.html</field>
    <field name="keywords">lpm_ex6.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">main_page.md</field>
    <field name="url">main__page_8md.html</field>
    <field name="keywords">main_page.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h.html</field>
    <field name="keywords">mcpwm.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COUNTER_MODE_UP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COUNTER_MODE_UP_DOWN MCPWM_COUNTER_MODE_STOP_FREEZE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_TimeBaseCountMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_32</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_64</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_128</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_256</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_512</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_1024</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_2048</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_4096</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_8192</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00124</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_16384</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00125</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CLOCK_DIVIDER_32768 MCPWM_ClockDivider</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EMULATION_STOP_AFTER_NEXT_TB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EMULATION_STOP_AFTER_FULL_CYCLE MCPWM_EMULATION_FREE_RUN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00142</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EmulationMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00159</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_PERIOD_SHADOW_LOAD_ENABLE MCPWM_PERIOD_SHADOW_LOAD_DISABLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00165</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_PeriodLoadMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00173</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COUNT_MODE_DOWN_AFTER_SYNC MCPWM_COUNT_MODE_UP_AFTER_SYNC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00177</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SyncCountMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00185</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNC_OUT_PULSE_ON_SOFTWARE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00190</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNC_OUT_PULSE_ON_COUNTER_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNC_OUT_PULSE_ON_COUNTER_COMPARE_C</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00194</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNC_OUT_PULSE_ON_COUNTER_COMPARE_D MCPWM_SYNC_OUT_PULSE_DISABLED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SyncOutPulseMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00205</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00208</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNC_PULSE_DISABLED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00210</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNCPERSEL_SOURCE_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00212</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNCPERSEL_SOURCE_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00214</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNCPERSEL_SOURCE_CMPC_UP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00216</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNCPERSEL_SOURCE_CMPC_DOWN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00218</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNCPERSEL_SOURCE_CMPD_UP MCPWM_SYNCPERSEL_SOURCE_CMPD_DOWN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00221</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SyncPulseSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00229</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00231</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNC_IN_PULSE_SRC_DISABLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00232</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00233</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNC_IN_PULSE_SRC_INPUTXBAR_OUT6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00234</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_ECAP1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00235</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM1 MCPWM_SYNC_IN_PULSE_SRC_SYNCOUT_MCPWM3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00237</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SyncInPulseSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00254</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00256</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COUNTER_COMPARE_1A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00257</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COUNTER_COMPARE_1B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00258</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COUNTER_COMPARE_2A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00259</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COUNTER_COMPARE_2B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00260</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COUNTER_COMPARE_3A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00261</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COUNTER_COMPARE_3B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00262</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COUNTER_COMPARE_C MCPWM_COUNTER_COMPARE_D</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00264</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CounterCompareModule</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00280</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00283</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COMP_LOAD_ON_CNTR_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00285</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COMP_LOAD_ON_CNTR_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00287</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_COMP_LOAD_ON_CNTR_ZERO_PERIOD MCPWM_COMP_LOAD_FREEZE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00290</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_CounterCompareLoadMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00300</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00302</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_1A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00303</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_1B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00304</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_2A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00305</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_2B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00306</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_3A MCPWM_AQ_OUTPUT_3B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00308</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ActionQualifierOutputModule</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00317</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00319</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_NO_CHANGE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00320</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_LOW</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00321</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_HIGH MCPWM_AQ_OUTPUT_TOGGLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00323</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ActionQualifierOutput</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00331</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00333</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_SW_FORCE_DISABLED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00334</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_SW_CONTINUOUS_LOW</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00335</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_SW_CONTINUOUS_HIGH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00336</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_SW_ONE_SHOT_LOW</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_SW_ONE_SHOT_HIGH MCPWM_AQ_SW_ONE_SHOT_TOGGLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00339</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ActionQualifierSWForceOutput</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00347</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00349</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ACTION_QUALIFIER_1A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00350</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ACTION_QUALIFIER_1B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00351</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ACTION_QUALIFIER_2A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00352</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ACTION_QUALIFIER_2B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00353</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ACTION_QUALIFIER_3A MCPWM_ACTION_QUALIFIER_3B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00355</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ActionQualifierModule</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00375</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00378</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_LOAD_ON_CNTR_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00380</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_LOAD_ON_CNTR_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00382</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_LOAD_ON_CNTR_ZERO_PERIOD MCPWM_AQ_LOAD_FREEZE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00385</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ActionQualifierLoadMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00394</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00397</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_ON_TIMEBASE_ZERO MCPWM_PWM1_AQCTLA_ZRO_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00399</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_ON_TIMEBASE_PERIOD MCPWM_PWM1_AQCTLA_PRD_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00401</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPA MCPWM_PWM1_AQCTLA_CAU_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00403</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPA MCPWM_PWM1_AQCTLA_CAD_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00405</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_ON_TIMEBASE_UP_CMPB MCPWM_PWM1_AQCTLA_CBU_S MCPWM_AQ_OUTPUT_ON_TIMEBASE_DOWN_CMPB MCPWM_PWM1_AQCTLA_CBD_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00408</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ActionQualifierOutputEvent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00417</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00420</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_NO_CHANGE_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00422</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_LOW_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00424</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_HIGH_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00426</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_TOGGLE_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00428</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_NO_CHANGE_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00430</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_LOW_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00432</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_HIGH_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00434</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_TOGGLE_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00436</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_NO_CHANGE_UP_CMPA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00438</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_LOW_UP_CMPA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00440</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_HIGH_UP_CMPA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00442</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_TOGGLE_UP_CMPA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00444</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_NO_CHANGE_DOWN_CMPA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00446</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_LOW_DOWN_CMPA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00448</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_HIGH_DOWN_CMPA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00450</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_TOGGLE_DOWN_CMPA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00452</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_NO_CHANGE_UP_CMPB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00454</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_LOW_UP_CMPB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00456</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_HIGH_UP_CMPB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00458</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_TOGGLE_UP_CMPB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00460</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_NO_CHANGE_DOWN_CMPB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00462</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_LOW_DOWN_CMPB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00464</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_AQ_OUTPUT_HIGH_DOWN_CMPB MCPWM_AQ_OUTPUT_TOGGLE_DOWN_CMPB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00467</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ActionQualifierEventAction</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00476</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00479</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_GL_LOAD_PULSE_CNTR_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00481</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_GL_LOAD_PULSE_CNTR_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00483</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_GL_LOAD_PULSE_CNTR_ZERO_PERIOD MCPWM_GL_LOAD_PULSE_GLOBAL_FORCE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00486</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_GlobalLoadTrigger</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00494</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00496</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_DB_OUTPUT_A MCPWM_DB_OUTPUT_B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00498</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_DeadBandOutput</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00506</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00508</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_DB_RED MCPWM_DB_FED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00510</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_DeadBandDelayMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00518</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00520</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_DB_POLARITY_ACTIVE_HIGH MCPWM_DB_POLARITY_ACTIVE_LOW</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00522</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_DeadBandPolarity</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00532</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00535</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00538</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00546</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00549</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_RED_LOAD_ON_CNTR_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00551</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_RED_LOAD_ON_CNTR_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00553</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_RED_LOAD_ON_CNTR_ZERO_PERIOD MCPWM_RED_LOAD_FREEZE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00556</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_RisingEdgeDelayLoadMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00564</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00567</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_FED_LOAD_ON_CNTR_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00569</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_FED_LOAD_ON_CNTR_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00571</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_FED_LOAD_ON_CNTR_ZERO_PERIOD MCPWM_FED_LOAD_FREEZE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00574</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_FallingEdgeDelayLoadMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00584</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00587</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00590</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00593</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00596</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00599</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00602</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00605</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00608</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00611</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00614</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00617</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00620</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00623</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00626</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00629</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00637</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00639</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_TZ_ACTION_EVENT_TZA MCPWM_TZ_ACTION_EVENT_TZB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00641</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_TripZoneEvent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00649</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00651</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_TZ_ACTION_HIGH_Z</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00652</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_TZ_ACTION_HIGH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00653</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_TZ_ACTION_LOW MCPWM_TZ_ACTION_DISABLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00655</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_TripZoneAction</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00663</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00666</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_TZ_CBC_PULSE_CLR_NONE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00668</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_TZ_CBC_PULSE_CLR_CNTR_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00670</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_TZ_CBC_PULSE_CLR_CNTR_PERIOD MCPWM_TZ_CBC_PULSE_CLR_CNTR_ZERO_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00673</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_TripZoneCBCMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00684</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00687</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00690</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00693</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00696</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00699</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00702</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00705</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00708</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00711</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00714</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00717</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00720</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00723</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00726</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00729</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00732</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00760</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00762</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00763</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00764</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_C MCPWM_SOC_D</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00766</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ADCStartOfConversionType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00774</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00777</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_DISABLED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00780</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00782</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00784</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_ZERO_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00787</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_U_CMPC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00789</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_U_CMPD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00792</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_U_CMP1A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00794</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_U_CMP1B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00797</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_U_CMP2A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00799</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_U_CMP2B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00802</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_U_CMP3A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00804</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_U_CMP3B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00807</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_D_CMPC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00809</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_D_CMPD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00812</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_D_CMP1A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00814</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_D_CMP1B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00817</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_D_CMP2A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00819</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_D_CMP2B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00822</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_SOC_TBCTR_D_CMP3A MCPWM_SOC_TBCTR_D_CMP3B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00825</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ADCStartOfConversionSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00837</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00839</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ET_1 MCPWM_ET_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00841</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EventTriggerType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00849</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00852</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_DISABLED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00855</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_ZERO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00857</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00859</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_ZERO_PERIOD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00862</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_U_CMPC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00864</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_U_CMPD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00867</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_U_CMP1A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00869</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_U_CMP1B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00872</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_U_CMP2A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00874</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_U_CMP2B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00877</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_U_CMP3A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00879</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_U_CMP3B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00882</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_D_CMPC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00884</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_D_CMPD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00887</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_D_CMP1A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00889</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_D_CMP1B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00892</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_D_CMP2A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00894</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_D_CMP2B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00897</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EVT_TBCTR_D_CMP3A MCPWM_EVT_TBCTR_D_CMP3B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00900</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_EventTriggerSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00911</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00914</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00917</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00920</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00923</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00926</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00939</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00941</field>
    <field name="keywords"></field>
    <field name="text">float32_t freqInHz</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00942</field>
    <field name="keywords"></field>
    <field name="text">float32_t dutyVal1A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00943</field>
    <field name="keywords"></field>
    <field name="text">float32_t dutyVal1B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00944</field>
    <field name="keywords"></field>
    <field name="text">float32_t dutyVal2A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00945</field>
    <field name="keywords"></field>
    <field name="text">float32_t dutyVal2B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00946</field>
    <field name="keywords"></field>
    <field name="text">float32_t dutyVal3A</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00947</field>
    <field name="keywords"></field>
    <field name="text">float32_t dutyVal3B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00948</field>
    <field name="keywords"></field>
    <field name="text">invertSignal1B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00949</field>
    <field name="keywords"></field>
    <field name="text">invertSignal2B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00950</field>
    <field name="keywords"></field>
    <field name="text">invertSignal3B</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00951</field>
    <field name="keywords"></field>
    <field name="text">float32_t sysClkInHz</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00952</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_TimeBaseCountMode tbCtrMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00953</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_ClockDivider tbClkDiv MCPWM_SignalParams MCPWM_isBaseValid uint32_t base base PWM1_BASE base PWM3_BASE uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l00996</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getRevision uint32_t base ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_REVISION</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01025</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setPhaseShift uint32_t base uint16_t phaseCount ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBPHS HWREG base MCPWM_O_TBPHS uint32_t MCPWM_TBPHS_TBPHS_M uint32_t phaseCount MCPWM_TBPHS_TBPHS_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01057</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setTimeBaseCounter uint32_t base uint16_t count ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBCTR count uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01083</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getTimeBaseCounterValue uint32_t base ASSERT MCPWM_isBaseValid base uint16_t HWREG base MCPWM_O_TBCTR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01113</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setTimeBaseCounterMode uint32_t base MCPWM_TimeBaseCountMode counterMode ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBCTL HWREG base MCPWM_O_TBCTL MCPWM_TBCTL_CTRMODE_M uint32_t counterMode uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01142</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getTimeBaseCounterDirection uint32_t base ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBSTS MCPWM_TBSTS_CTRDIR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01176</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setClockPrescaler uint32_t base MCPWM_ClockDivider prescaler ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBCTL HWREG base MCPWM_O_TBCTL MCPWM_TBCTL_CLKDIV_M uint16_t prescaler MCPWM_TBCTL_CLKDIV_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01209</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setPeriodLoadMode uint32_t base MCPWM_PeriodLoadMode loadMode ASSERT MCPWM_isBaseValid base loadMode MCPWM_PERIOD_SHADOW_LOAD_ENABLE HWREG base MCPWM_O_TBCTL MCPWM_TBCTL_PRDLD HWREG base MCPWM_O_TBCTL MCPWM_TBCTL_PRDLD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01245</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_enablePhaseShiftLoad uint32_t base ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBCTL MCPWM_TBCTL_PHSEN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01271</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_disablePhaseShiftLoad uint32_t base ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBCTL uint32_t MCPWM_TBCTL_PHSEN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01301</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setCountModeAfterSync uint32_t base MCPWM_SyncCountMode mode ASSERT MCPWM_isBaseValid base mode MCPWM_COUNT_MODE_UP_AFTER_SYNC HWREG base MCPWM_O_TBCTL MCPWM_TBCTL_PHSDIR HWREG base MCPWM_O_TBCTL MCPWM_TBCTL_PHSDIR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01336</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_forceSyncPulse uint32_t base ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBCTL MCPWM_TBCTL_SWSYNC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01376</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setSyncOutPulseMode uint32_t base MCPWM_SyncOutPulseMode mode ASSERT MCPWM_isBaseValid base mode MCPWM_SYNC_OUT_PULSE_DISABLED HWREG base MCPWM_O_TBCTL HWREG base MCPWM_O_TBCTL MCPWM_TBCTL_SYNCOSEL_M uint32_t mode MCPWM_TBCTL_SYNCOSEL_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01421</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setSyncPulseSource uint32_t base MCPWM_SyncPulseSource syncPulseSource ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBCTL HWREG base MCPWM_O_TBCTL MCPWM_TBCTL_SYNCPERSEL_M uint32_t syncPulseSource MCPWM_TBCTL_SYNCPERSEL_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01457</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setSyncInPulseSource uint32_t base MCPWM_SyncInPulseSource source ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBCTL HWREG base MCPWM_O_TBCTL MCPWM_TBCTL_SYNCISEL_M uint32_t source MCPWM_TBCTL_SYNCISEL_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01485</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getSyncStatus uint32_t base ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBSTS MCPWM_TBSTS_SYNCI MCPWM_TBSTS_SYNCI TRUE FALSE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01511</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_clearSyncStatus uint32_t base ASSERT MCPWM_isBaseValid base HWREGH base MCPWM_O_TBSTSCLR MCPWM_TBSTS_SYNCI</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01543</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setTimeBasePeriodActive uint32_t base uint16_t periodCount ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBPRD periodCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01575</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setTimeBasePeriodShadow uint32_t base uint16_t periodCount ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_TBPRDS periodCount uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01600</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getTimeBasePeriodActive uint32_t base ASSERT MCPWM_isBaseValid base uint16_t HWREG base MCPWM_O_TBPRD MCPWM_TBPRD_TBPRD_M uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01625</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getTimeBasePeriodShadow uint32_t base ASSERT MCPWM_isBaseValid base uint16_t HWREG base MCPWM_O_TBPRDS MCPWM_TBPRDS_TBPRDS_M</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01663</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setCounterCompareActiveValue uint32_t base MCPWM_CounterCompareModule compModule uint16_t compCount ASSERT MCPWM_isBaseValid base compModule MCPWM_COUNTER_COMPARE_1A HWREGH base MCPWM_O_PWM1_CMPA compCount MCPWM_COUNTER_COMPARE_1B HWREGH base MCPWM_O_PWM1_CMPB compCount MCPWM_COUNTER_COMPARE_2A HWREGH base MCPWM_O_PWM2_CMPA compCount MCPWM_COUNTER_COMPARE_2B HWREGH base MCPWM_O_PWM2_CMPB compCount MCPWM_COUNTER_COMPARE_3A HWREGH base MCPWM_O_PWM3_CMPA compCount MCPWM_COUNTER_COMPARE_3B HWREGH base MCPWM_O_PWM3_CMPB compCount MCPWM_COUNTER_COMPARE_C HWREGH base MCPWM_O_CMPC compCount HWREGH base MCPWM_O_CMPD compCount uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01726</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getCounterCompareActiveValue uint32_t base MCPWM_CounterCompareModule compModule ASSERT MCPWM_isBaseValid base uint16_t retValue compModule MCPWM_COUNTER_COMPARE_1A retValue HWREGH base MCPWM_O_PWM1_CMPA MCPWM_COUNTER_COMPARE_1B retValue HWREGH base MCPWM_O_PWM1_CMPB MCPWM_COUNTER_COMPARE_2A retValue HWREGH base MCPWM_O_PWM2_CMPA MCPWM_COUNTER_COMPARE_2B retValue HWREGH base MCPWM_O_PWM2_CMPB MCPWM_COUNTER_COMPARE_3A retValue HWREGH base MCPWM_O_PWM3_CMPA MCPWM_COUNTER_COMPARE_3B retValue HWREGH base MCPWM_O_PWM3_CMPB MCPWM_COUNTER_COMPARE_C retValue HWREGH base MCPWM_O_CMPC retValue HWREGH base MCPWM_O_CMPD retValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01795</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setCounterCompareShadowValue uint32_t base MCPWM_CounterCompareModule compModule uint16_t compCount ASSERT MCPWM_isBaseValid base compModule MCPWM_COUNTER_COMPARE_1A HWREGH base MCPWM_O_PWM1_CMPAS compCount MCPWM_COUNTER_COMPARE_1B HWREGH base MCPWM_O_PWM1_CMPBS compCount MCPWM_COUNTER_COMPARE_2A HWREGH base MCPWM_O_PWM2_CMPAS compCount MCPWM_COUNTER_COMPARE_2B HWREGH base MCPWM_O_PWM2_CMPBS compCount MCPWM_COUNTER_COMPARE_3A HWREGH base MCPWM_O_PWM3_CMPAS compCount MCPWM_COUNTER_COMPARE_3B HWREGH base MCPWM_O_PWM3_CMPBS compCount MCPWM_COUNTER_COMPARE_C HWREGH base MCPWM_O_CMPCS compCount HWREGH base MCPWM_O_CMPDS compCount uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01859</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getCounterCompareShadowValue uint32_t base MCPWM_CounterCompareModule compModule ASSERT MCPWM_isBaseValid base uint16_t retValue compModule MCPWM_COUNTER_COMPARE_1A retValue HWREGH base MCPWM_O_PWM1_CMPAS MCPWM_COUNTER_COMPARE_1B retValue HWREGH base MCPWM_O_PWM1_CMPBS MCPWM_COUNTER_COMPARE_2A retValue HWREGH base MCPWM_O_PWM2_CMPAS MCPWM_COUNTER_COMPARE_2B retValue HWREGH base MCPWM_O_PWM2_CMPBS MCPWM_COUNTER_COMPARE_3A retValue HWREGH base MCPWM_O_PWM3_CMPAS MCPWM_COUNTER_COMPARE_3B retValue HWREGH base MCPWM_O_PWM3_CMPBS MCPWM_COUNTER_COMPARE_C retValue HWREGH base MCPWM_O_CMPCS retValue HWREGH base MCPWM_O_CMPDS retValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l01930</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setCounterCompareShadowLoadMode uint32_t base MCPWM_CounterCompareModule compModule MCPWM_CounterCompareLoadMode loadMode ASSERT MCPWM_isBaseValid base compModule MCPWM_COUNTER_COMPARE_1A HWREG base MCPWM_O_CMPCTL HWREG base MCPWM_O_CMPCTL MCPWM_CMPCTL_PWM1_LOADAMODE_M uint32_t loadMode MCPWM_CMPCTL_PWM1_LOADAMODE_S MCPWM_COUNTER_COMPARE_1B HWREG base MCPWM_O_CMPCTL HWREG base MCPWM_O_CMPCTL MCPWM_CMPCTL_PWM1_LOADBMODE_M uint32_t loadMode MCPWM_CMPCTL_PWM1_LOADBMODE_S MCPWM_COUNTER_COMPARE_2A HWREG base MCPWM_O_CMPCTL HWREG base MCPWM_O_CMPCTL MCPWM_CMPCTL_PWM2_LOADAMODE_M uint32_t loadMode MCPWM_CMPCTL_PWM2_LOADAMODE_S MCPWM_COUNTER_COMPARE_2B HWREG base MCPWM_O_CMPCTL HWREG base MCPWM_O_CMPCTL MCPWM_CMPCTL_PWM2_LOADBMODE_M uint32_t loadMode MCPWM_CMPCTL_PWM2_LOADBMODE_S MCPWM_COUNTER_COMPARE_3A HWREG base MCPWM_O_CMPCTL HWREG base MCPWM_O_CMPCTL MCPWM_CMPCTL_PWM3_LOADAMODE_M uint32_t loadMode MCPWM_CMPCTL_PWM3_LOADAMODE_S MCPWM_COUNTER_COMPARE_3B HWREG base MCPWM_O_CMPCTL HWREG base MCPWM_O_CMPCTL MCPWM_CMPCTL_PWM3_LOADBMODE_M uint32_t loadMode MCPWM_CMPCTL_PWM3_LOADBMODE_S MCPWM_COUNTER_COMPARE_C HWREG base MCPWM_O_CMPCTL HWREG base MCPWM_O_CMPCTL MCPWM_CMPCTL_LOADCMODE_M uint32_t loadMode MCPWM_CMPCTL_LOADCMODE_S HWREG base MCPWM_O_CMPCTL HWREG base MCPWM_O_CMPCTL MCPWM_CMPCTL_LOADDMODE_M uint32_t loadMode MCPWM_CMPCTL_LOADDMODE_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02019</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setActionQualifierSWAction uint32_t base MCPWM_ActionQualifierOutputModule mcpwmOutput MCPWM_ActionQualifierSWForceOutput output ASSERT MCPWM_isBaseValid base mcpwmOutput MCPWM_AQ_OUTPUT_1A HWREG base MCPWM_O_PWM1_AQSFRC HWREG base MCPWM_O_PWM1_AQSFRC MCPWM_PWM1_AQSFRC_PWMA_M uint32_t output MCPWM_PWM1_AQSFRC_PWMA_S MCPWM_AQ_OUTPUT_1B HWREG base MCPWM_O_PWM1_AQSFRC HWREG base MCPWM_O_PWM1_AQSFRC MCPWM_PWM1_AQSFRC_PWMB_M uint32_t output MCPWM_PWM1_AQSFRC_PWMB_S MCPWM_AQ_OUTPUT_2A HWREG base MCPWM_O_PWM2_AQSFRC HWREG base MCPWM_O_PWM2_AQSFRC MCPWM_PWM2_AQSFRC_PWMA_M uint32_t output MCPWM_PWM2_AQSFRC_PWMA_S MCPWM_AQ_OUTPUT_2B HWREG base MCPWM_O_PWM2_AQSFRC HWREG base MCPWM_O_PWM2_AQSFRC MCPWM_PWM2_AQSFRC_PWMB_M uint32_t output MCPWM_PWM2_AQSFRC_PWMB_S MCPWM_AQ_OUTPUT_3A HWREG base MCPWM_O_PWM3_AQSFRC HWREG base MCPWM_O_PWM3_AQSFRC MCPWM_PWM3_AQSFRC_PWMA_M uint32_t output MCPWM_PWM3_AQSFRC_PWMA_S default HWREG base MCPWM_O_PWM3_AQSFRC HWREG base MCPWM_O_PWM3_AQSFRC MCPWM_PWM3_AQSFRC_PWMB_M uint32_t output MCPWM_PWM3_AQSFRC_PWMB_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02084</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_forceActionQualifierSWAction uint32_t base MCPWM_ActionQualifierOutputModule mcpwmOutput ASSERT MCPWM_isBaseValid base mcpwmOutput MCPWM_AQ_OUTPUT_1A HWREG base MCPWM_O_PWM1_AQOTSFRC MCPWM_PWM1_AQOTSFRC_PWMA MCPWM_AQ_OUTPUT_1B HWREG base MCPWM_O_PWM1_AQOTSFRC MCPWM_PWM1_AQOTSFRC_PWMB MCPWM_AQ_OUTPUT_2A HWREG base MCPWM_O_PWM2_AQOTSFRC MCPWM_PWM2_AQOTSFRC_PWMA MCPWM_AQ_OUTPUT_2B HWREG base MCPWM_O_PWM2_AQOTSFRC MCPWM_PWM2_AQOTSFRC_PWMB MCPWM_AQ_OUTPUT_3A HWREG base MCPWM_O_PWM3_AQOTSFRC MCPWM_PWM3_AQOTSFRC_PWMA default HWREG base MCPWM_O_PWM3_AQOTSFRC MCPWM_PWM3_AQOTSFRC_PWMB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02153</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setActionQualifierShadowLoadMode uint32_t base MCPWM_ActionQualifierModule aqModule MCPWM_ActionQualifierLoadMode loadMode ASSERT MCPWM_isBaseValid base aqModule MCPWM_ACTION_QUALIFIER_1A HWREG base MCPWM_O_AQCTL HWREG base MCPWM_O_AQCTL MCPWM_AQCTL_PWM1_LDAQBMODE_M uint32_t loadMode MCPWM_AQCTL_PWM1_LDAQAMODE_S MCPWM_ACTION_QUALIFIER_1B HWREG base MCPWM_O_AQCTL HWREG base MCPWM_O_AQCTL MCPWM_AQCTL_PWM1_LDAQBMODE_M uint32_t loadMode MCPWM_AQCTL_PWM1_LDAQBMODE_S MCPWM_ACTION_QUALIFIER_2A HWREG base MCPWM_O_AQCTL HWREG base MCPWM_O_AQCTL MCPWM_AQCTL_PWM2_LDAQAMODE_M uint32_t loadMode MCPWM_AQCTL_PWM2_LDAQAMODE_S MCPWM_ACTION_QUALIFIER_2B HWREG base MCPWM_O_AQCTL HWREG base MCPWM_O_AQCTL MCPWM_AQCTL_PWM2_LDAQBMODE_M uint32_t loadMode MCPWM_AQCTL_PWM2_LDAQBMODE_S MCPWM_ACTION_QUALIFIER_3A HWREG base MCPWM_O_AQCTL HWREG base MCPWM_O_AQCTL MCPWM_AQCTL_PWM3_LDAQAMODE_M uint32_t loadMode MCPWM_AQCTL_PWM3_LDAQAMODE_S default HWREG base MCPWM_O_AQCTL HWREG base MCPWM_O_AQCTL MCPWM_AQCTL_PWM3_LDAQBMODE_M uint32_t loadMode MCPWM_AQCTL_PWM3_LDAQBMODE_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02248</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setActionQualifierActionActive uint32_t base MCPWM_ActionQualifierOutputModule mcpwmOutput MCPWM_ActionQualifierOutput output MCPWM_ActionQualifierOutputEvent event ASSERT MCPWM_isBaseValid base uint32_t mask uint32_t uint32_t event uint32_t value uint32_t output uint32_t event mcpwmOutput MCPWM_AQ_OUTPUT_1A HWREG base MCPWM_O_PWM1_AQCTLA HWREG base MCPWM_O_PWM1_AQCTLA mask value MCPWM_AQ_OUTPUT_1B HWREG base MCPWM_O_PWM1_AQCTLB HWREG base MCPWM_O_PWM1_AQCTLB mask value MCPWM_AQ_OUTPUT_2A HWREG base MCPWM_O_PWM2_AQCTLA HWREG base MCPWM_O_PWM2_AQCTLA mask value MCPWM_AQ_OUTPUT_2B HWREG base MCPWM_O_PWM2_AQCTLB HWREG base MCPWM_O_PWM2_AQCTLB mask value MCPWM_AQ_OUTPUT_3A HWREG base MCPWM_O_PWM3_AQCTLA HWREG base MCPWM_O_PWM3_AQCTLA mask value default HWREG base MCPWM_O_PWM3_AQCTLB HWREG base MCPWM_O_PWM3_AQCTLB mask value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02332</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setActionQualifierActionShadow uint32_t base MCPWM_ActionQualifierOutputModule mcpwmOutput MCPWM_ActionQualifierOutput output MCPWM_ActionQualifierOutputEvent event ASSERT MCPWM_isBaseValid base uint32_t mask uint32_t uint32_t event uint32_t value uint32_t output uint32_t event mcpwmOutput MCPWM_AQ_OUTPUT_1A HWREG base MCPWM_O_PWM1_AQCTLAS HWREG base MCPWM_O_PWM1_AQCTLAS mask value MCPWM_AQ_OUTPUT_1B HWREG base MCPWM_O_PWM1_AQCTLBS HWREG base MCPWM_O_PWM1_AQCTLBS mask value MCPWM_AQ_OUTPUT_2A HWREG base MCPWM_O_PWM2_AQCTLAS HWREG base MCPWM_O_PWM2_AQCTLAS mask value MCPWM_AQ_OUTPUT_2B HWREG base MCPWM_O_PWM2_AQCTLBS HWREG base MCPWM_O_PWM2_AQCTLBS mask value MCPWM_AQ_OUTPUT_3A HWREG base MCPWM_O_PWM3_AQCTLAS HWREG base MCPWM_O_PWM3_AQCTLAS mask value default HWREG base MCPWM_O_PWM3_AQCTLBS HWREG base MCPWM_O_PWM3_AQCTLBS mask value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02462</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setActionQualifierActionCompleteActive uint32_t base MCPWM_ActionQualifierOutputModule mcpwmOutput uint16_t action ASSERT MCPWM_isBaseValid base ASSERT action MCPWM_PWM1_AQCTLA_ZRO_M MCPWM_PWM1_AQCTLA_PRD_M MCPWM_PWM1_AQCTLA_CAU_M MCPWM_PWM1_AQCTLA_CAD_M MCPWM_PWM1_AQCTLA_CBU_M MCPWM_PWM1_AQCTLA_CBD_M mcpwmOutput MCPWM_AQ_OUTPUT_1A HWREG base MCPWM_O_PWM1_AQCTLA uint32_t action MCPWM_AQ_OUTPUT_1B HWREG base MCPWM_O_PWM1_AQCTLB uint32_t action MCPWM_AQ_OUTPUT_2A HWREG base MCPWM_O_PWM2_AQCTLA uint32_t action MCPWM_AQ_OUTPUT_2B HWREG base MCPWM_O_PWM2_AQCTLB uint32_t action MCPWM_AQ_OUTPUT_3A HWREG base MCPWM_O_PWM3_AQCTLA uint32_t action default HWREG base MCPWM_O_PWM3_AQCTLB uint32_t action</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02594</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setActionQualifierActionCompleteShadow uint32_t base MCPWM_ActionQualifierOutputModule mcpwmOutput uint16_t action ASSERT MCPWM_isBaseValid base ASSERT action MCPWM_PWM1_AQCTLAS_ZRO_M MCPWM_PWM1_AQCTLAS_PRD_M MCPWM_PWM1_AQCTLAS_CAU_M MCPWM_PWM1_AQCTLAS_CAD_M MCPWM_PWM1_AQCTLAS_CBU_M MCPWM_PWM1_AQCTLAS_CBD_M mcpwmOutput MCPWM_AQ_OUTPUT_1A HWREG base MCPWM_O_PWM1_AQCTLAS action MCPWM_AQ_OUTPUT_1B HWREG base MCPWM_O_PWM1_AQCTLBS action MCPWM_AQ_OUTPUT_2A HWREG base MCPWM_O_PWM2_AQCTLAS action MCPWM_AQ_OUTPUT_2B HWREG base MCPWM_O_PWM2_AQCTLBS action MCPWM_AQ_OUTPUT_3A HWREG base MCPWM_O_PWM3_AQCTLAS action default HWREG base MCPWM_O_PWM3_AQCTLBS action</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02651</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_enableGlobalLoad uint32_t base ASSERT MCPWM_isBaseValid base EALLOW HWREG base MCPWM_O_GLDCTL MCPWM_GLDCTL_GLD EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02679</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_disableGlobalLoad uint32_t base ASSERT MCPWM_isBaseValid base EALLOW HWREG base MCPWM_O_GLDCTL MCPWM_GLDCTL_GLD EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02725</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setGlobalLoadTrigger uint32_t base MCPWM_GlobalLoadTrigger loadTrigger ASSERT MCPWM_isBaseValid base EALLOW HWREG base MCPWM_O_GLDCTL HWREG base MCPWM_O_GLDCTL MCPWM_GLDCTL_GLDMODE_M uint32_t loadTrigger MCPWM_GLDCTL_GLDMODE_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02756</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_enableGlobalLoadOneShotMode uint32_t base ASSERT MCPWM_isBaseValid base EALLOW HWREG base MCPWM_O_GLDCTL MCPWM_GLDCTL_OSHTMODE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02785</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_disableGlobalLoadOneShotMode uint32_t base ASSERT MCPWM_isBaseValid base EALLOW HWREG base MCPWM_O_GLDCTL MCPWM_GLDCTL_OSHTMODE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02814</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setGlobalLoadOneShotLatch uint32_t base ASSERT MCPWM_isBaseValid base EALLOW HWREG base MCPWM_O_GLDOSHTCTL MCPWM_GLDOSHTCTL_OSHTLD EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02843</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_clearGlobalLoadOneShotLatch uint32_t base ASSERT MCPWM_isBaseValid base EALLOW HWREG base MCPWM_O_GLDOSHTCTL MCPWM_GLDOSHTCTL_OSHTLD EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02869</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getGlobalLoadOneShotLatchStatus uint32_t base status ASSERT MCPWM_isBaseValid base EALLOW status HWREG base MCPWM_O_GLDOSHTSTS MCPWM_GLDOSHTSTS_OSHTLATCH MCPWM_GLDOSHTSTS_OSHTLATCH EDIS status</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02900</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_forceGlobalLoadOneShotEvent uint32_t base ASSERT MCPWM_isBaseValid base EALLOW HWREGH base MCPWM_O_GLDOSHTCTL MCPWM_GLDOSHTCTL_GFRCLD EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02938</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setDeadBandOutputSwapMode uint32_t base MCPWM_DeadBandOutput output enableSwapMode uint32_t mask ASSERT MCPWM_isBaseValid base mask uint32_t uint32_t output MCPWM_DBCTL_OUTSWAP_S enableSwapMode HWREG base MCPWM_O_DBCTL HWREG base MCPWM_O_DBCTL mask HWREG base MCPWM_O_DBCTL HWREG base MCPWM_O_DBCTL mask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l02989</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setDeadBandDelayMode uint32_t base MCPWM_DeadBandDelayMode delayMode enableDelayMode uint32_t mask ASSERT MCPWM_isBaseValid base mask uint32_t uint32_t delayMode MCPWM_DBCTL_OUT_MODE_S enableDelayMode HWREG base MCPWM_O_DBCTL HWREG base MCPWM_O_DBCTL mask HWREG base MCPWM_O_DBCTL HWREG base MCPWM_O_DBCTL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03039</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setDeadBandDelayPolarity uint32_t base MCPWM_DeadBandDelayMode delayMode MCPWM_DeadBandPolarity polarity uint16_t shift ASSERT MCPWM_isBaseValid base shift uint16_t delayMode MCPWM_DBCTL_POLSEL_S HWREG base MCPWM_O_DBCTL HWREG base MCPWM_O_DBCTL shift uint32_t polarity shift</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03078</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setRisingEdgeDeadBandDelayInput uint32_t base uint16_t input ASSERT MCPWM_isBaseValid base ASSERT input MCPWM_DB_INPUT_MCPWMA input MCPWM_DB_INPUT_MCPWMB HWREG base MCPWM_O_DBCTL HWREG base MCPWM_O_DBCTL MCPWM_DBCTL_IN_MODE_S input MCPWM_DBCTL_IN_MODE_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03116</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setFallingEdgeDeadBandDelayInput uint32_t base uint16_t input ASSERT MCPWM_isBaseValid base ASSERT input MCPWM_DB_INPUT_MCPWMA input MCPWM_DB_INPUT_MCPWMB input MCPWM_DB_INPUT_DB_RED input MCPWM_DB_INPUT_DB_RED HWREG base MCPWM_O_DBCTL MCPWM_DBCTL_DEDB_MODE HWREG base MCPWM_O_DBCTL MCPWM_DBCTL_DEDB_MODE HWREG base MCPWM_O_DBCTL HWREG base MCPWM_O_DBCTL MCPWM_DBCTL_IN_MODE_S input MCPWM_DBCTL_IN_MODE_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03168</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setRisingEdgeDelayCountShadowLoadMode uint32_t base MCPWM_RisingEdgeDelayLoadMode loadMode ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_DBCTL HWREG base MCPWM_O_DBCTL MCPWM_DBCTL_LOADREDMODE_M uint32_t loadMode MCPWM_DBCTL_LOADREDMODE_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03204</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setFallingEdgeDelayCountShadowLoadMode uint32_t base MCPWM_FallingEdgeDelayLoadMode loadMode ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_DBCTL HWREG base MCPWM_O_DBCTL MCPWM_DBCTL_LOADFEDMODE_M uint32_t loadMode MCPWM_DBCTL_LOADFEDMODE_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03235</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setRisingEdgeDelayCountActive uint32_t base uint16_t redCount ASSERT MCPWM_isBaseValid base ASSERT redCount MCPWM_DBRED_DBRED_M HWREG base MCPWM_O_DBRED redCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03264</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setRisingEdgeDelayCountShadow uint32_t base uint16_t redCount ASSERT MCPWM_isBaseValid base ASSERT redCount MCPWM_DBREDS_DBREDS_M HWREG base MCPWM_O_DBREDS redCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03293</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setFallingEdgeDelayCountActive uint32_t base uint16_t fedCount ASSERT MCPWM_isBaseValid base ASSERT fedCount MCPWM_DBFED_DBFED_M HWREG base MCPWM_O_DBFED fedCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03322</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setFallingEdgeDelayCountShadow uint32_t base uint16_t fedCount ASSERT MCPWM_isBaseValid base ASSERT fedCount MCPWM_DBFEDS_DBFEDS_M HWREG base MCPWM_O_DBFEDS fedCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03370</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_enableTripZoneSignals uint32_t base uint32_t tzSignal ASSERT MCPWM_isBaseValid base EALLOW HWREG base MCPWM_O_TZSEL tzSignal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03419</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_disableTripZoneSignals uint32_t base uint32_t tzSignal ASSERT MCPWM_isBaseValid base EALLOW HWREG base MCPWM_O_TZSEL uint32_t tzSignal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03461</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setTripZoneAction uint32_t base MCPWM_TripZoneEvent tzEvent MCPWM_TripZoneAction tzAction uint32_t mask tzEvent MCPWM_TZ_ACTION_EVENT_TZA MCPWM_TZCTL_TZA_M MCPWM_TZCTL_TZB_M uint32_t shift tzEvent MCPWM_TZ_ACTION_EVENT_TZA MCPWM_TZCTL_TZA_S MCPWM_TZCTL_TZB_S ASSERT MCPWM_isBaseValid base EALLOW HWREG base MCPWM_O_TZCTL HWREG base MCPWM_O_TZCTL mask uint32_t tzAction shift EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03503</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_selectTripZoneCBCEvent uint32_t base MCPWM_TripZoneCBCMode clearEvent ASSERT MCPWM_isBaseValid base EALLOW HWREG base MCPWM_O_TZCTL HWREG base MCPWM_O_TZCTL MCPWM_TZCTL_CBCPULSE_M uint32_t clearEvent MCPWM_TZCTL_CBCPULSE_S EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03550</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getTripZoneFlagStatus uint32_t base ASSERT MCPWM_isBaseValid base uint32_t mask MCPWM_TZSEL_CBC1 MCPWM_TZSEL_CBC2 MCPWM_TZSEL_CBC3 MCPWM_TZSEL_CBC4 MCPWM_TZSEL_CBC5 MCPWM_TZSEL_CBC6 MCPWM_TZSEL_CBC7 MCPWM_TZSEL_CBC8 MCPWM_TZSEL_OST1 MCPWM_TZSEL_OST2 MCPWM_TZSEL_OST3 MCPWM_TZSEL_OST4 MCPWM_TZSEL_OST5 MCPWM_TZSEL_OST6 MCPWM_TZSEL_OST7 MCPWM_TZSEL_OST8 HWREG base MCPWM_O_TZCBCOSTFLAG mask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03614</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_clearTripZoneFlagStatus uint32_t base uint32_t tzFlags ASSERT MCPWM_isBaseValid base ASSERT tzFlags MCPWM_TZ_FLAG_ALL U EALLOW HWREG base MCPWM_O_TZCBCOSTCLR tzFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03648</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_enableADCTrigger uint32_t base MCPWM_ADCStartOfConversionType adcSOCType ASSERT MCPWM_isBaseValid base adcSOCType MCPWM_SOC_A HWREG base MCPWM_O_SOCEN MCPWM_SOCEN_SOCA_ENABLE MCPWM_SOC_B HWREG base MCPWM_O_SOCEN MCPWM_SOCEN_SOCB_ENABLE MCPWM_SOC_C HWREG base MCPWM_O_SOCEN MCPWM_SOCEN_SOCC_ENABLE HWREG base MCPWM_O_SOCEN MCPWM_SOCEN_SOCD_ENABLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03693</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_disableADCTrigger uint32_t base MCPWM_ADCStartOfConversionType adcSOCType ASSERT MCPWM_isBaseValid base adcSOCType MCPWM_SOC_A HWREG base MCPWM_O_SOCEN uint32_t MCPWM_SOCEN_SOCA_ENABLE MCPWM_SOC_B HWREG base MCPWM_O_SOCEN uint32_t MCPWM_SOCEN_SOCB_ENABLE MCPWM_SOC_C HWREG base MCPWM_O_SOCEN uint32_t MCPWM_SOCEN_SOCC_ENABLE HWREG base MCPWM_O_SOCEN uint32_t MCPWM_SOCEN_SOCD_ENABLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03761</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setADCTriggerSource uint32_t base MCPWM_ADCStartOfConversionType adcSOCType MCPWM_ADCStartOfConversionSource socSource ASSERT MCPWM_isBaseValid base adcSOCType MCPWM_SOC_A HWREG base MCPWM_O_SOCSEL HWREG base MCPWM_O_SOCSEL MCPWM_SOCSEL_SOCA_SEL_M uint32_t socSource MCPWM_SOCSEL_SOCA_SEL_S MCPWM_SOC_B HWREG base MCPWM_O_SOCSEL HWREG base MCPWM_O_SOCSEL MCPWM_SOCSEL_SOCB_SEL_M uint32_t socSource MCPWM_SOCSEL_SOCB_SEL_S MCPWM_SOC_C HWREG base MCPWM_O_SOCSEL HWREG base MCPWM_O_SOCSEL MCPWM_SOCSEL_SOCC_SEL_M uint32_t socSource MCPWM_SOCSEL_SOCC_SEL_S HWREG base MCPWM_O_SOCSEL HWREG base MCPWM_O_SOCSEL MCPWM_SOCSEL_SOCD_SEL_M uint32_t socSource MCPWM_SOCSEL_SOCD_SEL_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03820</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setADCTriggerEventPrescale uint32_t base MCPWM_ADCStartOfConversionType adcSOCType uint16_t preScaleCount ASSERT MCPWM_isBaseValid base ASSERT preScaleCount adcSOCType MCPWM_SOC_A HWREG base MCPWM_O_SOCPERIOD HWREG base MCPWM_O_SOCPERIOD MCPWM_SOCPERIOD_SOCA_PERIOD_M uint32_t preScaleCount MCPWM_SOCPERIOD_SOCA_PERIOD_S MCPWM_SOC_B HWREG base MCPWM_O_SOCPERIOD HWREG base MCPWM_O_SOCPERIOD MCPWM_SOCPERIOD_SOCB_PERIOD_M uint32_t preScaleCount MCPWM_SOCPERIOD_SOCB_PERIOD_S MCPWM_SOC_C HWREG base MCPWM_O_SOCPERIOD HWREG base MCPWM_O_SOCPERIOD MCPWM_SOCPERIOD_SOCC_PERIOD_M uint32_t preScaleCount MCPWM_SOCPERIOD_SOCC_PERIOD_S HWREG base MCPWM_O_SOCPERIOD HWREG base MCPWM_O_SOCPERIOD MCPWM_SOCPERIOD_SOCD_PERIOD_M uint32_t preScaleCount MCPWM_SOCPERIOD_SOCD_PERIOD_S uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03872</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getADCTriggerEventCount uint32_t base MCPWM_ADCStartOfConversionType adcSOCType ASSERT MCPWM_isBaseValid base uint16_t retValue adcSOCType MCPWM_SOC_A retValue uint16_t HWREG base MCPWM_O_SOCCNT MCPWM_SOCCNT_SOCA_CNT_M MCPWM_SOCCNT_SOCA_CNT_S MCPWM_SOC_B retValue uint16_t HWREG base MCPWM_O_SOCCNT MCPWM_SOCCNT_SOCB_CNT_M MCPWM_SOCCNT_SOCB_CNT_S MCPWM_SOC_C retValue uint16_t HWREG base MCPWM_O_SOCCNT MCPWM_SOCCNT_SOCC_CNT_M MCPWM_SOCCNT_SOCC_CNT_S retValue uint16_t HWREG base MCPWM_O_SOCCNT MCPWM_SOCCNT_SOCD_CNT_M MCPWM_SOCCNT_SOCD_CNT_S retValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03922</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getADCTriggerFlagStatus uint32_t base MCPWM_ADCStartOfConversionType adcSOCType ASSERT MCPWM_isBaseValid base retValue FALSE adcSOCType MCPWM_SOC_A retValue HWREG base MCPWM_O_SOCFLAG MCPWM_SOCFLAG_SOCA MCPWM_SOCFLAG_SOCA TRUE FALSE MCPWM_SOC_B retValue HWREG base MCPWM_O_SOCFLAG MCPWM_SOCFLAG_SOCB MCPWM_SOCFLAG_SOCB TRUE FALSE MCPWM_SOC_C retValue HWREG base MCPWM_O_SOCFLAG MCPWM_SOCFLAG_SOCC MCPWM_SOCFLAG_SOCC TRUE FALSE retValue HWREG base MCPWM_O_SOCFLAG MCPWM_SOCFLAG_SOCD MCPWM_SOCFLAG_SOCD TRUE FALSE retValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l03970</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_clearADCTriggerFlag uint32_t base MCPWM_ADCStartOfConversionType adcSOCType ASSERT MCPWM_isBaseValid base adcSOCType MCPWM_SOC_A HWREG base MCPWM_O_SOCCLR MCPWM_SOCCLR_SOCA MCPWM_SOC_B HWREG base MCPWM_O_SOCCLR MCPWM_SOCCLR_SOCB MCPWM_SOC_C HWREG base MCPWM_O_SOCCLR MCPWM_SOCCLR_SOCC HWREG base MCPWM_O_SOCCLR MCPWM_SOCCLR_SOCD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l04037</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setEventTriggerSource uint32_t base MCPWM_EventTriggerType evtTrigType MCPWM_EventTriggerSource evtTrigSource ASSERT MCPWM_isBaseValid base evtTrigType MCPWM_ET_1 HWREG base MCPWM_O_ETSEL HWREG base MCPWM_O_ETSEL MCPWM_ETSEL_ET1_SEL_M uint32_t evtTrigSource MCPWM_ETSEL_ET1_SEL_S HWREG base MCPWM_O_ETSEL HWREG base MCPWM_O_ETSEL MCPWM_ETSEL_ET2_SEL_M uint32_t evtTrigSource MCPWM_ETSEL_ET2_SEL_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l04086</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setEventTriggerEventPrescale uint32_t base MCPWM_EventTriggerType evtTrigType uint16_t preScaleCount ASSERT MCPWM_isBaseValid base ASSERT preScaleCount evtTrigType MCPWM_ET_1 HWREG base MCPWM_O_ETPERIOD HWREG base MCPWM_O_ETPERIOD MCPWM_ETPERIOD_ET1_PERIOD_M uint32_t preScaleCount MCPWM_ETPERIOD_ET1_PERIOD_S HWREG base MCPWM_O_ETPERIOD HWREG base MCPWM_O_ETPERIOD MCPWM_ETPERIOD_ET2_PERIOD_M uint32_t preScaleCount MCPWM_ETPERIOD_ET2_PERIOD_S uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l04129</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getEventTriggerEventCount uint32_t base MCPWM_EventTriggerType evtTrigType ASSERT MCPWM_isBaseValid base uint16_t retValue evtTrigType MCPWM_ET_1 retValue uint16_t HWREG base MCPWM_O_ETCNT MCPWM_ETCNT_ET1_CNT_M MCPWM_ETCNT_ET1_CNT_S retValue uint16_t HWREG base MCPWM_O_ETCNT MCPWM_ETCNT_ET2_CNT_M MCPWM_ETCNT_ET2_CNT_S retValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l04173</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_enableInterrupt uint32_t base uint16_t intFlags ASSERT MCPWM_isBaseValid base ASSERT intFlags MCPWM_INT_SOURCE_ALL U EALLOW HWREG base MCPWM_O_INTEN intFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l04206</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_disableInterrupt uint32_t base uint16_t intFlags ASSERT MCPWM_isBaseValid base ASSERT intFlags MCPWM_INT_SOURCE_ALL U EALLOW HWREG base MCPWM_O_INTEN intFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l04243</field>
    <field name="keywords"></field>
    <field name="text">uint16_t MCPWM_getInterruptSource uint32_t base ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_INTFLAG MCPWM_INT_SOURCE_ALL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l04264</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_getGlobalInterruptStatus uint32_t base ASSERT MCPWM_isBaseValid base HWREG base MCPWM_O_INTFLAG MCPWM_INTFLAG_INT MCPWM_INTFLAG_INT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l04297</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_clearInterrupt uint32_t base uint16_t intFlags ASSERT MCPWM_isBaseValid base ASSERT intFlags MCPWM_INT_SOURCE_ALL U EALLOW HWREGH base MCPWM_O_INTCLR intFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l04322</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_clearGlobalInterrupt uint32_t base ASSERT MCPWM_isBaseValid base EALLOW HWREG base MCPWM_O_INTCLR MCPWM_INTFLAG_INT EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l04356</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_forceInterrupt uint32_t base uint16_t intFlags ASSERT MCPWM_isBaseValid base ASSERT intFlags MCPWM_INT_SOURCE_ALL U EALLOW HWREG base MCPWM_O_INTFRC intFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l04392</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_setEmulationMode uint32_t base MCPWM_EmulationMode emulationMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mcpwm.h</field>
    <field name="url">mcpwm_8h_source.html#l04408</field>
    <field name="keywords"></field>
    <field name="text">MCPWM_configureSignal uint32_t base MCPWM_SignalParams signalParams</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">mcpwm.md</field>
    <field name="url">mcpwm_8md.html</field>
    <field name="keywords">mcpwm.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">mcpwm_ex1_basic_pwm.md</field>
    <field name="url">mcpwm__ex1__basic__pwm_8md.html</field>
    <field name="keywords">mcpwm_ex1_basic_pwm.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">mcpwm_ex2_synchronization.md</field>
    <field name="url">mcpwm__ex2__synchronization_8md.html</field>
    <field name="keywords">mcpwm_ex2_synchronization.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">mcpwm_ex3_deadband.md</field>
    <field name="url">mcpwm__ex3__deadband_8md.html</field>
    <field name="keywords">mcpwm_ex3_deadband.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">mcpwm_ex5_tripzone.md</field>
    <field name="url">mcpwm__ex5__tripzone_8md.html</field>
    <field name="keywords">mcpwm_ex5_tripzone.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">mcpwm_ex6_global_load_use_case.md</field>
    <field name="url">mcpwm__ex6__global__load__use__case_8md.html</field>
    <field name="keywords">mcpwm_ex6_global_load_use_case.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">mcpwm_ex7_dma.md</field>
    <field name="url">mcpwm__ex7__dma_8md.html</field>
    <field name="keywords">mcpwm_ex7_dma.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h.html</field>
    <field name="keywords">memcfg.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00124</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00153</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00172</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text">MEMCFG_TEST_FUNCTIONAL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00177</field>
    <field name="keywords"></field>
    <field name="text">MEMCFG_TEST_WRITE_DATA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00179</field>
    <field name="keywords"></field>
    <field name="text">MEMCFG_TEST_WRITE_ECC MEMCFG_TEST_FUNC_DIAG</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00182</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_TestMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00206</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_setCorrErrorThreshold uint32_t threshold EALLOW HWREG MEMORYERROR_BASE MEMCFG_O_CERRTHRES threshold EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00226</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_getCorrErrorCount HWREG MEMORYERROR_BASE MEMCFG_O_CERRCNT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00251</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_enableCorrErrorInterrupt uint32_t intFlags EALLOW HWREG MEMORYERROR_BASE MEMCFG_O_CEINTEN intFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00280</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_disableCorrErrorInterrupt uint32_t intFlags EALLOW HWREG MEMORYERROR_BASE MEMCFG_O_CEINTEN intFlags EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00302</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_getCorrErrorInterruptStatus HWREG MEMORYERROR_BASE MEMCFG_O_CEINTFLG</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00325</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_forceCorrErrorInterrupt uint32_t intFlags EALLOW HWREG MEMORYERROR_BASE MEMCFG_O_CEINTSET intFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00352</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_clearCorrErrorInterruptStatus uint32_t intFlags EALLOW HWREG MEMORYERROR_BASE MEMCFG_O_CEINTCLR intFlags EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00373</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_getCorrErrorStatus HWREG MEMORYERROR_BASE MEMCFG_O_CERRFLG uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00390</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_getUncorrErrorStatus HWREG MEMORYERROR_BASE MEMCFG_O_UCERRFLG</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00412</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_forceCorrErrorStatus uint32_t stsFlags EALLOW HWREG MEMORYERROR_BASE MEMCFG_O_CERRSET stsFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00438</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_forceUncorrErrorStatus uint32_t stsFlags EALLOW HWREG MEMORYERROR_BASE MEMCFG_O_UCERRSET stsFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00464</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_clearCorrErrorStatus uint32_t stsFlags EALLOW HWREG MEMORYERROR_BASE MEMCFG_O_CERRCLR stsFlags EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00490</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_clearUncorrErrorStatus uint32_t stsFlags EALLOW HWREG MEMORYERROR_BASE MEMCFG_O_UCERRCLR stsFlags EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00511</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_getDiagErrorStatus HWREG TESTERROR_BASE MEMCFG_O_CPU_RAM_TEST_ERROR_STS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00533</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_clearDiagErrorStatus uint32_t stsFlags HWREG TESTERROR_BASE MEMCFG_O_CPU_RAM_TEST_ERROR_STS_CLR stsFlags uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00550</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_getDiagErrorAddress HWREG TESTERROR_BASE MEMCFG_O_CPU_RAM_TEST_ERROR_ADDR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00568</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_enableROMWaitState EALLOW HWREG ROMWAITSTATE_BASE MEMCFG_O_ROMWAITSTATE uint32_t MEMCFG_ROMWAITSTATE_WSDISABLE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00592</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_disableROMWaitState EALLOW HWREG ROMWAITSTATE_BASE MEMCFG_O_ROMWAITSTATE MEMCFG_ROMWAITSTATE_WSDISABLE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00626</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_lockConfig uint32_t memSections</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00648</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_unlockConfig uint32_t memSections</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00672</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_commitConfig uint32_t memSections</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00700</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_lockTestConfig uint32_t memSections</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00725</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_unlockTestConfig uint32_t memSections</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00752</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_setTestMode uint32_t memSection MemCfg_TestMode testMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00774</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_initSections uint32_t ramSections</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00799</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_getInitStatus uint32_t ramSections uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00814</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_getCorrErrorAddress uint32_t stsFlag uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00828</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_getUncorrErrorAddress uint32_t stsFlag</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">memcfg.h</field>
    <field name="url">memcfg_8h_source.html#l00849</field>
    <field name="keywords"></field>
    <field name="text">MemCfg_forceMemError uint32_t memSections</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">memcfg.md</field>
    <field name="url">memcfg_8md.html</field>
    <field name="keywords">memcfg.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">memcfg_ex1_error_handling.md</field>
    <field name="url">memcfg__ex1__error__handling_8md.html</field>
    <field name="keywords">memcfg_ex1_error_handling.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h.html</field>
    <field name="keywords">pga.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">PGA_GAIN_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">PGA_GAIN_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">PGA_GAIN_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">PGA_GAIN_8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">PGA_GAIN_16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text">PGA_GAIN_32 PGA_GAIN_64</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text">PGA_GainValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00092</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">PGA_LOW_PASS_FILTER_DISABLED U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">PGA_LOW_PASS_FILTER_RESISTOR_50_OHM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">PGA_LOW_PASS_FILTER_RESISTOR_100_OHM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text">PGA_LOW_PASS_FILTER_RESISTOR_200_OHM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">PGA_LOW_PASS_FILTER_RESISTOR_400_OHM PGA_LOW_PASS_FILTER_RESISTOR_800_OHM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text">PGA_LowPassResistorValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text">PGA_PMUX_INP1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">PGA_PMUX_INP2 PGA_PMUX_INP3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">PGA_PMUXInput</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00127</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">PGA_NMUX_RTOP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00130</field>
    <field name="keywords"></field>
    <field name="text">PGA_NMUX_RTAP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text">PGA_NMUX_INM1 PGA_NMUX_INM2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00133</field>
    <field name="keywords"></field>
    <field name="text">PGA_NMUXInput</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">PGA_MMUX_NAKED_OPAMP PGA_MMUX_NON_INVERTING_GAIN_VSSA PGA_MMUX_INVERTING_GAIN_NEG PGA_MMUX_INVERTING_GAIN_NEG_SHARED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">PGA_MMUXInput</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00157</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00159</field>
    <field name="keywords"></field>
    <field name="text">PGA_CHOP_DISABLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text">PGA_CHOP_REGULAR_INTOSC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">PGA_CHOP_ADC_ASSISTED_ADCSOC PGA_CHOP_ADC_ASSISTED_EXTCTRL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text">PGA_Chop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00178</field>
    <field name="keywords"></field>
    <field name="text">PGA_isBaseValid uint32_t base base PGA1_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00213</field>
    <field name="keywords"></field>
    <field name="text">PGA_enable uint32_t base ASSERT PGA_isBaseValid base EALLOW HWREG base PGA_O_CTL uint32_t PGA_CTL_PGAEN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00236</field>
    <field name="keywords"></field>
    <field name="text">PGA_disable uint32_t base ASSERT PGA_isBaseValid base EALLOW HWREG base PGA_O_CTL uint32_t PGA_CTL_PGAEN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00260</field>
    <field name="keywords"></field>
    <field name="text">PGA_setGain uint32_t base PGA_GainValue gainValue ASSERT PGA_isBaseValid base EALLOW HWREG base PGA_O_CTL HWREG base PGA_O_CTL uint32_t PGA_CTL_GAIN_M uint16_t gainValue EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00292</field>
    <field name="keywords"></field>
    <field name="text">PGA_setFilterResistor uint32_t base PGA_LowPassResistorValue resistorValue ASSERT PGA_isBaseValid base EALLOW HWREGH base PGA_O_CTL HWREGH base PGA_O_CTL uint16_t PGA_CTL_FILT_RES_SEL_M uint16_t resistorValue EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00320</field>
    <field name="keywords"></field>
    <field name="text">PGA_enableOutput uint32_t base EALLOW HWREGH base PGA_O_CTL uint16_t PGA_CTL_PGA_OUTENABLE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00341</field>
    <field name="keywords"></field>
    <field name="text">PGA_disableOutput uint32_t base ASSERT PGA_isBaseValid base EALLOW HWREGH base PGA_O_CTL uint16_t PGA_CTL_PGA_OUTENABLE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00363</field>
    <field name="keywords"></field>
    <field name="text">PGA_enableInternalGainOutput uint32_t base ASSERT PGA_isBaseValid base EALLOW HWREGH base PGA_O_CTL uint16_t PGA_CTL_PGA_OUTEN_INTGAIN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00385</field>
    <field name="keywords"></field>
    <field name="text">PGA_disableInternalGainOutput uint32_t base ASSERT PGA_isBaseValid base EALLOW HWREGH base PGA_O_CTL uint16_t PGA_CTL_PGA_OUTEN_INTGAIN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00406</field>
    <field name="keywords"></field>
    <field name="text">PGA_enableExternalChop uint32_t base ASSERT PGA_isBaseValid base EALLOW HWREGH base PGA_O_CTL uint16_t PGA_CTL_CHOP_EXTCTRL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00427</field>
    <field name="keywords"></field>
    <field name="text">PGA_disableExternalChop uint32_t base ASSERT PGA_isBaseValid base EALLOW HWREGH base PGA_O_CTL uint16_t PGA_CTL_CHOP_EXTCTRL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00454</field>
    <field name="keywords"></field>
    <field name="text">PGA_selectPMUXInput uint32_t base PGA_PMUXInput pmuxinput ASSERT PGA_isBaseValid base EALLOW HWREGH base PGA_O_MUXSEL HWREGH base PGA_O_MUXSEL PGA_MUXSEL_PMUXSEL_M uint16_t pmuxinput EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00483</field>
    <field name="keywords"></field>
    <field name="text">PGA_selectNMUXInput uint32_t base PGA_NMUXInput nmuxinput ASSERT PGA_isBaseValid base EALLOW HWREGH base PGA_O_MUXSEL HWREGH base PGA_O_MUXSEL PGA_MUXSEL_NMUXSEL_M uint16_t nmuxinput PGA_MUXSEL_NMUXSEL_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00515</field>
    <field name="keywords"></field>
    <field name="text">PGA_selectMMUXInput uint32_t base PGA_MMUXInput mmuxinput ASSERT PGA_isBaseValid base EALLOW HWREGH base PGA_O_MUXSEL HWREGH base PGA_O_MUXSEL PGA_MUXSEL_MMUXSEL_M uint16_t mmuxinput PGA_MUXSEL_MMUXSEL_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00539</field>
    <field name="keywords"></field>
    <field name="text">PGA_configurefeedbackOnPin uint32_t base ASSERT PGA_isBaseValid base EALLOW HWREGH base PGA_O_MUXSEL uint16_t PGA_MUXSEL_PGA_FBONPIN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00565</field>
    <field name="keywords"></field>
    <field name="text">PGA_chop uint32_t base PGA_Chop chop ASSERT PGA_isBaseValid base EALLOW HWREGH base PGA_O_MUXSEL HWREGH base PGA_O_MUXSEL PGA_MUXSEL_PGA_CHOP_M uint16_t chop PGA_MUXSEL_PGA_CHOP_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00587</field>
    <field name="keywords"></field>
    <field name="text">uint16_t PGA_getPGARevision uint32_t base ASSERT PGA_isBaseValid base uint16_t HWREGH base PGA_O_TYPE PGA_TYPE_REV_M</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00609</field>
    <field name="keywords"></field>
    <field name="text">uint16_t PGA_getPGAType uint32_t base ASSERT PGA_isBaseValid base uint16_t HWREGH base PGA_O_TYPE PGA_TYPE_TYPE_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00634</field>
    <field name="keywords"></field>
    <field name="text">PGA_lockRegisters uint32_t base uint16_t registerType ASSERT PGA_isBaseValid base ASSERT registerType EALLOW HWREGH base PGA_O_LOCK registerType EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00661</field>
    <field name="keywords"></field>
    <field name="text">PGA_setOffsetTrimNMOS uint32_t base</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pga.h</field>
    <field name="url">pga_8h_source.html#l00676</field>
    <field name="keywords"></field>
    <field name="text">PGA_setOffsetTrimPMOS uint32_t base</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">pga.md</field>
    <field name="url">pga_8md.html</field>
    <field name="keywords">pga.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">pga_ex1_dac_adc_ext_loopback.md</field>
    <field name="url">pga__ex1__dac__adc__ext__loopback_8md.html</field>
    <field name="keywords">pga_ex1_dac_adc_ext_loopback.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">programming_models.md</field>
    <field name="url">programming__models_8md.html</field>
    <field name="keywords">programming_models.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">project_adding_bit_driver</field>
    <field name="url">project_adding_bit_driver.html</field>
    <field name="keywords"></field>
    <field name="text">Project Adding Bit-field or DriverLib Support Project Adding Bit-field or DriverLib Support F28E12x devices support two types of development software driver library APIs and bit-field structures Each have their advantages and are implemented to be compatible together within the same user application This section details how to add driverlib support to a bit-field project as well as how to add bit-field support to a driverlib project When combining bit-field and driverlib support add a pre-defined symbol within the project properties called This is required to avoid having conflicting definitions in enums/structs/macros which share the exact same names in both bit-field and driverlib headers Adding DriverLib Support Add the following include directory path to the project driverlib f28e12x driverlib Include the following header file in the project main source file device_support f28e12x common include driverlib.h Add or link the driverlib.lib library to the project Location of file driverlib f28e12x driverlib ccs Debug Adding Bit-field Support Add the following include directory path to the project device_support f28e12x headers include Include the following header file in the project main source file device_support f28e12x headers include f28e12x_device.h Add or link the f28e12x_globalvariabledefs.c file to the project Location of file device_support f28e12x headers source Add or link the f28e12x_Headers_nonBIOS.cmd file to the project Location of file device_support f28e12x headers cmd</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h.html</field>
    <field name="keywords">sci.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text">SCI_CONFIG_PAR_NONE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">SCI_CONFIG_PAR_EVEN SCI_CONFIG_PAR_ODD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">SCI_ParityType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00128</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00130</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00132</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00133</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00135</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00142</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00145</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_TX15 SCI_FIFO_TX16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00147</field>
    <field name="keywords"></field>
    <field name="text">SCI_TxFIFOLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00156</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00159</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00163</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00165</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00167</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00168</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00169</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00170</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00171</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00172</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00173</field>
    <field name="keywords"></field>
    <field name="text">SCI_FIFO_RX15 SCI_FIFO_RX16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text">SCI_RxFIFOLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00183</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00185</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00186</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text">SCI_isBaseValid uint32_t base base SCIA_BASE base SCIB_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00235</field>
    <field name="keywords"></field>
    <field name="text">SCI_setParityMode uint32_t base SCI_ParityType parity ASSERT SCI_isBaseValid base HWREGH base SCI_O_CCR HWREGH base SCI_O_CCR SCI_CONFIG_PAR_MASK uint16_t parity SCI_ParityType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00264</field>
    <field name="keywords"></field>
    <field name="text">SCI_getParityMode uint32_t base uint16_t parity ASSERT SCI_isBaseValid base parity HWREGH base SCI_O_CCR SCI_CONFIG_PAR_MASK SCI_ParityType parity</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00293</field>
    <field name="keywords"></field>
    <field name="text">SCI_setAddrMultiProcessorMode uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CCR SCI_CCR_ADDRIDLE_MODE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00318</field>
    <field name="keywords"></field>
    <field name="text">SCI_setIdleMultiProcessorMode uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CCR SCI_CCR_ADDRIDLE_MODE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00343</field>
    <field name="keywords"></field>
    <field name="text">SCI_lockAutobaud uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_HBAUD HWREGH base SCI_O_LBAUD HWREGH base SCI_O_FFCT SCI_FFCT_CDC HWREGH base SCI_O_FFCT SCI_FFCT_ABDCLR HWREGH base SCI_O_FFCT SCI_FFCT_ABD SCI_FFCT_ABD HWREGH base SCI_O_FFCT SCI_FFCT_ABDCLR HWREGH base SCI_O_FFCT SCI_FFCT_CDC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00397</field>
    <field name="keywords"></field>
    <field name="text">SCI_setFIFOInterruptLevel uint32_t base SCI_TxFIFOLevel txLevel SCI_RxFIFOLevel rxLevel ASSERT SCI_isBaseValid base HWREGH base SCI_O_FFTX HWREGH base SCI_O_FFTX SCI_FFTX_TXFFIL_M uint16_t txLevel HWREGH base SCI_O_FFRX HWREGH base SCI_O_FFRX SCI_FFRX_RXFFIL_M uint16_t rxLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00433</field>
    <field name="keywords"></field>
    <field name="text">SCI_getFIFOInterruptLevel uint32_t base SCI_TxFIFOLevel txLevel SCI_RxFIFOLevel rxLevel ASSERT SCI_isBaseValid base txLevel SCI_TxFIFOLevel HWREGH base SCI_O_FFTX SCI_FFTX_TXFFIL_M rxLevel SCI_RxFIFOLevel HWREGH base SCI_O_FFRX SCI_FFRX_RXFFIL_M</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00477</field>
    <field name="keywords"></field>
    <field name="text">SCI_getConfig uint32_t base uint32_t lspclkHz uint32_t baud uint32_t config ASSERT SCI_isBaseValid base baud lspclkHz uint32_t HWREGH base SCI_O_HBAUD HWREGH base SCI_O_LBAUD config uint32_t HWREGH base SCI_O_CCR SCI_CONFIG_PAR_MASK SCI_CONFIG_STOP_MASK SCI_CONFIG_WLEN_MASK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00513</field>
    <field name="keywords"></field>
    <field name="text">SCI_enableModule uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CTL1 SCI_CTL1_TXENA SCI_CTL1_RXENA SCI_CTL1_SWRESET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00540</field>
    <field name="keywords"></field>
    <field name="text">SCI_disableModule uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_FFTX SCI_FFTX_SCIFFENA HWREGH base SCI_O_CTL1 SCI_CTL1_TXENA SCI_CTL1_RXENA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00571</field>
    <field name="keywords"></field>
    <field name="text">SCI_enableTxModule uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CTL1 SCI_CTL1_TXENA SCI_CTL1_SWRESET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00597</field>
    <field name="keywords"></field>
    <field name="text">SCI_disableTxModule uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CTL1 SCI_CTL1_TXENA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00623</field>
    <field name="keywords"></field>
    <field name="text">SCI_enableRxModule uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CTL1 SCI_CTL1_RXENA SCI_CTL1_SWRESET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00649</field>
    <field name="keywords"></field>
    <field name="text">SCI_disableRxModule uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CTL1 SCI_CTL1_RXENA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00674</field>
    <field name="keywords"></field>
    <field name="text">SCI_enableSleepMode uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CTL1 SCI_CTL1_SLEEP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00699</field>
    <field name="keywords"></field>
    <field name="text">SCI_disableSleepMode uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CTL1 SCI_CTL1_SLEEP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00724</field>
    <field name="keywords"></field>
    <field name="text">SCI_enableFIFO uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_FFTX SCI_FFTX_SCIRST HWREGH base SCI_O_FFTX SCI_FFTX_SCIFFENA SCI_FFTX_TXFIFORESET HWREGH base SCI_O_FFRX SCI_FFRX_RXFIFORESET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00751</field>
    <field name="keywords"></field>
    <field name="text">SCI_disableFIFO uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_FFTX SCI_FFTX_SCIFFENA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00778</field>
    <field name="keywords"></field>
    <field name="text">SCI_isFIFOEnabled uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_FFTX SCI_FFTX_SCIFFENA SCI_FFTX_SCIFFENA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00804</field>
    <field name="keywords"></field>
    <field name="text">SCI_resetRxFIFO uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_FFRX SCI_FFRX_RXFIFORESET HWREGH base SCI_O_FFRX SCI_FFRX_RXFIFORESET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00830</field>
    <field name="keywords"></field>
    <field name="text">SCI_resetTxFIFO uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_FFTX SCI_FFTX_TXFIFORESET HWREGH base SCI_O_FFTX SCI_FFTX_TXFIFORESET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00856</field>
    <field name="keywords"></field>
    <field name="text">SCI_resetChannels uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_FFTX SCI_FFTX_SCIRST HWREGH base SCI_O_FFTX SCI_FFTX_SCIRST</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00885</field>
    <field name="keywords"></field>
    <field name="text">SCI_isDataAvailableNonFIFO uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_RXST SCI_RXST_RXRDY SCI_RXST_RXRDY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00914</field>
    <field name="keywords"></field>
    <field name="text">SCI_isSpaceAvailableNonFIFO uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CTL2 SCI_CTL2_TXRDY SCI_CTL2_TXRDY SCI_TxFIFOLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00943</field>
    <field name="keywords"></field>
    <field name="text">SCI_getTxFIFOStatus uint32_t base ASSERT SCI_isBaseValid base SCI_TxFIFOLevel HWREGH base SCI_O_FFTX SCI_FFTX_TXFFST_M SCI_FFTX_TXFFST_S SCI_RxFIFOLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l00972</field>
    <field name="keywords"></field>
    <field name="text">SCI_getRxFIFOStatus uint32_t base ASSERT SCI_isBaseValid base SCI_RxFIFOLevel HWREGH base SCI_O_FFRX SCI_FFRX_RXFFST_M SCI_FFRX_RXFFST_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01009</field>
    <field name="keywords"></field>
    <field name="text">SCI_isTransmitterBusy uint32_t base ASSERT SCI_isBaseValid base SCI_isFIFOEnabled base HWREGH base SCI_O_FFTX SCI_FFTX_TXFFST_M U HWREGH base SCI_O_CTL2 SCI_CTL2_TXEMPTY SCI_CTL2_TXEMPTY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01056</field>
    <field name="keywords"></field>
    <field name="text">SCI_writeCharBlockingFIFO uint32_t base uint16_t data ASSERT SCI_isBaseValid base SCI_getTxFIFOStatus base SCI_FIFO_TX16 HWREGH base SCI_O_TXBUF data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01093</field>
    <field name="keywords"></field>
    <field name="text">SCI_writeCharBlockingNonFIFO uint32_t base uint16_t data ASSERT SCI_isBaseValid base SCI_isSpaceAvailableNonFIFO base HWREGH base SCI_O_TXBUF data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01131</field>
    <field name="keywords"></field>
    <field name="text">SCI_writeCharNonBlocking uint32_t base uint16_t data ASSERT SCI_isBaseValid base HWREGH base SCI_O_TXBUF data uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01163</field>
    <field name="keywords"></field>
    <field name="text">SCI_getRxStatus uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_RXST uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01194</field>
    <field name="keywords"></field>
    <field name="text">SCI_readCharBlockingFIFO uint32_t base ASSERT SCI_isBaseValid base SCI_getRxFIFOStatus base SCI_FIFO_RX0 SCI_getRxStatus base SCI_RXSTATUS_ERROR U U uint16_t HWREGH base SCI_O_RXBUF SCI_RXBUF_SAR_M uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01236</field>
    <field name="keywords"></field>
    <field name="text">SCI_readCharBlockingNonFIFO uint32_t base ASSERT SCI_isBaseValid base SCI_isDataAvailableNonFIFO base uint16_t HWREGH base SCI_O_RXBUF SCI_RXBUF_SAR_M uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01271</field>
    <field name="keywords"></field>
    <field name="text">SCI_readCharNonBlocking uint32_t base ASSERT SCI_isBaseValid base uint16_t HWREGH base SCI_O_RXBUF SCI_RXBUF_SAR_M</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01299</field>
    <field name="keywords"></field>
    <field name="text">SCI_performSoftwareReset uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CTL1 SCI_CTL1_SWRESET HWREGH base SCI_O_CTL1 SCI_CTL1_SWRESET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01326</field>
    <field name="keywords"></field>
    <field name="text">SCI_enableLoopback uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CCR SCI_CCR_LOOPBKENA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01352</field>
    <field name="keywords"></field>
    <field name="text">SCI_disableLoopback uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_CCR SCI_CCR_LOOPBKENA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01378</field>
    <field name="keywords"></field>
    <field name="text">SCI_getOverflowStatus uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_FFRX SCI_FFRX_RXFFOVF SCI_FFRX_RXFFOVF</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01403</field>
    <field name="keywords"></field>
    <field name="text">SCI_clearOverflowStatus uint32_t base ASSERT SCI_isBaseValid base HWREGH base SCI_O_FFRX SCI_FFRX_RXFFOVRCLR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01458</field>
    <field name="keywords"></field>
    <field name="text">SCI_setConfig uint32_t base uint32_t lspclkHz uint32_t baud uint32_t config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01483</field>
    <field name="keywords"></field>
    <field name="text">SCI_writeCharArray uint32_t base uint16_t array uint16_t length</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01505</field>
    <field name="keywords"></field>
    <field name="text">SCI_readCharArray uint32_t base uint16_t array uint16_t length</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01533</field>
    <field name="keywords"></field>
    <field name="text">SCI_enableInterrupt uint32_t base uint32_t intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01553</field>
    <field name="keywords"></field>
    <field name="text">SCI_disableInterrupt uint32_t base uint32_t intFlags uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01566</field>
    <field name="keywords"></field>
    <field name="text">SCI_getInterruptStatus uint32_t base</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01586</field>
    <field name="keywords"></field>
    <field name="text">SCI_clearInterruptStatus uint32_t base uint32_t intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01607</field>
    <field name="keywords"></field>
    <field name="text">SCI_setBaud uint32_t base uint32_t lspclkHz uint32_t baud</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sci.h</field>
    <field name="url">sci_8h_source.html#l01624</field>
    <field name="keywords"></field>
    <field name="text">SCI_setWakeFlag uint32_t base</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sci.md</field>
    <field name="url">sci_8md.html</field>
    <field name="keywords">sci.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sci_echoback.md</field>
    <field name="url">sci__echoback_8md.html</field>
    <field name="keywords">sci_echoback.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sci_loopback.md</field>
    <field name="url">sci__loopback_8md.html</field>
    <field name="keywords">sci_loopback.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sci_loopback_interrupts.md</field>
    <field name="url">sci__loopback__interrupts_8md.html</field>
    <field name="keywords">sci_loopback_interrupts.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sci_stdout_redirect.md</field>
    <field name="url">sci__stdout__redirect_8md.html</field>
    <field name="keywords">sci_stdout_redirect.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h.html</field>
    <field name="keywords">spi.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00208</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00229</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00250</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00274</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00284</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00287</field>
    <field name="keywords"></field>
    <field name="text">SPI_PROT_POL0PHA0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00289</field>
    <field name="keywords"></field>
    <field name="text">SPI_PROT_POL0PHA1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00291</field>
    <field name="keywords"></field>
    <field name="text">SPI_PROT_POL1PHA0 SPI_PROT_POL1PHA1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00294</field>
    <field name="keywords"></field>
    <field name="text">SPI_TransferProtocol</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00301</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00303</field>
    <field name="keywords"></field>
    <field name="text">SPI_MODE_PERIPHERAL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00304</field>
    <field name="keywords"></field>
    <field name="text">SPI_MODE_CONTROLLER</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00305</field>
    <field name="keywords"></field>
    <field name="text">SPI_MODE_PERIPHERAL_OD SPI_MODE_CONTROLLER_OD</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00307</field>
    <field name="keywords"></field>
    <field name="text">SPI_Mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00316</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00318</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TXEMPTY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00319</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00320</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00321</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00322</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00323</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00324</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00325</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00326</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00327</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00328</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00329</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00330</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00331</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00332</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00333</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00334</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX15</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00335</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_TX16 SPI_FIFO_TXFULL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">SPI_TxFIFOLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00346</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00348</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RXEMPTY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00349</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00350</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00351</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00352</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00353</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00354</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00355</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00356</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00357</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00358</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00359</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00360</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00361</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00362</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00363</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00364</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX15</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00365</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RX16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00366</field>
    <field name="keywords"></field>
    <field name="text">SPI_FIFO_RXFULL SPI_FIFO_RXDEFAULT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00368</field>
    <field name="keywords"></field>
    <field name="text">SPI_RxFIFOLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00376</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00379</field>
    <field name="keywords"></field>
    <field name="text">SPI_EMULATION_STOP_MIDWAY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00381</field>
    <field name="keywords"></field>
    <field name="text">SPI_EMULATION_FREE_RUN SPI_EMULATION_STOP_AFTER_TRANSMIT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00384</field>
    <field name="keywords"></field>
    <field name="text">SPI_EmulationMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00392</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00394</field>
    <field name="keywords"></field>
    <field name="text">SPI_PTE_ACTIVE_LOW SPI_PTE_ACTIVE_HIGH SPI_PRI_PTEINV</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00396</field>
    <field name="keywords"></field>
    <field name="text">SPI_PTEPolarity</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00404</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00406</field>
    <field name="keywords"></field>
    <field name="text">SPI_DATA_LITTLE_ENDIAN U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00407</field>
    <field name="keywords"></field>
    <field name="text">SPI_DATA_BIG_ENDIAN SPI_endianess SPI_isBaseValid uint32_t base base SPIA_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00451</field>
    <field name="keywords"></field>
    <field name="text">SPI_enableModule uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_CCR SPI_CCR_SPISWRESET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00474</field>
    <field name="keywords"></field>
    <field name="text">SPI_disableModule uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_CCR SPI_CCR_SPISWRESET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00499</field>
    <field name="keywords"></field>
    <field name="text">SPI_setcharLength uint32_t base uint16_t charLength ASSERT charLength charLength originalStatus HWREGH base SPI_O_CCR SPI_CCR_SPISWRESET SPI_CCR_SPISWRESET SPI_disableModule base HWREGH base SPI_O_CCR HWREGH base SPI_O_CCR SPI_CCR_SPICHAR_M charLength originalStatus SPI_enableModule base</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00533</field>
    <field name="keywords"></field>
    <field name="text">SPI_enableFIFO uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_FFTX SPI_FFTX_SPIFFENA SPI_FFTX_TXFIFO HWREGH base SPI_O_FFRX SPI_FFRX_RXFIFORESET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00559</field>
    <field name="keywords"></field>
    <field name="text">SPI_disableFIFO uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_FFTX SPI_FFTX_SPIFFENA SPI_FFTX_TXFIFO HWREGH base SPI_O_FFRX SPI_FFRX_RXFIFORESET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00586</field>
    <field name="keywords"></field>
    <field name="text">SPI_resetTxFIFO uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_FFTX SPI_FFTX_TXFIFO HWREGH base SPI_O_FFTX SPI_FFTX_TXFIFO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00613</field>
    <field name="keywords"></field>
    <field name="text">SPI_resetRxFIFO uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_FFRX SPI_FFRX_RXFIFORESET HWREGH base SPI_O_FFRX SPI_FFRX_RXFIFORESET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00646</field>
    <field name="keywords"></field>
    <field name="text">SPI_setFIFOInterruptLevel uint32_t base SPI_TxFIFOLevel txLevel SPI_RxFIFOLevel rxLevel ASSERT SPI_isBaseValid base HWREGH base SPI_O_FFTX HWREGH base SPI_O_FFTX SPI_FFTX_TXFFIL_M uint16_t txLevel HWREGH base SPI_O_FFRX HWREGH base SPI_O_FFRX SPI_FFRX_RXFFIL_M uint16_t rxLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00682</field>
    <field name="keywords"></field>
    <field name="text">SPI_getFIFOInterruptLevel uint32_t base SPI_TxFIFOLevel txLevel SPI_RxFIFOLevel rxLevel ASSERT SPI_isBaseValid base txLevel SPI_TxFIFOLevel uint16_t HWREGH base SPI_O_FFTX SPI_FFTX_TXFFIL_M rxLevel SPI_RxFIFOLevel uint16_t HWREGH base SPI_O_FFRX SPI_FFRX_RXFFIL_M SPI_TxFIFOLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00714</field>
    <field name="keywords"></field>
    <field name="text">SPI_getTxFIFOStatus uint32_t base ASSERT SPI_isBaseValid base SPI_TxFIFOLevel uint16_t HWREGH base SPI_O_FFTX SPI_FFTX_TXFFST_M SPI_FFTX_TXFFST_S SPI_RxFIFOLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00743</field>
    <field name="keywords"></field>
    <field name="text">SPI_getRxFIFOStatus uint32_t base ASSERT SPI_isBaseValid base SPI_RxFIFOLevel uint16_t HWREGH base SPI_O_FFRX SPI_FFRX_RXFFST_M SPI_FFRX_RXFFST_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00774</field>
    <field name="keywords"></field>
    <field name="text">SPI_isBusy uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_FFTX SPI_FFTX_TXFFST_M U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00806</field>
    <field name="keywords"></field>
    <field name="text">SPI_writeDataNonBlocking uint32_t base uint16_t data ASSERT SPI_isBaseValid base HWREGH base SPI_O_TXBUF data uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00837</field>
    <field name="keywords"></field>
    <field name="text">SPI_readDataNonBlocking uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_RXBUF</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00870</field>
    <field name="keywords"></field>
    <field name="text">SPI_writeDataBlockingFIFO uint32_t base uint16_t data ASSERT SPI_isBaseValid base SPI_getTxFIFOStatus base SPI_FIFO_TXFULL HWREGH base SPI_O_TXBUF data uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00909</field>
    <field name="keywords"></field>
    <field name="text">SPI_readDataBlockingFIFO uint32_t base ASSERT SPI_isBaseValid base SPI_getRxFIFOStatus base SPI_FIFO_RXEMPTY HWREGH base SPI_O_RXBUF</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00949</field>
    <field name="keywords"></field>
    <field name="text">SPI_writeDataBlockingNonFIFO uint32_t base uint16_t data ASSERT SPI_isBaseValid base HWREGH base SPI_O_STS SPI_STS_BUFFULL_FLAG U HWREGH base SPI_O_TXBUF data uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l00988</field>
    <field name="keywords"></field>
    <field name="text">SPI_readDataBlockingNonFIFO uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_STS SPI_STS_INT_FLAG U HWREGH base SPI_O_RXBUF</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01023</field>
    <field name="keywords"></field>
    <field name="text">SPI_enableTriWire uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_PRI SPI_PRI_TRIWIRE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01048</field>
    <field name="keywords"></field>
    <field name="text">SPI_disableTriWire uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_PRI SPI_PRI_TRIWIRE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01075</field>
    <field name="keywords"></field>
    <field name="text">SPI_enableLoopback uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_CCR SPI_CCR_SPILBK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01101</field>
    <field name="keywords"></field>
    <field name="text">SPI_disableLoopback uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_CCR SPI_CCR_SPILBK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01133</field>
    <field name="keywords"></field>
    <field name="text">SPI_setPTESignalPolarity uint32_t base SPI_PTEPolarity polarity ASSERT SPI_isBaseValid base HWREGH base SPI_O_PRI HWREGH base SPI_O_PRI SPI_PRI_PTEINV uint16_t polarity</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01159</field>
    <field name="keywords"></field>
    <field name="text">SPI_enableHighSpeedMode uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_CCR SPI_CCR_HS_MODE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01185</field>
    <field name="keywords"></field>
    <field name="text">SPI_disableHighSpeedMode uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_CCR SPI_CCR_HS_MODE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01221</field>
    <field name="keywords"></field>
    <field name="text">SPI_setEmulationMode uint32_t base SPI_EmulationMode mode ASSERT SPI_isBaseValid base HWREGH base SPI_O_PRI HWREGH base SPI_O_PRI SPI_PRI_FREE SPI_PRI_SOFT uint16_t mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01251</field>
    <field name="keywords"></field>
    <field name="text">SPI_setTxFifoTransmitDelay uint32_t base uint16_t delay ASSERT SPI_isBaseValid base ASSERT delay HWREGH base SPI_O_FFCT delay uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01277</field>
    <field name="keywords"></field>
    <field name="text">SPI_readRxEmulationBuffer uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_RXEMU</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01304</field>
    <field name="keywords"></field>
    <field name="text">SPI_enableTalk uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_CTL SPI_CTL_TALK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01332</field>
    <field name="keywords"></field>
    <field name="text">SPI_disableTalk uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_CTL SPI_CTL_TALK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01357</field>
    <field name="keywords"></field>
    <field name="text">SPI_reset uint32_t base ASSERT SPI_isBaseValid base HWREGH base SPI_O_FFTX SPI_FFTX_SPIRST HWREGH base SPI_O_FFTX SPI_FFTX_SPIRST</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01428</field>
    <field name="keywords"></field>
    <field name="text">SPI_setConfig uint32_t base uint32_t lspclkHz SPI_TransferProtocol protocol SPI_Mode mode uint32_t bitRate uint16_t dataWidth</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01459</field>
    <field name="keywords"></field>
    <field name="text">SPI_setBaudRate uint32_t base uint32_t lspclkHz uint32_t bitRate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01486</field>
    <field name="keywords"></field>
    <field name="text">SPI_enableInterrupt uint32_t base uint32_t intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01510</field>
    <field name="keywords"></field>
    <field name="text">SPI_disableInterrupt uint32_t base uint32_t intFlags uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01530</field>
    <field name="keywords"></field>
    <field name="text">SPI_getInterruptStatus uint32_t base</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01561</field>
    <field name="keywords"></field>
    <field name="text">SPI_clearInterruptStatus uint32_t base uint32_t intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01584</field>
    <field name="keywords"></field>
    <field name="text">SPI_transmit24Bits uint32_t base uint32_t data uint16_t txDelay</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01606</field>
    <field name="keywords"></field>
    <field name="text">SPI_transmit32Bits uint32_t base uint32_t data uint16_t txDelay uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01630</field>
    <field name="keywords"></field>
    <field name="text">SPI_receive16Bits uint32_t base SPI_endianess endianness uint16_t dummyData uint16_t txDelay uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01653</field>
    <field name="keywords"></field>
    <field name="text">SPI_receive24Bits uint32_t base SPI_endianess endianness uint16_t dummyData uint16_t txDelay uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01676</field>
    <field name="keywords"></field>
    <field name="text">SPI_receive32Bits uint32_t base SPI_endianess endianness uint16_t dummyData uint16_t txDelay uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01697</field>
    <field name="keywords"></field>
    <field name="text">SPI_pollingNonFIFOTransaction uint32_t base uint16_t charLength uint16_t data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spi.h</field>
    <field name="url">spi_8h_source.html#l01718</field>
    <field name="keywords"></field>
    <field name="text">SPI_pollingFIFOTransaction uint32_t base uint16_t charLength uint16_t pTxBuffer uint16_t pRxBuffer uint16_t numOfWords uint16_t txDelay</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">spi.md</field>
    <field name="url">spi_8md.html</field>
    <field name="keywords">spi.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">spi_eeprom.md</field>
    <field name="url">spi__eeprom_8md.html</field>
    <field name="keywords">spi_eeprom.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">spi_eeprom_dma.md</field>
    <field name="url">spi__eeprom__dma_8md.html</field>
    <field name="keywords">spi_eeprom_dma.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">spi_internal_loopback.md</field>
    <field name="url">spi__internal__loopback_8md.html</field>
    <field name="keywords">spi_internal_loopback.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">spi_internal_loopback_interrupts.md</field>
    <field name="url">spi__internal__loopback__interrupts_8md.html</field>
    <field name="keywords">spi_internal_loopback_interrupts.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">spi_loopback_dma.md</field>
    <field name="url">spi__loopback__dma_8md.html</field>
    <field name="keywords">spi_loopback_dma.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">ADC_RepeaterConfig</field>
    <field name="url">structADC__RepeaterConfig.html</field>
    <field name="keywords">ADC_RepeaterConfig</field>
    <field name="text">Values that can be passed to ADC_configureRepeater() as the config parameter</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ADC_RepeaterConfig::repTrigger</field>
    <field name="url">structADC__RepeaterConfig.html#a6d8da0cd46c62663c8888248b897b9fa</field>
    <field name="keywords">repTrigger ADC_RepeaterConfig::repTrigger ADC_RepeaterConfig</field>
    <field name="text">Repeater Trigger</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ADC_RepeaterConfig::repCount</field>
    <field name="url">structADC__RepeaterConfig.html#a816e33451c4ea2dfd85eb4709f532557</field>
    <field name="keywords">repCount ADC_RepeaterConfig::repCount ADC_RepeaterConfig</field>
    <field name="text">Repeater trigger count</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ADC_RepeaterConfig::repSyncin</field>
    <field name="url">structADC__RepeaterConfig.html#a88ea7220762abddcfb8ffd750466d779</field>
    <field name="keywords">repSyncin ADC_RepeaterConfig::repSyncin ADC_RepeaterConfig</field>
    <field name="text">Repeater Syncin</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ADC_RepeaterConfig::repSpread</field>
    <field name="url">structADC__RepeaterConfig.html#ace022e8dfa30b6091980473e370a696e</field>
    <field name="keywords">repSpread ADC_RepeaterConfig::repSpread ADC_RepeaterConfig</field>
    <field name="text">Repeater trigger spread in sysclk cycles</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">DCSM_CSMPasswordKey</field>
    <field name="url">structDCSM__CSMPasswordKey.html</field>
    <field name="keywords">DCSM_CSMPasswordKey</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DCSM_CSMPasswordKey::csmKey3</field>
    <field name="url">structDCSM__CSMPasswordKey.html#a371c345342a82baf2596437f5f3f966a</field>
    <field name="keywords">csmKey3 DCSM_CSMPasswordKey::csmKey3 DCSM_CSMPasswordKey</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DCSM_CSMPasswordKey::csmKey1</field>
    <field name="url">structDCSM__CSMPasswordKey.html#aa2d744fffe273e2271e6120ad5e0f706</field>
    <field name="keywords">csmKey1 DCSM_CSMPasswordKey::csmKey1 DCSM_CSMPasswordKey</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DCSM_CSMPasswordKey::csmKey0</field>
    <field name="url">structDCSM__CSMPasswordKey.html#ad207add48eb0dd916657bfd6445ce275</field>
    <field name="keywords">csmKey0 DCSM_CSMPasswordKey::csmKey0 DCSM_CSMPasswordKey</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DCSM_CSMPasswordKey::csmKey2</field>
    <field name="url">structDCSM__CSMPasswordKey.html#af35446e4576790069073e1d0d1d9c712</field>
    <field name="keywords">csmKey2 DCSM_CSMPasswordKey::csmKey2 DCSM_CSMPasswordKey</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">DMA_ConfigParams</field>
    <field name="url">structDMA__ConfigParams.html</field>
    <field name="keywords">DMA_ConfigParams</field>
    <field name="text">Values that can be passed to DMA_configChannel() as the configure parameter</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::destAddr</field>
    <field name="url">structDMA__ConfigParams.html#a12e5891b644045681baa9837feb5f141</field>
    <field name="keywords">destAddr DMA_ConfigParams::destAddr DMA_ConfigParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::transferSize</field>
    <field name="url">structDMA__ConfigParams.html#a23cddfab386b834e01853afad245bce0</field>
    <field name="keywords">transferSize DMA_ConfigParams::transferSize DMA_ConfigParams</field>
    <field name="text">transferSize value range from 1 to 6 5 5 3 6</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::interruptMode</field>
    <field name="url">structDMA__ConfigParams.html#a2b3d77bdb7ebdcc27da6454cda00ff3b</field>
    <field name="keywords">interruptMode DMA_ConfigParams::interruptMode DMA_ConfigParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::configSize</field>
    <field name="url">structDMA__ConfigParams.html#a37c0cdc9542097747d8b07b6e08b66f8</field>
    <field name="keywords">configSize DMA_ConfigParams::configSize DMA_ConfigParams</field>
    <field name="text">configSize can have a value DMA_CFG_SIZE_16BIT/32BIT</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::srcBurstStep</field>
    <field name="url">structDMA__ConfigParams.html#a3fa7be2c275a3eb3e0b6e026fe56f07e</field>
    <field name="keywords">srcBurstStep DMA_ConfigParams::srcBurstStep DMA_ConfigParams</field>
    <field name="text">Amount to inc or dec the source address after each word of a burst srcBurstStep can have only signed values from 4 0 9 6 to 4 0 9 5</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::destWrapStep</field>
    <field name="url">structDMA__ConfigParams.html#a406de088ecae8b664e1dab87bc19c399</field>
    <field name="keywords">destWrapStep DMA_ConfigParams::destWrapStep DMA_ConfigParams</field>
    <field name="text">Amount to inc or dec the destination address when the wrap occurs destWrapStep can have only signed values from 4 0 9 6 to 4 0 9 5</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::reinitMode</field>
    <field name="url">structDMA__ConfigParams.html#a40b93eef65033665f9166f0add6cdab2</field>
    <field name="keywords">reinitMode DMA_ConfigParams::reinitMode DMA_ConfigParams</field>
    <field name="text">reinitMode can have a value DMA_CFG_CONTINUOUS_DISABLE/ENABLE</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::transferTrigger</field>
    <field name="url">structDMA__ConfigParams.html#a457b6cc13d2cbb010f31b7c577d39911</field>
    <field name="keywords">transferTrigger DMA_ConfigParams::transferTrigger DMA_ConfigParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::destWrapSize</field>
    <field name="url">structDMA__ConfigParams.html#a46d33e7bde97a1cbf6ec8b948b783fd7</field>
    <field name="keywords">destWrapSize DMA_ConfigParams::destWrapSize DMA_ConfigParams</field>
    <field name="text">Number of bursts to be transferred before a wrap of the destination address occurs destWrapSize value range from 1 to 6 5 5 3 6</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::transferMode</field>
    <field name="url">structDMA__ConfigParams.html#a5c13edc895b6afe7c13ecd81b0e771be</field>
    <field name="keywords">transferMode DMA_ConfigParams::transferMode DMA_ConfigParams</field>
    <field name="text">transferMode can have a value DMA_CFG_ONESHOT_DISABLE/ENABLE</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::enableInterrupt</field>
    <field name="url">structDMA__ConfigParams.html#a71fd214205b9cca0910ce9f3ba9310e9</field>
    <field name="keywords">enableInterrupt DMA_ConfigParams::enableInterrupt DMA_ConfigParams</field>
    <field name="text">enableInterrupt can have a value 1 Enable or 0 Disable</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::srcWrapStep</field>
    <field name="url">structDMA__ConfigParams.html#a7ac1149cc18e01284a45bc0e5e8b7a65</field>
    <field name="keywords">srcWrapStep DMA_ConfigParams::srcWrapStep DMA_ConfigParams</field>
    <field name="text">Amount to inc or dec the source address when the wrap occurs srcWrapStep can have only signed values from 4 0 9 6 to 4 0 9 5</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::srcWrapSize</field>
    <field name="url">structDMA__ConfigParams.html#aa177a1e9624ba4ecaf6f745ab102ba75</field>
    <field name="keywords">srcWrapSize DMA_ConfigParams::srcWrapSize DMA_ConfigParams</field>
    <field name="text">Number of bursts to be transferred before a wrap of the source address occurs srcWrapSize value range from 1 to 6 5 5 3 6</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::destBurstStep</field>
    <field name="url">structDMA__ConfigParams.html#aa472abb52eda460ed5e8005aa07d780a</field>
    <field name="keywords">destBurstStep DMA_ConfigParams::destBurstStep DMA_ConfigParams</field>
    <field name="text">Amount to inc or dec the destination address after each word of a burst destBurstStep can have only signed values from 4 0 9 6 to 4 0 9 5</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::destTransferStep</field>
    <field name="url">structDMA__ConfigParams.html#ac9ad88780db38edbd0ebba941f46d46a</field>
    <field name="keywords">destTransferStep DMA_ConfigParams::destTransferStep DMA_ConfigParams</field>
    <field name="text">Amount to inc or dec the destination address after each burst of a transfer destTransferStep can have only signed values from 4 0 9 6 to 4 0 9 5</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::srcAddr</field>
    <field name="url">structDMA__ConfigParams.html#aeb9da921c8f4007d2bfb0c0cdb3110fd</field>
    <field name="keywords">srcAddr DMA_ConfigParams::srcAddr DMA_ConfigParams</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::burstSize</field>
    <field name="url">structDMA__ConfigParams.html#af68482f6cf36251f46a2310c40b45bd6</field>
    <field name="keywords">burstSize DMA_ConfigParams::burstSize DMA_ConfigParams</field>
    <field name="text">burstSize value range from 1 word to 3 2 sixteen-bit words</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DMA_ConfigParams::srcTransferStep</field>
    <field name="url">structDMA__ConfigParams.html#afab9e49254c7ce6543c20649bd174e3e</field>
    <field name="keywords">srcTransferStep DMA_ConfigParams::srcTransferStep DMA_ConfigParams</field>
    <field name="text">Amount to inc or dec the source address after each burst of a transfer srcTransferStep can have only signed values from 4 0 9 6 to 4 0 9 5</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">EQEP_SourceSelect</field>
    <field name="url">structEQEP__SourceSelect.html</field>
    <field name="keywords">EQEP_SourceSelect</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">EQEP_SourceSelect::sourceIndex</field>
    <field name="url">structEQEP__SourceSelect.html#a2f88b2225ae7732b49feee3d4dbe59a5</field>
    <field name="keywords">sourceIndex EQEP_SourceSelect::sourceIndex EQEP_SourceSelect</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">EQEP_SourceSelect::sourceA</field>
    <field name="url">structEQEP__SourceSelect.html#a36bae2e2153e0e1673c09a4eaa6d4a55</field>
    <field name="keywords">sourceA EQEP_SourceSelect::sourceA EQEP_SourceSelect</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">EQEP_SourceSelect::sourceB</field>
    <field name="url">structEQEP__SourceSelect.html#a44f20ceece4ee9a490375ab26b6080da</field>
    <field name="keywords">sourceB EQEP_SourceSelect::sourceB EQEP_SourceSelect</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">MCPWM_SignalParams</field>
    <field name="url">structMCPWM__SignalParams.html</field>
    <field name="keywords">MCPWM_SignalParams</field>
    <field name="text">Values that can be passed to MCPWM_configureSignal() as the signalParams parameter</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::sysClkInHz</field>
    <field name="url">structMCPWM__SignalParams.html#a038d22b5f09219caa88e476431a571b7</field>
    <field name="keywords">sysClkInHz MCPWM_SignalParams::sysClkInHz MCPWM_SignalParams</field>
    <field name="text">SYSCLK Frequency(in Hz)</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::tbClkDiv</field>
    <field name="url">structMCPWM__SignalParams.html#a29e7aa89ffd19944fde732d3a0416e3c</field>
    <field name="keywords">tbClkDiv MCPWM_SignalParams::tbClkDiv MCPWM_SignalParams</field>
    <field name="text">Time Base Counter Clock Divider</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::dutyVal1B</field>
    <field name="url">structMCPWM__SignalParams.html#a3baaf6b4a68eb2da67b3e87054ff1537</field>
    <field name="keywords">dutyVal1B MCPWM_SignalParams::dutyVal1B MCPWM_SignalParams</field>
    <field name="text">Desired MCPWMxB Signal Duty</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::dutyVal2B</field>
    <field name="url">structMCPWM__SignalParams.html#a4162711a6393bbc6d90c979c6d146203</field>
    <field name="keywords">dutyVal2B MCPWM_SignalParams::dutyVal2B MCPWM_SignalParams</field>
    <field name="text">Desired MCPWMxB Signal Duty</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::invertSignal1B</field>
    <field name="url">structMCPWM__SignalParams.html#a471849e1ad7e1e82c47c229dad5b9bd3</field>
    <field name="keywords">invertSignal1B MCPWM_SignalParams::invertSignal1B MCPWM_SignalParams</field>
    <field name="text">Invert MCPWMxB Signal if TRUE</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::dutyVal1A</field>
    <field name="url">structMCPWM__SignalParams.html#a6caa6b3f654e943a1a38c1b839c21ab7</field>
    <field name="keywords">dutyVal1A MCPWM_SignalParams::dutyVal1A MCPWM_SignalParams</field>
    <field name="text">Desired MCPWMxA Signal Duty</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::invertSignal3B</field>
    <field name="url">structMCPWM__SignalParams.html#a7bfbfc3613e96400641f5ca6cbce4769</field>
    <field name="keywords">invertSignal3B MCPWM_SignalParams::invertSignal3B MCPWM_SignalParams</field>
    <field name="text">Invert MCPWMxB Signal if TRUE</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::invertSignal2B</field>
    <field name="url">structMCPWM__SignalParams.html#a7ecaf6f21f0bfb8af9954de03b8ad408</field>
    <field name="keywords">invertSignal2B MCPWM_SignalParams::invertSignal2B MCPWM_SignalParams</field>
    <field name="text">Invert MCPWMxB Signal if TRUE</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::dutyVal3B</field>
    <field name="url">structMCPWM__SignalParams.html#a7f5538a1ca5b76b0f4fd09c0bbdb4399</field>
    <field name="keywords">dutyVal3B MCPWM_SignalParams::dutyVal3B MCPWM_SignalParams</field>
    <field name="text">Desired MCPWMxB Signal Duty</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::dutyVal2A</field>
    <field name="url">structMCPWM__SignalParams.html#a8d6ddd205561e9a661c9850712c73483</field>
    <field name="keywords">dutyVal2A MCPWM_SignalParams::dutyVal2A MCPWM_SignalParams</field>
    <field name="text">Desired MCPWMxA Signal Duty</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::tbCtrMode</field>
    <field name="url">structMCPWM__SignalParams.html#ab1ac8b6bf2d43c650c5950e698326216</field>
    <field name="keywords">tbCtrMode MCPWM_SignalParams::tbCtrMode MCPWM_SignalParams</field>
    <field name="text">Time Base Counter Mode</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::dutyVal3A</field>
    <field name="url">structMCPWM__SignalParams.html#acf13ce1f699665f5f61e2937bac4f8dc</field>
    <field name="keywords">dutyVal3A MCPWM_SignalParams::dutyVal3A MCPWM_SignalParams</field>
    <field name="text">Desired MCPWMxA Signal Duty</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">MCPWM_SignalParams::freqInHz</field>
    <field name="url">structMCPWM__SignalParams.html#af14f51a8e34de5af53ca197dc2c14ce6</field>
    <field name="keywords">freqInHz MCPWM_SignalParams::freqInHz MCPWM_SignalParams</field>
    <field name="text">Desired Signal Frequency(in Hz)</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h.html</field>
    <field name="keywords">sysctl.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00130</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00147</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00148</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00149</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00157</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00173</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00177</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00186</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00193</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00202</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00204</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLL_ENABLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00205</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLL_DISABLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00206</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLL_BYPASS Sysctl_PLLConfig</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00215</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00217</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PDIV_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00218</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PDIV_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00219</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PDIV_4 SYSCTL_PDIV_8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00221</field>
    <field name="keywords"></field>
    <field name="text">Sysctl_PLLPDiv</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00229</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00231</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00232</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00233</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00234</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00235</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00236</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00237</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00238</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00239</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00240</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00241</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00242</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00243</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00244</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_15</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00245</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00246</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_17</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00247</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_18</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00248</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_19</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00249</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_20</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00250</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_21</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00251</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_22</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00252</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_23</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00253</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_24</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00254</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_25</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00255</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_26</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00256</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_27</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00257</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_28</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00258</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_29</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00259</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_30</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00260</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_31</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00261</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_32</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00262</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_33</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00263</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_34</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00264</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_35</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00265</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_36</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00266</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_37</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_38</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00268</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_39</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00269</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_40</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00270</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_41</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00271</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_42</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00272</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_43</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00273</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_44</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00274</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_45</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00275</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_46</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00276</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_47</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00277</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_48</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00278</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_49</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00279</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_50</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00280</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_51</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00281</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_52</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00282</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_53</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00283</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_54</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00284</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_55</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00285</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_56</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00286</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_57</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00287</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_58</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00288</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_59</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00289</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_60</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00290</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_61</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00291</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_62</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00292</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_63</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00293</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_64</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00294</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_65</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00295</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_66</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00296</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_67</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00297</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_68</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00298</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_69</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00299</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_70</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00300</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_71</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00301</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_72</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00302</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_73</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00303</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_74</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00304</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_75</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00305</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_76</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00306</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_77</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00307</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_78</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00308</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_79</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00309</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_80</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00310</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_81</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00311</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_82</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00312</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_83</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00313</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_84</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00314</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_85</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00315</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_86</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00316</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_87</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00317</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_88</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00318</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_89</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00319</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_90</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00320</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_91</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00321</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_92</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00322</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_93</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00323</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_94</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00324</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_95</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00325</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_96</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00326</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_97</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00327</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_98</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00328</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_99</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00329</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_100</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00330</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_101</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00331</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_102</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00332</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_103</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00333</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_104</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00334</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_105</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00335</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_106</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00336</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_107</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_108</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00338</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_109</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00339</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_110</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00340</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_111</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00341</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_112</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00342</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_113</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00343</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_114</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00344</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_115</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00345</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_116</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00346</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_117</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00347</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_118</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00348</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_119</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00349</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_120</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00350</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_121</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00351</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_122</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00352</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_123</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00353</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_124</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00354</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_125</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00355</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_126</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00356</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PLLMULT_127 SYSCTL_PLLMULT_128</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00358</field>
    <field name="keywords"></field>
    <field name="text">Sysctl_PLLMult</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00366</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00368</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00369</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00370</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00371</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00372</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00373</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00374</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00375</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00376</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_18</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00377</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_20</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00378</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_22</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00379</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_24</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00380</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_26</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00381</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_28</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00382</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_RDIVCLK0_30 SYSCTL_RDIVCLK0_32</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00384</field>
    <field name="keywords"></field>
    <field name="text">Sysctl_PLLRDivClk0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00392</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00394</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00395</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00396</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00397</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00398</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00399</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00400</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00401</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00402</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00403</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00404</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00405</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00406</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00407</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00408</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_15</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00409</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00410</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_17</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00411</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_18</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00412</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_19</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00413</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_20</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00414</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_21</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00415</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_22</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00416</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_23</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00417</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_24</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00418</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_25</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00419</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_26</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00420</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_27</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00421</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_28</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00422</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_29</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00423</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_30</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00424</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_31</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00425</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_32</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00426</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_33</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00427</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_34</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00428</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_35</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00429</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_36</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00430</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_37</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00431</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_38</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00432</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_39</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00433</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_40</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00434</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_41</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00435</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_42</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00436</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_43</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00437</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_44</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00438</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_45</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00439</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_46</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00440</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_47</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00441</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_48</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00442</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_49</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00443</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_50</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00444</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_51</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00445</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_52</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00446</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_53</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00447</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_54</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00448</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_55</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00449</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_56</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00450</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_57</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00451</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_58</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00452</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_59</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00453</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_60</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00454</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_61</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00455</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_62</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00456</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYSDIV_63 SYSCTL_SYSDIV_64</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00458</field>
    <field name="keywords"></field>
    <field name="text">Sysctl_PLLSysDiv</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00463</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00464</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00465</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00466</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00475</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00476</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00477</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00478</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00486</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00487</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00488</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00489</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00498</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00499</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00500</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00501</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00502</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00503</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00504</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00511</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00512</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00513</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00514</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00523</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_CLK_TBCLKSYNC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00526</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_PeripheralPCLOCKCR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00534</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00536</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_MCPWM1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00537</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_MCPWM3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00538</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_ECAP1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00539</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_EQEP1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00540</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_ADCA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00541</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_CMPSS1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00542</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_CMPSS2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00543</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_CMPSS3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00544</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_PGA1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00545</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_I2CA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00546</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_SCIA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00547</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_SCIB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00548</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_PERIPH_RES_UARTA SYSCTL_PERIPH_RES_SPIA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00550</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_PeripheralSOFTPRES</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00558</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00560</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PREDIV_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00561</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PREDIV_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00562</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PREDIV_8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00563</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PREDIV_16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00564</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PREDIV_32</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00565</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PREDIV_64</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00566</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PREDIV_128</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00567</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PREDIV_256</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00568</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PREDIV_512</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00569</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PREDIV_1024</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00570</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PREDIV_2048 SYSCTL_WD_PREDIV_4096</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00572</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_WDPredivider</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00580</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00582</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PRESCALE_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00583</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PRESCALE_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00584</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PRESCALE_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00585</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PRESCALE_8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00586</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PRESCALE_16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00587</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_PRESCALE_32 SYSCTL_WD_PRESCALE_64</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00589</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_WDPrescaler</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00597</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00600</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_WD_MODE_RESET SYSCTL_WD_MODE_INTERRUPT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00603</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_WDMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00611</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00613</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_LSPCLK_PRESCALE_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00614</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_LSPCLK_PRESCALE_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00615</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_LSPCLK_PRESCALE_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00616</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_LSPCLK_PRESCALE_6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00617</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_LSPCLK_PRESCALE_8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00618</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_LSPCLK_PRESCALE_10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00619</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_LSPCLK_PRESCALE_12 SYSCTL_LSPCLK_PRESCALE_14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00621</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_LSPCLKPrescaler</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00629</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00631</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CLOCKOUT_PLLSYS U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00632</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CLOCKOUT_PLLCLK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00633</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CLOCKOUT_SYSCLK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00634</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CLOCKOUT_WROSC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00635</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CLOCKOUT_SYSOSC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00636</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CLOCKOUT_WROSCDIV8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00637</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CLOCKOUT_SYSOSCDIV4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00638</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CLOCKOUT_XTALOSC</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00639</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CLOCKOUT_PLLRAW SysCtl_ClockOut</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00648</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00650</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_XTALMODE_CRYSTAL SYSCTL_XTALMODE_SINGLE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00652</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_ExternalOscMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00661</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00663</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYNC_OUT_SRC_MCPWM1SYNCOUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00664</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYNC_OUT_SRC_MCPWM3SYNCOUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00665</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_SYNC_OUT_SRC_ECAP1SYNCOUT SysCtl_SyncOutputSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00675</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00677</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_DEVICE_QUAL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00678</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_DEVICE_FLASH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00679</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_DEVICE_FAMILY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00680</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_DEVICE_PARTNO SYSCTL_DEVICE_CLASSID</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00682</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_DeviceParametric</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00690</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00695</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_ECAPTYPE SysCtl_SelType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00705</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00707</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_XCLKOUT_DIV_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00708</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_XCLKOUT_DIV_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00709</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_XCLKOUT_DIV_4 SYSCTL_XCLKOUT_DIV_8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00712</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_XClkDivider</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00721</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00723</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_TMR2CLKPRESCALE_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00724</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_TMR2CLKPRESCALE_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00725</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_TMR2CLKPRESCALE_4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00726</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_TMR2CLKPRESCALE_8 SYSCTL_TMR2CLKPRESCALE_16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00729</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_Cputimer2ClkDivider</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00737</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00739</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_TMR2CLKSRCSEL_SYSCLK U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00740</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_TMR2CLKSRCSEL_WROSCDIV8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00741</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_TMR2CLKSRCSEL_SYSOSCDIV4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00742</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_TMR2CLKSRCSEL_XTAL SYSCTL_TMR2CLKSRCSEL_AUXPLLCLK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00745</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_Cputimer2ClkSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00753</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CLK_REG_SEL_ALL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00756</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_ClkRegSel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00764</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00766</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CPU_REG_SEL_ALL SYSCTL_CPU_REG_SEL_BROMPATCH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00768</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_CpuRegSel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00777</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00779</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_USER_REG1_SYSRSN U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00780</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_USER_REG2_SYSRSN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00781</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_USER_REG1_XRSN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00782</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_USER_REG2_XRSN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00783</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_USER_REG1_PORESETN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00784</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_USER_REG2_PORESETN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00785</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_USER_REG3_PORESETN SYSCTL_USER_REG4_PORESETN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00787</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_UserRegister</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00795</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00797</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CMPSSLPMSEL_CMPSS_1H</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00798</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CMPSSLPMSEL_CMPSS_1L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00799</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CMPSSLPMSEL_CMPSS_2H</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00800</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CMPSSLPMSEL_CMPSS_2L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00801</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CMPSSLPMSEL_CMPSS_3H</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00802</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CMPSSLPMSEL_CMPSS_3L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00803</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CMPSSLPMSEL_CMPSS_4H</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00804</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CMPSSLPMSEL_CMPSS_4L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00805</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CMPSSLPMSEL_CMPSS_5H</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00806</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CMPSSLPMSEL_CMPSS_5L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00807</field>
    <field name="keywords"></field>
    <field name="text">SYSCTL_CMPSSLPMSEL_CMPSS_6H SYSCTL_CMPSSLPMSEL_CMPSS_6L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00809</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_CMPSSLPMSel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00829</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_deviceCal Device_cal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00856</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_resetPeripheral SysCtl_PeripheralSOFTPRES peripheral uint16_t regIndex uint16_t bitIndex regIndex uint16_t uint16_t peripheral uint16_t SYSCTL_PERIPH_REG_M bitIndex uint16_t peripheral SYSCTL_PERIPH_BIT_M SYSCTL_PERIPH_BIT_S EALLOW HWREG DEVCFG_BASE SYSCTL_O_SOFTPRES_CTRL_PERIPH regIndex bitIndex HWREG DEVCFG_BASE SYSCTL_O_SOFTPRES_CTRL_PERIPH regIndex bitIndex uint16_t peripheral SYSCTL_PERIPH_REG_M uint16_t peripheral SYSCTL_PERIPH_REG_M uint16_t peripheral SYSCTL_PERIPH_REG_M SysCtl_deviceCal EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00911</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enablePeripheral SysCtl_PeripheralPCLOCKCR peripheral uint16_t regIndex uint16_t bitIndex regIndex uint16_t uint16_t peripheral uint16_t SYSCTL_PERIPH_REG_M bitIndex uint16_t peripheral SYSCTL_PERIPH_BIT_M SYSCTL_PERIPH_BIT_S EALLOW HWREG CPUSYS_BASE SYSCTL_O_PERCLKCR regIndex bitIndex EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00946</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_disablePeripheral SysCtl_PeripheralPCLOCKCR peripheral uint16_t regIndex uint16_t bitIndex regIndex uint16_t uint16_t peripheral uint16_t SYSCTL_PERIPH_REG_M bitIndex uint16_t peripheral SYSCTL_PERIPH_BIT_M SYSCTL_PERIPH_BIT_S EALLOW HWREG CPUSYS_BASE SYSCTL_O_PERCLKCR regIndex bitIndex EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l00978</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_resetDevice EALLOW HWREGH WD_BASE SYSCTL_O_WDCR SYSCTL_WD_CHKBITS SYSCTL_REGWRITE_DELAY HWREGH WD_BASE SYSCTL_O_WDCR U SYSCTL_REGWRITE_DELAY EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01032</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getResetCause uint32_t resetCauses resetCauses HWREG CPUSYS_BASE SYSCTL_O_RESC uint32_t SYSCTL_RESC_POR uint32_t SYSCTL_RESC_XRSN uint32_t SYSCTL_RESC_WDRSN uint32_t SYSCTL_RESC_NMIWDRSN uint32_t SYSCTL_RESC_SCCRESETN uint32_t SYSCTL_CAUSE_SIMRESET_CPU1RSN uint32_t SYSCTL_CAUSE_SIMRESET_XRSN HWREG SYSCTL_BOOT_ROM_STATUS uint32_t SYSCTL_BOOT_ROM_POR uint32_t SYSCTL_BOOT_ROM_POR resetCauses SYSCTL_RESC_POR HWREG SYSCTL_BOOT_ROM_STATUS uint32_t SYSCTL_BOOT_ROM_XRS uint32_t SYSCTL_BOOT_ROM_XRS resetCauses SYSCTL_RESC_XRSN resetCauses</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01094</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_clearResetCause uint32_t rstCauses HWREG CPUSYS_BASE SYSCTL_O_RESCCLR rstCauses</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01118</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setLowSpeedClock SysCtl_LSPCLKPrescaler prescaler EALLOW HWREG CLKCFG_BASE SYSCTL_O_LOSPCP HWREG CLKCFG_BASE SYSCTL_O_LOSPCP uint32_t SYSCTL_LOSPCP_LSPCLKDIV_M uint32_t prescaler EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01153</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_selectClockOutSource SysCtl_ClockOut source EALLOW HWREGH CLKCFG_BASE SYSCTL_O_CLKSRCCTL3 SYSCTL_CLKSRCCTL3_XCLKOUTSEL_M SYSCTL_CLKSRCCTL_DELAY HWREGH CLKCFG_BASE SYSCTL_O_CLKSRCCTL3 uint16_t source EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01190</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setExternalOscMode SysCtl_ExternalOscMode mode EALLOW mode SYSCTL_XTALMODE_CRYSTAL HWREG CLKCFG_BASE SYSCTL_O_XTALCR uint32_t SYSCTL_XTALCR_SE SYSCTL_REGWRITE_DELAY SYSCTL_XTALMODE_SINGLE HWREG CLKCFG_BASE SYSCTL_O_XTALCR SYSCTL_XTALCR_SE SYSCTL_REGWRITE_DELAY EDIS uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01235</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getExternalOscCounterValue HWREGH CLKCFG_BASE SYSCTL_O_X1CNT SYSCTL_X1CNT_X1CNT_M</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01248</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_clearExternalOscCounterValue HWREG CLKCFG_BASE SYSCTL_O_X1CNT SYSCTL_X1CNT_CLR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01268</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_turnOnOsc uint32_t oscSource ASSERT oscSource SYSCTL_OSCSRC_XTAL EALLOW oscSource SYSCTL_OSCSRC_XTAL HWREGH CLKCFG_BASE SYSCTL_O_XTALCR SYSCTL_XTALCR_OSCOFF SYSCTL_REGWRITE_DELAY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01312</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_turnOffOsc uint32_t oscSource ASSERT oscSource SYSCTL_OSCSRC_XTAL EALLOW oscSource SYSCTL_OSCSRC_XTAL HWREGH CLKCFG_BASE SYSCTL_O_XTALCR SYSCTL_XTALCR_OSCOFF SYSCTL_REGWRITE_DELAY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01352</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enterIdleMode EALLOW HWREG CPUSYS_BASE SYSCTL_O_LPMCR HWREG CPUSYS_BASE SYSCTL_O_LPMCR uint32_t SYSCTL_LPMCR_LPM_M SYSCTL_LPM_IDLE EDIS IDLE IDLE_ASM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01390</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enterStandbyMode EALLOW HWREG CPUSYS_BASE SYSCTL_O_LPMCR HWREG CPUSYS_BASE SYSCTL_O_LPMCR uint32_t SYSCTL_LPMCR_LPM_M SYSCTL_LPM_STANDBY EDIS IDLE IDLE_ASM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01427</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enterHaltMode EALLOW HWREG CPUSYS_BASE SYSCTL_O_LPMCR HWREG CPUSYS_BASE SYSCTL_O_LPMCR uint32_t SYSCTL_LPMCR_LPM_M SYSCTL_LPM_HALT EDIS IDLE IDLE_ASM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01467</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enableLPMWakeupPin uint32_t pin uint32_t pinMask ASSERT pin pinMask pin EALLOW pin HWREG CPUSYS_BASE SYSCTL_O_GPIOLPMSEL0 pinMask HWREG CPUSYS_BASE SYSCTL_O_GPIOLPMSEL1 pinMask EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01511</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_disableLPMWakeupPin uint32_t pin uint32_t pinMask ASSERT pin pinMask pin EALLOW pin HWREG CPUSYS_BASE SYSCTL_O_GPIOLPMSEL0 pinMask HWREG CPUSYS_BASE SYSCTL_O_GPIOLPMSEL1 pinMask EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01548</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enableCMPSSLPMWakeupPin SysCtl_CMPSSLPMSel pin uint32_t pinMask pinMask uint32_t pin EALLOW HWREG CPUSYS_BASE SYSCTL_O_CMPSSLPMSEL pinMask EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01571</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_disableCMPSSLPMWakeupPin SysCtl_CMPSSLPMSel pin uint32_t pinMask pinMask uint32_t pin EALLOW HWREG CPUSYS_BASE SYSCTL_O_CMPSSLPMSEL pinMask EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01596</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setStandbyQualificationPeriod uint16_t cycles ASSERT cycles cycles EALLOW HWREGH CPUSYS_BASE SYSCTL_O_LPMCR HWREGH CPUSYS_BASE SYSCTL_O_LPMCR uint16_t SYSCTL_LPMCR_QUALSTDBY_M cycles SYSCTL_LPMCR_QUALSTDBY_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01624</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enableWatchdogStandbyWakeup EALLOW HWREGH CPUSYS_BASE SYSCTL_O_LPMCR SYSCTL_LPMCR_WDINTE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01644</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_disableWatchdogStandbyWakeup EALLOW HWREGH CPUSYS_BASE SYSCTL_O_LPMCR SYSCTL_LPMCR_WDINTE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01669</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enableWatchdogInHalt EALLOW HWREGH CLKCFG_BASE SYSCTL_O_CLKSRCCTL1 SYSCTL_CLKSRCCTL1_WDHALTI SYSCTL_CLKSRCCTL_DELAY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01694</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_disableWatchdogInHalt EALLOW HWREGH CLKCFG_BASE SYSCTL_O_CLKSRCCTL1 SYSCTL_CLKSRCCTL1_WDHALTI SYSCTL_CLKSRCCTL_DELAY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01733</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setWatchdogMode SysCtl_WDMode mode EALLOW mode SYSCTL_WD_MODE_INTERRUPT HWREGH WD_BASE SYSCTL_O_SCSR HWREGH WD_BASE SYSCTL_O_SCSR SYSCTL_SCSR_WDOVERRIDE SYSCTL_SCSR_WDENINT HWREGH WD_BASE SYSCTL_O_SCSR SYSCTL_SCSR_WDENINT SYSCTL_SCSR_WDOVERRIDE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01775</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_isWatchdogInterruptActive HWREGH WD_BASE SYSCTL_O_SCSR SYSCTL_SCSR_WDINTS U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01794</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_disableWatchdog EALLOW HWREGH WD_BASE SYSCTL_O_WDCR SYSCTL_WD_CHKBITS SYSCTL_WDCR_WDDIS SYSCTL_REGWRITE_DELAY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01818</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enableWatchdog EALLOW HWREGH WD_BASE SYSCTL_O_WDCR HWREGH WD_BASE SYSCTL_O_WDCR SYSCTL_WDCR_WDDIS SYSCTL_WD_CHKBITS SYSCTL_REGWRITE_DELAY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01843</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_isWatchdogEnabled HWREGH WD_BASE SYSCTL_O_WDCR SYSCTL_WDCR_WDDIS U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01862</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_serviceWatchdog EALLOW HWREGH WD_BASE SYSCTL_O_WDKEY SYSCTL_WD_ENRSTKEY HWREGH WD_BASE SYSCTL_O_WDKEY SYSCTL_WD_RSTKEY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01885</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enableWatchdogReset EALLOW HWREGH WD_BASE SYSCTL_O_WDKEY SYSCTL_WD_ENRSTKEY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01907</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_resetWatchdog EALLOW HWREGH WD_BASE SYSCTL_O_WDKEY SYSCTL_WD_RSTKEY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01933</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setWatchdogPredivider SysCtl_WDPredivider predivider uint16_t regVal regVal uint16_t predivider SYSCTL_WD_CHKBITS EALLOW HWREGH WD_BASE SYSCTL_O_WDCR HWREGH WD_BASE SYSCTL_O_WDCR SYSCTL_WDCR_WDPRECLKDIV_M regVal SYSCTL_REGWRITE_DELAY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01967</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setWatchdogPrescaler SysCtl_WDPrescaler prescaler uint16_t regVal regVal uint16_t prescaler uint16_t SYSCTL_WD_CHKBITS EALLOW HWREGH WD_BASE SYSCTL_O_WDCR HWREGH WD_BASE SYSCTL_O_WDCR SYSCTL_WDCR_WDPS_M regVal SYSCTL_REGWRITE_DELAY EDIS uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l01994</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getWatchdogCounterValue HWREGH WD_BASE SYSCTL_O_WDCNTR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02015</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getWatchdogResetStatus HWREGH CPUSYS_BASE SYSCTL_O_RESC SYSCTL_RESC_WDRSN U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02034</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_clearWatchdogResetStatus EALLOW HWREGH CPUSYS_BASE SYSCTL_O_RESCCLR SYSCTL_RESCCLR_WDRSN EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02059</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setWatchdogWindowValue uint16_t value EALLOW HWREGH WD_BASE SYSCTL_O_WDWCR SYSCTL_WDWCR_MIN_M HWREGH WD_BASE SYSCTL_O_WDWCR value SYSCTL_WDWCR_MIN_M EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02088</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_clearWatchdogOverride EALLOW HWREGH WD_BASE SYSCTL_O_SCSR SYSCTL_SCSR_WDOVERRIDE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02108</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enableNMIGlobalInterrupt EALLOW HWREGH NMI_BASE NMI_O_CFG NMI_CFG_NMIE EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02127</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getNMIStatus HWREGH NMI_BASE NMI_O_FLG NMI_FLG_NMIINT U uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02151</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getNMIFlagStatus HWREGH NMI_BASE NMI_O_FLG</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02180</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_isNMIFlagSet uint16_t nmiFlags ASSERT nmiFlags SYSCTL_NMI_NMIINT SYSCTL_NMI_CLOCKFAIL SYSCTL_NMI_UNCERR SYSCTL_NMI_SWERR U HWREGH NMI_BASE NMI_O_FLG nmiFlags U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02220</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_clearNMIStatus uint16_t nmiFlags ASSERT nmiFlags SYSCTL_NMI_NMIINT SYSCTL_NMI_CLOCKFAIL SYSCTL_NMI_UNCERR SYSCTL_NMI_SWERR U EALLOW HWREGH NMI_BASE NMI_O_FLGCLR nmiFlags HWREGH NMI_BASE NMI_O_FLGCLR NMI_FLG_NMIINT EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02252</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_clearAllNMIFlags uint16_t nmiFlags EALLOW nmiFlags SysCtl_getNMIFlagStatus HWREGH NMI_BASE NMI_O_FLGCLR nmiFlags HWREGH NMI_BASE NMI_O_FLGCLR NMI_FLG_NMIINT EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02285</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_forceNMIFlags uint16_t nmiFlags ASSERT nmiFlags SYSCTL_NMI_NMIINT SYSCTL_NMI_CLOCKFAIL SYSCTL_NMI_UNCERR SYSCTL_NMI_SWERR U EALLOW HWREGH NMI_BASE NMI_O_FLGFRC nmiFlags EDIS uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02319</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getNMIWatchdogCounter HWREGH NMI_BASE NMI_O_WDCNT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02344</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setNMIWatchdogPeriod uint16_t wdPeriod EALLOW HWREGH NMI_BASE NMI_O_WDPRD wdPeriod EDIS uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02364</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getNMIWatchdogPeriod HWREGH NMI_BASE NMI_O_WDPRD uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02387</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getNMIShadowFlagStatus HWREGH NMI_BASE NMI_O_SHDFLG</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02416</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_isNMIShadowFlagSet uint16_t nmiFlags ASSERT nmiFlags SYSCTL_NMI_NMIINT SYSCTL_NMI_CLOCKFAIL SYSCTL_NMI_UNCERR SYSCTL_NMI_SWERR U HWREGH NMI_BASE NMI_O_SHDFLG nmiFlags U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02443</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enableMCD EALLOW HWREGH CLKCFG_BASE SYSCTL_O_MCDCR SYSCTL_MCDCR_MCLKOFF EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02460</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_disableMCD EALLOW HWREGH CLKCFG_BASE SYSCTL_O_MCDCR SYSCTL_MCDCR_MCLKOFF EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02480</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_isMCDClockFailureDetected HWREGH CLKCFG_BASE SYSCTL_O_MCDCR SYSCTL_MCDCR_MCLKSTS U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02496</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_resetMCD EALLOW HWREGH CLKCFG_BASE SYSCTL_O_MCDCR SYSCTL_MCDCR_MCLKCLR EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02514</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_connectMCDClockSource EALLOW HWREGH CLKCFG_BASE SYSCTL_O_MCDCR SYSCTL_MCDCR_OSCOFF EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02532</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_disconnectMCDClockSource EALLOW HWREGH CLKCFG_BASE SYSCTL_O_MCDCR SYSCTL_MCDCR_OSCOFF EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02555</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setSyncOutputConfig SysCtl_SyncOutputSource syncSrc EALLOW HWREG SYNCSOC_BASE SYSCTL_O_SYNCSELECT HWREG SYNCSOC_BASE SYSCTL_O_SYNCSELECT uint32_t SYSCTL_SYNCSELECT_SYNCOUT_M uint32_t syncSrc SYSCTL_SYNCSELECT_SYNCOUT_S EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02583</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_enableExtADCSOCSource uint32_t adcsocSrc EALLOW HWREG SYNCSOC_BASE SYSCTL_O_ADCSOCOUTSELECT adcsocSrc EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02608</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_disableExtADCSOCSource uint32_t adcsocSrc EALLOW HWREG SYNCSOC_BASE SYSCTL_O_ADCSOCOUTSELECT adcsocSrc EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02628</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_lockExtADCSOCSelect EALLOW HWREG SYNCSOC_BASE SYSCTL_O_SYNCSOCLOCK SYSCTL_SYNCSOCLOCK_ADCSOCOUTSELECT EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02649</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_lockSyncSelect EALLOW HWREG SYNCSOC_BASE SYSCTL_O_SYNCSOCLOCK SYSCTL_SYNCSOCLOCK_SYNCSELECT EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02670</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getDeviceRevision HWREG DEVCFG_BASE SYSCTL_O_REVID</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02695</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setXClk SysCtl_XClkDivider divider EALLOW HWREGH CLKCFG_BASE SYSCTL_O_XCLKOUTDIVSEL HWREGH CLKCFG_BASE SYSCTL_O_XCLKOUTDIVSEL SYSCTL_XCLKOUTDIVSEL_XCLKOUTDIV_M uint16_t divider SYSCTL_REGWRITE_DELAY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02734</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setPLLSysClk uint16_t divider EALLOW HWREGH CLKCFG_BASE SYSCTL_O_SYSCLKDIVSEL HWREGH CLKCFG_BASE SYSCTL_O_SYSCLKDIVSEL SYSCTL_SYSCLKDIVSEL_PLLSYSCLKDIV_M divider SYSCTL_REGWRITE_DELAY EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02767</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setCputimer2Clk SysCtl_Cputimer2ClkDivider divider SysCtl_Cputimer2ClkSource source EALLOW HWREGH CPUSYS_BASE SYSCTL_O_TMR2CLKCTL HWREGH CPUSYS_BASE SYSCTL_O_TMR2CLKCTL SYSCTL_TMR2CLKCTL_TMR2CLKSRCSEL_M SYSCTL_TMR2CLKCTL_TMR2CLKPRESCALE_M SYSCTL_REGWRITE_DELAY HWREGH CPUSYS_BASE SYSCTL_O_TMR2CLKCTL uint16_t divider SYSCTL_TMR2CLKCTL_TMR2CLKPRESCALE_S uint16_t source SYSCTL_TMR2CLKCTL_TMR2CLKSRCSEL_S SYSCTL_REGWRITE_DELAY EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02802</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getPIEVErrAddr HWREG CPUSYS_BASE SYSCTL_O_PIEVERRADDR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02822</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_simulateReset uint32_t rstCauses ASSERT rstCauses SYSCTL_SIMRESET_CPU1RSN rstCauses SYSCTL_SIMRESET_XRSN HWREG CPUSYS_BASE SYSCTL_O_SIMRESET rstCauses SYSCTL_REG_KEY SYSCTL_SIMRESET_KEY_M uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02849</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getInterruptStatus HWREG SYSSTAT_BASE SYSCTL_O_SYS_ERR_INT_FLG</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02870</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_clearInterruptStatus uint32_t intFlags HWREG SYSSTAT_BASE SYSCTL_O_SYS_ERR_INT_CLR intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02892</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setInterruptStatus uint32_t intFlags EALLOW HWREG SYSSTAT_BASE SYSCTL_O_SYS_ERR_INT_SET intFlags SYSCTL_REG_KEY SYSCTL_SYS_ERR_INT_SET_KEY_M EDIS uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02913</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getInterruptStatusMask HWREG SYSSTAT_BASE SYSCTL_O_SYS_ERR_MASK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02936</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setInterruptStatusMask uint32_t intFlags EALLOW HWREG SYSSTAT_BASE SYSCTL_O_SYS_ERR_MASK intFlags SYSCTL_REG_KEY SYSCTL_SYS_ERR_MASK_KEY_M EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02960</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_isErrorTriggered HWREGH NMI_BASE NMI_O_ERRORSTS NMI_ERRORSTS_ERROR U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02974</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getErrorPinStatus HWREGH NMI_BASE NMI_O_ERRORSTS NMI_ERRORSTS_PINSTS U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l02990</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_forceError EALLOW HWREGH NMI_BASE NMI_O_ERRORSTSFRC NMI_ERRORSTSFRC_ERROR EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03005</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_clearError EALLOW HWREGH NMI_BASE NMI_O_ERRORSTSCLR NMI_ERRORSTSCLR_ERROR EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03028</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_selectErrPinPolarity uint16_t pol EALLOW pol HWREGH NMI_BASE NMI_O_ERRORCTL NMI_ERRORCTL_ERRORPOLSEL HWREGH NMI_BASE NMI_O_ERRORCTL NMI_ERRORCTL_ERRORPOLSEL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03057</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_lockErrControl EALLOW HWREG NMI_BASE NMI_O_ERRORLOCK NMI_ERRORLOCK_ERRORCTL EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03079</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setUserRegister SysCtl_UserRegister reg uint32_t value HWREG CPUSYS_BASE SYSCTL_O_USER_REG1_SYSRSN uint16_t reg value uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03101</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getUserRegister SysCtl_UserRegister reg HWREG CPUSYS_BASE SYSCTL_O_USER_REG1_SYSRSN uint16_t reg uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03120</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getDeviceUID0 HWREG UID_BASE OTP_O_UID_UNIQUE0 uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03138</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getDeviceUID1 HWREG UID_BASE OTP_O_UID_UNIQUE1 uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03172</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getTapStatus HWREG DEVCFG_BASE SYSCTL_O_TAP_STATUS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03198</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_delay uint32_t count uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03217</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getClock uint32_t clockInHz</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03261</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_setClock uint32_t oscSrc Sysctl_PLLConfig pllConfig Sysctl_PLLPDiv pDiv Sysctl_PLLMult multiplier Sysctl_PLLRDivClk0 rDiv Sysctl_PLLSysDiv sysDiv uint32_t dccBase</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03294</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_isPLLValid uint32_t dccBase uint32_t oscSource Sysctl_PLLPDiv pDiv Sysctl_PLLMult multiplier Sysctl_PLLRDivClk0 rDiv</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03316</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_selectXTAL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03337</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_selectXTALSingleEnded</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03356</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_selectOscSource uint32_t oscSource uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03372</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getLowSpeedClock uint32_t clockInHz uint16_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03396</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_getDeviceParametric SysCtl_DeviceParametric parametric</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03426</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_configureType SysCtl_SelType type uint16_t config uint16_t lock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03442</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_isConfigTypeLocked SysCtl_SelType type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03461</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_lockClkConfig SysCtl_ClkRegSel registerName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sysctl.h</field>
    <field name="url">sysctl_8h_source.html#l03480</field>
    <field name="keywords"></field>
    <field name="text">SysCtl_lockSysConfig SysCtl_CpuRegSel registerName</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sysctl.md</field>
    <field name="url">sysctl_8md.html</field>
    <field name="keywords">sysctl.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sysctl_ex1.md</field>
    <field name="url">sysctl__ex1_8md.html</field>
    <field name="keywords">sysctl_ex1.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sysctl_ex2.md</field>
    <field name="url">sysctl__ex2_8md.html</field>
    <field name="keywords">sysctl_ex2.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">timer.md</field>
    <field name="url">timer_8md.html</field>
    <field name="keywords">timer.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">timer_ex1.md</field>
    <field name="url">timer__ex1_8md.html</field>
    <field name="keywords">timer_ex1.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">timer_ex1_syscfg.md</field>
    <field name="url">timer__ex1__syscfg_8md.html</field>
    <field name="keywords">timer_ex1_syscfg.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">troubleshooting</field>
    <field name="url">troubleshooting.html</field>
    <field name="keywords"></field>
    <field name="text">Troubleshooting Troubleshooting There are a number of things that can cause the user trouble while bringing up a debug session the first time This section will try to provide solutions to the most common problems encountered with the Delfino devices This occurs when one imports a project for which he or she doesn t have the code generation tools for Please ensure that you have at least C2000 Code Generation Tools version 22.6.1.LTS or later This is caused by linked resources not being where the project expects them to be For instance if you imported the projects and selected the projects would no longer build because the files they reference aren t a part of your workspace Always build and run the examples directly in the C2000Ware directory tree The list of available device for debug is determined based on a number of factors including drivers and tools chains available on the host system If you system has previously been used only for development on previous C2000 devices you may not have the required CCS device files In CCS click on and follow the dialog boxes to update your CCS installation This is most often times caused by either a bad target configuration or simply the emulator being physically disconnected If you are unable to connect to a target check the following things Ensure the target configuration is correct for the device you have Ensure the emulator is plugged in to both the computer and the device to be debugged Ensure that the target device is powered This is typically caused by an error in the GEL script or improperly linked code If you are having trouble loading code check the linker command files and maps to ensure that they match the device 9 2 s memory map If these appear correct there is a chance there is something wrong in one of your GEL scripts</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h.html</field>
    <field name="keywords">uart.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00089</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00092</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00127</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00128</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00147</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00148</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00156</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00169</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00177</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00185</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00186</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text">Uart_IntType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00196</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">Uart_SirLPMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00209</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00210</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00211</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00212</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00213</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00225</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00226</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00227</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00228</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00229</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00236</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00244</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00246</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TXEMPTY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00247</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00248</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00249</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00250</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00251</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00252</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00253</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00254</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00255</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00256</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00257</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00258</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00259</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00260</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00261</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_TX14 UART_FIFO_TX15</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00263</field>
    <field name="keywords"></field>
    <field name="text">UART_TxFIFOLevelFine</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00272</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00274</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RXFULL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00275</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00276</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00277</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00278</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00279</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00280</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00281</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00282</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00283</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00284</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00285</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00286</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00287</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00288</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00289</field>
    <field name="keywords"></field>
    <field name="text">UART_FIFO_RX14 UART_FIFO_RX15</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00291</field>
    <field name="keywords"></field>
    <field name="text">UART_RxFIFOLevelFine UART_isBaseValid uint32_t base base UARTAWRITE_BASE base UARTA_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">UART_setParityMode uint32_t base uint32_t parity ASSERT UART_isBaseValid base ASSERT parity UART_CONFIG_PAR_NONE parity UART_CONFIG_PAR_EVEN parity UART_CONFIG_PAR_ODD parity UART_CONFIG_PAR_ONE parity UART_CONFIG_PAR_ZERO HWREG base UART_O_LCRH HWREG base UART_O_LCRH UART_LCRH_SPS UART_LCRH_EPS UART_LCRH_PEN parity uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00373</field>
    <field name="keywords"></field>
    <field name="text">UART_getParityMode uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_LCRH UART_LCRH_SPS UART_LCRH_EPS UART_LCRH_PEN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00407</field>
    <field name="keywords"></field>
    <field name="text">UART_setFIFOLevel uint32_t base uint32_t txLevel uint32_t rxLevel ASSERT UART_isBaseValid base ASSERT txLevel UART_FIFO_TX1_8 txLevel UART_FIFO_TX2_8 txLevel UART_FIFO_TX4_8 txLevel UART_FIFO_TX6_8 txLevel UART_FIFO_TX7_8 ASSERT rxLevel UART_FIFO_RX1_8 rxLevel UART_FIFO_RX2_8 rxLevel UART_FIFO_RX4_8 rxLevel UART_FIFO_RX6_8 rxLevel UART_FIFO_RX7_8 HWREG base UART_O_IFLS txLevel rxLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00450</field>
    <field name="keywords"></field>
    <field name="text">UART_getFIFOLevel uint32_t base uint32_t txLevel uint32_t rxLevel uint32_t temp ASSERT UART_isBaseValid base temp HWREG base UART_O_IFLS txLevel temp UART_IFLS_TXIFLSEL_M rxLevel temp UART_IFLS_RXIFLSEL_M</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00495</field>
    <field name="keywords"></field>
    <field name="text">UART_setFIFOLevelFine uint32_t base UART_TxFIFOLevelFine txLevel UART_RxFIFOLevelFine rxLevel ASSERT UART_isBaseValid base HWREG base UART_O_IFLS UART_CUSTOM_FIFO_LEVEL_KEY HWREG base UART_O_IFLS uint32_t txLevel UART_IFLS_TXIFLSEL_FINE_S uint32_t rxLevel UART_IFLS_RXIFLSEL_FINE_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00540</field>
    <field name="keywords"></field>
    <field name="text">UART_getFIFOLevelFine uint32_t base uint32_t txLevel uint32_t rxLevel uint32_t temp ASSERT UART_isBaseValid base temp HWREG base UART_O_IFLS txLevel temp UART_IFLS_TXIFLSEL_FINE_M UART_IFLS_TXIFLSEL_FINE_S rxLevel temp UART_IFLS_RXIFLSEL_FINE_M UART_IFLS_RXIFLSEL_FINE_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00576</field>
    <field name="keywords"></field>
    <field name="text">UART_enableModule uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_LCRH UART_LCRH_FEN HWREG base UART_O_CTL UART_CTL_UARTEN UART_CTL_TXE UART_CTL_RXE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00608</field>
    <field name="keywords"></field>
    <field name="text">UART_disableModule uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_FR UART_FR_BUSY UART_FR_BUSY HWREG base UART_O_LCRH UART_LCRH_FEN HWREG base UART_O_CTL UART_CTL_UARTEN UART_CTL_TXE UART_CTL_RXE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00646</field>
    <field name="keywords"></field>
    <field name="text">UART_enableFIFO uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_LCRH UART_LCRH_FEN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00671</field>
    <field name="keywords"></field>
    <field name="text">UART_disableFIFO uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_LCRH UART_LCRH_FEN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00696</field>
    <field name="keywords"></field>
    <field name="text">UART_enableModuleNonFIFO uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_CTL UART_CTL_UARTEN UART_CTL_TXE UART_CTL_RXE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00723</field>
    <field name="keywords"></field>
    <field name="text">UART_disableModuleNonFIFO uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_FR UART_FR_BUSY UART_FR_BUSY HWREG base UART_O_CTL UART_CTL_UARTEN UART_CTL_TXE UART_CTL_RXE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00758</field>
    <field name="keywords"></field>
    <field name="text">UART_isFIFOEnabled uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_LCRH UART_LCRH_FEN UART_LCRH_FEN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00796</field>
    <field name="keywords"></field>
    <field name="text">UART_enableSIR uint32_t base Uart_SirLPMode bLowPower ASSERT UART_isBaseValid base bLowPower HWREG base UART_O_CTL UART_CTL_SIREN UART_CTL_SIRLP HWREG base UART_O_CTL HWREG base UART_O_CTL UART_CTL_SIREN UART_CTL_SIRLP UART_CTL_SIREN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00840</field>
    <field name="keywords"></field>
    <field name="text">UART_disableSIR uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_CTL UART_CTL_SIREN UART_CTL_SIRLP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00875</field>
    <field name="keywords"></field>
    <field name="text">UART_setTxIntMode uint32_t base uint32_t mode ASSERT UART_isBaseValid base ASSERT mode UART_TXINT_MODE_EOT mode UART_TXINT_MODE_FIFO HWREG base UART_O_CTL HWREG base UART_O_CTL UART_TXINT_MODE_EOT UART_TXINT_MODE_FIFO mode uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00910</field>
    <field name="keywords"></field>
    <field name="text">UART_getTxIntMode uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_CTL UART_TXINT_MODE_EOT UART_TXINT_MODE_FIFO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00938</field>
    <field name="keywords"></field>
    <field name="text">UART_isDataAvailable uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_FR UART_FR_RXFE UART_FR_RXFE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00966</field>
    <field name="keywords"></field>
    <field name="text">UART_isSpaceAvailable uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_FR UART_FR_TXFF UART_FR_TXFF int32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l00996</field>
    <field name="keywords"></field>
    <field name="text">UART_readCharNonBlocking uint32_t base int32_t ret ASSERT UART_isBaseValid base HWREG base UART_O_FR UART_FR_RXFE U ret HWREG base UART_O_DR ret ret int32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01040</field>
    <field name="keywords"></field>
    <field name="text">UART_readChar uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_FR UART_FR_RXFE UART_FR_RXFE HWREG base UART_O_DR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01075</field>
    <field name="keywords"></field>
    <field name="text">UART_writeChar uint32_t base uint8_t data ASSERT UART_isBaseValid base HWREG base UART_O_FR UART_FR_TXFF UART_FR_TXFF HWREG base UART_O_DR data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01111</field>
    <field name="keywords"></field>
    <field name="text">UART_setBreakConfig uint32_t base breakState ASSERT UART_isBaseValid base HWREG base UART_O_LCRH breakState HWREG base UART_O_LCRH UART_LCRH_BRK HWREG base UART_O_LCRH UART_LCRH_BRK</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01142</field>
    <field name="keywords"></field>
    <field name="text">UART_isBusy uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_FR UART_FR_BUSY UART_FR_BUSY</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01176</field>
    <field name="keywords"></field>
    <field name="text">UART_registerInterrupt uint32_t interruptNum pfnHandler Interrupt_register interruptNum pfnHandler Interrupt_enable interruptNum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01208</field>
    <field name="keywords"></field>
    <field name="text">UART_unregisterInterrupt uint32_t interruptNum Interrupt_disable interruptNum Interrupt_unregister interruptNum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01236</field>
    <field name="keywords"></field>
    <field name="text">UART_clearGlobalInterruptFlag uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_GLB_INT_CLR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01261</field>
    <field name="keywords"></field>
    <field name="text">UART_getGlobalInterruptFlagStatus uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_GLB_INT_FLG</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01303</field>
    <field name="keywords"></field>
    <field name="text">UART_enableInterrupt uint32_t base uint32_t intFlags ASSERT UART_isBaseValid base HWREG base UART_O_IM intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01335</field>
    <field name="keywords"></field>
    <field name="text">UART_disableInterrupt uint32_t base uint32_t intFlags ASSERT UART_isBaseValid base HWREG base UART_O_IM intFlags uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01366</field>
    <field name="keywords"></field>
    <field name="text">UART_getInterruptStatus uint32_t base Uart_IntType masked uint32_t ret ASSERT UART_isBaseValid base masked ret HWREG base UART_O_MIS ret HWREG base UART_O_RIS ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01409</field>
    <field name="keywords"></field>
    <field name="text">UART_clearInterruptStatus uint32_t base uint32_t intFlags ASSERT UART_isBaseValid base HWREG base UART_O_ICR intFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01445</field>
    <field name="keywords"></field>
    <field name="text">UART_enableDMA uint32_t base uint32_t dmaFlags ASSERT UART_isBaseValid base HWREG base UART_O_DMACTL dmaFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01477</field>
    <field name="keywords"></field>
    <field name="text">UART_disableDMA uint32_t base uint32_t dmaFlags ASSERT UART_isBaseValid base HWREG base UART_O_DMACTL dmaFlags uint32_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01509</field>
    <field name="keywords"></field>
    <field name="text">UART_getRxError uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_RSR UART_RSR_ALL_M</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01537</field>
    <field name="keywords"></field>
    <field name="text">UART_clearRxError uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_ECR UART_RSR_ALL_M</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01563</field>
    <field name="keywords"></field>
    <field name="text">UART_enable9Bit uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_9BITADDR UART_9BITADDR_9BITEN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01588</field>
    <field name="keywords"></field>
    <field name="text">UART_disable9Bit uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_9BITADDR UART_9BITADDR_9BITEN</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01619</field>
    <field name="keywords"></field>
    <field name="text">UART_set9BitAddress uint32_t base uint8_t addr uint8_t mask ASSERT UART_isBaseValid base HWREG base UART_O_9BITADDR uint32_t addr UART_9BITADDR_ADDR_S HWREG base UART_O_9BITAMASK uint32_t mask UART_9BITAMASK_MASK_S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01651</field>
    <field name="keywords"></field>
    <field name="text">UART_setIrDALPDivisor uint32_t base uint32_t uartClk uint32_t divider divider uartClk UART_CLK_IRLPBAUD16 HWREG base UART_O_ILPR divider</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01682</field>
    <field name="keywords"></field>
    <field name="text">UART_enableLoopback uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_CTL UART_CTL_LBE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01709</field>
    <field name="keywords"></field>
    <field name="text">UART_disableLoopback uint32_t base ASSERT UART_isBaseValid base HWREG base UART_O_CTL UART_CTL_LBE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01736</field>
    <field name="keywords"></field>
    <field name="text">UART_send9BitAddress uint32_t base uint8_t addr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01752</field>
    <field name="keywords"></field>
    <field name="text">UART_stop9BitDataMode uint32_t base uint32_t lcrh</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01771</field>
    <field name="keywords"></field>
    <field name="text">uint32_t UART_configure9BitDataMode uint32_t base</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01805</field>
    <field name="keywords"></field>
    <field name="text">UART_setConfig uint32_t base uint32_t uartClk uint32_t baud uint32_t config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01831</field>
    <field name="keywords"></field>
    <field name="text">UART_getConfig uint32_t base uint32_t uartClk uint32_t baud uint32_t config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">uart.h</field>
    <field name="url">uart_8h_source.html#l01852</field>
    <field name="keywords"></field>
    <field name="text">UART_writeCharNonBlocking uint32_t base uint8_t data</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">uart.md</field>
    <field name="url">uart_8md.html</field>
    <field name="keywords">uart.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">uart_echoback.md</field>
    <field name="url">uart__echoback_8md.html</field>
    <field name="keywords">uart_echoback.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">uart_loopback.md</field>
    <field name="url">uart__loopback_8md.html</field>
    <field name="keywords">uart_loopback.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">uart_loopback_dma.md</field>
    <field name="url">uart__loopback__dma_8md.html</field>
    <field name="keywords">uart_loopback_dma.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">uart_loopback_fifo_interrupts.md</field>
    <field name="url">uart__loopback__fifo__interrupts_8md.html</field>
    <field name="keywords">uart_loopback_fifo_interrupts.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">watchdog_ex1.md</field>
    <field name="url">watchdog__ex1_8md.html</field>
    <field name="keywords">watchdog_ex1.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h.html</field>
    <field name="keywords">xbar.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00092</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00133</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUTPUT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUTPUT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00135</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUTPUT3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUTPUT4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUTPUT5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUTPUT6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUTPUT7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUTPUT8 XBAR_OutputNum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text">XBAR_TRIP1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00153</field>
    <field name="keywords"></field>
    <field name="text">XBAR_TRIP2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text">XBAR_TRIP3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00155</field>
    <field name="keywords"></field>
    <field name="text">XBAR_TRIP4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00156</field>
    <field name="keywords"></field>
    <field name="text">XBAR_TRIP5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00157</field>
    <field name="keywords"></field>
    <field name="text">XBAR_TRIP6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">XBAR_TRIP7 XBAR_TRIP8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text">XBAR_TripNum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00168</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00170</field>
    <field name="keywords"></field>
    <field name="text">XBAR_AUXSIG0</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00171</field>
    <field name="keywords"></field>
    <field name="text">XBAR_AUXSIG1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00172</field>
    <field name="keywords"></field>
    <field name="text">XBAR_AUXSIG2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00173</field>
    <field name="keywords"></field>
    <field name="text">XBAR_AUXSIG3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00174</field>
    <field name="keywords"></field>
    <field name="text">XBAR_AUXSIG4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text">XBAR_AUXSIG5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00176</field>
    <field name="keywords"></field>
    <field name="text">XBAR_AUXSIG6 XBAR_AUXSIG7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00178</field>
    <field name="keywords"></field>
    <field name="text">XBAR_AuxSigNum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00185</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00190</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00193</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00194</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00196</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00198</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00199</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00200</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00201</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT15 XBAR_INPUT16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00203</field>
    <field name="keywords"></field>
    <field name="text">XBAR_InputNum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00212</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00218</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX00_CMPSS1_CTRIPOUTH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00219</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX00_CMPSS1_CTRIPOUTH_OR_L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00220</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX00_ADCAEVT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00221</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX00_ECAP1_OUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00222</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX01_CMPSS1_CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00223</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX01_INPUTXBAR1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00224</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX02_CMPSS2_CTRIPOUTH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00225</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX02_CMPSS2_CTRIPOUTH_OR_L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00226</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX02_ADCAEVT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00227</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX02_ECAP2_OUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00228</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX03_CMPSS2_CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00229</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX03_INPUTXBAR2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00230</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX04_CMPSS3_CTRIPOUTH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00231</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX04_CMPSS3_CTRIPOUTH_OR_L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00232</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX04_ADCAEVT3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00233</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX05_CMPSS3_CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00234</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX05_INPUTXBAR3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00235</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX07_INPUTXBAR4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00236</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX08_INPUTXBAR5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00237</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX08_ADCSOCA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00238</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX09_EXTSYNCOUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00239</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX10_INPUTXBAR6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00240</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OUT_MUX10_ADCSOCB XBAR_OUT_MUX11_ERRORSTS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00242</field>
    <field name="keywords"></field>
    <field name="text">XBAR_OutputMuxConfig</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00251</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00253</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX00_CMPSS1_CTRIPH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00254</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX00_CMPSS1_CTRIPH_OR_L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00255</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX00_ADCAEVT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00256</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX00_ECAP1_OUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00257</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX01_CMPSS1_CTRIPL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00258</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX01_INPUTXBAR_INPUT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00259</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX02_CMPSS2_CTRIPH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00260</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX02_CMPSS2_CTRIPH_OR_L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00261</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX02_ADCAEVT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00262</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX02_ECAP2_OUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00263</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX03_CMPSS2_CTRIPL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00264</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX03_INPUTXBAR_INPUT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00265</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX04_CMPSS3_CTRIPH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00266</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX04_CMPSS3_CTRIPH_OR_L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX04_ADCAEVT3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00268</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX05_CMPSS3_CTRIPL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00269</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX05_INPUTXBAR_INPUT3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00270</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX07_INPUTXBAR_INPUT4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00271</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX08_INPUTXBAR_INPUT5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00272</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX09_INPUTXBAR_INPUT6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00273</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX09_EMU_STOP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00274</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX10_INPUTXBAR_INPUT7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00275</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX10_ADCSOCA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00276</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX11_INPUTXBAR_INPUT8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00277</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX11_EXTSYNCOUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00278</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX12_INPUTXBAR_INPUT9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00279</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX12_ADCSOCB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00280</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX13_INPUTXBAR_INPUT10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00281</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX13_EQEP1_ERROR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00282</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX14_INPUTXBAR_INPUT11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00283</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX14_CLOCKFAIL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00284</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX15_INPUTXBAR_INPUT12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00285</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX15_ECCDBLERR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00286</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX16_INPUTXBAR_INPUT13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00287</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX16_PIEERR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00288</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWM_MUX17_INPUTXBAR_INPUT14 XBAR_PWM_MUX17_ERRORSTS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00290</field>
    <field name="keywords"></field>
    <field name="text">XBAR_PWMMuxConfig</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00301</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00306</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS1_CTRIPL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00307</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS1_CTRIPH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00308</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS2_CTRIPL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00309</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS2_CTRIPH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00310</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS3_CTRIPL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00311</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS3_CTRIPH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00312</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS4_CTRIPL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00313</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS4_CTRIPH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00314</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS1_CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00315</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS1_CTRIPOUTH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00316</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS2_CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00317</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS2_CTRIPOUTH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00318</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS3_CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00319</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS3_CTRIPOUTH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00320</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS4_CTRIPOUTL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00321</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CMPSS4_CTRIPOUTH</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00325</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00326</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00327</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00328</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT4</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00329</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT5</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00330</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT6</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00331</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_ADCSOCA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00332</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_ADCSOCB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00333</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT7</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00334</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00335</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT9</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00336</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT10</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00338</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT12</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00339</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT13</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00340</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_INPUT14</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00341</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_ECAP1_OUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00342</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_ECAP2_OUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00343</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_EXTSYNCOUT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00344</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_ADCAEVT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00345</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_ADCAEVT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00346</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_ADCAEVT3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00347</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_ADCCEVT1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00351</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_ADCCEVT2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00352</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_ADCCEVT3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00356</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_ERRORSTS_ERROR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00360</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_EMUSTOP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00361</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_EQEP1ERR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00362</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_CLOCKFAIL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00363</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_ECCDBLERR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00364</field>
    <field name="keywords"></field>
    <field name="text">XBAR_INPUT_FLG_PIEERR XBAR_InputFlag XBAR_isBaseValid uint32_t base base OUTPUTXBAR_BASE base INPUTXBAR_BASE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00420</field>
    <field name="keywords"></field>
    <field name="text">XBAR_enableOutputMux uint32_t base XBAR_OutputNum output uint32_t muxes uint16_t outputNum uint16_t output ASSERT XBAR_isBaseValid base EALLOW HWREG base XBAR_O_OUTPUT1MUXENABLE outputNum muxes EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00465</field>
    <field name="keywords"></field>
    <field name="text">XBAR_disableOutputMux uint32_t base XBAR_OutputNum output uint32_t muxes uint16_t outputNum uint16_t output ASSERT XBAR_isBaseValid base EALLOW HWREG base XBAR_O_OUTPUT1MUXENABLE outputNum muxes EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00505</field>
    <field name="keywords"></field>
    <field name="text">XBAR_setOutputLatchMode uint32_t base XBAR_OutputNum output enable ASSERT XBAR_isBaseValid base EALLOW enable HWREGH base XBAR_O_OUTPUTLATCHENABLE uint16_t output HWREGH base XBAR_O_OUTPUTLATCHENABLE uint16_t output EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00547</field>
    <field name="keywords"></field>
    <field name="text">XBAR_getOutputLatchStatus uint32_t base XBAR_OutputNum output ASSERT XBAR_isBaseValid base HWREGH base XBAR_O_OUTPUTLATCH uint16_t output U</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00579</field>
    <field name="keywords"></field>
    <field name="text">XBAR_clearOutputLatch uint32_t base XBAR_OutputNum output ASSERT XBAR_isBaseValid base HWREGH base XBAR_O_OUTPUTLATCHCLR uint16_t output</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00611</field>
    <field name="keywords"></field>
    <field name="text">XBAR_forceOutputLatch uint32_t base XBAR_OutputNum output ASSERT XBAR_isBaseValid base HWREGH base XBAR_O_OUTPUTLATCHFRC uint16_t uint16_t output</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00647</field>
    <field name="keywords"></field>
    <field name="text">XBAR_invertOutputSignal uint32_t base XBAR_OutputNum output invert ASSERT XBAR_isBaseValid base EALLOW invert HWREGH base XBAR_O_OUTPUTINV uint16_t output HWREGH base XBAR_O_OUTPUTINV uint16_t output EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00693</field>
    <field name="keywords"></field>
    <field name="text">XBAR_enablePWMMux XBAR_TripNum trip uint32_t muxes EALLOW HWREG XBAR_PWM_EN_REG_BASE uint32_t trip muxes EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00724</field>
    <field name="keywords"></field>
    <field name="text">XBAR_disablePWMMux XBAR_TripNum trip uint32_t muxes EALLOW HWREG XBAR_PWM_EN_REG_BASE uint32_t trip muxes EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00753</field>
    <field name="keywords"></field>
    <field name="text">XBAR_invertPWMSignal XBAR_TripNum trip invert EALLOW invert HWREGH PWMXBAR_BASE XBAR_O_TRIPOUTINV uint16_t trip HWREGH PWMXBAR_BASE XBAR_O_TRIPOUTINV uint16_t trip EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00804</field>
    <field name="keywords"></field>
    <field name="text">XBAR_setInputPin uint32_t base XBAR_InputNum input uint16_t pin ASSERT pin XBAR_GPIO_MAX_CNT pin XBAR_NON_GPIO_MIN_CNT pin XBAR_NON_GPIO_MAX_CNT pin XBAR_GPIO_AIO_MIN_CNT pin XBAR_GPIO_AIO_MAX_CNT ASSERT XBAR_isBaseValid base EALLOW HWREGH base XBAR_O_INPUT1SELECT uint16_t input pin XBAR_INPUT1SELECT_SELECT_M EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00841</field>
    <field name="keywords"></field>
    <field name="text">XBAR_lockInput uint32_t base XBAR_InputNum input ASSERT XBAR_isBaseValid base EALLOW HWREG base XBAR_O_INPUTSELECTLOCK uint16_t input EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00872</field>
    <field name="keywords"></field>
    <field name="text">XBAR_lockOutput uint32_t base ASSERT XBAR_isBaseValid base EALLOW HWREG base XBAR_O_OUTPUTLOCK uint32_t XBAR_OUTPUTLOCK_KEY_S uint32_t XBAR_OUTPUTLOCK_LOCK EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00902</field>
    <field name="keywords"></field>
    <field name="text">XBAR_lockPWM EALLOW HWREG PWMXBAR_BASE XBAR_O_TRIPLOCK uint32_t XBAR_TRIPLOCK_KEY_S uint32_t XBAR_TRIPLOCK_LOCK EDIS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00956</field>
    <field name="keywords"></field>
    <field name="text">XBAR_setOutputMuxConfig uint32_t base XBAR_OutputNum output XBAR_OutputMuxConfig muxConfig</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l00990</field>
    <field name="keywords"></field>
    <field name="text">XBAR_setPWMMuxConfig XBAR_TripNum trip XBAR_PWMMuxConfig muxConfig</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l01004</field>
    <field name="keywords"></field>
    <field name="text">XBAR_getInputFlagStatus XBAR_InputFlag inputFlag</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">xbar.h</field>
    <field name="url">xbar_8h_source.html#l01019</field>
    <field name="keywords"></field>
    <field name="text">XBAR_clearInputFlag XBAR_InputFlag inputFlag</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">xbar.md</field>
    <field name="url">xbar_8md.html</field>
    <field name="keywords">xbar.md</field>
    <field name="text"></field>
  </doc>
</add>
