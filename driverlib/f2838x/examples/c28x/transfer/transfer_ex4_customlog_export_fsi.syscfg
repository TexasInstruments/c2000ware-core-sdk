/**
 * These arguments were used when this file was generated. They will be automatically applied on subsequent loads
 * via the GUI or CLI. Run CLI with '--help' for additional information on how to override these arguments.
 * @cliArgs --device "F2838x" --package "337bga" --part "F2838x_337bga" --context "CPU1" --product "C2000WARE@5.02.00.00"
 * @versions {"tool":"1.0.0+dev"}
 */
/**
 * Import the modules used in this configuration.
 */
const device_support = scripting.addModule("/driverlib/device_support.js");
const sysctl         = scripting.addModule("/driverlib/sysctl.js");
const CMD            = scripting.addModule("/utilities/cmd_tool/cmd_syscfg/source/CMD");
const CMD1           = CMD.addInstance();
const CMD2           = CMD.addInstance();
const gui            = scripting.addModule("/utilities/transfer/gui.js");

/**
 * Write custom configuration values to the imported modules.
 */

gui.customlogger                                    = true;
gui.guiProjectName                                  = "transfer_ex4_customlog_export_fsi";
gui.exporter.$name                                  = "myEXPORT0";
gui.exporter.exportCustomLogTimestamp               = true;
gui.exporter.comsLink                               = "fsi";
gui.exporter.comsLinkModule.startOfTransmissionMode = scripting.forceWrite("FSI_TX_START_FRAME_CTRL");
gui.exporter.comsLinkModule.pingTimeout             = scripting.forceWrite(false);
gui.exporter.comsLinkModule.userCRC                 = scripting.forceWrite(false);
gui.exporter.comsLinkModule.eccComputeWidth         = scripting.forceWrite("FSI_32BIT_ECC_COMPUTE");
gui.exporter.comsLinkModule.useCase                 = "FSI TX Single Dataline";
gui.exporter.comsLinkModule.d0Qual.padConfig        = scripting.forceWrite("STD");
gui.exporter.comsLinkModule.clkQual.padConfig       = scripting.forceWrite("STD");


/**
 * Write custom configuration values to the imported modules.
 */
CMD1.$name                    = "generic_ram_lnk";
CMD2.$name                    = "generic_flash_lnk";

CMD1.sectionMemory_text       = ["RAMLS0","RAMLS1","RAMLS2","RAMLS3","RAMLS4"];
CMD1.sectionMemory_ramfunc    = ["RAMM0"];
CMD1.sectionMemory_cinit      = ["RAMM0"];
CMD1.sectionMemory_stack      = ["RAMM1"];
CMD1.sectionMemory_init_array = ["RAMM0"];
CMD1.sectionMemory_bss        = ["RAMLS5"];
CMD1.sectionMemory_const      = ["RAMLS5"];
CMD1.sectionMemory_data       = ["RAMGS0", "RAMGS1"];
CMD1.sectionMemory_switch     = ["RAMM0"];
CMD1.sectionMemory_sysmem     = ["RAMLS5"];

CMD2.sectionAlignEnable_ramfunc    = true;
CMD2.sectionAlignEnable_text       = true;
CMD2.sectionAlignEnable_binit      = true;
CMD2.sectionAlignEnable_cinit      = true;
CMD2.sectionAlignEnable_switch     = true;
CMD2.sectionAlignEnable_init_array = true;
CMD2.sectionAlignEnable_const      = true;
CMD2.sectionAlignEnable_ovly       = true;
CMD2.sectionMemory_codestart       = "0x080000";
CMD2.sectionMemory_stack           = ["RAMM1"];
CMD2.sectionMemory_bss             = ["RAMLS5"];
CMD2.sectionMemory_data            = ["RAMLS6", "RAMLS7"];
CMD2.sectionMemory_sysmem          = ["RAMLS5"];
CMD2.sectionMemory_ramfunc         = ["FLASH3"];
CMD2.sectionMemory_text            = ["FLASH1","FLASH2","FLASH3","FLASH4"];
CMD2.sectionMemory_binit           = ["FLASH4"];
CMD2.sectionMemory_cinit           = ["FLASH4"];
CMD2.sectionMemory_switch          = ["FLASH1"];
CMD2.sectionMemory_init_array      = ["FLASH1"];
CMD2.sectionMemory_const           = ["FLASH5"];
CMD2.sectionMemory_ovly            = ["FLASH6"];
CMD2.sectionRunFromDifferentAddr_ramfunc = true;
CMD2.sectionRun_ramfunc                  = ["RAMLS0"];
CMD2.sectionBinit_ramfunc                = false;


