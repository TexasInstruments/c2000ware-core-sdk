%%{
    let Common   = system.getScript('/utilities/dcsm_tool/dcsm_syscfg/source/Common.js');
    let device_ram = 
        system.getScript("/utilities/dcsm_tool/dcsm_syscfg/source/ram_sect_info/" + 
            Common.getDeviceName().toLowerCase() + "_ram.js");
    let device_sect = 
        system.getScript("/utilities/dcsm_tool/dcsm_syscfg/source/ram_sect_info/" + 
            Common.getDeviceName().toLowerCase() + "_sect.js");

    let mod       = system.modules['/utilities/dcsm_tool/dcsm_syscfg/source/DCSM'];
    if (mod == null)
    {
        return ""
    }
    let instances = mod.$instances;
    
    var inst;
    for (var inst_i in instances)
    {
        inst = instances[inst_i];
    }
    let zone1 = inst.ZONE1
    let zone2 = inst.ZONE2
    let zone1_OTP = inst.ZONE1_OTP
    let zone2_OTP = inst.ZONE2_OTP

    let DEFAULT_ZONE1_PASSWORDLOCK = Common.getDefaultPASSWORDLOCKValueMask(1)
    let DEFAULT_ZONE2_PASSWORDLOCK = Common.getDefaultPASSWORDLOCKValueMask(2)
    let DEFAULT_ZONE1_CRCLOCK = Common.getDefaultCRCLOCKValueMask(1)
    let DEFAULT_ZONE2_CRCLOCK = Common.getDefaultCRCLOCKValueMask(2)
    let DEFAULT_ZONE1_JTAGLOCK = Common.getDefaultJTAGLOCKValueMask(1)
    let DEFAULT_ZONE2_JTAGLOCK = Common.getDefaultJTAGLOCKValueMask(2)
    
    let zone1_LINKPOINTER = zone1['NEXT_LINKPOINTER']
    let zone1_PASWDLOCK = zone1_OTP['PASWDLOCK'] == "ENABLE"?DEFAULT_ZONE1_PASSWORDLOCK[0].substring(0,9) + "0":DEFAULT_ZONE1_PASSWORDLOCK[0];
    let zone1_CRCLOCK = zone1_OTP['CRCLOCK'] == "ENABLE"?DEFAULT_ZONE1_CRCLOCK[0].substring(0,9) + "0":DEFAULT_ZONE1_CRCLOCK[0];
    let zone1_JTAGLOCK = zone1_OTP['JTAGLOCK'] == true?DEFAULT_ZONE1_JTAGLOCK[0].substring(0,9) + "0":DEFAULT_ZONE1_JTAGLOCK[0];
    var zone1_BOOTCTRL = "";
    var ZONE1_BOOTPIN_CONFIG = "";
    var ZONE1_GPREG2 = "";
    var ZONE1_BOOTDEF_LOW = "";
    var ZONE1_BOOTDEF_HIGH = "";
    if (["F28004x", "F28002x", "F2838x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName()))
    {
        var BMSP0 = "FF";
        var BMSP1 = "FF";
        var BMSP2 = "FF";
        // ZONE1_BOOTPIN_CONFIG =  Key (31-24) | BMSP2 (23-16) | BMSP1 (15-8) | BMSP0 (7-0)
        // ZONE1_GPREG2 = Key (31-24) | RSVD (23-8) |  RSVD (7-6) | ESP (5-4) | RSVD (3-0) 
        if (zone1_OTP['bootPinCount'] > 0) { BMSP0 = (parseInt(zone1_OTP["BMSP0"].substring(4)) + 0).toString(16).padStart(2, '0') }
        if (zone1_OTP['bootPinCount'] > 1) { BMSP1 = (parseInt(zone1_OTP["BMSP1"].substring(4)) + 0).toString(16).padStart(2, '0') }
        if (zone1_OTP['bootPinCount'] > 2) { BMSP2 = (parseInt(zone1_OTP["BMSP2"].substring(4)) + 0).toString(16).padStart(2, '0') }     
        ZONE1_BOOTPIN_CONFIG = "0x5A" + BMSP2 + BMSP1 + BMSP0;

        var write_protect_bits = parseInt("1111111111111111",2)
        if (["F28P55x"].includes(Common.getDeviceName()))
        {
            var binary_write_protect_bits = ""
            for (var i = 15; i >= 1; i--)
            {
                var param_name = "write_protect_bit" + (i+8).toString()
                if (!zone1_OTP.hasOwnProperty(param_name)){
                    binary_write_protect_bits = binary_write_protect_bits + "1"
                }
                else{
                    binary_write_protect_bits = binary_write_protect_bits + zone1_OTP[param_name]
                }
            }
            write_protect_bits = parseInt(binary_write_protect_bits, 2)
        }
        var mpost_shift = 2
        if (["F28P55x"].includes(Common.getDeviceName())){
            mpost_shift = 3
        }
        if (["F28004x", "F28002x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName())){
            ZONE1_GPREG2 = "0x5AFFFF" + (parseInt(12 + parseInt(zone1_OTP["ERRORSTSPIN"])).toString(16)) + "F";
            if (["F28002x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName()))
            {
                var writeprotect_runmpost_errorsts = ((write_protect_bits << (mpost_shift + 2)) + (parseInt(zone1_OTP["RUNMPOST"]) << mpost_shift) + parseInt(zone1_OTP["ERRORSTSPIN"])).toString(16)
                ZONE1_GPREG2 = "0x5A" + writeprotect_runmpost_errorsts + parseInt(zone1_OTP["CJTAGNODEID"]).toString(16);
            }
        }
        else if ("F2838x".includes(Common.getDeviceName()))
        {
            ZONE1_GPREG2 = "0x5A" + "FFFF" + (parseInt(zone1_OTP["RUNMPOST"])).toString(16).toUpperCase() + "F";            
        }

        // Z1OTP_BOOTDEF_LOW = BOOT_DEF3(31-24) | BOOT_DEF2(23-16) | BOOT_DEF1(15-8) | BOOT_DEF0(7-0)
        // Z1OTP_BOOTDEF_HIGH = BOOT_DEF7(31-24) | BOOT_DEF6(23-16) | BOOT_DEF5(15-8) | BOOT_DEF4(7-0)
        ZONE1_BOOTDEF_LOW = "0x" + 
                            ((zone1_OTP['bootPinCount'] > 1)?zone1_OTP["BOOTDEF3"].substring(2):"FF") + 
                            ((zone1_OTP['bootPinCount'] > 1)?zone1_OTP["BOOTDEF2"].substring(2):"FF") + 
                            ((zone1_OTP['bootPinCount'] > 0)?zone1_OTP["BOOTDEF1"].substring(2):"FF") + 
                            zone1_OTP["BOOTDEF0"].substring(2);
        ZONE1_BOOTDEF_HIGH = "0x" + 
                            ((zone1_OTP['bootPinCount'] > 2)?zone1_OTP["BOOTDEF7"].substring(2):"FF") + 
                            ((zone1_OTP['bootPinCount'] > 2)?zone1_OTP["BOOTDEF6"].substring(2):"FF") + 
                            ((zone1_OTP['bootPinCount'] > 2)?zone1_OTP["BOOTDEF5"].substring(2):"FF") + 
                            ((zone1_OTP['bootPinCount'] > 2)?zone1_OTP["BOOTDEF4"].substring(2):"FF");
    }
    else
    {
        zone1_BOOTCTRL = "0x" + 
                         (parseInt(zone1_OTP["BOOTCTRL_PIN1"].substring(4)) + 1).toString(16).padStart(2, '0') +
                         (parseInt(zone1_OTP["BOOTCTRL_PIN0"].substring(4)) + 1).toString(16).padStart(2, '0') + 
                         zone1_OTP['BOOTCTRL_MODE'].substring(2) + 
                         zone1_OTP['BOOTCTRL_KEY'].substring(2);
    }

    
    var zone1_OTP_JLM_comment = ";;";
    var zone1_OTP_JLM_comment_workaround = "";
    var zone1_JTAGPSWDH0 = "";
    var zone1_JTAGPSWDH1 = "";
    var zone1_CMACKEY0 = "";
    var zone1_CMACKEY1 = "";
    var zone1_CMACKEY2 = "";
    var zone1_CMACKEY3 = "";
    if (["F2838x", "F28003x", "F280013x", "F280015x","F28P65x","F28P55x"].includes(Common.getDeviceName()))
    {
        zone1_OTP_JLM_comment = ((zone1_OTP['JTAGLOCK'] && zone1_OTP["useZone"])?"":";;");
        zone1_JTAGLOCK = Common.getDefaultJTAGLOCKValueMask(1)[0];
        zone1_JTAGLOCK = zone1_OTP['JTAGLOCK']?zone1_JTAGLOCK.substring(0,9) + "0":zone1_JTAGLOCK;
        zone1_JTAGPSWDH0 = zone1_OTP['JTAGPSWDH0']
        zone1_JTAGPSWDH1 = zone1_OTP['JTAGPSWDH1']

        zone1_CMACKEY0 = zone1_OTP['CMACKEY0'];
        zone1_CMACKEY1 = zone1_OTP['CMACKEY1'];
        zone1_CMACKEY2 = zone1_OTP['CMACKEY2'];
        zone1_CMACKEY3 = zone1_OTP['CMACKEY3'];
    }

    let zone1_PASSWORD0 = zone1['PASSWORD0'];
    let zone1_PASSWORD1 = zone1['PASSWORD1'];
    let zone1_PASSWORD2 = zone1['PASSWORD2'];
    let zone1_PASSWORD3 = zone1['PASSWORD3'];
    let zone1_comment = (zone1['useZone']?"":";;")
    let zone1_ZSB_comment = ((zone1['useZone'] && zone1['PROGRAM_ZSB'])?"":";;")
    let zone1_OTP_comment = (zone1_OTP['useZone']?"":";;")
    let zone1_OTP_BOOT_comment = (zone1_OTP['useZone'] && zone1_OTP['configureBoot'] ?"":";;")

    let zone2_LINKPOINTER = zone2['NEXT_LINKPOINTER']
    let zone2_PASWDLOCK = zone2_OTP['PASWDLOCK'] == "ENABLE"?DEFAULT_ZONE2_PASSWORDLOCK[0].substring(0,9) + "0":DEFAULT_ZONE2_PASSWORDLOCK[0];
    let zone2_CRCLOCK = zone2_OTP['CRCLOCK'] == "ENABLE"?DEFAULT_ZONE2_CRCLOCK[0].substring(0,9) + "0":DEFAULT_ZONE2_CRCLOCK[0];
    let zone2_JTAGLOCK = zone2_OTP['JTAGLOCK'] == true?DEFAULT_ZONE2_JTAGLOCK[0].substring(0,9) + "0":DEFAULT_ZONE2_JTAGLOCK[0];
    var zone2_BOOTCTRL = "";
    var ZONE2_BOOTPIN_CONFIG = "";
    var ZONE2_GPREG2 = "";
    var ZONE2_BOOTDEF_LOW = "";
    var ZONE2_BOOTDEF_HIGH = "";
    if (["F28004x", "F28002x", "F2838x", "F28003x", "F280013x", "F280015x", "F28P65x","F28P55x"].includes(Common.getDeviceName()))
    {
        var BMSP0 = "FF";
        var BMSP1 = "FF";
        var BMSP2 = "FF";
        // ZONE2_BOOTPIN_CONFIG =  Key (31-24) | BMSP2 (23-16) | BMSP1 (15-8) | BMSP0 (7-0)
        // ZONE2_GPREG2 = Key (31-24) | RSVD (23-8) |  RSVD (7-6) | ESP (5-4) | RSVD (3-0) 
        if (zone2_OTP['bootPinCount'] > 0) { BMSP0 = (parseInt(zone2_OTP["BMSP0"].substring(4)) + 0).toString(16).padStart(2, '0') }
        if (zone2_OTP['bootPinCount'] > 1) { BMSP1 = (parseInt(zone2_OTP["BMSP1"].substring(4)) + 0).toString(16).padStart(2, '0') }
        if (zone2_OTP['bootPinCount'] > 2) { BMSP2 = (parseInt(zone2_OTP["BMSP2"].substring(4)) + 0).toString(16).padStart(2, '0') }     
        ZONE2_BOOTPIN_CONFIG = "0x5A" + BMSP2 + BMSP1 + BMSP0;

        var write_protect_bits = parseInt("1111111111111111",2)
        if (["F28P55x"].includes(Common.getDeviceName()))
        {
            var binary_write_protect_bits = ""
            for (var i = 15; i >= 1; i--)
            {
                var param_name = "write_protect_bit" + (i+8).toString()
                if (!zone2_OTP.hasOwnProperty(param_name)){
                    binary_write_protect_bits = binary_write_protect_bits + "1"
                }
                else{
                    binary_write_protect_bits = binary_write_protect_bits + zone2_OTP[param_name]
                }
            }
            write_protect_bits = parseInt(binary_write_protect_bits, 2)
        }
        var mpost_shift = 2
        if (["F28P55x"].includes(Common.getDeviceName())){
            mpost_shift = 3
        }
        if (["F28004x", "F28002x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName())){
            ZONE2_GPREG2 = "0x5AFFFF" + (parseInt(12 + parseInt(zone2_OTP["ERRORSTSPIN"])).toString(16)) + "F";
            if (["F28002x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName()))
            {
                var writeprotect_runmpost_errorsts = ((write_protect_bits << (mpost_shift + 2)) + (parseInt(zone2_OTP["RUNMPOST"]) << mpost_shift) + parseInt(zone2_OTP["ERRORSTSPIN"])).toString(16)
                ZONE2_GPREG2 = "0x5A" + writeprotect_runmpost_errorsts + parseInt(zone2_OTP["CJTAGNODEID"]).toString(16);
            }
        }
        else if ("F2838x".includes(Common.getDeviceName()))
        {
            ZONE2_GPREG2 = "0x5A" + "FFFF" + (parseInt(zone2_OTP["RUNMPOST"])).toString(16).toUpperCase() + "F";            
        }

        // Z2OTP_BOOTDEF_LOW = BOOT_DEF3(31-24) | BOOT_DEF2(23-16) | BOOT_DEF1(15-8) | BOOT_DEF0(7-0)
        // Z2OTP_BOOTDEF_HIGH = BOOT_DEF7(31-24) | BOOT_DEF6(23-16) | BOOT_DEF5(15-8) | BOOT_DEF4(7-0)
        ZONE2_BOOTDEF_LOW =  "0x" + 
                             ((zone2_OTP['bootPinCount'] > 1)?zone2_OTP["BOOTDEF3"].substring(2):"FF") + 
                             ((zone2_OTP['bootPinCount'] > 1)?zone2_OTP["BOOTDEF2"].substring(2):"FF") + 
                             ((zone2_OTP['bootPinCount'] > 0)?zone2_OTP["BOOTDEF1"].substring(2):"FF") + 
                             zone2_OTP["BOOTDEF0"].substring(2);
        ZONE2_BOOTDEF_HIGH = "0x" + 
                             ((zone2_OTP['bootPinCount'] > 2)?zone2_OTP["BOOTDEF7"].substring(2):"FF") + 
                             ((zone2_OTP['bootPinCount'] > 2)?zone2_OTP["BOOTDEF6"].substring(2):"FF") + 
                             ((zone2_OTP['bootPinCount'] > 2)?zone2_OTP["BOOTDEF5"].substring(2):"FF") + 
                             ((zone2_OTP['bootPinCount'] > 2)?zone2_OTP["BOOTDEF4"].substring(2):"FF");
    }
    else
    {
        zone2_BOOTCTRL = "0x" + 
                         (parseInt(zone2_OTP["BOOTCTRL_PIN1"].substring(4)) + 1).toString(16).padStart(2, '0') +
                         (parseInt(zone2_OTP["BOOTCTRL_PIN0"].substring(4)) + 1).toString(16).padStart(2, '0') + 
                         zone2_OTP['BOOTCTRL_MODE'].substring(2) + 
                         zone2_OTP['BOOTCTRL_KEY'].substring(2);
    }
                         
    let zone2_PASSWORD0 = zone2['PASSWORD0'];
    let zone2_PASSWORD1 = zone2['PASSWORD1'];
    let zone2_PASSWORD2 = zone2['PASSWORD2'];
    let zone2_PASSWORD3 = zone2['PASSWORD3'];
    let zone2_comment = (zone2['useZone']?"":";;")
    let zone2_ZSB_comment = ((zone2['useZone'] && zone2['PROGRAM_ZSB'])?"":";;")
    let zone2_OTP_comment = (zone2_OTP['useZone']?"":";;")
    let zone2_OTP_BOOT_comment = (zone2_OTP['useZone'] && zone2_OTP['configureBoot'] ?"":";;")

    var bank1_exists = false;
    var bank1_zone1_LINKPOINTER = "";
    var bank1_zone2_LINKPOINTER = "";
    if (Common.getDeviceName().includes("F28004x"))
    {
        bank1_exists = true;
        var bank_name = Common.getBankNames(1)
        bank1_zone1_LINKPOINTER = zone1['NEXT_LINKPOINTER' + bank_name];
        bank1_zone2_LINKPOINTER = zone2['NEXT_LINKPOINTER' + bank_name];
    }

    function getGrabAndExeTranslation(ram_sect_info_array)
    {
        var selections = [];
        ram_sect_info_array.forEach(element => {

            var selectedSetting = "UNSECURE"
            if (zone1[element["name"]] == "SECURE")
            {
                selectedSetting = "ZONE1"
            }
            else if (zone1[element["name"]] == "SECUREEXEONLY")
            {
                selectedSetting = "ZONE1EXEONLY"
            }
            else if (zone2[element["name"]] == "SECURE")
            {
                selectedSetting = "ZONE2"
            }
            else if (zone2[element["name"]] == "SECUREEXEONLY")
            {
                selectedSetting = "ZONE2EXEONLY"
            }
        
            selections.push(selectedSetting)
        });
        
        
        return selections;
    }

    function getGrabAndExeValues(selected)
    {
        var grabZ1 = ""
        var grabZ2 = ""
        var exeonly1 = ""
        var exeonly2 = ""
        var unsecure_value = "11"
        if (["F28004x", "F28002x", "F2838x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName()))
        {
            unsecure_value = "10"
        }
        
        if (selected == "ZONE1")
        {
            grabZ1 = "01"
            grabZ2 = unsecure_value
            exeonly1 = "1"
            exeonly2 = "1"
        }
        else if (selected == "ZONE2")
        {
            grabZ1 = unsecure_value
            grabZ2 = "01"
            exeonly1 = "1"
            exeonly2 = "1"
        }
        else if (selected == "ZONE1EXEONLY")
        {
            grabZ1 = "01"
            grabZ2 = unsecure_value
            exeonly1 = "0"
            exeonly2 = "1"
        }
        else if (selected == "ZONE2EXEONLY")
        {
            grabZ1 = unsecure_value
            grabZ2 = "01"
            exeonly1 = "1"
            exeonly2 = "0"
        }
        else if (selected == "UNSECURE")
        {
            grabZ1 = unsecure_value
            grabZ2 = unsecure_value
            exeonly1 = "1"
            exeonly2 = "1"
        }

        return {grabZ1: grabZ1, grabZ2: grabZ2, exeonly1:exeonly1, exeonly2:exeonly2};
    }

    var dr = device_ram[Common.getDeviceName().toLowerCase() + "_ram"]
    var ds = device_sect[Common.getDeviceName().toLowerCase() + "_sect"]
    
    let zoneSelect = inst.ZONE_SELECTION;
    var dr_selectedSetting = [];
    var ds_selectedSetting = [];
    var bank1_ds_selectedSetting = [];
    var bank2_ds_selectedSetting = [];
    var bank3_ds_selectedSetting = [];
    var bank4_ds_selectedSetting = [];
    var cla_selectedSetting = [];
    dr_selectedSetting = getGrabAndExeTranslation(dr);
    ds_selectedSetting = getGrabAndExeTranslation(ds);
    if (bank1_exists)
    {
        var flashBank1MemorySecs = JSON.parse(JSON.stringify(ds));
        flashBank1MemorySecs.forEach(element => {
            element["name"] = element["name"] + Common.getBankNames(1);
        })
        
        bank1_ds_selectedSetting = getGrabAndExeTranslation(flashBank1MemorySecs);
    }

    if (!(["F28004x", "F28802x", "F28003x", "F2838x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName())))
    {
        cla_selectedSetting = getGrabAndExeTranslation([{"name" : "CLA"}]);
    }

    var Z1_EXEONLYRAM = ""
    var Z1_EXEONLYSECT = ""
    var B1_Z1_EXEONLYSECT = ""
    var Z1_GRABRAM = ""
    var Z1_GRABSECT = ""
    var B1_Z1_GRABSECT = ""
    
    var Z1_GRABSECT1 = "";
    var Z1_GRABSECT2 = "";
    var Z1_GRABSECT3 = "";
    var Z1_GRABRAM1 = "";    
    var Z1_GRABRAM2 = "";    
    var Z1_GRABRAM3 = "";    
    var Z1_EXEONLYSECT1 = "";
    var Z1_EXEONLYSECT2 = "";
    var Z1_EXEONLYRAM1 = ""; 
    var Z1_DIAG = "";
    var zone1_JTAGPSWDL0 = "";
    var zone1_JTAGPSWDL1 = "";
    
    var Z2_GRABSECT1 = "";
    var Z2_GRABSECT2 = "";
    var Z2_GRABSECT3 = "";
    var Z2_GRABRAM1 = "";    
    var Z2_GRABRAM2 = "";    
    var Z2_GRABRAM3 = "";    
    var Z2_EXEONLYSECT1 = "";
    var Z2_EXEONLYSECT2 = "";
    var Z2_EXEONLYRAM1 = ""; 
    
    var Z2_EXEONLYRAM = ""
    var Z2_EXEONLYSECT = ""
    var B1_Z2_EXEONLYSECT = ""
    var Z2_GRABRAM = ""
    var Z2_GRABSECT = ""
    var B1_Z2_GRABSECT = ""


    if ("F28003x".includes(Common.getDeviceName()))
    {
        var flashBank1MemorySecs = JSON.parse(JSON.stringify(ds));
        var flashBank2MemorySecs = JSON.parse(JSON.stringify(ds));
        flashBank1MemorySecs.forEach(element => {
            element["name"] = element["name"] + Common.getBankNames(1);
        })
        flashBank2MemorySecs.forEach(element => {
            element["name"] = element["name"] + Common.getBankNames(2);
        })
        
        bank1_ds_selectedSetting = getGrabAndExeTranslation(flashBank1MemorySecs);
        bank2_ds_selectedSetting = getGrabAndExeTranslation(flashBank2MemorySecs);

        zone1_JTAGPSWDL0 = zone1["JTAGPSWDL0"]
        zone1_JTAGPSWDL1 = zone1["JTAGPSWDL1"]

        
        dr_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYRAM1 = gbexe.exeonly1 + Z1_EXEONLYRAM1 
            Z1_GRABRAM1 = gbexe.grabZ1 + Z1_GRABRAM1
            Z2_EXEONLYRAM1 = gbexe.exeonly2 + Z2_EXEONLYRAM1 
            Z2_GRABRAM1 = gbexe.grabZ2 + Z2_GRABRAM1
        });

        ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT1 = gbexe.exeonly1 + Z1_EXEONLYSECT1 
            Z1_GRABSECT1 = gbexe.grabZ1 + Z1_GRABSECT1
            Z2_EXEONLYSECT1 = gbexe.exeonly2 + Z2_EXEONLYSECT1 
            Z2_GRABSECT1 = gbexe.grabZ2 + Z2_GRABSECT1
        });

        bank1_ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT1 = gbexe.exeonly1 + Z1_EXEONLYSECT1 
            Z1_GRABSECT2 = gbexe.grabZ1 + Z1_GRABSECT2
            Z2_EXEONLYSECT1 = gbexe.exeonly2 + Z2_EXEONLYSECT1
            Z2_GRABSECT2 = gbexe.grabZ2 + Z2_GRABSECT2
        });

        bank2_ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT2 = gbexe.exeonly1 + Z1_EXEONLYSECT2 
            Z1_GRABSECT3 = gbexe.grabZ1 + Z1_GRABSECT3
            Z2_EXEONLYSECT2 = gbexe.exeonly2 + Z2_EXEONLYSECT2
            Z2_GRABSECT3 = gbexe.grabZ2 + Z2_GRABSECT3
        });

        Z1_GRABRAM1 = "0x" + parseInt(Z1_GRABRAM1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABRAM1 = "0x" + parseInt(Z2_GRABRAM1, 2).toString(16).padStart(8, "0").toUpperCase()

        Z1_GRABSECT1 = "0x" + parseInt(Z1_GRABSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABSECT2 = "0x" + parseInt(Z1_GRABSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABSECT3 = "0x" + parseInt(Z1_GRABSECT3, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_GRABSECT1 = "0x" + parseInt(Z2_GRABSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABSECT2 = "0x" + parseInt(Z2_GRABSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABSECT3 = "0x" + parseInt(Z2_GRABSECT3, 2).toString(16).padStart(8, "0").toUpperCase()
        
        Z1_EXEONLYRAM1 = "0x" + parseInt(Z1_EXEONLYRAM1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_EXEONLYRAM1 = "0x" + parseInt(Z2_EXEONLYRAM1, 2).toString(16).padStart(8, "0").toUpperCase()

        Z1_EXEONLYSECT1 = "0x" + parseInt(Z1_EXEONLYSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_EXEONLYSECT2 = "0x" + parseInt(Z1_EXEONLYSECT2, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_EXEONLYSECT1 = "0x" + parseInt(Z2_EXEONLYSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_EXEONLYSECT2 = "0x" + parseInt(Z2_EXEONLYSECT2, 2).toString(16).padStart(8, "0").toUpperCase()

    }

    if (["F280013x", "F280015x"].includes(Common.getDeviceName()))
    {
        zone1_JTAGPSWDL0 = zone1["JTAGPSWDL0"]
        zone1_JTAGPSWDL1 = zone1["JTAGPSWDL1"]

        dr_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYRAM1 = gbexe.exeonly1 + Z1_EXEONLYRAM1 
            Z1_GRABRAM1 = gbexe.grabZ1 + Z1_GRABRAM1
            Z2_EXEONLYRAM1 = gbexe.exeonly2 + Z2_EXEONLYRAM1 
            Z2_GRABRAM1 = gbexe.grabZ2 + Z2_GRABRAM1
        });

        var grabSect_index = 1;
        var exeOnlySect_index = 1;

        //
        // For the gap in the begining of GRABSECT3
        //
        Z1_GRABSECT3 = "00000000"
        Z2_GRABSECT3 = "00000000"
        Z1_EXEONLYSECT2 = "0000"
        Z2_EXEONLYSECT2 = "0000"

        var ds_index = 0;
        ds.forEach(element => {
            var ds_setting = ds_selectedSetting[ds_index];

            var gbexe = getGrabAndExeValues(ds_setting)

            //console.log(element)
            if (element.name == "SECT16") {
                grabSect_index = 2;
            }
            else if (element.name == "SECT32_39") {
                grabSect_index = 3;
                exeOnlySect_index = 2;
            }

            if (grabSect_index == 1)
            {
                Z1_GRABSECT1 = gbexe.grabZ1 + Z1_GRABSECT1
                Z2_GRABSECT1 = gbexe.grabZ2 + Z2_GRABSECT1
            }
            else if (grabSect_index == 2)
            {
                Z1_GRABSECT2 = gbexe.grabZ1 + Z1_GRABSECT2
                Z2_GRABSECT2 = gbexe.grabZ2 + Z2_GRABSECT2
            }
            else if (grabSect_index == 3)
            {
                Z1_GRABSECT3 = gbexe.grabZ1 + Z1_GRABSECT3
                Z2_GRABSECT3 = gbexe.grabZ2 + Z2_GRABSECT3
            }

            if (exeOnlySect_index == 1)
            {
                Z1_EXEONLYSECT1 = gbexe.exeonly1 + Z1_EXEONLYSECT1 
                Z2_EXEONLYSECT1 = gbexe.exeonly2 + Z2_EXEONLYSECT1 
            }
            else if (exeOnlySect_index == 2)
            {
                Z1_EXEONLYSECT2 = gbexe.exeonly1 + Z1_EXEONLYSECT2 
                Z2_EXEONLYSECT2 = gbexe.exeonly2 + Z2_EXEONLYSECT2
            }

            ds_index++;
        });

        Z1_GRABRAM1 = "0x" + parseInt(Z1_GRABRAM1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABRAM1 = "0x" + parseInt(Z2_GRABRAM1, 2).toString(16).padStart(8, "0").toUpperCase()

        Z1_GRABSECT1 = "0x" + parseInt(Z1_GRABSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABSECT2 = "0x" + parseInt(Z1_GRABSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABSECT3 = "0x" + parseInt(Z1_GRABSECT3, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_GRABSECT1 = "0x" + parseInt(Z2_GRABSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABSECT2 = "0x" + parseInt(Z2_GRABSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABSECT3 = "0x" + parseInt(Z2_GRABSECT3, 2).toString(16).padStart(8, "0").toUpperCase()
        
        Z1_EXEONLYRAM1 = "0x" + parseInt(Z1_EXEONLYRAM1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_EXEONLYRAM1 = "0x" + parseInt(Z2_EXEONLYRAM1, 2).toString(16).padStart(8, "0").toUpperCase()

        Z1_EXEONLYSECT1 = "0x" + parseInt(Z1_EXEONLYSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_EXEONLYSECT2 = "0x" + parseInt(Z1_EXEONLYSECT2, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_EXEONLYSECT1 = "0x" + parseInt(Z2_EXEONLYSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_EXEONLYSECT2 = "0x" + parseInt(Z2_EXEONLYSECT2, 2).toString(16).padStart(8, "0").toUpperCase()

    }

    if (["F2838x"].includes(Common.getDeviceName()))
    {
        zone1_JTAGPSWDL0 = zone1["JTAGPSWDL0"]
        zone1_JTAGPSWDL1 = zone1["JTAGPSWDL1"]

        var grabramX_range = 0;
        var exeonlyValid = false;
        var dr_index = 0;

        dr.forEach(element => {
            var dr_setting = dr_selectedSetting[dr_index];

            if (element.name == "RAMLS0"){
                grabramX_range = 1;
                exeonlyValid = true;
            } else if (element.name == "CM_RAMC0"){
                grabramX_range = 2;
            } else if (element.name == "CPU1_CM_MSGRAM0"){
                exeonlyValid = false;
            } else if (element.name == "CPU2_RAMLS0"){
                grabramX_range = 3;
                exeonlyValid = true;
            }
            
            var gbexe = getGrabAndExeValues(dr_setting)
            if (grabramX_range == 1){
                Z1_GRABRAM1 = gbexe.grabZ1 + Z1_GRABRAM1;
                Z2_GRABRAM1 = gbexe.grabZ2 + Z2_GRABRAM1;
            }
            else if (grabramX_range == 2){
                Z1_GRABRAM2 = gbexe.grabZ1 + Z1_GRABRAM2;
                Z2_GRABRAM2 = gbexe.grabZ2 + Z2_GRABRAM2;
                if (element.name == "CM_RAMC1"){
                    Z1_GRABRAM2 = "0000" + Z1_GRABRAM2;
                    Z2_GRABRAM2 = "0000" + Z2_GRABRAM2;
                }
            }
            else if (grabramX_range == 3){
                Z1_GRABRAM3 = gbexe.grabZ1 + Z1_GRABRAM3;
                Z2_GRABRAM3 = gbexe.grabZ2 + Z2_GRABRAM3;
            }

            if (exeonlyValid){   
                Z1_EXEONLYRAM1 = gbexe.exeonly1 + Z1_EXEONLYRAM1;
                Z2_EXEONLYRAM1 = gbexe.exeonly2 + Z2_EXEONLYRAM1;
                if (element.name == "RAMD1"){
                    Z1_EXEONLYRAM1 = "000000" + Z1_EXEONLYRAM1
                    Z2_EXEONLYRAM1 = "000000" + Z2_EXEONLYRAM1
                } else if (element.name == "CM_RAMC1"){
                    Z1_EXEONLYRAM1 = "0000" + Z1_EXEONLYRAM1
                    Z2_EXEONLYRAM1 = "0000" + Z2_EXEONLYRAM1
                }
            }

            dr_index++;
        });

        var ds_index = 0;
        var grabsectX_range = 0;
        var exeonlyRange = 0;
        ds.forEach(element => {
            var ds_setting = ds_selectedSetting[ds_index];

            var gbexe = getGrabAndExeValues(ds_setting)
            if (element.name == "SECT0"){
                grabsectX_range = 1;
                exeonlyRange = 1;
            } else if (element.name == "CM_SECT0"){
                grabsectX_range = 2;
                exeonlyRange = 1;
            } else if (element.name == "CPU2_SECT0"){
                grabsectX_range = 3;
                exeonlyRange = 2;
            }

            if (grabsectX_range == 1){
                Z1_GRABSECT1 = gbexe.grabZ1 + Z1_GRABSECT1;
                Z2_GRABSECT1 = gbexe.grabZ2 + Z2_GRABSECT1;
            }
            else if (grabsectX_range == 2){
                Z1_GRABSECT2 = gbexe.grabZ1 + Z1_GRABSECT2;
                Z2_GRABSECT2 = gbexe.grabZ2 + Z2_GRABSECT2;
            }
            else if (grabsectX_range == 3){
                Z1_GRABSECT3 = gbexe.grabZ1 + Z1_GRABSECT3;
                Z2_GRABSECT3 = gbexe.grabZ2 + Z2_GRABSECT3;
            }

            if (exeonlyRange == 1){
                Z1_EXEONLYSECT1 = gbexe.exeonly1 + Z1_EXEONLYSECT1;
                Z2_EXEONLYSECT1 = gbexe.exeonly2 + Z2_EXEONLYSECT1;
                if (element.name == "SECT13"){
                    Z1_EXEONLYSECT1 = "00" + Z1_EXEONLYSECT1;
                    Z2_EXEONLYSECT1 = "00" + Z2_EXEONLYSECT1;
                }
            }
            else if (exeonlyRange == 2){
                Z1_EXEONLYSECT2 = gbexe.exeonly1 + Z1_EXEONLYSECT2;
                Z2_EXEONLYSECT2 = gbexe.exeonly2 + Z2_EXEONLYSECT2;
            }
            
            ds_index++;
        });

        Z1_GRABRAM1 = "0x" + parseInt(Z1_GRABRAM1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABRAM2 = "0x" + parseInt(Z1_GRABRAM2, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABRAM3 = "0x" + parseInt(Z1_GRABRAM3, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_GRABRAM1 = "0x" + parseInt(Z2_GRABRAM1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABRAM2 = "0x" + parseInt(Z2_GRABRAM2, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABRAM3 = "0x" + parseInt(Z2_GRABRAM3, 2).toString(16).padStart(8, "0").toUpperCase()

        Z1_GRABSECT1 = "0x" + parseInt(Z1_GRABSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABSECT2 = "0x" + parseInt(Z1_GRABSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABSECT3 = "0x" + parseInt(Z1_GRABSECT3, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_GRABSECT1 = "0x" + parseInt(Z2_GRABSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABSECT2 = "0x" + parseInt(Z2_GRABSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABSECT3 = "0x" + parseInt(Z2_GRABSECT3, 2).toString(16).padStart(8, "0").toUpperCase()
        
        Z1_EXEONLYRAM1 = "0x" + parseInt(Z1_EXEONLYRAM1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_EXEONLYRAM1 = "0x" + parseInt(Z2_EXEONLYRAM1, 2).toString(16).padStart(8, "0").toUpperCase()

        Z1_EXEONLYSECT1 = "0x" + parseInt(Z1_EXEONLYSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_EXEONLYSECT2 = "0x" + parseInt(Z1_EXEONLYSECT2, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_EXEONLYSECT1 = "0x" + parseInt(Z2_EXEONLYSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_EXEONLYSECT2 = "0x" + parseInt(Z2_EXEONLYSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
    }
    if (["F28P65x"].includes(Common.getDeviceName()))
    {
        var flashBank1MemorySecs = JSON.parse(JSON.stringify(ds));
        var flashBank2MemorySecs = JSON.parse(JSON.stringify(ds));
        var flashBank3MemorySecs = JSON.parse(JSON.stringify(ds));
        var flashBank4MemorySecs = JSON.parse(JSON.stringify(ds));
        flashBank1MemorySecs.forEach(element => {
            element["name"] = element["name"] + Common.getBankNames(1);
        })
        flashBank2MemorySecs.forEach(element => {
            element["name"] = element["name"] + Common.getBankNames(2);
        })
        flashBank3MemorySecs.forEach(element => {
            element["name"] = element["name"] + Common.getBankNames(3);
        })
        flashBank4MemorySecs.forEach(element => {
            element["name"] = element["name"] + Common.getBankNames(4);
        })
        
        bank1_ds_selectedSetting = getGrabAndExeTranslation(flashBank1MemorySecs);
        bank2_ds_selectedSetting = getGrabAndExeTranslation(flashBank2MemorySecs);
        bank3_ds_selectedSetting = getGrabAndExeTranslation(flashBank3MemorySecs);
        bank4_ds_selectedSetting = getGrabAndExeTranslation(flashBank4MemorySecs);

        if(zone1["MPOSTENABLE"] == 0x0){
            Z1_DIAG = "0xFFFFFFEF";
        }
        else Z1_DIAG = "0xFFFFFFDF";

        zone1_JTAGPSWDL0 = zone1["JTAGPSWDL0"]
        zone1_JTAGPSWDL1 = zone1["JTAGPSWDL1"]

        var grabramX_range = 0;
        var exeonlyValid = false;
        var dr_index = 0;

        dr.forEach(element => {
            var dr_setting = dr_selectedSetting[dr_index];

            if (element.name == "RAMLS0"){
                grabramX_range = 1;
                exeonlyValid = true;
            } else if (element.name == "CPU1_CPU2_MSGRAM0"){
                grabramX_range = 2
                exeonlyValid = false;
            }
            
            var gbexe = getGrabAndExeValues(dr_setting)
            if (grabramX_range == 1){
                Z1_GRABRAM1 = gbexe.grabZ1 + Z1_GRABRAM1;
                Z2_GRABRAM1 = gbexe.grabZ2 + Z2_GRABRAM1;
            }
            else if (grabramX_range == 2){
                Z1_GRABRAM2 = gbexe.grabZ1 + Z1_GRABRAM2;
                Z2_GRABRAM2 = gbexe.grabZ2 + Z2_GRABRAM2;
                if (element.name == "CPU2_CPU1_MSGRAM1"){
                    Z1_GRABRAM2 = "000000000000000000000000" + Z1_GRABRAM2;
                    Z2_GRABRAM2 = "000000000000000000000000" + Z2_GRABRAM2;
                }
            }

            if (grabramX_range == 1){   
                Z1_EXEONLYRAM1 = gbexe.exeonly1 + Z1_EXEONLYRAM1;
                Z2_EXEONLYRAM1 = gbexe.exeonly2 + Z2_EXEONLYRAM1;
                if (element.name == "RAMD5"){
                    Z1_EXEONLYRAM1 = "0000000000000000" + Z1_EXEONLYRAM1
                    Z2_EXEONLYRAM1 = "0000000000000000" + Z2_EXEONLYRAM1
                }
            }

            dr_index++;
        });

        ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT1 = gbexe.exeonly1 + Z1_EXEONLYSECT1 
            Z1_GRABSECT1 = gbexe.grabZ1 + Z1_GRABSECT1
            Z2_EXEONLYSECT1 = gbexe.exeonly2 + Z2_EXEONLYSECT1 
            Z2_GRABSECT1 = gbexe.grabZ2 + Z2_GRABSECT1
        });

        bank1_ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT1 = gbexe.exeonly1 + Z1_EXEONLYSECT1 
            Z1_GRABSECT1 = gbexe.grabZ1 + Z1_GRABSECT1
            Z2_EXEONLYSECT1 = gbexe.exeonly2 + Z2_EXEONLYSECT1
            Z2_GRABSECT1 = gbexe.grabZ2 + Z2_GRABSECT1
        });

        bank2_ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT1 = gbexe.exeonly1 + Z1_EXEONLYSECT1 
            Z1_GRABSECT2 = gbexe.grabZ1 + Z1_GRABSECT2
            Z2_EXEONLYSECT1 = gbexe.exeonly2 + Z2_EXEONLYSECT1
            Z2_GRABSECT2 = gbexe.grabZ2 + Z2_GRABSECT2
        });
        bank3_ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT1 = gbexe.exeonly1 + Z1_EXEONLYSECT1 
            Z1_GRABSECT2 = gbexe.grabZ1 + Z1_GRABSECT2
            Z2_EXEONLYSECT1 = gbexe.exeonly2 + Z2_EXEONLYSECT1
            Z2_GRABSECT2 = gbexe.grabZ2 + Z2_GRABSECT2
        });

        bank4_ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT2 = gbexe.exeonly1 + Z1_EXEONLYSECT2 
            Z1_GRABSECT3 = gbexe.grabZ1 + Z1_GRABSECT3
            Z2_EXEONLYSECT2 = gbexe.exeonly2 + Z2_EXEONLYSECT2
            Z2_GRABSECT3 = gbexe.grabZ2 + Z2_GRABSECT3
        });

        Z1_GRABSECT3 = "0000000000000000" + Z1_GRABSECT3
        Z2_GRABSECT3 = "0000000000000000" + Z2_GRABSECT3
        Z1_EXEONLYSECT2 = "000000000000000000000000" + Z1_EXEONLYSECT2
        Z2_EXEONLYSECT2 = "000000000000000000000000" + Z2_EXEONLYSECT2

        Z1_GRABRAM1 = "0x" + parseInt(Z1_GRABRAM1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABRAM2 = "0x" + parseInt(Z1_GRABRAM2, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_GRABRAM1 = "0x" + parseInt(Z2_GRABRAM1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABRAM2 = "0x" + parseInt(Z2_GRABRAM2, 2).toString(16).padStart(8, "0").toUpperCase()

        Z1_GRABSECT1 = "0x" + parseInt(Z1_GRABSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABSECT2 = "0x" + parseInt(Z1_GRABSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABSECT3 = "0x" + parseInt(Z1_GRABSECT3, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_GRABSECT1 = "0x" + parseInt(Z2_GRABSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABSECT2 = "0x" + parseInt(Z2_GRABSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABSECT3 = "0x" + parseInt(Z2_GRABSECT3, 2).toString(16).padStart(8, "0").toUpperCase()
        
        Z1_EXEONLYRAM1 = "0x" + parseInt(Z1_EXEONLYRAM1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_EXEONLYRAM1 = "0x" + parseInt(Z2_EXEONLYRAM1, 2).toString(16).padStart(8, "0").toUpperCase()

        Z1_EXEONLYSECT1 = "0x" + parseInt(Z1_EXEONLYSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_EXEONLYSECT2 = "0x" + parseInt(Z1_EXEONLYSECT2, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_EXEONLYSECT1 = "0x" + parseInt(Z2_EXEONLYSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_EXEONLYSECT2 = "0x" + parseInt(Z2_EXEONLYSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
    }
    if (["F28P55x"].includes(Common.getDeviceName()))
    {
        var flashBank1MemorySecs = JSON.parse(JSON.stringify(ds));
        var flashBank2MemorySecs = JSON.parse(JSON.stringify(ds));
        var flashBank3MemorySecs = JSON.parse(JSON.stringify(ds));
        var flashBank4MemorySecs = JSON.parse(JSON.stringify(ds));
        flashBank1MemorySecs.forEach(element => {
            element["name"] = element["name"] + Common.getBankNames(1);
        })
        flashBank2MemorySecs.forEach(element => {
            element["name"] = element["name"] + Common.getBankNames(2);
        })
        flashBank3MemorySecs.forEach(element => {
            element["name"] = element["name"] + Common.getBankNames(3);
        })
        flashBank4MemorySecs.forEach(element => {
            element["name"] = element["name"] + Common.getBankNames(4);
        })

        if ("F28P55x".includes(Common.getDeviceName()))
        {
            var tempFlashBank4MemorySecs = []
            for (var i = 0; i < 5; i++){
                tempFlashBank4MemorySecs = tempFlashBank4MemorySecs.concat(flashBank4MemorySecs[i])
            }
            flashBank4MemorySecs = tempFlashBank4MemorySecs
        }
        
        bank1_ds_selectedSetting = getGrabAndExeTranslation(flashBank1MemorySecs);
        bank2_ds_selectedSetting = getGrabAndExeTranslation(flashBank2MemorySecs);
        bank3_ds_selectedSetting = getGrabAndExeTranslation(flashBank3MemorySecs);
        bank4_ds_selectedSetting = getGrabAndExeTranslation(flashBank4MemorySecs);

        if(zone1["MPOSTENABLE"] == 0x0){
            Z1_DIAG = "0xFFFFFFEF";
        }
        else Z1_DIAG = "0xFFFFFFDF";

        zone1_JTAGPSWDL0 = zone1["JTAGPSWDL0"]
        zone1_JTAGPSWDL1 = zone1["JTAGPSWDL1"]

        var grabramX_range = 0;
        var exeonlyValid = false;
        var dr_index = 0;

        dr.forEach(element => {
            var dr_setting = dr_selectedSetting[dr_index];

            if (element.name == "RAMLS0"){
                grabramX_range = 1;
                exeonlyValid = true;
            }
            
            var gbexe = getGrabAndExeValues(dr_setting)
            if (grabramX_range == 1){
                Z1_GRABRAM1 = gbexe.grabZ1 + Z1_GRABRAM1;
                Z2_GRABRAM1 = gbexe.grabZ2 + Z2_GRABRAM1;
            }

            if (grabramX_range == 1){   
                Z1_EXEONLYRAM1 = gbexe.exeonly1 + Z1_EXEONLYRAM1;
                Z2_EXEONLYRAM1 = gbexe.exeonly2 + Z2_EXEONLYRAM1;
            }

            dr_index++;
        });

        ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT1 = gbexe.exeonly1 + Z1_EXEONLYSECT1 
            Z1_GRABSECT1 = gbexe.grabZ1 + Z1_GRABSECT1
            Z2_EXEONLYSECT1 = gbexe.exeonly2 + Z2_EXEONLYSECT1 
            Z2_GRABSECT1 = gbexe.grabZ2 + Z2_GRABSECT1
        });

        bank1_ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT1 = gbexe.exeonly1 + Z1_EXEONLYSECT1 
            Z1_GRABSECT1 = gbexe.grabZ1 + Z1_GRABSECT1
            Z2_EXEONLYSECT1 = gbexe.exeonly2 + Z2_EXEONLYSECT1
            Z2_GRABSECT1 = gbexe.grabZ2 + Z2_GRABSECT1
        });

        bank2_ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT1 = gbexe.exeonly1 + Z1_EXEONLYSECT1 
            Z1_GRABSECT2 = gbexe.grabZ1 + Z1_GRABSECT2
            Z2_EXEONLYSECT1 = gbexe.exeonly2 + Z2_EXEONLYSECT1
            Z2_GRABSECT2 = gbexe.grabZ2 + Z2_GRABSECT2
        });
        bank3_ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT1 = gbexe.exeonly1 + Z1_EXEONLYSECT1 
            Z1_GRABSECT2 = gbexe.grabZ1 + Z1_GRABSECT2
            Z2_EXEONLYSECT1 = gbexe.exeonly2 + Z2_EXEONLYSECT1
            Z2_GRABSECT2 = gbexe.grabZ2 + Z2_GRABSECT2
        });

        bank4_ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            Z1_EXEONLYSECT2 = gbexe.exeonly1 + Z1_EXEONLYSECT2 
            Z1_GRABSECT3 = gbexe.grabZ1 + Z1_GRABSECT3
            Z2_EXEONLYSECT2 = gbexe.exeonly2 + Z2_EXEONLYSECT2
            Z2_GRABSECT3 = gbexe.grabZ2 + Z2_GRABSECT3
        });

        Z1_GRABSECT3 = "0000000000000000000000" + Z1_GRABSECT3
        Z2_GRABSECT3 = "0000000000000000000000" + Z2_GRABSECT3
        Z1_EXEONLYSECT2 = "000000000000000000000000000" + Z1_EXEONLYSECT2
        Z2_EXEONLYSECT2 = "000000000000000000000000000" + Z2_EXEONLYSECT2

        Z1_GRABRAM1 = "0x" + parseInt(Z1_GRABRAM1, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_GRABRAM1 = "0x" + parseInt(Z2_GRABRAM1, 2).toString(16).padStart(8, "0").toUpperCase()

        Z1_GRABSECT1 = "0x" + parseInt(Z1_GRABSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABSECT2 = "0x" + parseInt(Z1_GRABSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_GRABSECT3 = "0x" + parseInt(Z1_GRABSECT3, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_GRABSECT1 = "0x" + parseInt(Z2_GRABSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABSECT2 = "0x" + parseInt(Z2_GRABSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_GRABSECT3 = "0x" + parseInt(Z2_GRABSECT3, 2).toString(16).padStart(8, "0").toUpperCase()
        
        Z1_EXEONLYRAM1 = "0x" + parseInt(Z1_EXEONLYRAM1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_EXEONLYRAM1 = "0x" + parseInt(Z2_EXEONLYRAM1, 2).toString(16).padStart(8, "0").toUpperCase()

        Z1_EXEONLYSECT1 = "0x" + parseInt(Z1_EXEONLYSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z1_EXEONLYSECT2 = "0x" + parseInt(Z1_EXEONLYSECT2, 2).toString(16).padStart(8, "0").toUpperCase()

        Z2_EXEONLYSECT1 = "0x" + parseInt(Z2_EXEONLYSECT1, 2).toString(16).padStart(8, "0").toUpperCase()
        Z2_EXEONLYSECT2 = "0x" + parseInt(Z2_EXEONLYSECT2, 2).toString(16).padStart(8, "0").toUpperCase()
    }
    
    if ("F28002x".includes(Common.getDeviceName()))
    {
        Z1_EXEONLYRAM = "0000"
        Z1_GRABRAM = "00000000"
        Z2_EXEONLYRAM = "0000"
        Z2_GRABRAM = "00000000"
    }
    
    dr_selectedSetting.forEach(element => {
        var gbexe = getGrabAndExeValues(element)
        Z1_EXEONLYRAM = gbexe.exeonly1 + Z1_EXEONLYRAM 
        Z1_GRABRAM = gbexe.grabZ1 + Z1_GRABRAM
        Z2_EXEONLYRAM = gbexe.exeonly2 + Z2_EXEONLYRAM 
        Z2_GRABRAM = gbexe.grabZ2 + Z2_GRABRAM
    });


    if (!(["F28004x", "F28002x", "F28003x", "F280013x", "F280015x", "F28P65x","F28P55x"].includes(Common.getDeviceName())))
    {
        var gbexeCLA = getGrabAndExeValues(cla_selectedSetting[0])
        Z1_GRABRAM = gbexeCLA.grabZ1 + "0".repeat(12) + Z1_GRABRAM
        Z2_GRABRAM = gbexeCLA.grabZ2 + "0".repeat(12) + Z2_GRABRAM
    }
    
    ds_selectedSetting.forEach(element => {
        var gbexe = getGrabAndExeValues(element)
        Z1_EXEONLYSECT = gbexe.exeonly1 + Z1_EXEONLYSECT 
        Z1_GRABSECT = gbexe.grabZ1 + Z1_GRABSECT
        Z2_EXEONLYSECT = gbexe.exeonly2 + Z2_EXEONLYSECT 
        Z2_GRABSECT = gbexe.grabZ2 + Z2_GRABSECT
    });

    if (bank1_exists){
        bank1_ds_selectedSetting.forEach(element => {
            var gbexe = getGrabAndExeValues(element)
            B1_Z1_EXEONLYSECT = gbexe.exeonly1 + B1_Z1_EXEONLYSECT 
            B1_Z1_GRABSECT = gbexe.grabZ1 + B1_Z1_GRABSECT
            B1_Z2_EXEONLYSECT = gbexe.exeonly2 + B1_Z2_EXEONLYSECT 
            B1_Z2_GRABSECT = gbexe.grabZ2 + B1_Z2_GRABSECT
        });
    }
    

    
    Z1_EXEONLYRAM = "0x" + parseInt(Z1_EXEONLYRAM, 2).toString(16).padStart(8, "0").toUpperCase()
    Z1_EXEONLYSECT = "0x" + parseInt(Z1_EXEONLYSECT , 2).toString(16).padStart(8, "0").toUpperCase()
    Z1_GRABRAM = "0x" + parseInt(Z1_GRABRAM , 2).toString(16).padStart(8, "0").toUpperCase()
    Z1_GRABSECT = "0x" + parseInt(Z1_GRABSECT , 2).toString(16).padStart(8, "0").toUpperCase()

    Z2_EXEONLYRAM = "0x" + parseInt(Z2_EXEONLYRAM , 2).toString(16).padStart(8, "0").toUpperCase()
    Z2_EXEONLYSECT = "0x" + parseInt(Z2_EXEONLYSECT , 2).toString(16).padStart(8, "0").toUpperCase()
    Z2_GRABRAM = "0x" + parseInt(Z2_GRABRAM , 2).toString(16).padStart(8, "0").toUpperCase()
    Z2_GRABSECT = "0x" + parseInt(Z2_GRABSECT , 2).toString(16).padStart(8, "0").toUpperCase()

    if (bank1_exists)
    {
        B1_Z1_EXEONLYSECT = "0x" + parseInt(B1_Z1_EXEONLYSECT , 2).toString(16).padStart(8, "0").toUpperCase()
        B1_Z1_GRABSECT = "0x" + parseInt(B1_Z1_GRABSECT , 2).toString(16).padStart(8, "0").toUpperCase()

        B1_Z2_EXEONLYSECT = "0x" + parseInt(B1_Z2_EXEONLYSECT , 2).toString(16).padStart(8, "0").toUpperCase()
        B1_Z2_GRABSECT = "0x" + parseInt(B1_Z2_GRABSECT , 2).toString(16).padStart(8, "0").toUpperCase()
    }
    
%%}

;----------------------------------------------------------------------
; Zone 1
;----------------------------------------------------------------------
`zone1_comment`     .sect "dcsm_otp_z1_linkpointer"
`zone1_comment`      .retain
`zone1_comment`      .long `zone1_LINKPOINTER`
% if (!["F2838x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName())){
`zone1_comment`      .long 0xFFFFFFFF     ;Reserved
% }
`zone1_comment`      .long `zone1_LINKPOINTER`
% if (!["F2838x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName())){
`zone1_comment`      .long 0xFFFFFFFF     ;Reserved
% }
`zone1_comment`      .long `zone1_LINKPOINTER`
% if (!["F2838x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName())){
`zone1_comment`      .long 0xFFFFFFFF     ;Reserved
% }
`zone1_comment`    
% if (["F2838x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName())){
`zone1_OTP_JLM_comment_workaround`     .sect "dcsm_otp_z1_jlm_enable"
`zone1_OTP_JLM_comment_workaround`      .retain
`zone1_OTP_JLM_comment_workaround`      .long `zone1_JTAGLOCK`     ;Z1OTP_JLM_ENABLE
`zone1_OTP_JLM_comment`     .sect "dcsm_otp_z1_jtag_pswdh"
`zone1_OTP_JLM_comment`      .retain
`zone1_OTP_JLM_comment`      .long `zone1_JTAGPSWDH0`     ;Z1OTP_JTAGPSWDH0
`zone1_OTP_JLM_comment`      .long `zone1_JTAGPSWDH1`     ;Z1OTP_JTAGPSWDH1
`zone1_OTP_BOOT_comment`
`zone1_OTP_BOOT_comment`     .sect "dcsm_otp_z1_cmac_key"
`zone1_OTP_BOOT_comment`      .retain
`zone1_OTP_BOOT_comment`      .long `zone1_CMACKEY0`     ;Z1OTP_CMACKEY0
`zone1_OTP_BOOT_comment`      .long `zone1_CMACKEY1`     ;Z1OTP_CMACKEY1
`zone1_OTP_BOOT_comment`      .long `zone1_CMACKEY2`     ;Z1OTP_CMACKEY2
`zone1_OTP_BOOT_comment`      .long `zone1_CMACKEY3`     ;Z1OTP_CMACKEY3
`zone1_OTP_BOOT_comment`  
`zone1_OTP_comment`     .sect "dcsm_otp_z1_pswdlock"
`zone1_OTP_comment`      .retain
`zone1_OTP_comment`      .long `zone1_PASWDLOCK`
`zone1_OTP_comment`      
    % if (!["F280013x"].includes(Common.getDeviceName())) {
`zone1_OTP_comment`     .sect "dcsm_otp_z1_crclock"
`zone1_OTP_comment`      .retain
`zone1_OTP_comment`      .long `zone1_CRCLOCK`
`zone1_OTP_comment`   
    % } else if(["F280013x"].includes(Common.getDeviceName())){
`zone1_OTP_comment`     .sect "dcsm_otp_z1_crclock_rsvd"
`zone1_OTP_comment`      .retain
`zone1_OTP_comment`      .long 0x7FFFFFFF     ;Reserved
`zone1_OTP_comment`  
    % }
% } else {
`zone1_OTP_comment`     .sect "dcsm_otp_z1_pswdlock"
`zone1_OTP_comment`      .retain
`zone1_OTP_comment`      .long `zone1_PASWDLOCK`
`zone1_OTP_comment`      .long `DEFAULT_ZONE1_PASSWORDLOCK[1]`     ;Reserved
`zone1_OTP_comment`      
`zone1_OTP_comment`     .sect "dcsm_otp_z1_crclock"
`zone1_OTP_comment`      .retain
`zone1_OTP_comment`      .long `zone1_CRCLOCK`
`zone1_OTP_comment`      .long `DEFAULT_ZONE1_CRCLOCK[1]`     ;Reserved
`zone1_OTP_comment`   
`zone1_OTP_comment`     .sect "dcsm_otp_z1_jtaglock"
`zone1_OTP_comment`      .retain
`zone1_OTP_comment`      .long `zone1_JTAGLOCK`
`zone1_OTP_comment`      .long `DEFAULT_ZONE1_JTAGLOCK[1]`     ;Reserved
% }
% if (["F28004x", "F28002x"].includes(Common.getDeviceName())) {
`zone1_OTP_BOOT_comment`     .sect "dcsm_otp_z1_gpreg"
`zone1_OTP_BOOT_comment`      .retain
`zone1_OTP_BOOT_comment`      .long `ZONE1_BOOTPIN_CONFIG`     ;Z1OTP_BOOTPIN_CONFIG
`zone1_OTP_BOOT_comment`      .long `ZONE1_GPREG2`     ;Z1OTP_GPREG2
% }
% if (["F28004x", "F28002x"].includes(Common.getDeviceName())) {
`zone1_OTP_BOOT_comment`     .sect "dcsm_otp_z1_bootctrl"
`zone1_OTP_BOOT_comment`      .retain
`zone1_OTP_BOOT_comment`      .long `ZONE1_BOOTDEF_LOW`     ;Z1OTP_BOOTDEF_LOW
`zone1_OTP_BOOT_comment`      .long `ZONE1_BOOTDEF_HIGH`     ;Z1OTP_BOOTDEF_HIGH
% } else if (["F2838x", "F28003x", "F280013x", "F280015x","F28P65x", "F28P55x"].includes(Common.getDeviceName())) {
`zone1_OTP_BOOT_comment`     .sect "dcsm_otp_z1_gpreg"
`zone1_OTP_BOOT_comment`      .retain
`zone1_OTP_BOOT_comment`      .long `ZONE1_BOOTPIN_CONFIG`     ;Z1OTP_GPREG1 = Z1_BOOTPIN
`zone1_OTP_BOOT_comment`      .long `ZONE1_GPREG2`     ;Z1OTP_GPREG2
`zone1_OTP_BOOT_comment`      .long `ZONE1_BOOTDEF_LOW`     ;Z1OTP_GPREG3 = Z1OTP_BOOTDEF_LOW
`zone1_OTP_BOOT_comment`      .long `ZONE1_BOOTDEF_HIGH`     ;Z1OTP_GPREG4 = Z1OTP_BOOTDEF_HIGH
% } else {
`zone1_OTP_BOOT_comment`     .sect "dcsm_otp_z1_bootctrl"
`zone1_OTP_BOOT_comment`      .retain
`zone1_OTP_BOOT_comment`      .long 0xFFFFFFFF     ;Reserved
`zone1_OTP_BOOT_comment`      .long `zone1_BOOTCTRL`
%}
% if ("F2838x".includes(Common.getDeviceName())){
`zone1_ZSB_comment`     .sect "dcsm_zsel_z1"
`zone1_ZSB_comment`      .retain
`zone1_ZSB_comment`      .long `zone1_PASSWORD0`     ;Z1OTP_CSMPSWD0 (LSW of 128-bit password)
`zone1_ZSB_comment`      .long `zone1_PASSWORD1`     ;Z1OTP_CSMPSWD1
`zone1_ZSB_comment`      .long `zone1_PASSWORD2`     ;Z1OTP_CSMPSWD2
`zone1_ZSB_comment`      .long `zone1_PASSWORD3`     ;Z1OTP_CSMPSWD3 (MSW of 128-bit password)
`zone1_ZSB_comment` 
`zone1_ZSB_comment`      .long `Z1_GRABSECT1`     ;Z1OTP_GRABSECT1
`zone1_ZSB_comment`      .long `Z1_GRABSECT2`     ;Z1OTP_GRABSECT2
`zone1_ZSB_comment`      .long `Z1_GRABSECT3`     ;Z1OTP_GRABSECT3
`zone1_ZSB_comment`      .long `Z1_GRABRAM1`     ;Z1OTP_GRABRAM1
`zone1_ZSB_comment`      .long `Z1_GRABRAM2`     ;Z1OTP_GRABRAM2
`zone1_ZSB_comment`      .long `Z1_GRABRAM3`     ;Z1OTP_GRABRAM3
`zone1_ZSB_comment`
`zone1_ZSB_comment`      .long `Z1_EXEONLYSECT1`     ;Z1OTP_EXEONLYSECT1
`zone1_ZSB_comment`      .long `Z1_EXEONLYSECT2`     ;Z1OTP_EXEONLYSECT2
`zone1_ZSB_comment`      .long `Z1_EXEONLYRAM1`     ;Z1OTP_EXEONLYRAM1
`zone1_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone1_ZSB_comment`      .long `zone1_JTAGPSWDL0`     ;Z1OTP_JTAGPSWDL0
`zone1_ZSB_comment`      .long `zone1_JTAGPSWDL1`     ;Z1OTP_JTAGPSWDL1
% } else if (["F28003x", "F280013x", "F280015x"].includes(Common.getDeviceName())) {
`zone1_ZSB_comment`     .sect "dcsm_zsel_z1"
`zone1_ZSB_comment`      .retain
`zone1_ZSB_comment`      .long `zone1_PASSWORD0`     ;Z1OTP_CSMPSWD0 (LSW of 128-bit password)
`zone1_ZSB_comment`      .long `zone1_PASSWORD1`     ;Z1OTP_CSMPSWD1
`zone1_ZSB_comment`      .long `zone1_PASSWORD2`     ;Z1OTP_CSMPSWD2
`zone1_ZSB_comment`      .long `zone1_PASSWORD3`     ;Z1OTP_CSMPSWD3 (MSW of 128-bit password)
`zone1_ZSB_comment` 
`zone1_ZSB_comment`      .long `Z1_GRABSECT1`     ;Z1OTP_GRABSECT1
`zone1_ZSB_comment`      .long `Z1_GRABSECT2`     ;Z1OTP_GRABSECT2
`zone1_ZSB_comment`      .long `Z1_GRABSECT3`     ;Z1OTP_GRABSECT3
`zone1_ZSB_comment`      .long `Z1_GRABRAM1`     ;Z1OTP_GRABRAM1
`zone1_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone1_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone1_ZSB_comment` 
`zone1_ZSB_comment`      .long `Z1_EXEONLYSECT1`     ;Z1OTP_EXEONLYSECT1
`zone1_ZSB_comment`      .long `Z1_EXEONLYSECT2`     ;Z1OTP_EXEONLYSECT2
`zone1_ZSB_comment`      .long `Z1_EXEONLYRAM1`     ;Z1OTP_EXEONLYRAM1
`zone1_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone1_ZSB_comment`      .long `zone1_JTAGPSWDL0`     ;Z1OTP_JTAGPSWDL0
`zone1_ZSB_comment`      .long `zone1_JTAGPSWDL1`     ;Z1OTP_JTAGPSWDL1    
% } else if (["F28P65x"].includes(Common.getDeviceName())){
`zone1_ZSB_comment`     .sect "dcsm_zsel_z1"
`zone1_ZSB_comment`      .retain
`zone1_ZSB_comment`      .long `zone1_PASSWORD0`     ;Z1OTP_CSMPSWD0 (LSW of 128-bit password)
`zone1_ZSB_comment`      .long `zone1_PASSWORD1`     ;Z1OTP_CSMPSWD1
`zone1_ZSB_comment`      .long `zone1_PASSWORD2`     ;Z1OTP_CSMPSWD2
`zone1_ZSB_comment`      .long `zone1_PASSWORD3`     ;Z1OTP_CSMPSWD3 (MSW of 128-bit password)
`zone1_ZSB_comment` 
`zone1_ZSB_comment`      .long `Z1_GRABSECT1`     ;Z1OTP_GRABSECT1
`zone1_ZSB_comment`      .long `Z1_GRABSECT2`     ;Z1OTP_GRABSECT2
`zone1_ZSB_comment`      .long `Z1_GRABSECT3`     ;Z1OTP_GRABSECT3
`zone1_ZSB_comment`      .long `Z1_GRABRAM1`     ;Z1OTP_GRABRAM1
`zone1_ZSB_comment`      .long `Z1_GRABRAM2`     ;Z1OTP_GRABRAM2
`zone1_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone1_ZSB_comment` 
`zone1_ZSB_comment`      .long `Z1_EXEONLYSECT1`     ;Z1OTP_EXEONLYSECT1
`zone1_ZSB_comment`      .long `Z1_EXEONLYSECT2`     ;Z1OTP_EXEONLYSECT2
`zone1_ZSB_comment`      .long `Z1_EXEONLYRAM1`     ;Z1OTP_EXEONLYRAM1
`zone1_ZSB_comment`      .long `Z1_DIAG`     ;Z1_DIAG
`zone1_ZSB_comment`      .long `zone1_JTAGPSWDL0`     ;Z1OTP_JTAGPSWDL0
`zone1_ZSB_comment`      .long `zone1_JTAGPSWDL1`     ;Z1OTP_JTAGPSWDL1
% } else if (["F28P55x"].includes(Common.getDeviceName())){
`zone1_ZSB_comment`     .sect "dcsm_zsel_z1"
`zone1_ZSB_comment`      .retain
`zone1_ZSB_comment`      .long `zone1_PASSWORD0`     ;Z1OTP_CSMPSWD0 (LSW of 128-bit password)
`zone1_ZSB_comment`      .long `zone1_PASSWORD1`     ;Z1OTP_CSMPSWD1
`zone1_ZSB_comment`      .long `zone1_PASSWORD2`     ;Z1OTP_CSMPSWD2
`zone1_ZSB_comment`      .long `zone1_PASSWORD3`     ;Z1OTP_CSMPSWD3 (MSW of 128-bit password)
`zone1_ZSB_comment` 
`zone1_ZSB_comment`      .long `Z1_GRABSECT1`     ;Z1OTP_GRABSECT1
`zone1_ZSB_comment`      .long `Z1_GRABSECT2`     ;Z1OTP_GRABSECT2
`zone1_ZSB_comment`      .long `Z1_GRABSECT3`     ;Z1OTP_GRABSECT3
`zone1_ZSB_comment`      .long `Z1_GRABRAM1`     ;Z1OTP_GRABRAM1
`zone1_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone1_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone1_ZSB_comment` 
`zone1_ZSB_comment`      .long `Z1_EXEONLYSECT1`     ;Z1OTP_EXEONLYSECT1
`zone1_ZSB_comment`      .long `Z1_EXEONLYSECT2`     ;Z1OTP_EXEONLYSECT2
`zone1_ZSB_comment`      .long `Z1_EXEONLYRAM1`     ;Z1OTP_EXEONLYRAM1
`zone1_ZSB_comment`      .long `Z1_DIAG`     ;Z1_DIAG
`zone1_ZSB_comment`      .long `zone1_JTAGPSWDL0`     ;Z1OTP_JTAGPSWDL0
`zone1_ZSB_comment`      .long `zone1_JTAGPSWDL1`     ;Z1OTP_JTAGPSWDL1
% } else {
`zone1_ZSB_comment`      
`zone1_ZSB_comment`     .sect "dcsm_zsel_z1"
`zone1_ZSB_comment`      .retain
`zone1_ZSB_comment`      .long `Z1_EXEONLYRAM`       ;Z1-EXEONLYRAM
`zone1_ZSB_comment`      .long `Z1_EXEONLYSECT`      ;Z1-EXEONLYSECT
`zone1_ZSB_comment`      .long `Z1_GRABRAM`          ;Z1-GRABRAM
`zone1_ZSB_comment`      .long `Z1_GRABSECT`         ;Z1-GRABSECT
`zone1_ZSB_comment`      
`zone1_ZSB_comment`      .long `zone1_PASSWORD0`
`zone1_ZSB_comment`      .long `zone1_PASSWORD1`
`zone1_ZSB_comment`      .long `zone1_PASSWORD2`
`zone1_ZSB_comment`      .long `zone1_PASSWORD3`
% }

% if (bank1_exists) {
`zone1_comment`     .sect "b1_dcsm_otp_z1_linkpointer"
`zone1_comment`      .retain
`zone1_comment`      .long `bank1_zone1_LINKPOINTER`
`zone1_comment`      .long 0xFFFFFFFF     ;Reserved
`zone1_comment`      .long `bank1_zone1_LINKPOINTER`
`zone1_comment`      .long 0xFFFFFFFF     ;Reserved
`zone1_comment`      .long `bank1_zone1_LINKPOINTER`
`zone1_comment`      .long 0xFFFFFFFF     ;Reserved
`zone1_comment` 
`zone1_ZSB_comment`     .sect "b1_dcsm_zsel_z1"
`zone1_ZSB_comment`      .retain
`zone1_ZSB_comment`      .long 0xFFFFFFFF               ;Reserved
`zone1_ZSB_comment`      .long `B1_Z1_EXEONLYSECT`      ;Bank 1 Z1-EXEONLYSECT
`zone1_ZSB_comment`      .long 0xFFFFFFFF               ;Reserved
`zone1_ZSB_comment`      .long `B1_Z1_GRABSECT`         ;Bank 1 Z1-GRABSECT
`zone1_ZSB_comment` 
`zone1_ZSB_comment`      .long 0xFFFFFFFF               ;Reserved
`zone1_ZSB_comment`      .long 0xFFFFFFFF               ;Reserved
`zone1_ZSB_comment`      .long 0xFFFFFFFF               ;Reserved
`zone1_ZSB_comment`      .long 0xFFFFFFFF               ;Reserved
% }

;----------------------------------------------------------------------

; For code security operation,after development has completed, prior to
; production, all other zone select block locations should be programmed
; to 0x0000 for maximum security.        
; If the first zone select block at offset 0x10 is used, the section 
; "dcsm_rsvd_z1" can be used to program these locations to 0x0000.
; This code is commented out for development.

;       .sect "dcsm_rsvd_z1"
;        .loop (1e0h)
;              .int 0x0000
;        .endloop


;----------------------------------------------------------------------
; Zone 2
;----------------------------------------------------------------------
`zone2_comment`     .sect "dcsm_otp_z2_linkpointer"
`zone2_comment`      .retain
`zone2_comment`      .long `zone2_LINKPOINTER`
% if (!["F2838x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName())){
`zone2_comment`      .long 0xFFFFFFFF     ;Reserved
% }
`zone2_comment`      .long `zone2_LINKPOINTER`
% if (!["F2838x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName())){
`zone2_comment`      .long 0xFFFFFFFF     ;Reserved
% }
`zone2_comment`      .long `zone2_LINKPOINTER`
% if (!["F2838x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName())){
`zone2_comment`      .long 0xFFFFFFFF     ;Reserved
% }
`zone2_comment`
% if (["F2838x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName())){
`zone2_OTP_comment`     .sect "dcsm_rsvd_z2"
`zone2_OTP_comment`      .retain
`zone2_OTP_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_OTP_comment`     .sect "dcsm_otp_z2_pswdlock"
`zone2_OTP_comment`      .retain
`zone2_OTP_comment`      .long `zone2_PASWDLOCK`
`zone2_comment`      
    % if (!["F280013x"].includes(Common.getDeviceName())) {
`zone2_OTP_comment`     .sect "dcsm_otp_z2_crclock"
`zone2_OTP_comment`      .retain
`zone2_OTP_comment`      .long `zone2_CRCLOCK`
    % } else if(["F280013x"].includes(Common.getDeviceName())) {
`zone2_OTP_comment`     .sect "dcsm_otp_z2_crclock_rsvd"
`zone2_OTP_comment`      .retain
`zone2_OTP_comment`      .long 0x3FFFFFFF     ;Reserved
    % }
% } else {      
`zone2_OTP_comment`     .sect "dcsm_otp_z2_pswdlock"
`zone2_OTP_comment`      .retain
`zone2_OTP_comment`      .long `zone2_PASWDLOCK`
`zone2_OTP_comment`      .long `DEFAULT_ZONE2_PASSWORDLOCK[1]`     ;Reserved
`zone2_comment`      
`zone2_OTP_comment`     .sect "dcsm_otp_z2_crclock"
`zone2_OTP_comment`      .retain
`zone2_OTP_comment`      .long `zone2_CRCLOCK`
`zone2_OTP_comment`      .long `DEFAULT_ZONE2_CRCLOCK[1]`     ;Reserved
`zone2_OTP_comment`     .sect "dcsm_otp_z2_jtaglock"
`zone2_OTP_comment`      .retain
`zone2_OTP_comment`      .long `zone2_JTAGLOCK`
`zone2_OTP_comment`      .long `DEFAULT_ZONE2_JTAGLOCK[1]`     ;Reserved
% }
`zone2_comment`            
% if (["F28004x", "F28002x"].includes(Common.getDeviceName())) {
`zone2_OTP_BOOT_comment`     .sect "dcsm_otp_z2_gpreg"
`zone2_OTP_BOOT_comment`      .retain
`zone2_OTP_BOOT_comment`      .long `ZONE2_BOOTPIN_CONFIG`     ;Z2OTP_BOOTPIN_CONFIG
`zone2_OTP_BOOT_comment`      .long `ZONE2_GPREG2`     ;Z2OTP_GPREG2
% }
% if (["F28004x", "F28002x"].includes(Common.getDeviceName())) {
`zone2_OTP_BOOT_comment`     .sect "dcsm_otp_z2_bootctrl"
`zone2_OTP_BOOT_comment`      .retain
`zone2_OTP_BOOT_comment`      .long `ZONE2_BOOTDEF_LOW`     ;Z2OTP_BOOTDEF_LOW
`zone2_OTP_BOOT_comment`      .long `ZONE2_BOOTDEF_HIGH`     ;Z2OTP_BOOTDEF_HIGH
% } else if (["F2838x", "F28003x", "F280013x", "F280015x", "F28P65x", "F28P55x"].includes(Common.getDeviceName())) {
`zone2_OTP_BOOT_comment`     .sect "dcsm_otp_z2_gpreg"
`zone2_OTP_BOOT_comment`      .retain
`zone2_OTP_BOOT_comment`      .long `ZONE2_BOOTPIN_CONFIG`     ;Z2OTP_GPREG1 = Z2_BOOTPIN
`zone2_OTP_BOOT_comment`      .long `ZONE2_GPREG2`     ;Z2OTP_GPREG2
`zone2_OTP_BOOT_comment`      .long `ZONE2_BOOTDEF_LOW`     ;Z2OTP_GPREG3 = Z2OTP_BOOTDEF_LOW
`zone2_OTP_BOOT_comment`      .long `ZONE2_BOOTDEF_HIGH`     ;Z2OTP_GPREG4 = Z2OTP_BOOTDEF_HIGH
% } else {
`zone2_OTP_BOOT_comment`     .sect "dcsm_otp_z2_bootctrl"
`zone2_OTP_BOOT_comment`      .retain
`zone2_OTP_BOOT_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_OTP_BOOT_comment`      .long `zone2_BOOTCTRL`
%}
% if ("F2838x".includes(Common.getDeviceName())){
`zone2_OTP_comment`     .sect "dcsm_rsvd1_z2"
`zone2_OTP_comment`      .retain
`zone2_OTP_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_OTP_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`
`zone2_ZSB_comment`     .sect "dcsm_zsel_z2"
`zone2_ZSB_comment`      .retain
`zone2_ZSB_comment`      .long `zone2_PASSWORD0`     ;Z2OTP_CSMPSWD0 (LSW of 128-bit password)
`zone2_ZSB_comment`      .long `zone2_PASSWORD1`     ;Z2OTP_CSMPSWD1
`zone2_ZSB_comment`      .long `zone2_PASSWORD2`     ;Z2OTP_CSMPSWD2
`zone2_ZSB_comment`      .long `zone2_PASSWORD3`     ;Z2OTP_CSMPSWD3 (MSW of 128-bit password)
`zone2_ZSB_comment` 
`zone2_ZSB_comment`      .long `Z2_GRABSECT1`     ;Z2OTP_GRABSECT1
`zone2_ZSB_comment`      .long `Z2_GRABSECT2`     ;Z2OTP_GRABSECT2
`zone2_ZSB_comment`      .long `Z2_GRABSECT3`     ;Z2OTP_GRABSECT3
`zone2_ZSB_comment`      .long `Z2_GRABRAM1`     ;Z2OTP_GRABRAM1
`zone2_ZSB_comment`      .long `Z2_GRABRAM2`     ;Z2OTP_GRABRAM2
`zone2_ZSB_comment`      .long `Z2_GRABRAM3`     ;Z2OTP_GRABRAM3
`zone2_ZSB_comment` 
`zone2_ZSB_comment`      .long `Z2_EXEONLYSECT1`     ;Z2OTP_EXEONLYSECT1
`zone2_ZSB_comment`      .long `Z2_EXEONLYSECT2`     ;Z2OTP_EXEONLYSECT2
`zone2_ZSB_comment`      .long `Z2_EXEONLYRAM1`     ;Z2OTP_EXEONLYRAM1
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
% } else if (["F28003x", "F280013x", "F280015x"].includes(Common.getDeviceName())) {
`zone2_OTP_comment`     .sect "dcsm_rsvd1_z2"
`zone2_OTP_comment`      .retain
`zone2_OTP_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_OTP_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`
`zone2_ZSB_comment`     .sect "dcsm_zsel_z2"
`zone2_ZSB_comment`      .retain
`zone2_ZSB_comment`      .long `zone2_PASSWORD0`     ;Z2OTP_CSMPSWD0 (LSW of 128-bit password)
`zone2_ZSB_comment`      .long `zone2_PASSWORD1`     ;Z2OTP_CSMPSWD1
`zone2_ZSB_comment`      .long `zone2_PASSWORD2`     ;Z2OTP_CSMPSWD2
`zone2_ZSB_comment`      .long `zone2_PASSWORD3`     ;Z2OTP_CSMPSWD3 (MSW of 128-bit password)
`zone2_ZSB_comment` 
`zone2_ZSB_comment`      .long `Z2_GRABSECT1`     ;Z2OTP_GRABSECT1
`zone2_ZSB_comment`      .long `Z2_GRABSECT2`     ;Z2OTP_GRABSECT2
`zone2_ZSB_comment`      .long `Z2_GRABSECT3`     ;Z2OTP_GRABSECT3
`zone2_ZSB_comment`      .long `Z2_GRABRAM1`     ;Z2OTP_GRABRAM1
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment` 
`zone2_ZSB_comment`      .long `Z2_EXEONLYSECT1`     ;Z2OTP_EXEONLYSECT1
`zone2_ZSB_comment`      .long `Z2_EXEONLYSECT2`     ;Z2OTP_EXEONLYSECT2
`zone2_ZSB_comment`      .long `Z2_EXEONLYRAM1`     ;Z2OTP_EXEONLYRAM1
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
% } else if ("F28P65x".includes(Common.getDeviceName())){
`zone2_OTP_comment`     .sect "dcsm_rsvd1_z2"
`zone2_OTP_comment`      .retain
`zone2_OTP_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_OTP_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`
`zone2_ZSB_comment`     .sect "dcsm_zsel_z2"
`zone2_ZSB_comment`      .retain
`zone2_ZSB_comment`      .long `zone2_PASSWORD0`     ;Z2OTP_CSMPSWD0 (LSW of 128-bit password)
`zone2_ZSB_comment`      .long `zone2_PASSWORD1`     ;Z2OTP_CSMPSWD1
`zone2_ZSB_comment`      .long `zone2_PASSWORD2`     ;Z2OTP_CSMPSWD2
`zone2_ZSB_comment`      .long `zone2_PASSWORD3`     ;Z2OTP_CSMPSWD3 (MSW of 128-bit password)
`zone2_ZSB_comment` 
`zone2_ZSB_comment`      .long `Z2_GRABSECT1`     ;Z2OTP_GRABSECT1
`zone2_ZSB_comment`      .long `Z2_GRABSECT2`     ;Z2OTP_GRABSECT2
`zone2_ZSB_comment`      .long `Z2_GRABSECT3`     ;Z2OTP_GRABSECT3
`zone2_ZSB_comment`      .long `Z2_GRABRAM1`     ;Z2OTP_GRABRAM1
`zone2_ZSB_comment`      .long `Z2_GRABRAM2`     ;Z2OTP_GRABRAM2
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment` 
`zone2_ZSB_comment`      .long `Z2_EXEONLYSECT1`     ;Z2OTP_EXEONLYSECT1
`zone2_ZSB_comment`      .long `Z2_EXEONLYSECT2`     ;Z2OTP_EXEONLYSECT2
`zone2_ZSB_comment`      .long `Z2_EXEONLYRAM1`     ;Z2OTP_EXEONLYRAM1
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
% } else if ("F28P55x".includes(Common.getDeviceName())){
`zone2_OTP_comment`     .sect "dcsm_rsvd1_z2"
`zone2_OTP_comment`      .retain
`zone2_OTP_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_OTP_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`
`zone2_ZSB_comment`     .sect "dcsm_zsel_z2"
`zone2_ZSB_comment`      .retain
`zone2_ZSB_comment`      .long `zone2_PASSWORD0`     ;Z2OTP_CSMPSWD0 (LSW of 128-bit password)
`zone2_ZSB_comment`      .long `zone2_PASSWORD1`     ;Z2OTP_CSMPSWD1
`zone2_ZSB_comment`      .long `zone2_PASSWORD2`     ;Z2OTP_CSMPSWD2
`zone2_ZSB_comment`      .long `zone2_PASSWORD3`     ;Z2OTP_CSMPSWD3 (MSW of 128-bit password)
`zone2_ZSB_comment` 
`zone2_ZSB_comment`      .long `Z2_GRABSECT1`     ;Z2OTP_GRABSECT1
`zone2_ZSB_comment`      .long `Z2_GRABSECT2`     ;Z2OTP_GRABSECT2
`zone2_ZSB_comment`      .long `Z2_GRABSECT3`     ;Z2OTP_GRABSECT3
`zone2_ZSB_comment`      .long `Z2_GRABRAM1`     ;Z2OTP_GRABRAM1
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment` 
`zone2_ZSB_comment`      .long `Z2_EXEONLYSECT1`     ;Z2OTP_EXEONLYSECT1
`zone2_ZSB_comment`      .long `Z2_EXEONLYSECT2`     ;Z2OTP_EXEONLYSECT2
`zone2_ZSB_comment`      .long `Z2_EXEONLYRAM1`     ;Z2OTP_EXEONLYRAM1
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF     ;Reserved
% } else {
`zone2_ZSB_comment`      
`zone2_ZSB_comment`     .sect "dcsm_zsel_z2"
`zone2_ZSB_comment`      .retain
`zone2_ZSB_comment`      .long `Z2_EXEONLYRAM`       ;z2-EXEONLYRAM
`zone2_ZSB_comment`      .long `Z2_EXEONLYSECT`      ;z2-EXEONLYSECT
`zone2_ZSB_comment`      .long `Z2_GRABRAM`          ;z2-GRABRAM
`zone2_ZSB_comment`      .long `Z2_GRABSECT`         ;z2-GRABSECT
`zone2_ZSB_comment`      
`zone2_ZSB_comment`      .long `zone2_PASSWORD0`
`zone2_ZSB_comment`      .long `zone2_PASSWORD1`
`zone2_ZSB_comment`      .long `zone2_PASSWORD2`
`zone2_ZSB_comment`      .long `zone2_PASSWORD3`
% }

% if (bank1_exists) {
`zone2_comment`     .sect "b1_dcsm_otp_z2_linkpointer"
`zone2_comment`      .retain
`zone2_comment`      .long `bank1_zone2_LINKPOINTER`
`zone2_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_comment`      .long `bank1_zone2_LINKPOINTER`
`zone2_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_comment`      .long `bank1_zone2_LINKPOINTER`
`zone2_comment`      .long 0xFFFFFFFF     ;Reserved
`zone2_ZSB_comment` 
`zone2_ZSB_comment`     .sect "b1_dcsm_zsel_z2"
`zone2_ZSB_comment`      .retain
`zone2_ZSB_comment`      .long 0xFFFFFFFF               ;Reserved
`zone2_ZSB_comment`      .long `B1_Z2_EXEONLYSECT`      ;Bank 1 Z2-EXEONLYSECT
`zone2_ZSB_comment`      .long 0xFFFFFFFF               ;Reserved
`zone2_ZSB_comment`      .long `B1_Z2_GRABSECT`         ;Bank 1 Z2-GRABSECT
`zone2_ZSB_comment` 
`zone2_ZSB_comment`      .long 0xFFFFFFFF               ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF               ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF               ;Reserved
`zone2_ZSB_comment`      .long 0xFFFFFFFF               ;Reserved
% }

;----------------------------------------------------------------------

; For code security operation,after development has completed, prior to
; production, all other zone select block locations should be programmed
; to 0x0000 for maximum security.        
; If the first zone select block at offset 0x10 is used, the section 
; "dcsm_rsvd_z2" can be used to program these locations to 0x0000.
; This code is commented out for development.

;       .sect "dcsm_rsvd_z2"
;        .loop (1e0h)
;              .int 0x0000
;        .endloop


;----------------------------------------------------------------------
; End of file
;----------------------------------------------------------------------

