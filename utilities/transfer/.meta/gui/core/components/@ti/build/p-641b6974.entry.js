import{r as t,c as e,h as i,g as s}from"./p-823ca21f.js";import{GcConsole as n}from"../gc-core-assets/lib/GcConsole";import{UndoStack as o}from"../gc-core-assets/lib/UndoStack";import{ServicesRegistry as c}from"../gc-core-services/lib/ServicesRegistry";import{targetConfigServiceType as r}from"../gc-service-target-config/lib/TargetConfigService";import{W as a}from"./p-b29896ef.js";import{GcPromise as h}from"../gc-core-assets/lib/GcPromise";import{SystemSetupEditor as l}from"../gc-target-ccxml-parser/lib/TargetCcxmlParser";import{GcUtils as d}from"../gc-core-assets/lib/GcUtils";import"../gc-core-assets/lib/GcFiles";import"../gc-core-assets/lib/GcLocalStorage";import"../gc-widget-message-dialog/lib/GcMessageDialog";const g="advanced";class u{constructor(t,e){this.systemSetupEditor=t;this._id=e;this._cpuList=new Array;this._expandAllLevel=8;this.refreshCpuList("")}get id(){return this._id}get expandAllLevel(){const t=this._expandAllLevel;this._expandAllLevel=0;return t}get selection(){if(!this.systemSetupEditor){return{connectionName:"",deviceName:"",isAdvanced:false}}const t=this.systemSetupEditor.getComponentList("connection")[0];const e=this.systemSetupEditor.getComponentName(t)??"";let i=this.systemSetupEditor.getComponentList("board",t)[0];if(!i){i=this.systemSetupEditor.getComponentList("device",t)[0]}const s=this.systemSetupEditor.getComponentName(i)??"";const n=this.connections.length>1||this.getRootDevicesForConnection(0).length>1;return{connectionName:e,deviceName:s,isAdvanced:n}}static getName(t){const{connectionName:e,deviceName:i,isAdvanced:s}=t;if(s||!i){return g}if(!e){return""}return`${e}/${i}`}get name(){return u.getName(this.selection)}clone(){const t=this.ccxmlText;const e=this.selectedCpuIndex;const i=this.selectedPath;const s=this.id;const n=this._expandAllLevel;const o=h.create((async function(c,r){try{const r=new l;await r.load(t,"./default.ccxml",(()=>o.cancelled));if(o.cancelled){throw new Error("operation cancelled")}const a=new u(r,s);a.selectedCpuIndex=e;a.selectedPath=i;a._expandAllLevel=n;c(a)}catch(t){r(t)}}));return o}static createNew(t){const e=h.create((async(i,s)=>{try{const{connectionName:s,deviceName:n}=t;let{ccxmlText:o,fileName:a}=t;if(!o){const t=c.getService(r);o=await t.getConfig(s,n)}const h=new l;a=a||"./default.ccxml";await h.load(o,a,(()=>e.cancelled));if(e.cancelled){throw new Error("operation cancelled")}await h.ensureBuiltInProperties("cpu");i(new u(h,`session_${u.uniqueIdCounter++}`))}catch(t){s(t)}}));return e}static createEmpty(){return new u(new l,`session_${u.uniqueIdCounter++}`)}get errorMessage(){return this.systemSetupEditor?.getErrorMessage(null)??""}get connections(){return this.systemSetupEditor?.getComponentList("connection").map((t=>this.systemSetupEditor.getComponentName(t)))??[]}get selectedComponentName(){if(!this.selectedPath){return""}const t=this.systemSetupEditor?.findElementByPath(this.selectedPath);if(!t){return""}return this.systemSetupEditor?.getComponentName(t)??""}getRootDevicesForConnection(t){const e=this.systemSetupEditor?.getRoot().getChildDataProvider(t);if(e){return new Array(e.rowCount).fill("").map(((t,i)=>{const s=e.getChildDataProvider(i);return this.systemSetupEditor?.getComponentName(s)}))}return[]}get cpuList(){return this._cpuList.map((t=>t.name))}get selectedCpu(){return this._cpuList[this.selectedCpuIndex]?.name??""}set selectedCpu(t){this.selectedCpuIndex=this._cpuList.findIndex((e=>e.name===t));if(this.selectedCpuIndex<0&&this.cpuList.length>0){this.selectedCpuIndex=0}}refreshCpuList(t){this._cpuList=this.systemSetupEditor?.getComponentList("cpu").map((t=>({element:t,name:t.getName()})))??[];this.selectedCpu=t}get selectedPropertiesCaption(){let t=this.selectedPath&&this.systemSetupEditor.findElementTypeByPath(this.selectedPath);if(t){t=t.charAt(0).toUpperCase()+t.slice(1)}return t}setSelection(t,e){if(t===0){this.selectedCpu=e}else{this.selectedPath=e}}get properties(){if(this.selectedCpuIndex<0||this.selectedCpuIndex>=this._cpuList.length){return[]}return this.systemSetupEditor?.getProperties(this._cpuList[this.selectedCpuIndex].element,true)??[]}getValues(t,e){return t.reduce(((t,i)=>{const s=i.id??i.caption;if(s&&this.systemSetupEditor){t[s]=this.systemSetupEditor.getProperty(i,i.widgetType==="select"?true:false,e)}return t}),{})}setValue(t,e,i){const s=(t===0?this.properties:this.advancedProperties).find((t=>(t.id??t.caption)===e));if(!s){throw new Error(`No such property with id ${e}`)}this.systemSetupEditor?.setProperty(s,i,s.widgetType==="select"?true:false)}async ensureBuiltInProperties(){const t=this.selectedPath&&this.systemSetupEditor.findElementTypeByPath(this.selectedPath);if(t){return this.systemSetupEditor.ensureBuiltInProperties(t)}}get advancedProperties(){const t=this.selectedPath&&this.systemSetupEditor.findElementByPath(this.selectedPath);if(!t){return[]}return this.systemSetupEditor?.getProperties(t)}get root(){return this.systemSetupEditor?.getRoot()}get ccxmlText(){return this.systemSetupEditor?.getXmlText()??""}addComponent(t){return h.create((async(e,i)=>{try{if(!this.systemSetupEditor){throw new Error("Programmer Error: Cannot add component to null configuration")}const i=t.type==="connection"?undefined:this.selectedPath;const s=this.systemSetupEditor.findElementByPath(i);await this.systemSetupEditor.addComponent(t.type==="connection"?null:s,t);this.refreshCpuList(this.selectedCpu);if(s){const t=i?i.split("/"):[];t.push(s.children[s.rowCount-1].getName());this.selectedPath=t.join("/")}e(this)}catch(t){i(t)}}))}canMove(){const t={up:false,down:false,remove:false};try{if(!this.systemSetupEditor||!this.selectedPath){return t}const e=this.systemSetupEditor.findElementByPath(this.selectedPath);const i=this.systemSetupEditor.canRemoveComponent(e);if(!i){return t}return{up:this.systemSetupEditor.canMoveUp(e),down:this.systemSetupEditor.canMoveDown(e),remove:i}}catch(e){return t}}canRename(){if(!this.systemSetupEditor||!this.selectedPath){return undefined}const t=this.systemSetupEditor.findElementByPath(this.selectedPath);if(!t){return undefined}return{type:this.systemSetupEditor.findElementTypeByPath(this.selectedPath),name:t.getName()}}moveComponent(t){const e=this.systemSetupEditor?.findElementByPath(this.selectedPath);if(!e){return}if(t==="up"){this.systemSetupEditor.moveUp(e)}else{this.systemSetupEditor.moveDown(e)}this.refreshCpuList(this.selectedCpu)}removeComponent(){if(!this.selectedPath||!this.systemSetupEditor){return}const t=this.systemSetupEditor.findElementByPath(this.selectedPath);const e=this.selectedPath.split("/");e.pop();this.selectedPath=e.join("/");if(t){const e=`remove ${this.systemSetupEditor?.getNodeType(t)} ${t.getName()}`;this.systemSetupEditor?.removeComponent(t);this.refreshCpuList(this.selectedCpu);return e}}renameComponent(t){const e=this.systemSetupEditor?.findElementByPath(this.selectedPath);if(e){this.systemSetupEditor.renameComponent(e,t);const i=this.selectedPath.split("/");const s=i.pop();i.push(t);this.selectedPath=i.join("/");let n=this.selectedCpu;if(n===s){n=t}this.refreshCpuList(n)}}isValidRenameInput(t){if(!t||!this.systemSetupEditor){return false}t=t.trim();if(["cpu","subpath","router"].includes(this.systemSetupEditor.findElementTypeByPath(this.selectedPath))&&!/^[a-zA-Z_]\w*$/.test(t)){return false}const e=this.systemSetupEditor.findElementByPath(this.selectedPath);if(!e){return false}const i=e.getParent();if(!i){return false}const s=e.getName();if(t===s){return true}const n=i.children.map((t=>t.getName()));return!n.includes(t)}}u.uniqueIdCounter=0;u.nullSession=new u(undefined,"blank");class m{constructor(t,e,i,s=""){this.editor=t;this.value=e;this.description=s;if(!this.description){if(e){this.description=`set ${i}=${this.value.toString()}`}else{this.description=`clear ${i}`}}}undo(){this.value=this.swap(this.value)}redo(){this.value=this.swap(this.value)}toString(){return this.description}}class p extends m{constructor(t,e,i,s,n){super(t,s,i,`set ${i}=${s}`);this.selection=e;this.name=i;this.newValue=s;this.oldValue=n}swap(t){this.editor.setProperty(this.selection,this.name,t);return t===this.newValue?this.oldValue:this.newValue}}class f extends m{constructor(t,e){super(t,e,"connection")}swap(t){const e=this.editor.getSelection();this.editor.setSelection({...e,connectionName:t});return e.connectionName}}class b extends m{constructor(t,e){super(t,e,"device")}swap(t){const e=this.editor.getSelection();this.editor.setSelection({...e,deviceName:t});return e.deviceName}}class w extends m{constructor(t,e,i,s,n){super(t,{ccxml:e,selection:i},"",n);this.name=u.getName(i);this.state=s}swap(t){const e=this.editor.swapConfiguration(this.name,t.ccxml);const i={ccxml:e,selection:this.state};this.state=t.selection;this.editor.setSelection(t.selection,t.selection);return i}}class v extends m{constructor(t,e,i){super(t,i,"",`move ${i} ${e.selectedPath.split("/").pop()}`);this.uiState=e}swap(t){this.editor.move(this.uiState,t);return t==="up"?"down":"up"}}class x extends m{constructor(t,e,i,s){super(t,{newName:i,oldName:e.selectedPath.split("/").pop()},"",`rename ${s} to ${i}`);this.uiState=e}swap(t){this.uiState=this.editor.setComponentName(this.uiState,t.newName);return{newName:t.oldName,oldName:t.newName}}}class y{constructor(t,e=(t=>{})){this.components=t;this.onSelectedComponentChanged=e;this.rowCount=this.components.length}getValue(t,e){const i=this.components[t].id;if(e==="selected"){return i===this.selectedComponent}return i}setValue(t,e,i){if(e==="selected"){const e=i?this.components[t].id:undefined;this.onSelectedComponentChanged(e)}}getComponentByName(t){return this.components.find((e=>e.id===t))}getComponentByRow(t){return this.components[t]}lookupRowByName(t){return this.components.findIndex((e=>e.id===t))}static isComponentFiltered(t,e){return t.toLowerCase().includes(e.toLowerCase())}static filterByFunction(t,e,i){const s=e.getComponentByRow(t);return!i||y.isComponentFiltered(s.id,i)}}class C extends y{constructor(t,e,i=(t=>{})){super([...t.filter((t=>!t.id.includes("(Bootloader)"))),...e],i)}getDeviceByName(t){return this.getComponentByName(t)}getDeviceByRow(t){return this.getComponentByRow(t)}static filterByFunction(t,e,i){const s=i.indexOf(";");const n=s>0?+i.substring(0,s):-1;i=i.substring(s+1);const o=e.getDeviceByRow(t);return(n<0||o.connectionIndices.includes(n))&&(!i||C.isComponentFiltered(o.id,i))}readDeviceDescription(t){const e=h.create((async(e,i)=>{try{const i=this.getDeviceByName(t);if(!i){throw new Error(`Cannot read description: board or device ${t} does not exist.`)}const s=c.getService(r);const n=await s.getFile(`ccs_base/common/targetdb/${i.type}s/${i.xmlFile}.xml`);let o;const a=s.parseConfig(n);for(let t=a.getRootNode()?.firstChild;t;t=t.nextSibling){if(t.nodeName===i.type){o=t.getAttribute("description")}}if(!o){o=`${t} (description not available)`}e(o)}catch(t){i(t)}}));return e}getDevicesForConnection(t){return this.components.filter((e=>e.connectionIndices.includes(t)))}}const k=':host::-webkit-scrollbar,::-webkit-scrollbar{width:var(--gc-scrollbar-width, var(--theme-scrollbar-width, 8px));height:var(--gc-scrollbar-width, var(--theme-scrollbar-width, 8px))}:host::-webkit-scrollbar-track,::-webkit-scrollbar-track{background:var(--gc-scrollbar-track-background-color, var(--theme-scroll-track-color, rgba(35, 31, 32, 0.2)))}:host::-webkit-scrollbar-thumb,::-webkit-scrollbar-thumb{background:var(--gc-scrollbar-thumb-background-color, var(--theme-scroll-thumb-color, rgba(35, 31, 32, 0.65)))}:host::-webkit-scrollbar-thumb:hover,::-webkit-scrollbar-thumb:hover{background:var(--gc-scrollbar-thumb-background-color-hover, var(--theme-scroll-thumb-color-hover, rgba(35, 31, 32, 0.8)))}:host::-webkit-scrollbar-corner,::-webkit-scrollbar-corner{background:rgba(0, 0, 0, 0)}:host(:focus),:host *:focus{outline:none}:host{-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;font-family:var(--gc-font-family, var(--theme-font-family, "Roboto", "Open Sans", "Segoe UI", "Tahoma", "sans-serif"));font-size:var(--gc-font-size, var(--theme-font-size, 14px));font-weight:400;color:var(--gc-font-color, var(--gc-font-color, var(--theme-font-color, #555555)));margin:var(--gc-margin, var(--theme-margin, 5px));display:inline-block;box-sizing:border-box}:host .user-select{-webkit-user-select:text;-khtml-user-select:text;-moz-user-select:text;-ms-user-select:text;-o-user-select:text;user-select:text}:host .text-link{color:var(--gc-link-color, var(--gc-link-color, var(--theme-link-color, #333333)));--gc-color:var(--gc-link-color, var(--gc-link-color, var(--theme-link-color, #333333)));--gc-text-decoration-hover:underline;--gc-cursor-hover:pointer}:host .text-link:not([disabled]):hover{text-decoration:underline;cursor:pointer}:host([hidden]){display:none !important}:host([readonly]) *{pointer-events:none}:host([disabled]) *{cursor:not-allowed}:host([caption]:not([caption=""])){margin-top:calc(var(--gc-margin, var(--theme-margin, 5px)) + var(--gc-caption-font-size, var(--theme-caption-font-size, 14px)) + 8px)}:host([caption]:not([caption=""])),:host([info-text]:not([info-text=""])){overflow:visible;position:relative}:host([caption=""][info-text]:not([info-text=""])),:host([info-text]:not([info-text=""]):not([caption])){margin-right:calc(var(--gc-margin, var(--theme-margin, 5px)) + 22px)}#elementWrapper{box-sizing:content-box;height:100%;width:100%;display:flex;align-items:center;min-height:inherit;max-height:inherit;min-width:inherit;max-width:inherit}.root-container{position:relative;display:flex;flex-direction:column;width:100%;height:100%;min-height:inherit;max-height:inherit;min-width:inherit;max-width:inherit}.root-container .header-container.top{top:var(--gc-header-container-top, calc(0px - 8px - var(--gc-caption-font-size, var(--theme-caption-font-size, 14px))));flex-direction:row}.root-container .header-container.side{right:-22px;flex-direction:column;height:inherit}.root-container .header-container{position:absolute;display:flex;align-items:center}.root-container .header-container .icon,.root-container .header-container gc-widget-icon{cursor:default;margin:auto;height:18px;width:18px;display:block;--gc-color:var(--gc-caption-info-color, var(--theme-caption-info-color, #98999b))}.root-container .header-container .caption{flex:1;cursor:default;white-space:nowrap;margin-right:2px;font-weight:var(--gc-caption-font-weight, var(--theme-caption-font-weight, 400));font-size:var(--gc-caption-font-size, var(--theme-caption-font-size, 14px));color:var(--gc-caption-font-color, var(--theme-caption-font-color, #999999))}.invisible{visibility:hidden}:host{width:600px;height:800px;margin:0}#elementWrapper{align-items:stretch}#ccxml_tabs{flex:1;height:auto}#ccxml_tabs .column{display:inline-flex;flex-direction:column;align-items:stretch}#ccxml_tabs .column.leftAlign{align-items:start}#ccxml_tabs .column gc-widget-select,#ccxml_tabs .column gc-widget-input-filter{width:auto}#ccxml_tabs .column gc-widget-property-grid{--gc-caption-text-align:left}#ccxml_tabs .column #boardsContainer{min-height:118px}#ccxml_tabs .column #errorIcon{margin:0px}#ccxml_tabs .column #cpus{align-self:start}#ccxml_tabs .column .caption{white-space:nowrap;font-weight:var(--gc-caption-font-weight, var(--theme-caption-font-weight, 400));font-size:var(--gc-caption-font-size, var(--theme-caption-font-size, 14px));color:var(--gc-caption-font-color, var(--theme-caption-font-color, #999999))}#ccxml_tabs .column .caption.none{visibility:hidden}#ccxml_tabs .column #notes{border:1px solid var(--gc-border-color, var(--theme-border-color, #e5e5e5));margin:var(--gc-margin, var(--theme-margin, 5px));padding:var(--gc-margin, var(--theme-margin, 5px));white-space:wrap;min-height:50px;user-select:text}#ccxml_tabs .column[hidden]{display:none !important}#ccxml_tabs .row{display:flex;height:100%}#ccxml_tabs .row.stretch{overflow-x:auto}#ccxml_tabs .noscroll{overflow:hidden}#ccxml_tabs .stretch{flex:1}#ccxml_tabs #buttonContainer{margin-top:var(--gc-margin, var(--theme-margin, 5px));margin-bottom:var(--gc-margin, var(--theme-margin, 5px));overflow-y:auto}#ccxml_tabs #buttonContainer>:first-child{margin-top:0px}#ccxml_tabs div.fill{flex:1;position:relative}#ccxml_tabs div.fill>:first-child{position:absolute;left:0;top:0;right:0;bottom:0}#ccxml_tabs gc-widget-grid-data-column{--gc-heading-text-align:start}#ccxml_tabs gc-widget-grid-data-column.flexColumn{--gc-column-width:minmax(220px, 1fr)}#ccxml_tabs gc-widget-grid-data-column.center{--gc-text-align:center}#ccxml_tabs gc-widget-grid-tree-column{--gc-column-width:1fr}#ccxml_tabs #properties{border:2px solid var(--gc-border-color, var(--theme-border-color, #e5e5e5));overflow:auto;margin:var(--gc-margin, var(--theme-margin, 5px))}#ccxml_tabs #properties gc-widget-property-grid{--gc-caption-text-align:top}#ccxml_tabs .button{width:150px}div#debuggables{margin:var(--gc-margin, var(--theme-margin, 5px));margin-bottom:0px}div#debuggables .progress{margin:0 2px 0 2px;--gc-progress-size:10px;vertical-align:middle}#addComponentDialog{width:550px;height:360px}#addComponentDialog gc-widget-progressbar{flex:1}#renameComponentDialog div.stretch{display:flex;flex-direction:row;align-items:center}#renameComponentDialog div.stretch gc-widget-input{flex:1}';let $=class{constructor(i){t(this,i);this.selectedTabIndexChanged=e(this,"selected-tab-index-changed",7);this.undoDescriptionChanged=e(this,"undo-description-changed",7);this.redoDescriptionChanged=e(this,"redo-description-changed",7);this.dirtyStateChanged=e(this,"dirty-state-changed",7);this.cssPropertyChanged=e(this,"css-property-changed",7);this.connections=[];this.devices=new C([],[]);this.initialized=false;this.undoStack=new o;this.configurations=new Map;this.busyPromiseRejectedMessage="";this.deviceDescriptions=new Map;this.dialogFilterText=new Map;this.addComponentsDialogAvailable=[];this.activeConfiguration=u.nullSession;this.filteredConnections=[];this.selectedConnectionByIndex=-1;this.filterDevicesText="";this.deviceDescription="";this.waitingForAdvancedProperties=false;this.addComponentDialogName="";this.filterComponentsText="";this.dialogDisableConfirm=true;this.addComponentProgress=0;this.isAdvanced=false;this.isValidRename=false;this.tabsPosition="bottom";this.undoDescription="";this.redoDescription="";this.dirtyState=false;this.stopPropagation=t=>{t.stopPropagation()};this.onIndexChanged=t=>{this.selectedTabIndex=t.detail.value;this.selectedTabIndexChanged.emit({value:t.detail.value})};this.onDeviceFilterValueChanged=t=>{this.filterDevicesText=t.detail?.value??""};this.onSelectedConnectionChanged=t=>{const e=t.detail.value;if(this.selectedConnection!==t.detail.value){this.pushOperation(new f(this,e))}};this.onSelectedDeviceChanged=t=>{if(this.devices?.selectedComponent!==t){this.pushOperation(new b(this,t))}};this.onDeviceDescriptionChanged=async()=>{this.deviceDescription="";const t=this.deviceGrid?.selectedPath;this.highlightedDevice=t;if(!t||!this.devices){return}if(this.deviceDescriptionPromise?.isPending){try{await this.deviceDescriptionPromise}catch(t){}this.deviceDescriptionPromise=undefined;if(this.deviceGrid?.selectedPath!==t){return}}let e=this.deviceDescriptions.get(t);if(!e){e=this.devices.readDeviceDescription(t);this.deviceDescriptions.set(t,e)}this.deviceDescriptionPromise=e;try{this.deviceDescription=await e}catch(e){this.logger.error(`Problem reading device description: ${e.message||e.toString()}`);this.deviceDescription=`${t} (description not available)`}};this.onAdvanceTreeSelectionChanged=()=>{this.activeConfiguration.selectedPath=this.advancedTreeGrid?.selectedPath??"";this.ensureDefaultProperties()};this.onSelectedCpuIndexChanged=t=>{this.activeConfiguration.selectedCpuIndex=t.detail.value;this.refresh()};this.onPropertyValueChanged=async t=>{if(t.detail.value!=t.detail.oldValue){this.pushOperation(new p(this,await this.getUiState(),t.detail.id??t.detail.caption,t.detail.value,t.detail.oldValue))}};this.openNewConnectionDialog=()=>{this.openAddComponentDialog("Connection",this.connections)};this.openAddDeviceDialog=()=>{const t=this.activeConfiguration.selectedComponentName;const e=this.connections.findIndex((e=>e.id===t));if(e<0){return}const i=this.devices.getDevicesForConnection(e);this.openAddComponentDialog("Board or Device",i)};this.onComponentFilterValueChanged=t=>{this.filterComponentsText=t.detail?.value??"";this.dialogFilterText.set(this.addComponentDialogName,this.filterComponentsText)};this.doAddComponent=async()=>{const t=this.componentsGrid?.selectedPath;const e=this.addComponentsDialogAvailable.find((e=>e.id===t));if(e){let t=this.activeConfiguration;const i=this.activeConfiguration.name;if(t===u.nullSession){t=u.createEmpty()}else if(i){this.configurations.set(i,t.clone())}const s={...this.getSelection(),...await this.getUiState()};const n=t.addComponent(e);this.addComponentProgress=1;const o=setInterval((()=>{let t=this.addComponentProgress;t+=Math.round((100-t)/20);t=Math.min(100,t);this.addComponentProgress=t}),250);try{const t=await n;const i={...s,...t.selection,selectedCpu:t.selectedCpu,selectedPath:t.selectedPath};const c=t.selectedPath?.split("/").pop();const r=`add ${e.type} ${c||e.id}`;this.pushOperation(new w(this,n,i,s,r))}catch(t){this.logger.error(`adding component ${e.id} failed: ${t.message||t.toString()}`)}finally{this.addComponentProgress=0;clearInterval(o)}}this.addComponentDialog?.close()};this.doRemoveComponent=async()=>{const t=this.activeConfiguration.name;if(t){this.configurations.set(t,this.activeConfiguration.clone())}const e={...this.getSelection(),...await this.getUiState()};const i=this.activeConfiguration.removeComponent();const s={...e,...this.activeConfiguration.selection,selectedCpu:this.activeConfiguration.selectedCpu,selectedPath:this.activeConfiguration.selectedPath};const n=h.create((t=>t(this.activeConfiguration)));this.pushOperation(new w(this,n,s,e,i))};this.doMoveComponentUp=async()=>{this.pushOperation(new v(this,await this.getUiState(),"up"))};this.doMoveComponentDown=async()=>{this.pushOperation(new v(this,await this.getUiState(),"down"))};this.onSelectedComponentChanged=()=>{this.dialogDisableConfirm=false};this.onComponentDoubleClicked=()=>{};this.openRenameComponentDialog=()=>{const t=this.activeConfiguration.canRename();this.isValidRename=true;if(this.renameDialogInput&&t){this.renameDialogInput.value=t.name;this.renameComponentDialog.open()}};this.doRenameComponent=async t=>{const e=this.activeConfiguration.canRename();if(t.detail.closeReason!=="confirm"||!e){return}const i=this.renameDialogInput?.value?.toString().trim();if(i&&i!==e.name){const t=await this.getUiState(this.activeConfiguration.selectedPath);this.pushOperation(new x(this,t,i,e.type))}this.renameDialogInput.value=""};this.gotoAdvancedTab=()=>{this.selectedTabIndex=1};this.onRenameDialogInputChanged=()=>{const t=this.renameDialogInput?.value;this.isValidRename=this.activeConfiguration.isValidRenameInput(t)};this._refresh=0;this.hidden=false}setActiveConfiguration(t,e){try{if(this.activeConfiguration!==t){this.activeConfiguration=t;this.advancedTreeGrid?.setDataProvider(this.activeConfiguration.root,this.activeConfiguration.expandAllLevel,this.activeConfiguration.id,e)}}catch(t){this._logger.error(`setActiveConfiguration() failed with error: ${t.message||t.toString()}`)}}getConnectionIndexByName(t){return this.connections.findIndex((e=>e.id===t))??-1}get selectedConnection(){if(this.selectedConnectionByIndex<0){return $.DEFAULT_CONNECTION}return this.connections[this.selectedConnectionByIndex]?.id}set selectedConnection(t){this.selectedConnectionByIndex=this.getConnectionIndexByName(t)}get logger(){if(!this._logger){this._logger=new n("gc-widget-ccxml-editor",this.el.id)}return this._logger}onUndoDescriptionChanged(){this.undoDescriptionChanged.emit({value:this.undoStack.undoStack[0]?.toString()??""})}onRedoDescriptionChanged(){this.redoDescriptionChanged.emit({value:this.undoStack.redoStack[0]?.toString()??""})}onDirtyStateChanged(){if(this.dirtyState!==this.undoStack.dirty){this.undoStack.dirty=this.dirtyState}this.dirtyStateChanged.emit({value:this.undoStack.dirty})}async load(t,e,i=false){try{const s=u.createNew({ccxmlText:t,fileName:e});const n=await s;const c=n.connections;if(c.length===0){throw new Error("Failed to load .ccxml file.  The contents is missing a connection.")}c.forEach(((t,e)=>{const i=this.getConnectionIndexByName(t);if(i<0){throw new Error(`Failed to load .ccxml file.  The connection id="${t}" is not a known connection.`)}const s=n.getRootDevicesForConnection(e);if(s.length===0){throw new Error(`Failed to load .ccxml file.  The contents is missing a device for connection ${t}.`)}s.forEach((e=>{const s=this.devices?.getDeviceByName(e);if(!s){throw new Error(`Failed to load .ccxml file.  The device id="${e}" is not a known board or device.`)}if(!s.connectionIndices.includes(i)){throw new Error(`Failed to load .ccxml file.  The connection id="${t}" is not supported by the ${s.type} id="${e}`)}}))}));const r={...this.getSelection(),...await this.getUiState()};const a={...n.selection,page:0,selectedCpu:n.selectedCpu,selectedPath:n.selectedPath,expandedTreeStates:undefined};const h=new w(this,s,a,r,"replace all ccxml text");if(i){this.logger.debug(`(load) ${h.toString()}`);h.redo();this.undoStack=new o;this.onUndoStackChanged()}else{this.pushOperation(h)}}catch(t){this.logger.error(t.message||t.toString());throw t}}async save(){if(this.busyPromise){await this.busyPromise}this.dirtyState=false;return this.activeConfiguration.ccxmlText}async undo(){if(this.undoStack.canUndo){const t=this.undoStack.popUndoStack();this.logger.debug(`(undo) ${t.toString()}`);t.undo();this.onUndoStackChanged()}}async paste(t){if(t){await this.load(t)}}async copy(){return this.activeConfiguration.ccxmlText}async redo(){if(this.undoStack.canRedo){const t=this.undoStack.popRedoStack();this.logger.debug(`(redo) ${t.toString()}`);t.redo();this.onUndoStackChanged()}}async getTextFn(){return()=>this.activeConfiguration.ccxmlText}async getSelectedDevice(){return this.devices.selectedComponent??""}onUndoStackChanged(){this.undoDescription=this.undoStack.undoStack[0]?.toString()??"";this.redoDescription=this.undoStack.redoStack[0]?.toString()??"";this.dirtyState=this.undoStack.dirty}pushOperation(t){this.logger.debug(`(push) ${t.toString()}`);this.undoStack.pushOperation(t);t.redo();this.onUndoStackChanged()}async ensureDefaultProperties(){try{this.waitingForAdvancedProperties=true;await(this.activeConfiguration?.ensureBuiltInProperties())}finally{this.waitingForAdvancedProperties=false}}doFilterConnections(t,e){const i=e&&this.devices?this.devices.getDeviceByName(e):undefined;let s;if(i){s=i.connectionIndices.map((e=>t[e].id))}else{s=t.map((t=>t.id))}s=s.filter((t=>t!=="Serial Connection"));s=s.sort();s.unshift($.DEFAULT_CONNECTION);return s}openAddComponentDialog(t,e){this.addComponentDialogName=t;this.addComponentsDialogAvailable=e;this.filterComponentsText=this.dialogFilterText.get(t)??"";if(this.componentsGrid&&this.addComponentDialog){this.componentsGrid.setFilterMethod(y.filterByFunction);this.componentsGrid.setDataProvider(new y(e));this.componentsGrid.selectedPath="";this.addComponentDialog.open();this.dialogDisableConfirm=true}}move(t,e){this.activeConfiguration.selectedPath=t.selectedPath;this.activeConfiguration.selectedCpu=t.selectedCpu;this.activeConfiguration.moveComponent(e);this.advancedTreeGrid?.setDataProvider(this.activeConfiguration.root,this.activeConfiguration.expandAllLevel,this.activeConfiguration.id,t.expandedTreeStates);this.selectedTabIndex=t.page;this.refresh()}setComponentName(t,e){this.activeConfiguration.selectedPath=t.selectedPath;this.activeConfiguration.selectedCpu=t.selectedCpu;this.activeConfiguration.renameComponent(e);const i=this.activeConfiguration.selectedPath;if(t.expandedTreeStates){this.advancedTreeGrid?.setExpandedStates(i,t.expandedTreeStates)}this.refresh();return{...t,selectedCpu:this.activeConfiguration.selectedCpu,selectedPath:i}}connectedCallback(){this.initialized=false;this.devices=undefined;const t=c.getService(r);t.getConfigInfo().then((t=>{this.devices=new C(t.devices,t.boards,this.onSelectedDeviceChanged);this.connections=t.connections;this.filteredConnections=this.doFilterConnections(this.connections)}))}renderDebuggableCpuCount(t){const e=this.busyPromise?.isRejected?this.busyPromiseRejectedMessage:t>0?this.activeConfiguration.errorMessage:"";if(e){return i("gc-widget-icon",{id:"errorIcon",size:"s",icon:"navigation:cancel",appearance:"primary",tooltip:e})}else if(this.busyPromise?.isPending){return i("gc-widget-progress-spinner",{class:"progress"})}else{return`${t}`}}render(){const t=this.devices?.selectedComponent;let e=this.filteredConnections.join("|");if(e.startsWith($.DEFAULT_CONNECTION+"|")){const i=`recommended (${this.getRecommendedConnectionOption(t)})`;e=i+e.substring($.DEFAULT_CONNECTION.length)}const s=this.filterDevicesText||this.selectedConnectionByIndex>=0?`${this.selectedConnectionByIndex};${this.filterDevicesText}`:"";const n=this.activeConfiguration.cpuList;const o=this.activeConfiguration?.selectedCpuIndex;const c=this.activeConfiguration.properties;const r=this.fileSeparator||(d.OS==="win"?"\\":"/");const h=this.activeConfiguration.getValues(c,r);const l=this.waitingForAdvancedProperties?[]:this.activeConfiguration.advancedProperties;const g=this.activeConfiguration.getValues(l,r);const u=this.activeConfiguration.selectedPropertiesCaption;const m=`${this.addComponentDialogName==="Connection"?"New":"Add"} ${this.addComponentDialogName}`;const p=this.addComponentDialogName==="Connection"?"content:link":"hardware:memory";const f=this.activeConfiguration.canRename();const b=u==="Connection";const w=this.activeConfiguration.canMove();return a.doRender(i("gc-widget-tab-container",{id:"ccxml_tabs",position:this.tabsPosition,index:this.selectedTabIndex,initialIndex:0,"onIndex-changed":this.onIndexChanged},i("gc-widget-tab-panel",{id:"basic_page",label:"Basic",iconName:"round:action:home",hasHeading:true,tooltip:"General Setup"},i("div",{class:"row stretch"},i("div",{class:"column stretch leftAlign",hidden:!this.isAdvanced},i("gc-widget-label",{class:"caption",label:"All Connections, boards, and devices"}),i("br",null),i("gc-widget-label",{label:"You have a complicated system.  Please use Advanced Setup to configure your system."}),i("gc-widget-button",{label:"Advanced Setup",onClick:this.gotoAdvancedTab})),i("div",{class:"column stretch",hidden:this.isAdvanced},i("gc-widget-select",{id:"connection",labels:e,values:this.filteredConnections,selectedValue:this.selectedConnection,"onSelected-value-changed":this.onSelectedConnectionChanged,caption:"Connection",maxVisibleItems:15,disabled:this.isAdvanced}),i("gc-widget-input-filter",{id:"filter",hasClearIcon:true,hasSearchIcon:true,"onValue-changed":this.onDeviceFilterValueChanged,"onClear-icon-clicked":this.onDeviceFilterValueChanged,intermediateChanges:true,caption:"Board or Device",value:this.filterDevicesText,onKeyDown:this.stopPropagation}),i("div",{class:"fill",id:"boardsContainer"},i("gc-widget-grid",{part:"grid",id:"boards",virtual:true,"smooth-scrolling":true,sortByColumn:"device",ref:t=>this.deviceGrid=t,filterText:s,selectedPath:this.highlightedDevice,"onSelected-path-changed":this.onDeviceDescriptionChanged},i("gc-widget-grid-data-column",{class:"center",id:"deviceCheckbox",name:"selected",readonly:this.isAdvanced,heading:"Enable",format:"boolean",hideMinimizeAction:true}),i("gc-widget-grid-data-column",{class:"flexColumn",id:"deviceColumn",name:"device",readonly:true,heading:"Boards or Devices",hideMinimizeAction:true}))),i("gc-widget-label",{class:"caption",label:"Notes"}),i("div",{id:"notes",innerHTML:this.deviceDescription.split("\n").join("<br/>")??""})),i("div",{class:"column stretch"},i("div",{id:"debuggables",class:"caption"},"Debuggable CPUs (",this.renderDebuggableCpuCount(n.length),")"),i("gc-widget-select",{id:"cpus",labels:n,selectedIndex:o,maxVisibleItems:10,"onSelected-index-changed":this.onSelectedCpuIndexChanged,onKeyDown:this.stopPropagation}),i("gc-widget-property-grid",{autoCapitalizeCaption:true,caption:"CPU Properties",propertyInfo:c,values:h,"onProperty-value-changed":this.onPropertyValueChanged,onKeyDown:this.stopPropagation})))),i("gc-widget-tab-panel",{id:"advanced_page",label:"Advanced",iconName:"round:action:settings",hasHeading:true,tooltip:"Advanced Setup"},i("div",{class:"row stretch noscroll"},i("div",{class:"column stretch"},i("gc-widget-label",{label:"All Connections",class:"caption"}),i("div",{class:"fill"},i("gc-widget-grid",{part:"grid",id:"advanced_tree",hideHeading:true,class:"stretch",ref:t=>this.advancedTreeGrid=t,"onSelected-path-changed":this.onAdvanceTreeSelectionChanged,selectedPath:this.activeConfiguration?.selectedPath??""},i("gc-widget-grid-tree-column",{name:"tree",hideMinimizeAction:true,heading:"All Connections"})))),i("div",{class:"column"},i("gc-widget-label",{label:"Actions",class:"caption invisible"}),i("div",{class:"column",id:"buttonContainer"},i("gc-widget-button",{id:"new",buttonType:"secondary",label:"New Connection ...",class:"button",onClick:this.openNewConnectionDialog}),i("gc-widget-button",{id:"add",buttonType:"secondary",label:"Add Device ...",class:"button",disabled:!b,onClick:this.openAddDeviceDialog}),i("gc-widget-button",{id:"delete",buttonType:"secondary",label:"Remove",class:"button",disabled:!w.remove,onClick:this.doRemoveComponent}),i("gc-widget-button",{id:"up",buttonType:"secondary",label:"Up",class:"button",disabled:!w.up,onClick:this.doMoveComponentUp}),i("gc-widget-button",{id:"down",buttonType:"secondary",label:"Down",class:"button",disabled:!w.down,onClick:this.doMoveComponentDown}),i("gc-widget-button",{id:"rename",buttonType:"secondary",label:"Rename",class:"button",disabled:!f,onClick:this.openRenameComponentDialog}),i("slot",null))),i("div",{class:"column stretch"},i("gc-widget-label",{id:"advanced_properties_caption",label:`${u} Properties`,class:`caption${u?"":" none"}`}),i("div",{id:"properties",class:"column stretch"},i("gc-widget-property-grid",{id:"propertyGrid",autoCapitalizeCaption:true,propertyInfo:l,values:g,"onProperty-value-changed":this.onPropertyValueChanged})))),i("gc-widget-dialog",{id:"addComponentDialog",heading:m,icon:p,modal:true,ref:t=>this.addComponentDialog=t},i("div",{class:"column stretch"},i("gc-widget-input-filter",{id:"componentFilter",hasClearIcon:true,hasSearchIcon:true,"onValue-changed":this.onComponentFilterValueChanged,"onClear-icon-clicked":this.onComponentFilterValueChanged,intermediateChanges:true,value:this.filterComponentsText,onKeyDown:this.stopPropagation}),i("div",{class:"fill",id:"componentContainer"},i("gc-widget-grid",{part:"grid",id:"components",virtual:true,"smooth-scrolling":true,sortByColumn:"component",ref:t=>this.componentsGrid=t,filterText:this.filterComponentsText,hideHeading:true,"onSelected-path-changed":this.onSelectedComponentChanged,onDblClick:this.onComponentDoubleClicked},i("gc-widget-grid-data-column",{class:"flexColumn",id:"componentColumn",name:"component",readonly:true,hideMinimizeAction:true})))),i("gc-widget-progressbar",{slot:"action-bar",minValue:0,maxValue:100,value:this.addComponentProgress,style:{visibility:this.addComponentProgress>0?"visible":"hidden"}}),i("gc-widget-button",{id:"cancelAdd",slot:"action-bar",class:"dialog-dismiss",label:"Cancel","button-type":"link"}),i("gc-widget-button",{id:"confirmAdd",disabled:this.dialogDisableConfirm||this.addComponentProgress>0,slot:"action-bar",label:"Add",onClick:this.doAddComponent})),i("gc-widget-dialog",{id:"renameComponentDialog",heading:`Rename ${f?.type??"?"}`,modal:true,ref:t=>this.renameComponentDialog=t,"onDialog-close":this.doRenameComponent},i("div",{class:"column stretch"},i("gc-widget-input",{ref:t=>this.renameDialogInput=t,intermediateChanges:true,"onValue-changed":this.onRenameDialogInputChanged})),i("gc-widget-button",{id:"cancelRename",slot:"action-bar",class:"dialog-dismiss",label:"Cancel","button-type":"link"}),i("gc-widget-button",{id:"confirmRename",slot:"action-bar",class:"dialog-confirm",label:"OK",disabled:!this.isValidRename})))))}componentDidRender(){if(!this.initialized&&this.devices){this.deviceGrid?.setDataProvider(this.devices);this.deviceGrid?.setFilterMethod(C.filterByFunction);this.initialized=true}}getRecommendedConnectionOption(t){const e=t?this.devices?.getDeviceByName(t)?.defaultConnectionIndex??-1:-1;if(e>=0){return this.connections[e].id}let i=0;let s="";this.filteredConnections.forEach((e=>{if(i===0&&e!==$.DEFAULT_CONNECTION){s=e;i=1}if(i<2&&e.indexOf("Texas Instruments")>=0){s=e;i+=2}if(i<4&&e.indexOf("XDS110 USB")>=0){s=e;i=+4}if(t&&i<8&&e.indexOf("MSP430 USB1")>=0&&t.indexOf("MSP430")>=0){s=e;i=+8}}));return s}setProperty(t,e,i){try{this.setUiState(t);this.activeConfiguration.setValue(t.page,e,i)}catch(s){const n=t.page===1?t.selectedPath:t.selectedCpu;this.logger.error(`Problem setting property for ${e}=${i} ${n}\n${s.message||s.toString()}`)}}swapConfiguration(t,e){const i=this.configurations.get(t);this.configurations.set(t,e);return i}getSelection(){if(this.isAdvanced){return{connectionName:"",deviceName:"",isAdvanced:true}}return{connectionName:this.selectedConnection??"",deviceName:this.devices?.selectedComponent??"",isAdvanced:false}}async setSelection(t,e){this.selectedConnection=t.connectionName;const i=this.devices?.selectedComponent;if(t.deviceName!==i&&this.devices){if(this.devices.selectedComponent!==t.deviceName){this.devices.selectedComponent=t.deviceName;this.highlightedDevice=t.deviceName;this.deviceGrid?.refresh();if(t.deviceName&&this.filterDevicesText&&!C.isComponentFiltered(t.deviceName,this.filterDevicesText)){this.filterDevicesText=""}}this.filteredConnections=this.doFilterConnections(this.connections,t.deviceName)}if(this.busyPromise&&!this.busyPromise.isFulfilled&&!this.isAdvanced){this.logger.debug("cancelling creating a new configuration");this.busyPromise.cancelled=true}this.busyPromise=undefined;this.busyPromiseRejectedMessage="";this.setActiveConfiguration(u.nullSession);const{deviceName:s,isAdvanced:n}=t;this.isAdvanced=n;let o=t.connectionName;if(o===$.DEFAULT_CONNECTION){o=this.getRecommendedConnectionOption(s);t={...t,connectionName:o}}const c=u.getName(t);if(!c){return}let r=this.configurations.get(c);if(!r||r.cancelled){if(!n&&o&&s){this.logger.debug(`creating a new configuration for ${c}`);r=u.createNew({connectionName:o,deviceName:s})}else{r=h.create((t=>t(u.nullSession)))}this.configurations.set(c,r)}this.busyPromise=r;try{this.logger.debug(`setting active configuration for ${c}`);this.setActiveConfiguration(await r,e?.expandedTreeStates);if(e){this.activeConfiguration.selectedPath=e.selectedPath;this.activeConfiguration.selectedCpu=e.selectedCpu;this.selectedTabIndex=e.page}}catch(t){if(!r.cancelled){this.busyPromiseRejectedMessage=t.message??t.toString();this.logger.error(`Problem creating configuration for ${c}\n${t.message||t.toString()}`)}}}async getUiState(t){const e=await(this.advancedTreeGrid?.getExpandedStates(t));return{page:this.selectedTabIndex,selectedCpu:this.activeConfiguration.selectedCpu,selectedPath:this.activeConfiguration.selectedPath,expandedTreeStates:e}}async setUiState(t){this.activeConfiguration.selectedPath=t.selectedPath;this.activeConfiguration.selectedCpu=t.selectedCpu;this.selectedTabIndex=t.page;this.refresh();if(t.expandedTreeStates){await(this.advancedTreeGrid?.setExpandedStates(undefined,t.expandedTreeStates))}}async setCSSProperty(t,e){e=e.trim();if(await this.getCSSProperty(t)!==e){this.el.style.setProperty(t,e);this.cssPropertyChanged.emit({name:t,value:e})}}async getCSSProperty(t){return getComputedStyle(this.el).getPropertyValue(t).trim()}async refresh(){this._refresh++}get el(){return s(this)}static get watchers(){return{undoDescription:["onUndoDescriptionChanged"],redoDescription:["onRedoDescriptionChanged"],dirtyState:["onDirtyStateChanged"]}}};$.DEFAULT_CONNECTION="default";$.style=k;export{$ as gc_widget_ccxml_editor};
//# sourceMappingURL=p-641b6974.entry.js.map