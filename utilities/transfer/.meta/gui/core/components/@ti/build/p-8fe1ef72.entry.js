import{G as t}from"./p-ac10ab7b.js";export{G as gc_widget_plot}from"./p-ac10ab7b.js";import{r as i,g as e,c as o,h as s}from"./p-823ca21f.js";import{GcPromise as r}from"../gc-core-assets/lib/GcPromise";import{GcUtils as n}from"../gc-core-assets/lib/GcUtils";import{ParentRegistry as h,ChildRegistry as l,ParentWidgetType as a}from"../gc-widget-base/lib/GcWidget";import{GcConsole as c}from"../gc-core-assets/lib/GcConsole";import"./p-b29896ef.js";import"../gc-core-assets/lib/GcFiles";import"../gc-core-assets/lib/GcLocalStorage";import"../gc-widget-message-dialog/lib/GcMessageDialog";let g=class{constructor(e){i(this,e);this.id="";this.series={type:"scattergl",x:[],y:[],marker:{line:{}},line:{}};this.cssPropertyNameToSetterMap={"--gc-marker-color":t=>this.restyle({"marker.color":t}),"--gc-marker-size":t=>this.restyle({"marker.size":+t||6}),"--gc-marker-line-color":t=>this.restyle({"marker.line.color":t}),"--gc-marker-line-width":t=>this.restyle({"marker.line.width":+t||0}),"--gc-line-color":t=>this.restyle({"line.color":t}),"--gc-line-width":t=>this.restyle({"line.width":+t||2}),"--gc-fill-color":t=>this.restyle({fillcolor:t})};this.parentRegistry=new h(t.widgetType);this.childIndex=-1;this.implicitX=false;this.newValuesBuffer=[];this.newPointsBuffer=[];this.pointStreamingDataListener=t=>{if(this.capacity===undefined||this.capacity===0){if(!Array.isArray(t)){this.series.x=undefined;this.series.y=[t]}else if(Array.isArray(t[0])){const i=n.transposeMatrix(t);this.series.x=this.implicitX?undefined:i[0];this.series.y=i[1]}else if(this.implicitX){this.series.x=undefined;this.series.y=t}else{const i=t;this.series.x=i.length===2?[i[0]]:[];this.series.y=i.length===2?[i[1]]:[]}this.fireData();return}if(this.implicitX){if(this.newValuesBuffer.length===0){setTimeout((()=>{this.series.x=undefined;n.shiftAndAppendInPlace(this.series.y,this.newValuesBuffer,this.capacity);this.newValuesBuffer.splice(0,Infinity);this.fireData()}),1)}if(!Array.isArray(t)){this.newValuesBuffer.push(t)}else if(Array.isArray(t[0])){this.newValuesBuffer.push(...n.transposeMatrix(t)[1])}else{this.newValuesBuffer.push(...t)}return}if(this.newPointsBuffer.length===0){setTimeout((()=>{const t=n.transposeMatrix(this.newPointsBuffer);n.shiftAndAppendInPlace(this.series.x,t[0],this.capacity);n.shiftAndAppendInPlace(this.series.y,t[1],this.capacity);this.newPointsBuffer.splice(0,Infinity);this.fireData()}),1)}if(!Array.isArray(t)){this.newPointsBuffer.push([0,t])}else if(Array.isArray(t[0])){this.newPointsBuffer.push(...t)}else{this.newPointsBuffer.push(t)}};this.mode="lines";this.lineShape="linear";this.lineDash="solid";this.fill="none";this.deferredWidgetReady=r.defer();this.capacity=200;this.legend="auto"}get sortingOrder(){return h.getChildElementIndex(this.el)}onPointChanged(t){this.pointStreamingDataListener(t)}implicitXHandler(){if(this.series.y.length>0){if(this.implicitX){this.series.x=undefined;if(this.newPointsBuffer.length>0){n.shiftAndAppendInPlace(this.series.y,n.transposeMatrix(this.newPointsBuffer)[1],this.capacity)}}else{this.series.x=[];this.series.y=[]}this.fireData()}this.newValuesBuffer=[];this.newPointsBuffer=[]}modeHandler(t){this.restyle({mode:t})}markerSymbolHandler(t){this.restyle({"marker.symbol":t})}lineShapeHandler(t){this.restyle({"line.shape":t})}lineDashHandler(t){this.restyle({"line.dash":t})}fillHandler(t){this.restyle({fill:t})}capacityHandler(){if(!this.capacity){this.newValuesBuffer=[];this.newPointsBuffer=[]}else{const t=this.series.y.length-this.capacity;if(t>0){if(this.series.x){this.series.x.splice(0,t)}this.series.y.splice(0,t);this.fireData()}}}showLegendHandler(t){this.restyle({showlegend:t})}legendNameHandler(t){this.restyle({name:t})}async setCSSProperty(t,i){i=i.trim();this.el.style.setProperty(t,i);const e=this.cssPropertyNameToSetterMap[t];if(e!==undefined){e(i)}}async getCSSProperty(t){return window.getComputedStyle(this.el).getPropertyValue(t)}fireData(){this.parentRegistry.parent?.replot()}async waitForWidgetReady(){return this.deferredWidgetReady.promise}async restyle(i){if(!this.parentRegistry.parent){t.mergeRecords(t.flattenRecord(i),this.series)}else{this.parentRegistry.parent.restyle(this,i)}}connectedCallback(){this.el["pointStreamingDataListener"]=this.pointStreamingDataListener;if(this.deferredWidgetReady.promise.isPending){this.deferredWidgetReady.resolve()}this.id=this.el.id;this.parentRegistry.register(this.el.parentElement,this)}disconnectedCallback(){this.parentRegistry.unregister(this)}async componentWillLoad(){if(this.point){this.pointStreamingDataListener(this.point)}this.series.name=this.legendName??this.el.id;this.series.showlegend=this.legend==="hide"?false:this.legend==="show"?true:undefined;this.series.mode=this.mode;if(this.markerSymbol){this.series.marker=this.series.marker??{};this.series.marker.symbol=this.markerSymbol}this.series.line=this.series.line??{};this.series.line.shape=this.lineShape;this.series.line.dash=this.lineDash;this.series.fill=this.fill;for(const t in this.cssPropertyNameToSetterMap){const i=await this.getCSSProperty(t);i&&await this.setCSSProperty(t,i)}this.el["series"]=this.series}get el(){return e(this)}static get watchers(){return{point:["onPointChanged"],implicitX:["implicitXHandler"],mode:["modeHandler"],markerSymbol:["markerSymbolHandler"],lineShape:["lineShapeHandler"],lineDash:["lineDashHandler"],fill:["fillHandler"],capacity:["capacityHandler"],legend:["showLegendHandler"],legendName:["legendNameHandler"]}}};const d=':host::-webkit-scrollbar,::-webkit-scrollbar{width:var(--gc-scrollbar-width, var(--theme-scrollbar-width, 8px));height:var(--gc-scrollbar-width, var(--theme-scrollbar-width, 8px))}:host::-webkit-scrollbar-track,::-webkit-scrollbar-track{background:var(--gc-scrollbar-track-background-color, var(--theme-scroll-track-color, rgba(35, 31, 32, 0.2)))}:host::-webkit-scrollbar-thumb,::-webkit-scrollbar-thumb{background:var(--gc-scrollbar-thumb-background-color, var(--theme-scroll-thumb-color, rgba(35, 31, 32, 0.65)))}:host::-webkit-scrollbar-thumb:hover,::-webkit-scrollbar-thumb:hover{background:var(--gc-scrollbar-thumb-background-color-hover, var(--theme-scroll-thumb-color-hover, rgba(35, 31, 32, 0.8)))}:host::-webkit-scrollbar-corner,::-webkit-scrollbar-corner{background:rgba(0, 0, 0, 0)}:host(:focus),:host *:focus{outline:none}:host{-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;font-family:var(--gc-font-family, var(--theme-font-family, "Roboto", "Open Sans", "Segoe UI", "Tahoma", "sans-serif"));font-size:var(--gc-font-size, var(--theme-font-size, 14px));font-weight:400;color:var(--gc-font-color, var(--gc-font-color, var(--theme-font-color, #555555)));margin:var(--gc-margin, var(--theme-margin, 5px));display:inline-block;box-sizing:border-box}:host .user-select{-webkit-user-select:text;-khtml-user-select:text;-moz-user-select:text;-ms-user-select:text;-o-user-select:text;user-select:text}:host .text-link{color:var(--gc-link-color, var(--gc-link-color, var(--theme-link-color, #333333)));--gc-color:var(--gc-link-color, var(--gc-link-color, var(--theme-link-color, #333333)));--gc-text-decoration-hover:underline;--gc-cursor-hover:pointer}:host .text-link:not([disabled]):hover{text-decoration:underline;cursor:pointer}:host([hidden]){display:none !important}:host([readonly]) *{pointer-events:none}:host([disabled]) *{cursor:not-allowed}:host([caption]:not([caption=""])){margin-top:calc(var(--gc-margin, var(--theme-margin, 5px)) + var(--gc-caption-font-size, var(--theme-caption-font-size, 14px)) + 8px)}:host([caption]:not([caption=""])),:host([info-text]:not([info-text=""])){overflow:visible;position:relative}:host([caption=""][info-text]:not([info-text=""])),:host([info-text]:not([info-text=""]):not([caption])){margin-right:calc(var(--gc-margin, var(--theme-margin, 5px)) + 22px)}#elementWrapper{box-sizing:content-box;height:100%;width:100%;display:flex;align-items:center;min-height:inherit;max-height:inherit;min-width:inherit;max-width:inherit}.root-container{position:relative;display:flex;flex-direction:column;width:100%;height:100%;min-height:inherit;max-height:inherit;min-width:inherit;max-width:inherit}.root-container .header-container.top{top:var(--gc-header-container-top, calc(0px - 8px - var(--gc-caption-font-size, var(--theme-caption-font-size, 14px))));flex-direction:row}.root-container .header-container.side{right:-22px;flex-direction:column;height:inherit}.root-container .header-container{position:absolute;display:flex;align-items:center}.root-container .header-container .icon,.root-container .header-container gc-widget-icon{cursor:default;margin:auto;height:18px;width:18px;display:block;--gc-color:var(--gc-caption-info-color, var(--theme-caption-info-color, #98999b))}.root-container .header-container .caption{flex:1;cursor:default;white-space:nowrap;margin-right:2px;font-weight:var(--gc-caption-font-weight, var(--theme-caption-font-weight, 400));font-size:var(--gc-caption-font-size, var(--theme-caption-font-size, 14px));color:var(--gc-caption-font-color, var(--theme-caption-font-color, #999999))}.invisible{visibility:hidden}:host{margin:0px}gc-widget-select{width:auto}gc-widget-select#triggerIndex{margin-top:16px}.container{width:100%;height:100%;padding:var(--gc-margin, var(--theme-margin, 5px));box-sizing:border-box}.column{display:flex;flex-direction:column;align-items:stretch}.row{display:flex;flex-direction:row}.row.alignCenter{align-items:center}.controls{height:100%;width:100%;overflow-y:auto;overflow-x:hidden}.stretch{flex:1 1 0;margin:0}.fill{position:absolute;top:0;bottom:0;left:0;right:0}gc-widget-plot{overflow:hidden}.lineColor0{border-color:var(--gc-plot-line-color-1, var(--theme-plot-line-color-1, #1f77b4))}.lineColor1{border-color:var(--gc-plot-line-color-2, var(--theme-plot-line-color-2, #ff7f0e))}.lineColor2{border-color:var(--gc-plot-line-color-3, var(--theme-plot-line-color-3, #2ca02c))}.lineColor3{border-color:var(--gc-plot-line-color-4, var(--theme-plot-line-color-4, #d62728))}.lineColor4{border-color:var(--gc-plot-line-color-5, var(--theme-plot-line-color-5, #9467bd))}.lineColor5{border-color:var(--gc-plot-line-color-6, var(--theme-plot-line-color-6, #8c564b))}.lineColor6{border-color:var(--gc-plot-line-color-7, var(--theme-plot-line-color-7, #e377c2))}.lineColor7{border-color:var(--gc-plot-line-color-8, var(--theme-plot-line-color-8, #7f7f7f))}.lineColor8{border-color:var(--gc-plot-line-color-9, var(--theme-plot-line-color-9, #bcbd22))}.lineColor9{border-color:var(--gc-plot-line-color-10, var(--theme-plot-line-color-10, #17becf))}#line{border-style:solid;border-width:2px;margin-left:var(--gc-margin, var(--theme-margin, 5px));margin-right:calc(var(--gc-margin, var(--theme-margin, 5px)) * 4)}';const m=200;function f(t,i,e,o){if(o.length===1){o[0]=t.length;return e}const s=t.length-o.length+1;if(i>=s){for(let t=0;t<o.length;t++){o[t]=i+t}return Math.max(...t.slice(i))}let r=0;const n=new Array(o.length-1);let h=Number.MAX_SAFE_INTEGER;for(let l=i;l<s;l++){r+=t[l];const i=f(t,l+1,e-r,n);const s=Math.max(r,i);if(s<h){h=s;n.forEach(((t,i)=>o[i+1]=t));o[0]=l+1}if(r>=i){break}}return h}let p=class{constructor(t){i(this,t);this.horizontalPosChangedEvent=o(this,"horizontal-pos-changed",7);this.horizontalZoomChangedEvent=o(this,"horizontal-zoom-changed",7);this.triggerArmedChangedEvent=o(this,"trigger-armed-changed",7);this.triggerEdgeChangedEvent=o(this,"trigger-edge-changed",7);this.triggerLevelChangedEvent=o(this,"trigger-level-changed",7);this.triggerModeChangedEvent=o(this,"trigger-mode-changed",7);this.triggerSourceIndexChangedEvent=o(this,"trigger-source-index-changed",7);this.cssPropertyChanged=o(this,"css-property-changed",7);this.logger=new c("gc-widget-virtual-oscilloscope");this.triggerPoint=0;this.childRegistry=new l(p.widgetType,false);this.plotReady=r.defer();this.userArmedTrigger=false;this.capacity=m;this.horizontalPos=0;this.horizontalZoom=1;this.triggerArmed=false;this.triggerEdge="rising";this.triggerHoldOff=0;this.triggerLevel=0;this.triggerMargin=.25;this.triggerMode="auto";this.triggerSourceIndex=0;this.triggerTimeout=0;this.xAxisTitle="X-Axis Title";this.hasChildren=false;this.horizontalPositionHandler=t=>{this.horizontalPos=Math.round(t.detail.value*(this.capacity||m)/10)};this.triggerLevelHandler=t=>{this.triggerLevel=t.detail.value};this.horizontalScaleHandler=t=>{this.horizontalZoom=Math.pow(2,t.detail.value);this.horizontalZoomChangedEvent.emit({value:this.horizontalZoom})};this.triggerModeHandler=t=>{this.triggerMode=t.detail.value?"auto":"manual";this.triggerModeChangedEvent.emit({value:this.triggerMode})};this.triggerArmedHandler=t=>{if(this.triggerMode==="manual"){this.triggerArmed=this.userArmedTrigger=t.detail.value;this.triggerArmedChangedEvent.emit({value:this.triggerArmed})}};this.triggerEdgeHandler=t=>{this.triggerEdge=t.detail.value;this.triggerEdgeChangedEvent.emit({value:this.triggerEdge})};this.triggerSourceIndexHandler=t=>{this.triggerSourceIndex=t.detail.value;this.triggerSourceIndexChangedEvent.emit({value:this.triggerSourceIndex})};this.deferredWidgetReady=r.defer();this.horizontalControlsColumn=1;this.layoutChildControls=()=>{if(!this.controlsDiv){return}const t=this.controlsDiv.getBoundingClientRect().height;if(isNaN(t)||t<=0){return}const i=["triggerControls","horizontalControls"].map((t=>this.el.shadowRoot.querySelector(`#${t}`)));const e=Array.from(this.el.children);const o=[...i,...e].map((t=>t.getBoundingClientRect().height));const s=o.reduce(((t,i)=>t+i),0);let r;for(let i=Number.MAX_SAFE_INTEGER,e=1;i>t&&e<=3;e++){r=new Array(e).fill(o.length);i=f(o,0,s,r)}this.horizontalControlsColumn=r[0]===1?2:1;let n=2;for(let t=0;t<r.length;t++){const i=r[t];const o=t>0?`column${t+1}`:"";for(;n<i;n++){const t=e[n-2];const i=t.getAttribute("slot")??"";if(i!==o){if(o){t.setAttribute("slot",o)}else{t.removeAttribute("slot")}}}}};this._refresh=0;this.hidden=false}onCapacityChanged(t,i){this.triggerPoints=undefined;const e=t||m;this.triggerPoint+=e-(i||m);this.childRegistry.children.forEach((t=>t.capacity=e));this.horizontalPos=Math.round(this.horizontalPos*e/(i||m));this.onSampleRateChanged()}onHorizontalPosChanged(){this.childRegistry.children.forEach((t=>t.triggerPosition=this.horizontalPos));this.horizontalPosChangedEvent.emit({value:this.horizontalPos})}onSampleRateChanged(){const t=this.horizontalPos||0;const i=this.sampleRate||1;this.x=new Array(this.capacity||m).fill(0).map(((e,o)=>(o-t)/i));this.childRegistry.children.forEach((t=>t.xAxis=this.x))}onTriggerLevelChanged(){this.triggerPoints=undefined;this.triggerLevelChangedEvent.emit({value:this.triggerLevel})}hasChildrenChanged(){this.relayout({"yaxis.visible":!this.hasChildren})}async relayout(t,i){(await this.plotReady.promise).relayout(t,i)}async restyle(t,i,e){(await this.plotReady.promise).restyle(t,i,e)}render(){const t=this.capacity||m;const i=Math.max(0,Math.min(this.horizontalPos||0,t));const e=Math.min(5,Math.max(0,Math.log2(this.horizontalZoom||1)));const o=(this.horizontalZoom||1)*(this.sampleRate||1);const r=(t-i)/o;const n=(0-i)/o;const h=this.childRegistry.children;const l=h.length<2?true:false;const a=this.triggerMode==="auto";const c=a?this.triggerArmed:this.userArmedTrigger;const g=h.map(((t,i)=>t.id??""+i));const d=Math.max(-4,Math.min(4,this.triggerLevel||0));if(!this.triggerPoints){this.triggerPoints=[[-t,d],[t*2,d]]}const f=Math.max(0,Math.min(1,(this.horizontalPos||0)/t))*10;const p=s("div",{class:"row",id:"horizontalControls"},s("gc-widget-knob",{id:"horizontalPosition",caption:"Horizontal Pos",value:f,minValue:0,maxValue:10,numUnits:10,increment:.1,"onValue-changed":this.horizontalPositionHandler}),s("gc-widget-knob",{id:"horizontalScale",caption:"Horizontal Scale",value:e,minValue:0,maxValue:5,numUnits:5,increment:.1,"onValue-changed":this.horizontalScaleHandler}));return s("div",{key:"container",class:"container"},s("div",{class:"row controls",ref:t=>this.controlsDiv=t},s("gc-widget-container",{class:"column stretch"},s("gc-widget-plot",{class:"fill",xAxisTitle:this.xAxisTitle,yAxisTitle:"Trigger Level",plotTitle:this.plotTitle,xAxisMaxValue:r,xAxisMinValue:n,yAxisMaxValue:4,yAxisMinValue:-4,hideControls:true,ref:t=>this.plotWidget=t},s("gc-widget-plot-data-points-2d",{id:"trigger_line",legend:"hide",point:this.triggerPoints,capacity:0,lineDash:"dash"}))),s("div",{class:"column"},s("div",{class:"column",id:"triggerControls"},s("div",{class:"row"},s("gc-widget-knob",{id:"triggerLevel",caption:"Trigger Level",value:d,minValue:-4,maxValue:4,numUnits:8,increment:.1,"onValue-changed":this.triggerLevelHandler}),s("div",{class:"column"},s("gc-widget-toggle-switch",{id:"triggerMode",caption:"Trigger mode",label:"manual",labelWhenChecked:"auto",checked:a,"onChecked-changed":this.triggerModeHandler}),s("gc-widget-toggle-switch",{id:"armed",label:"armed",checked:c,"onChecked-changed":this.triggerArmedHandler,readonly:a}),s("gc-widget-select",{id:"triggerEdge",labels:"Rising Edge,Falling Edge",selectedValue:this.triggerEdge,values:"rising,falling","onSelected-value-changed":this.triggerEdgeHandler}))),s("gc-widget-select",{id:"triggerIndex",caption:"Trigger Select",hidden:l,selectedIndex:this.triggerSourceIndex,labels:g,"onSelected-index-changed":this.triggerSourceIndexHandler})),this.horizontalControlsColumn===1?p:null,s("slot",null)),s("div",{class:"column"},this.horizontalControlsColumn===2?p:null,s("slot",{name:"column2"})),s("div",{class:"column"},s("slot",{name:"column3"}))))}componentDidRender(){if(this.triggerMode==="manual"&&this.userArmedTrigger&&!this.triggerArmed){this.userArmedTrigger=false}}async waitForWidgetReady(){return this.deferredWidgetReady.promise}async copyCaptureBuffer(){return this.childRegistry.children.map((t=>({id:t.id,buffer:[...t.series.y]})))}async clearCaptureBuffer(){this.childRegistry.children.forEach((t=>t.clearCaptureBuffer()));this.triggerPoint=(this.capacity||m)-(this.triggerHoldOff||0)}connectedCallback(){const t=this.capacity||m;this.triggerPoint=t-(this.triggerHoldOff||0);this.onSampleRateChanged();if(this.deferredWidgetReady.promise.isPending){this.deferredWidgetReady.resolve()}}componentDidLoad(){this.plotReady.resolve(this.plotWidget);this.resizeObserver=new ResizeObserver(this.layoutChildControls);this.resizeObserver.observe(this.controlsDiv);this.mutationObserver=new MutationObserver(this.layoutChildControls);this.mutationObserver.observe(this.el,{subtree:true,childList:true,attributeFilter:["hidden"]});this.layoutChildControls()}async replot(){if(this.rafId===undefined&&this.el){this.rafId=requestAnimationFrame((()=>{this.rafId=undefined;const t=this.childRegistry.children;const i=this.capacity||m;const e=this.triggerHoldOff||0;const o=this.triggerEdge==="rising";const s=this.triggerLevel||0;const r=this.triggerMargin||0;const n=this.triggerPoint;const h=t[this.triggerSourceIndex||0]??t[0];if(this.triggerMode==="auto"&&!this.triggerArmed&&h&&h.canArmTrigger(n+i+e)){this.triggerArmed=true;this.triggerArmedChangedEvent.emit({value:this.triggerArmed})}let l=0;if(h){let a=-1;if(this.triggerArmed){const t=n+i+e;const l=t+(this.triggerTimeout||Infinity);a=h.findTriggerPoint(t,l,s,r,o)}l=h.trackTriggerCrossings(s,r,o);if(a>=0){this.triggerPoint=i;t.forEach((t=>t.startNewCapture(a)));this.triggerArmed=false;this.triggerArmedChangedEvent.emit({value:this.triggerArmed});this.plotWidget?.replot();return}}this.triggerPoint=Math.max(this.triggerPoint-l,i-e-(this.triggerTimeout||0));if(this.childRegistry.children.reduce(((t,i)=>i.continueCapture()||t),false)){this.plotWidget?.replot(false)}}))}}async registerChildWidget(i,e){const o=await this.plotReady.promise;this.logger.log((()=>`Adding child id=${e.id}`));this.childRegistry.register(i,e);this.hasChildren=this.childRegistry.children.length>0;e.capacity=this.capacity||m;e.triggerPosition=this.horizontalPos||0;e.xAxis=this.x;o.registerChildWidget(t.widgetType,e);return this}async unregisterChildWidget(i,e){this.logger.log((()=>`Removing child id=${e.id}`));this.childRegistry.unregister(i,e);this.hasChildren=this.childRegistry.children.length>0;this.plotWidget.unregisterChildWidget(t.widgetType,e)}async setCSSProperty(t,i){i=i.trim();if(await this.getCSSProperty(t)!==i){this.el.style.setProperty(t,i);this.cssPropertyChanged.emit({name:t,value:i})}}async getCSSProperty(t){return getComputedStyle(this.el).getPropertyValue(t).trim()}async refresh(){this._refresh++}get el(){return e(this)}static get watchers(){return{capacity:["onCapacityChanged"],horizontalPos:["onHorizontalPosChanged","onSampleRateChanged"],sampleRate:["onSampleRateChanged"],triggerLevel:["onTriggerLevelChanged"],hasChildren:["hasChildrenChanged"]}}};p.widgetType=new a("gc-widget-virtual-oscilloscope");p.style=d;const u=':host::-webkit-scrollbar,::-webkit-scrollbar{width:var(--gc-scrollbar-width, var(--theme-scrollbar-width, 8px));height:var(--gc-scrollbar-width, var(--theme-scrollbar-width, 8px))}:host::-webkit-scrollbar-track,::-webkit-scrollbar-track{background:var(--gc-scrollbar-track-background-color, var(--theme-scroll-track-color, rgba(35, 31, 32, 0.2)))}:host::-webkit-scrollbar-thumb,::-webkit-scrollbar-thumb{background:var(--gc-scrollbar-thumb-background-color, var(--theme-scroll-thumb-color, rgba(35, 31, 32, 0.65)))}:host::-webkit-scrollbar-thumb:hover,::-webkit-scrollbar-thumb:hover{background:var(--gc-scrollbar-thumb-background-color-hover, var(--theme-scroll-thumb-color-hover, rgba(35, 31, 32, 0.8)))}:host::-webkit-scrollbar-corner,::-webkit-scrollbar-corner{background:rgba(0, 0, 0, 0)}:host(:focus),:host *:focus{outline:none}:host{-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;font-family:var(--gc-font-family, var(--theme-font-family, "Roboto", "Open Sans", "Segoe UI", "Tahoma", "sans-serif"));font-size:var(--gc-font-size, var(--theme-font-size, 14px));font-weight:400;color:var(--gc-font-color, var(--gc-font-color, var(--theme-font-color, #555555)));margin:var(--gc-margin, var(--theme-margin, 5px));display:inline-block;box-sizing:border-box}:host .user-select{-webkit-user-select:text;-khtml-user-select:text;-moz-user-select:text;-ms-user-select:text;-o-user-select:text;user-select:text}:host .text-link{color:var(--gc-link-color, var(--gc-link-color, var(--theme-link-color, #333333)));--gc-color:var(--gc-link-color, var(--gc-link-color, var(--theme-link-color, #333333)));--gc-text-decoration-hover:underline;--gc-cursor-hover:pointer}:host .text-link:not([disabled]):hover{text-decoration:underline;cursor:pointer}:host([hidden]){display:none !important}:host([readonly]) *{pointer-events:none}:host([disabled]) *{cursor:not-allowed}:host([caption]:not([caption=""])){margin-top:calc(var(--gc-margin, var(--theme-margin, 5px)) + var(--gc-caption-font-size, var(--theme-caption-font-size, 14px)) + 8px)}:host([caption]:not([caption=""])),:host([info-text]:not([info-text=""])){overflow:visible;position:relative}:host([caption=""][info-text]:not([info-text=""])),:host([info-text]:not([info-text=""]):not([caption])){margin-right:calc(var(--gc-margin, var(--theme-margin, 5px)) + 22px)}#elementWrapper{box-sizing:content-box;height:100%;width:100%;display:flex;align-items:center;min-height:inherit;max-height:inherit;min-width:inherit;max-width:inherit}.root-container{position:relative;display:flex;flex-direction:column;width:100%;height:100%;min-height:inherit;max-height:inherit;min-width:inherit;max-width:inherit}.root-container .header-container.top{top:var(--gc-header-container-top, calc(0px - 8px - var(--gc-caption-font-size, var(--theme-caption-font-size, 14px))));flex-direction:row}.root-container .header-container.side{right:-22px;flex-direction:column;height:inherit}.root-container .header-container{position:absolute;display:flex;align-items:center}.root-container .header-container .icon,.root-container .header-container gc-widget-icon{cursor:default;margin:auto;height:18px;width:18px;display:block;--gc-color:var(--gc-caption-info-color, var(--theme-caption-info-color, #98999b))}.root-container .header-container .caption{flex:1;cursor:default;white-space:nowrap;margin-right:2px;font-weight:var(--gc-caption-font-weight, var(--theme-caption-font-weight, 400));font-size:var(--gc-caption-font-size, var(--theme-caption-font-size, 14px));color:var(--gc-caption-font-color, var(--theme-caption-font-color, #999999))}.invisible{visibility:hidden}:host{margin:0px}gc-widget-select{width:auto}gc-widget-select#triggerIndex{margin-top:16px}.container{width:100%;height:100%;padding:var(--gc-margin, var(--theme-margin, 5px));box-sizing:border-box}.column{display:flex;flex-direction:column;align-items:stretch}.row{display:flex;flex-direction:row}.row.alignCenter{align-items:center}.controls{height:100%;width:100%;overflow-y:auto;overflow-x:hidden}.stretch{flex:1 1 0;margin:0}.fill{position:absolute;top:0;bottom:0;left:0;right:0}gc-widget-plot{overflow:hidden}.lineColor0{border-color:var(--gc-plot-line-color-1, var(--theme-plot-line-color-1, #1f77b4))}.lineColor1{border-color:var(--gc-plot-line-color-2, var(--theme-plot-line-color-2, #ff7f0e))}.lineColor2{border-color:var(--gc-plot-line-color-3, var(--theme-plot-line-color-3, #2ca02c))}.lineColor3{border-color:var(--gc-plot-line-color-4, var(--theme-plot-line-color-4, #d62728))}.lineColor4{border-color:var(--gc-plot-line-color-5, var(--theme-plot-line-color-5, #9467bd))}.lineColor5{border-color:var(--gc-plot-line-color-6, var(--theme-plot-line-color-6, #8c564b))}.lineColor6{border-color:var(--gc-plot-line-color-7, var(--theme-plot-line-color-7, #e377c2))}.lineColor7{border-color:var(--gc-plot-line-color-8, var(--theme-plot-line-color-8, #7f7f7f))}.lineColor8{border-color:var(--gc-plot-line-color-9, var(--theme-plot-line-color-9, #bcbd22))}.lineColor9{border-color:var(--gc-plot-line-color-10, var(--theme-plot-line-color-10, #17becf))}#line{border-style:solid;border-width:2px;margin-left:var(--gc-margin, var(--theme-margin, 5px));margin-right:calc(var(--gc-margin, var(--theme-margin, 5px)) * 4)}';let v=class{constructor(t){i(this,t);this.verticalPosChangedEvent=o(this,"vertical-pos-changed",7);this.verticalScaleChangedEvent=o(this,"vertical-scale-changed",7);this.cssPropertyChanged=o(this,"css-property-changed",7);this.parentRegistry=new h(p.widgetType);this.cssPropertyNameToSetterMap={"--gc-line-color":t=>this.restyle({"line.color":t}),"--gc-line-width":t=>this.restyle({"line.width":+t||2})};this.verticalUnitsPerDivision=1;this.verticalPos=0;this.verticalScale=0;this.index=-1;this.verticalPositionHandler=t=>{this.verticalPos=t.detail.value;this.verticalPosChangedEvent.emit({value:this.verticalPos})};this.verticalScaleHandler=t=>{this.verticalScale=t.detail.value;this.verticalScaleChangedEvent.emit({value:this.verticalScale})};this.onCSSPropertyChanged=t=>{const{name:i,value:e}=t.detail;const o=this.cssPropertyNameToSetterMap[i];if(o!==undefined){o(e.trim());this.el.style.setProperty(i,e.trim())}};this.defaultLineColors=["#1f77b4","#ff7f0e","#2ca02c","#d62728","#9467bd","#8c564b","#e377c2","#7f7f7f","#bcbd22","#17becf"];this.deferredWidgetReady=r.defer();this._refresh=0;this.hidden=false}onNameChanged(){this.channel.series.name=this.legendName;this.parentRegistry.parent?.refresh()}get verticalZoom(){return Math.pow(2,-(this.verticalScale||0))}onIndexChanged(){if(this.index>0){const t=`y${this.index+1}`;this.restyle({yaxis:t})}}onYAxisTitleChanged(){if(this.index>0){this.parentRegistry.parent?.relayout({"title.text":this.yAxisTitle||undefined},`yaxis${this.index+1}`)}}onHiddenChanged(){this.restyle({visible:!this.hidden})}onVerticalAxisChanged(){const t=this.verticalZoom;const i=(4-this.verticalPos)*(this.verticalUnitsPerDivision||1)*t;const e=(-4-this.verticalPos)*(this.verticalUnitsPerDivision||1)*t;const o=this.index+1;if(o>1){const t={autorange:false,range:[e,i],visible:!this.hidden,zeroline:false};this.parentRegistry.parent?.relayout(t,`yaxis${o}`)}}onVerticalAxisColorChanged(){const t=this.index+1;if(t>1){this.parentRegistry.parent?.relayout({color:this.defaultLineColors[this.index]},`yaxis${t}`)}}async waitForWidgetReady(){return this.deferredWidgetReady.promise}async restyle(i){if(!this.channel){return}if(!this.parentRegistry.parent){t.mergeRecords(t.flattenRecord(i),this.channel.series)}else{this.parentRegistry.parent.restyle(this.channel,i)}}async connectedCallback(){this.el.addEventListener("css-property-changed",this.onCSSPropertyChanged);this.channel=new b(this);this.el["pointStreamingDataListener"]=this.channel.pointStreamingDataListener;if(this.deferredWidgetReady.promise.isPending){this.deferredWidgetReady.resolve()}await this.parentRegistry.register(this.el.parentElement,this.channel);this.onNameChanged();this.onHiddenChanged();this.onYAxisTitleChanged();this.onVerticalAxisChanged();this.onVerticalAxisColorChanged()}disconnectedCallback(){if(this.channel){this.parentRegistry.unregister(this.channel);this.channel=undefined}this.el.removeEventListener("css-property-changed",this.onCSSPropertyChanged)}async componentWillLoad(){for(const t in this.cssPropertyNameToSetterMap){const i=await this.getCSSProperty(t);if(i){await this.setCSSProperty(t,i)}}}render(){return s("div",{class:"column"},s("slot",{name:"top"}),s("div",{class:"row alignCenter"},s("gc-widget-label",{label:this.legendName}),s("div",{id:"line",class:`stretch lineColor${this.index%10}`})),s("slot",null),s("div",{class:"row"},s("gc-widget-knob",{id:"verticalPosition",caption:"Vertical Pos",value:this.verticalPos||0,minValue:-4,maxValue:4,numUnits:8,increment:.1,"onValue-changed":this.verticalPositionHandler}),s("gc-widget-knob",{id:"verticalScale",caption:"Vertical Scale",value:this.verticalScale,minValue:-4,maxValue:4,numUnits:8,increment:.1,"onValue-changed":this.verticalScaleHandler})),s("slot",{name:"bottom"}))}async setCSSProperty(t,i){i=i.trim();if(await this.getCSSProperty(t)!==i){this.el.style.setProperty(t,i);this.cssPropertyChanged.emit({name:t,value:i})}}async getCSSProperty(t){return getComputedStyle(this.el).getPropertyValue(t).trim()}async refresh(){this._refresh++}replot(){this.parentRegistry.parent?.replot()}get el(){return e(this)}static get watchers(){return{legendName:["onNameChanged","onYAxisTitleChanged"],index:["onIndexChanged","onYAxisTitleChanged","onVerticalAxisChanged","onVerticalAxisColorChanged"],yAxisTitle:["onYAxisTitleChanged"],hidden:["onHiddenChanged","onVerticalAxisChanged"],verticalPos:["onVerticalAxisChanged"],verticalScale:["onVerticalAxisChanged"],verticalUnitsPerDivision:["onVerticalAxisChanged"]}}};class b{constructor(t){this.parent=t;this.series={name:"",mode:"lines",type:"scattergl",y:[],marker:{line:{}},line:{shape:"linear",dash:"solid"},fill:"none",showlegend:false};this.captureBuffer=[];this.windowSize=0;this.newSamplesIndex=0;this.overTriggerLevelFlag=false;this.triggerPos=0;this.pointStreamingDataListener=t=>{if(!Array.isArray(t)){this.captureBuffer.push(t)}else{this.captureBuffer.push(...t)}this.parent.replot()}}get id(){return this.parent.legendName||this.parent.el.id||""}get sortingOrder(){return h.getChildElementIndex(this.parent.el)}get offset(){return Math.max(0,this.windowSize-this.triggerPos)}get childIndex(){return this.parent.index}set childIndex(t){this.parent.index=t}get xAxis(){return this.series.x}set xAxis(t){this.series.x=t}get capacity(){return this.windowSize}set capacity(t){const i=this.newSamplesIndex>=this.windowSize*2?3:1;const e=this.windowSize-t;if(this.captureBuffer.length===0){this.captureBuffer=new Array(3*t);this.newSamplesIndex=this.captureBuffer.length;this.series.y=new Array(t)}else if(t<=0){this.captureBuffer=[];this.newSamplesIndex=0;this.series.y=[]}else if(e>0){this.captureBuffer.splice(this.windowSize+t,2*e);this.captureBuffer.splice(0,e);this.newSamplesIndex-=i*e;this.series.y.splice(t,e)}else if(e<0){this.captureBuffer.splice(2*this.windowSize,0,...new Array(-2*e));this.captureBuffer.splice(0,...new Array(-e));this.newSamplesIndex+=i*e;this.series.y.splice(this.windowSize,0,...new Array(-e))}this.windowSize=t}get triggerPosition(){return this.triggerPos}set triggerPosition(t){t=Math.max(0,t);if(t!==this.triggerPos){this.triggerPos=t;this.copyCaptureToOutputBuffer()}}startNewCapture(t){const i=t-this.windowSize;this.captureBuffer.splice(0,i);this.copyCaptureToOutputBuffer();this.newSamplesIndex=this.captureBuffer.length}continueCapture(){const t=3*this.windowSize;const i=this.captureBuffer.length-t;if(i>0){this.captureBuffer.splice(2*this.windowSize,i)}const e=Math.max(0,this.newSamplesIndex-this.offset);this.newSamplesIndex=this.captureBuffer.length;if(e<this.windowSize){this.copyCaptureToOutputBuffer(e);return true}return false}clearCaptureBuffer(){this.captureBuffer=new Array(3*this.windowSize);this.newSamplesIndex=this.captureBuffer.length;this.series.y=new Array(this.windowSize)}copyCaptureToOutputBuffer(t=0){const i=Math.min(this.windowSize,this.captureBuffer.length-this.offset);const e=this.series.y;for(let o=t,s=o+this.offset;o<i;o++,s++){const t=this.captureBuffer[s];e[o]=t}if(t===0&&i<this.windowSize){e.fill(undefined,i,this.windowSize)}}getTriggerCrossingStateAt(t,i,e,o){const s=this.captureBuffer;const r=this.newSamplesIndex;if(o){e=-e}const n=Math.max(i+e,i);const h=Math.min(i+e,i);for(let i=t;i-- >r;){const t=s[i];if(t<h){return false}else if(t>n){return true}}return this.overTriggerLevelFlag}trackTriggerCrossings(t,i,e){const o=this.parent.verticalZoom;t-=this.parent.verticalPos;t*=(this.parent.verticalUnitsPerDivision||1)*o;i*=(this.parent.verticalUnitsPerDivision||1)*o;this.overTriggerLevelFlag=this.getTriggerCrossingStateAt(this.captureBuffer.length,t,i,e);const s=this.captureBuffer.length-3*this.windowSize;return s>0?s:0}canArmTrigger(t){return t<this.captureBuffer.length}findTriggerPoint(t,i,e,o,s){const r=this.captureBuffer;if(t>=r.length){return-1}const n=this.parent.verticalZoom;e-=this.parent.verticalPos;e*=(this.parent.verticalUnitsPerDivision||1)*n;o*=(this.parent.verticalUnitsPerDivision||1)*n;t=Math.max(t,this.newSamplesIndex);let h=this.getTriggerCrossingStateAt(t,e,o,s);if(s){o=-o}let l=h===s?e+o:e;const a=Math.min(i,r.length);let c;for(let i=t;i<a;i++){if(h?r[i]<l:r[i]>l){h=!h;if(h===s){if(a-i<=this.windowSize-this.triggerPos){return c??i}c=i}l=h===s?e+o:e}}return c??(i===a?a:-1)}}v.style=u;export{g as gc_widget_plot_data_points_2d,p as gc_widget_virtual_oscilloscope,v as gc_widget_virtual_oscilloscope_input};
//# sourceMappingURL=p-8fe1ef72.entry.js.map